var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdvancedQueryComponent.html",[0,0.195,1,0.859]],["body/components/AdvancedQueryComponent.html",[0,0.229,1,1.137,2,0.82,3,0.12,4,0.12,5,3,6,0.526,7,0.678,8,0.085,9,1.775,10,0.992,11,1.475,12,2.995,13,0.526,14,1.346,15,1.491,16,1.39,17,0.026,18,2.456,19,5.195,20,6.858,21,4.007,22,4.007,23,4.007,24,5.195,25,6.474,26,3.494,27,4.007,28,4.007,29,3.877,30,4.007,31,2.456,32,3.183,33,1.835,34,2.71,35,3.883,36,4.007,37,4.007,38,4.007,39,5.195,40,4.007,41,4.887,42,4.887,43,6.679,44,2.042,45,5.195,46,4.404,47,5.195,48,5.195,49,3.883,50,4.007,51,5.195,52,4.007,53,4.007,54,1.066,55,2.695,56,3.494,57,4.309,58,5.195,59,2.085,60,4.007,61,4.007,62,2.695,63,4.007,64,4.007,65,2.995,66,4.007,67,4.007,68,0.532,69,4.007,70,5.195,71,4.007,72,4.007,73,4.007,74,3.397,75,4.007,76,3.397,77,4.007,78,4.007,79,4.007,80,4.007,81,4.007,82,6.098,83,6.679,84,6.679,85,6.098,86,4.007,87,4.007,88,3.883,89,4.007,90,4.007,91,4.007,92,2.695,93,2.695,94,4.007,95,2.695,96,4.007,97,2.456,98,4.007,99,3.397,100,4.007,101,0.82,102,3.262,103,4.007,104,4.158,105,2.547,106,4.996,107,2.042,108,4.25,109,4.404,110,3.397,111,4.007,112,4.007,113,0.47,114,1.483,115,3.262,116,0.764,117,1.376,118,1.298,119,2.995,120,3.262,121,3.262,122,0.587,123,4.524,124,2.765,125,4.524,126,4.524,127,2.995,128,3.262,129,3.262,130,1.282,131,4.007,132,4.007,133,3.262,134,3.262,135,1.468,136,1.836,137,0.462,138,1.565,139,1.218,140,1.212,141,0.6,142,2.093,143,0.764,144,0.747,145,0.58,146,0.653,147,1.144,148,0.874,149,0.866,150,2.093,151,1.282,152,2.093,153,2.256,154,3.262,155,2.773,156,0.609,157,2.995,158,4.007,159,4.007,160,4.007,161,4.007,162,2.093,163,2.093,164,2.093,165,0.874,166,1.453,167,3.262,168,5.764,169,2.093,170,2.093,171,2.093,172,2.093,173,3.262,174,2.093,175,1.282,176,3.262,177,2.093,178,2.093,179,2.093,180,1.803,181,1.836,182,2.194,183,2.194,184,1.483,185,2.194,186,0.769,187,2.194,188,2.194,189,1.201,190,5.195,191,2.369,192,2.093,193,1.836,194,2.093,195,2.093,196,1.565,197,2.093,198,1.011,199,0.386,200,1.089,201,1.283,202,1.144,203,0.194,204,2.186,205,1.179,206,0.823,207,1.408,208,1.283,209,1.408,210,1.011,211,0.12,212,0.045,213,2.093,214,2.093,215,4.007,216,2.093,217,3.262,218,4.007,219,2.093,220,1.901,221,4.007,222,4.007,223,4.904,224,4.904,225,2.093,226,3.262,227,2.093,228,0.432,229,2.093,230,1.775,231,1.565,232,1.291,233,2.765,234,2.093,235,2.093,236,4.524,237,2.093,238,2.093,239,2.438,240,2.093,241,2.093,242,2.093,243,2.093,244,2.093,245,2.093,246,2.093,247,3.262,248,4.007,249,2.093,250,1.089,251,0.493,252,1.775,253,3.262,254,2.093,255,2.093,256,1.775,257,3.262,258,2.093,259,2.093,260,1.408,261,1.283,262,2.093,263,2.093,264,0.526,265,0.931,266,0.874,267,0.493,268,1.291,269,0.678,270,4.904,271,0.678,272,0.526,273,0.678,274,0.526,275,0.678,276,0.526,277,0.597,278,1.057,279,0.526,280,0.678,281,0.526,282,0.636,283,0.678,284,0.493,285,0.47,286,0.678,287,0.674,288,0.678,289,0.526,290,0.678,291,0.526,292,0.769,293,0.561,294,0.678,295,0.493,296,0.678,297,0.493,298,0.678,299,0.526,300,0.678,301,0.526,302,0.561,303,0.678,304,0.493,305,0.526,306,0.561,307,0.462,308,0.678,309,0.462,310,0.678,311,0.007,312,0.011,313,0.007]],["title/classes/Base64.html",[212,0.074,314,1.652]],["body/classes/Base64.html",[3,0.213,4,0.213,8,0.227,17,0.026,33,1.588,44,2.187,49,2.788,59,3.086,65,4.433,68,0.382,113,0.715,114,1.9,116,0.772,118,2.245,122,0.892,141,0.589,143,0.772,144,0.607,145,0.346,146,0.66,148,0.923,149,0.855,156,0.727,165,0.772,202,1.811,211,0.213,212,0.081,220,2.338,228,0.77,251,1.168,265,1.414,268,1.978,311,0.013,312,0.017,313,0.013,314,2.689,315,1.466,316,3.161,317,3.212,318,5.565,319,5.565,320,2.896,321,5.565,322,5.565,323,2.491,324,5.38,325,4.16,326,4.955,327,2.778,328,4.955,329,4.201,330,4.201,331,4.955,332,4.955,333,5.565,334,4.955,335,4.201,336,4.955,337,3.729,338,4.201,339,3.729,340,4.955,341,3.037,342,3.729,343,4.955,344,3.729,345,4.955,346,3.729,347,4.955,348,3.729,349,3.729,350,3.729,351,4.955,352,4.955,353,4.955,354,4.955,355,4.955,356,4.201,357,4.955,358,4.955,359,4.955,360,3.729,361,3.729,362,3.729,363,2.788,364,3.729,365,3.729,366,3.729,367,4.955,368,3.729,369,4.152,370,5.93,371,3.743,372,3.729,373,3.729,374,4.955,375,4.955,376,3.729,377,3.729,378,3.729,379,4.955,380,3.729,381,3.729,382,3.729,383,3.333,384,4.955,385,3.729,386,4.955,387,2.689,388,3.037,389,4.955,390,3.729,391,2.1,392,3.729,393,1.678,394,3.729,395,3.729,396,2.788,397,3.161,398,3.729,399,3.729,400,3.161,401,3.729,402,3.729,403,3.333,404,3.729,405,3.729,406,2.285,407,2.788,408,2.508,409,2.788,410,3.161,411,3.729,412,3.729,413,2.508,414,4.152,415,5.565,416,2.508,417,3.729,418,2.788,419,5.565]],["title/pipes/Base64ImageRef.html",[420,2.095,421,2.095]],["body/pipes/Base64ImageRef.html",[3,0.288,4,0.288,8,0.206,10,1.532,13,1.267,17,0.025,122,0.907,141,0.467,143,0.933,144,0.734,145,0.593,146,0.798,148,0.933,149,0.922,156,0.777,165,0.785,199,0.446,203,0.467,211,0.288,212,0.109,228,1.041,311,0.018,312,0.021,313,0.018,314,2.434,420,3.088,421,4.139,422,3.767,423,4.272,424,4.272,425,5.078,426,6.392,427,5.039,428,6.392,429,6.392,430,5.078,431,5.99,432,5.039,433,3.767,434,3.088,435,6.392,436,3.389,437,3.088,438,4.272,439,3.767,440,4.272,441,5.039,442,2.622,443,5.039]],["title/directives/CustomButtonBarDirective.html",[267,0.806,307,0.755]],["body/directives/CustomButtonBarDirective.html",[0,0.253,3,0.181,4,0.181,5,1.647,6,0.795,8,0.181,13,0.795,14,1.144,16,1.307,17,0.026,26,2.129,29,2.98,31,1.94,32,3.133,33,0.903,34,1.529,55,2.129,56,2.98,59,2.306,62,4.325,95,2.129,97,3.394,101,0.795,116,1.097,118,1.435,148,1.025,156,0.497,184,1.859,186,1.598,191,1.529,199,0.235,200,2.66,202,1.897,203,0.294,211,0.333,212,0.111,228,1.346,232,0.903,250,2.66,251,1.515,267,1.205,287,1.056,292,1.461,293,1.484,306,0.848,307,0.978,309,0.699,311,0.011,312,0.015,313,0.011,323,1.33,387,3.147,393,2.847,436,2.98,442,1.647,444,2.129,445,3.312,446,3.59,447,1.94,448,2.495,449,2.327,450,3.702,451,2.366,452,2.366,453,1.782,454,2.366,455,2.129,456,3.725,457,2.715,458,2.366,459,1.044,460,3.312,461,3.821,462,1.994,463,1.424,464,2.98,465,2.306,466,2.882,467,2.366,468,2.129,469,2.366,470,2.366,471,3.312,472,2.366,473,3.312,474,2.366,475,2.366,476,2.366,477,2.366,478,2.366,479,2.366,480,3.39,481,3.438,482,2.366,483,2.366,484,4.382,485,3.312,486,2.366,487,3.312,488,2.366,489,2.366,490,2.366,491,2.715,492,2.366,493,2.366,494,2.366,495,2.715,496,2.366,497,2.129,498,2.366,499,2.366,500,2.366,501,2.366,502,2.366,503,2.129,504,2.129,505,2.366,506,2.98,507,2.715,508,2.366,509,2.366,510,2.366,511,2.366,512,2.366,513,2.366,514,2.366,515,2.366,516,2.366,517,2.129,518,2.366,519,1.647,520,2.366,521,3.821,522,3.821,523,3.312,524,2.366,525,2.366,526,2.366,527,2.366,528,2.366,529,3.821,530,2.366,531,2.366,532,2.366,533,1.94,534,2.366,535,2.366,536,2.366,537,2.366,538,2.366,539,2.366,540,3.821,541,2.366,542,2.366,543,2.366,544,2.366,545,2.366,546,2.366,547,2.366,548,2.366,549,2.366,550,3.821,551,2.366,552,2.129,553,2.366,554,2.366,555,2.366,556,2.366,557,2.366,558,2.366,559,2.366,560,3.312,561,2.366,562,2.306,563,3.312,564,2.366,565,1.424,566,2.715,567,2.47,568,1.244,569,1.424,570,3.312,571,2.366,572,2.366,573,2.366,574,2.366,575,2.366,576,2.366,577,2.366,578,2.366,579,2.366,580,2.366,581,2.366,582,2.366,583,1.025,584,3.312]],["title/classes/Deferred.html",[212,0.074,585,2.3]],["body/classes/Deferred.html",[3,0.239,4,0.239,8,0.171,17,0.026,68,0.428,113,0.771,114,1.769,116,0.652,117,1.885,137,1.368,140,1.121,141,0.575,145,0.546,149,0.924,156,0.47,165,0.652,166,1.431,175,2.099,184,1.525,189,1.541,199,0.311,203,0.388,211,0.239,212,0.116,228,1.323,232,1.68,251,1.259,266,1.121,285,0.924,311,0.021,312,0.019,313,0.015,315,1.645,323,2.244,403,2.815,459,1.387,480,2.78,565,1.883,583,1.356,585,3.958,586,2.358,587,3.128,588,2.995,589,3.333,590,3.799,591,5.342,592,4.185,593,4.185,594,5.552,595,1.431,596,2.815,597,3.548,598,2.815,599,3.548,600,2.356,601,3.548,602,3.548,603,2.565,604,2.565,605,1.844,606,3.548,607,3.548,608,3.548,609,2.356,610,3.548,611,3.548,612,3.548,613,3.548,614,3.548,615,3.548,616,3.548,617,3.548,618,4.529,619,3.548,620,4.529,621,3.548,622,3.958,623,3.548,624,4.988,625,3.548,626,3.548,627,3.548,628,4.988,629,3.548,630,3.993,631,3.548,632,1.645,633,4.529,634,3.548,635,4.529,636,4.529,637,4.529,638,3.548,639,3.128,640,3.128,641,3.128,642,3.128,643,1.883,644,3.548,645,3.548,646,3.128,647,1.758,648,4.529,649,3.548,650,3.128,651,3.128,652,2.565,653,2.815,654,4.529,655,3.548,656,3.548,657,3.548,658,3.548,659,3.548]],["title/injectables/FourDCollection.html",[595,0.916,660,1.779]],["body/injectables/FourDCollection.html",[3,0.124,4,0.124,8,0.089,16,1.346,17,0.026,33,1.571,54,1.429,68,0.223,107,1.816,108,2.262,113,0.721,114,1.173,116,1.08,122,0.606,135,1.513,137,1.02,139,1.605,141,0.6,143,0.64,144,0.73,145,0.571,146,0.777,147,1.173,148,1.015,149,0.762,151,2.605,155,3.484,156,0.759,165,1.008,186,0.513,193,3.511,199,0.372,203,0.202,211,0.124,212,0.089,220,2.099,228,1.091,232,1.757,251,1.375,260,1.465,261,2.518,292,1.486,295,0.793,311,0.017,312,0.012,313,0.008,314,1.625,317,2.748,320,1.133,327,2.376,363,3.455,369,3.36,406,2.061,449,1.413,459,0.793,463,2.079,466,1.75,495,2.518,568,0.856,588,2.77,589,2.405,590,1.335,595,0.901,600,2.602,632,2.478,660,2.599,661,1.335,662,1.846,663,1.71,664,2.514,665,5.399,666,3.364,667,2.262,668,2.852,669,2.852,670,3.364,671,4.63,672,2.879,673,3.484,674,5.646,675,3.484,676,4.109,677,3.36,678,4.235,679,5.219,680,4.109,681,4.109,682,3.364,683,4.622,684,2.852,685,2.852,686,3.364,687,3.364,688,3.644,689,5.619,690,2.178,691,3.947,692,3.364,693,3.364,694,3.918,695,3.918,696,3.918,697,3.824,698,3.551,699,2.832,700,2.852,701,2.178,702,2.832,703,2.514,704,3.364,705,3.364,706,3.364,707,2.178,708,2.852,709,4.476,710,1.894,711,4.622,712,3.994,713,4.622,714,4.622,715,3.236,716,3.364,717,2.852,718,4.235,719,4.235,720,2.178,721,2.514,722,1.894,723,2.852,724,2.852,725,2.852,726,2.852,727,2.514,728,2.852,729,2.852,730,2.852,731,3.924,732,2.262,733,2.262,734,3.109,735,2.852,736,2.958,737,2.061,738,2.178,739,2.852,740,1.615,741,2.178,742,3.455,743,2.178,744,2.514,745,2.061,746,2.852,747,1.894,748,2.178,749,2.178,750,2.178,751,2.178,752,2.178,753,3.364,754,2.514,755,3.364,756,2.178,757,2.178,758,2.514,759,1.75,760,1.846,761,2.178,762,1.846,763,1.465,764,1.846,765,1.465,766,3.036,767,3.364,768,1.846,769,4.819,770,4.109,771,2.852,772,4.995,773,3.484,774,1.628,775,2.178,776,1.846,777,4.666,778,2.178,779,2.178,780,2.178,781,1.335,782,2.852,783,2.178,784,4.622,785,4.622,786,3.484,787,4.622,788,2.178,789,2.178,790,2.852,791,3.484,792,2.852,793,1.846,794,1.846,795,1.846,796,1.846,797,2.178,798,2.178,799,2.178,800,2.233,801,1.335,802,1.465,803,3.484,804,1.846,805,2.852,806,2.178,807,2.178,808,3.364,809,3.364,810,2.178,811,2.178,812,2.178,813,2.178,814,3.364,815,2.178,816,2.178,817,3.364,818,3.364,819,3.072,820,2.178,821,3.364,822,2.178,823,2.178,824,2.178,825,2.178,826,2.178,827,2.178,828,2.178,829,2.314,830,2.764,831,2.178,832,2.514,833,2.178,834,3.364,835,1.846,836,2.262,837,2.178,838,2.178,839,2.178,840,1.846,841,2.178,842,2.178,843,2.178,844,2.178,845,2.178,846,2.178,847,2.178]],["title/pipes/FourDDateToString.html",[420,2.095,848,2.095]],["body/pipes/FourDDateToString.html",[3,0.289,4,0.289,8,0.207,10,1.541,13,1.274,17,0.025,122,0.912,141,0.47,143,0.789,144,0.737,146,0.675,149,0.976,155,3.105,156,0.76,165,0.789,199,0.377,203,0.47,211,0.289,212,0.11,228,1.323,232,1.446,251,1.194,311,0.018,312,0.021,313,0.018,341,3.105,393,2.28,420,3.105,422,3.788,424,4.296,425,5.095,430,5.095,434,3.105,438,4.296,440,4.296,672,2.448,774,3.788,848,4.06,849,4.296,850,5.068,851,4.457,852,5.068,853,5.068,854,4.296,855,5.068,856,5.068,857,3.408,858,5.068]],["title/components/FourDDropDown.html",[0,0.195,274,0.859]],["body/components/FourDDropDown.html",[0,0.327,1,0.991,2,1.292,3,0.225,4,0.225,5,2.977,6,0.991,7,1.278,8,0.161,10,1.563,12,4.276,13,0.991,14,1.458,15,1.199,16,0.815,17,0.025,32,3.505,34,2.763,54,0.929,59,2.977,68,0.404,74,4.849,76,4.849,97,3.505,99,4.849,101,1.292,105,3.539,114,1.633,116,0.891,122,0.926,124,4.359,127,4.531,130,2.021,137,0.871,138,2.948,139,1.843,141,0.609,143,0.801,144,0.77,145,0.583,146,0.685,147,1.84,148,0.614,149,0.569,151,2.021,156,0.756,165,0.891,166,1.377,181,3.221,191,2.763,199,0.382,202,1.73,203,0.366,210,1.905,211,0.225,212,0.085,228,0.815,231,2.948,264,0.991,265,1.468,266,1.377,267,0.929,268,1.73,269,1.278,271,1.278,272,0.991,273,1.278,274,1.65,275,1.278,276,0.991,277,1.126,278,1.665,279,0.991,280,1.278,281,0.991,282,1.199,283,1.278,284,0.929,285,0.742,286,1.278,287,1.062,288,1.278,289,0.991,290,1.278,291,0.991,292,1.212,293,1.057,294,1.278,295,0.929,296,1.278,297,0.929,298,1.278,299,0.991,300,1.278,301,0.991,302,1.057,303,1.278,304,0.929,305,0.991,306,1.057,307,0.871,308,1.278,309,0.871,310,1.278,311,0.014,312,0.018,313,0.014,442,2.052,595,1.377,598,2.653,632,1.55,829,2.221,859,3.344,860,3.843,861,6.977,862,5.72,863,6.061,864,4.276,865,5.72,866,5.72,867,5.141,868,3.944,869,3.944,870,5.141,871,3.944,872,3.944,873,3.944,874,2.895,875,2.948,876,5.141,877,3.944,878,3.944,879,3.944,880,3.944,881,3.944,882,3.944,883,2.417,884,2.653]],["title/modules/FourDModule.html",[885,1.652,886,1.925]],["body/modules/FourDModule.html",[3,0.29,4,0.29,8,0.207,17,0.025,139,2.088,199,0.504,203,0.472,210,2.456,211,0.29,212,0.11,264,1.278,311,0.018,312,0.021,313,0.018,569,2.288,660,3.573,736,3.573,885,2.456,886,3.977,887,2.646,888,2.863,889,3.42,890,2.456,891,3.1,892,3.69,893,4.311,894,4.311,895,4.05,896,3.116,897,5.085,898,3.116,899,4.05,900,3.69,901,5.439,902,3.116,903,4.311,904,5.085,905,3.801]],["title/classes/FourDQuery.html",[212,0.074,688,1.925]],["body/classes/FourDQuery.html",[3,0.095,4,0.095,6,1.182,8,0.068,14,1.136,16,1.369,17,0.026,18,2.438,33,1.136,44,1.355,54,1.296,68,0.171,92,1.832,93,1.123,105,1.533,107,1.722,113,0.715,114,1.136,116,0.995,118,2.042,139,0.508,141,0.51,144,0.674,145,0.51,146,0.851,148,0.26,149,0.927,151,2.495,153,1.533,156,0.767,157,2.035,165,0.936,175,0.656,186,0.393,198,0.806,199,0.326,203,0.155,211,0.227,212,0.107,220,0.701,228,1.327,232,1.693,239,2.578,251,1.354,261,2.113,277,1.736,302,0.729,305,0.42,311,0.012,312,0.009,313,0.015,314,1.315,315,0.656,317,2.446,320,2.862,323,1.449,327,2.327,341,1.023,371,1.123,383,1.123,387,0.806,388,2.113,391,1.533,393,0.751,407,4.209,408,3.335,409,3.998,413,1.123,414,3.162,416,1.832,434,1.023,437,3.371,439,2.974,446,1.795,448,0.94,449,1.449,459,1.26,462,0.751,463,2.115,465,1.795,507,1.023,562,2.58,565,1.552,567,1.315,568,1.355,569,0.751,588,2.534,589,2.691,590,1.669,595,0.729,596,3.478,600,2.911,603,1.023,609,0.94,632,1.355,643,2.534,647,2.247,653,4.091,663,0.541,672,3.329,673,2.686,688,2.911,697,1.123,698,2.948,699,1.023,702,1.669,703,2.035,710,0.94,712,2.438,715,2.686,722,0.94,731,1.123,732,1.832,733,2.948,734,1.832,737,1.669,740,1.07,742,1.248,744,2.035,745,2.438,747,0.94,759,1.417,763,1.832,765,1.832,766,3.325,781,1.669,800,2.938,801,1.669,802,1.832,819,1.248,829,2.647,830,3.162,832,1.248,836,1.123,851,3.787,857,1.123,864,3.865,874,1.533,883,2.881,900,2.438,902,1.023,906,1.123,907,2.035,908,2.035,909,1.123,910,4.204,911,5.382,912,3.276,913,3.276,914,2.924,915,4.204,916,4.204,917,1.669,918,3.373,919,2.035,920,2.974,921,1.669,922,1.669,923,2.309,924,1.669,925,2.676,926,2.676,927,3.373,928,1.669,929,3.373,930,2.309,931,3.373,932,2.309,933,2.309,934,2.035,935,2.309,936,1.669,937,3.514,938,2.035,939,3.373,940,1.669,941,2.035,942,1.669,943,1.669,944,2.035,945,2.676,946,2.035,947,2.309,948,1.669,949,2.309,950,1.669,951,2.32,952,1.669,953,1.415,954,3.716,955,1.415,956,1.248,957,1.415,958,1.248,959,1.415,960,2.676,961,1.123,962,2.035,963,1.248,964,1.248,965,1.248,966,1.248,967,1.248,968,1.248,969,1.123,970,1.123,971,1.415,972,1.248,973,1.832,974,1.832,975,1.123,976,2.035,977,1.248,978,1.248,979,1.248,980,1.248,981,1.415,982,2.974,983,0.869,984,1.248,985,1.415,986,1.415,987,3.276,988,1.415,989,1.415,990,2.974,991,1.415,992,1.248,993,2.924,994,1.248,995,1.415,996,2.676,997,1.415,998,1.415,999,1.415,1000,1.415,1001,1.123,1002,1.415,1003,2.035,1004,1.415,1005,1.415,1006,1.415,1007,2.309,1008,1.415,1009,1.415,1010,1.415,1011,1.248,1012,1.248,1013,1.415,1014,1.248,1015,1.415,1016,1.248,1017,1.248,1018,1.248,1019,1.123,1020,1.415,1021,1.415,1022,1.415,1023,1.415,1024,1.415,1025,1.248,1026,1.415,1027,2.309,1028,3.716,1029,3.716,1030,3.276,1031,3.716,1032,3.716,1033,1.415,1034,1.415,1035,2.309,1036,1.415,1037,1.415,1038,1.415,1039,1.415,1040,1.415,1041,1.248,1042,3.162,1043,1.123,1044,2.309,1045,2.309,1046,1.023,1047,3.514,1048,1.415,1049,1.415,1050,1.415,1051,3.985,1052,1.248,1053,1.415,1054,2.974,1055,1.248,1056,1.123,1057,2.309,1058,1.415,1059,1.415,1060,1.415,1061,1.415,1062,1.415,1063,1.415,1064,2.309,1065,2.309,1066,1.415,1067,1.415,1068,1.415,1069,1.415,1070,2.309,1071,1.415,1072,2.309,1073,3.373,1074,2.309,1075,2.309,1076,2.309,1077,1.415,1078,2.309,1079,1.415,1080,1.248,1081,2.309,1082,2.309,1083,1.248,1084,1.415,1085,1.415,1086,1.415,1087,1.415,1088,1.415,1089,1.248,1090,3.373,1091,1.023,1092,1.415,1093,1.415,1094,1.415,1095,2.309,1096,1.248,1097,1.123,1098,1.248,1099,2.309,1100,1.415,1101,1.415,1102,1.415,1103,1.415,1104,1.415,1105,1.415,1106,1.415,1107,1.415,1108,1.415,1109,1.415,1110,3.514,1111,2.32,1112,2.948,1113,1.415,1114,2.309,1115,1.415,1116,1.415,1117,3.373,1118,1.415,1119,1.415,1120,1.415,1121,2.309,1122,1.415,1123,1.415,1124,2.578,1125,2.32,1126,2.974,1127,1.415,1128,1.415,1129,1.415,1130,1.123,1131,1.415,1132,2.309,1133,1.248,1134,1.415,1135,1.415,1136,1.415,1137,1.415,1138,3.716,1139,4.204,1140,2.924,1141,4.204,1142,1.415,1143,1.415,1144,2.309,1145,1.415,1146,1.415,1147,1.415,1148,1.415,1149,1.248,1150,1.415,1151,1.415,1152,1.415,1153,1.415,1154,1.415,1155,1.415,1156,1.415,1157,1.248,1158,2.924,1159,2.924,1160,4.204,1161,2.924,1162,1.415,1163,1.415,1164,1.415,1165,1.415,1166,1.415,1167,1.415,1168,1.248,1169,1.415,1170,1.415,1171,2.035,1172,2.309,1173,1.415,1174,1.415,1175,1.415,1176,1.415,1177,1.415,1178,4.663,1179,1.415,1180,2.309,1181,1.415,1182,1.415,1183,1.415,1184,1.415,1185,1.415,1186,1.415,1187,1.248,1188,1.415,1189,0.94,1190,1.415,1191,1.415,1192,1.415,1193,1.415,1194,1.415,1195,2.924,1196,3.706,1197,1.415,1198,1.415,1199,1.415,1200,2.309,1201,2.309,1202,2.578,1203,1.415,1204,1.415,1205,1.248,1206,1.248,1207,1.415,1208,1.248]],["title/components/FourDRegistryInput.html",[0,0.195,276,0.859]],["body/components/FourDRegistryInput.html",[0,0.321,1,0.958,2,1.263,3,0.218,4,0.218,6,0.958,7,1.235,8,0.155,10,1.529,12,4.205,13,0.958,14,1.453,15,1.159,16,0.787,17,0.025,54,0.898,68,0.39,101,1.263,113,0.725,114,1.823,116,1.077,122,0.905,127,4.471,130,1.976,137,0.841,138,2.849,139,1.819,141,0.635,143,0.593,144,0.733,145,0.62,146,0.508,147,1.823,148,0.876,149,0.863,156,0.777,165,0.876,166,1.507,186,1.185,198,1.841,199,0.374,202,1.886,203,0.353,210,1.841,211,0.218,212,0.082,264,0.958,265,1.435,266,1.347,267,0.898,268,1.707,269,1.235,271,1.235,272,0.958,273,1.235,274,0.958,275,1.235,276,1.503,277,1.606,278,1.628,279,0.958,280,1.235,281,0.958,282,1.159,283,1.235,284,0.898,285,0.725,286,1.235,287,1.038,288,1.235,289,0.958,290,1.235,291,0.958,292,1.185,293,1.021,294,1.235,295,0.898,296,1.235,297,0.898,298,1.235,299,0.958,300,1.235,301,0.958,302,1.021,303,1.235,304,0.898,305,0.958,306,1.021,307,0.841,308,1.235,309,0.841,310,1.235,311,0.013,312,0.018,313,0.013,442,1.983,583,1.628,595,1.347,598,2.563,632,1.498,829,2.146,874,2.83,875,2.849,884,2.563,1149,4.205,1209,3.231,1210,5.625,1211,5.625,1212,5.625,1213,5.981,1214,5.981,1215,4.769,1216,5.625,1217,5.625,1218,5.625,1219,5.027,1220,3.811,1221,3.811,1222,3.811,1223,3.811,1224,3.811,1225,3.811,1226,3.811,1227,3.811,1228,3.811,1229,3.811,1230,5.027,1231,3.811,1232,3.811,1233,3.811,1234,6.217,1235,3.811,1236,5.625,1237,3.811,1238,5.981,1239,5.027,1240,5.027,1241,3.811,1242,3.811,1243,3.811,1244,3.811,1245,3.811,1246,3.811]],["title/classes/ICustomModal.html",[206,1.344,212,0.074]],["body/classes/ICustomModal.html",[2,1.382,3,0.314,4,0.314,8,0.224,17,0.024,117,1.672,145,0.51,206,2.477,211,0.314,212,0.119,311,0.019,312,0.022,313,0.019,315,2.161,327,2.474,586,2.025,605,1.899,647,2.31,663,1.781,1247,4.662,1248,4.662]],["title/classes/ICustomModalComponent.html",[11,1.259,212,0.074]],["body/classes/ICustomModalComponent.html",[2,1.487,3,0.282,4,0.282,8,0.201,11,2.178,17,0.025,68,0.505,113,0.853,117,2.042,122,1.065,140,1.697,141,0.588,145,0.588,146,0.875,165,0.921,184,1.875,199,0.367,211,0.282,212,0.107,228,1.357,285,0.947,311,0.017,312,0.021,313,0.017,315,1.939,327,2.662,583,2.128,586,2.418,605,2.042,642,4.91,647,2.485,652,4.025,663,1.599,970,4.418,1248,5.015,1249,4.184,1250,6.568,1251,6.568,1252,4.935,1253,4.935,1254,5.015,1255,5.915,1256,4.935,1257,5.915,1258,5.915,1259,2.778]],["title/interfaces/IFieldDescription.html",[983,1.779,1260,2.556]],["body/interfaces/IFieldDescription.html",[3,0.074,4,0.074,8,0.053,16,1.143,17,0.026,18,1.354,33,1.478,49,0.971,54,1.22,68,0.133,92,3.651,104,1.101,106,1.873,107,1.83,108,4.06,109,2.884,110,2.444,113,0.598,114,1.478,116,0.968,122,0.398,137,0.488,139,1.034,141,0.315,144,0.762,145,0.565,146,0.552,147,0.371,148,0.53,149,0.871,151,2.174,153,1.244,155,4.307,156,0.764,165,0.999,184,1.516,186,0.977,193,3.579,198,0.628,199,0.284,203,0.12,211,0.126,212,0.048,220,1.211,228,1.335,230,2.444,232,1.871,250,1.5,251,1.364,260,0.874,261,2.084,282,0.672,292,1.579,311,0.016,312,0.008,313,0.008,314,1.067,317,1.984,320,3.082,327,1.99,329,1.101,341,0.796,369,2.789,393,2.489,400,1.101,406,0.796,410,1.101,449,0.546,459,1.326,462,0.994,463,2.33,466,1.984,495,1.354,503,2.288,519,1.15,533,1.767,562,2.527,566,0.796,568,1.133,583,2.059,588,2.489,589,2.695,595,0.592,600,2.916,603,0.796,609,0.732,632,2.211,647,2.113,650,0.971,660,2.158,663,1.629,664,1.652,667,0.874,669,1.101,671,3.572,672,3.039,673,3.254,674,3.515,677,3.941,679,2.444,684,1.101,688,2.147,689,2.884,694,1.101,695,1.101,696,1.101,697,1.939,698,3.266,699,2.854,702,2.541,708,1.101,709,4.502,710,2.147,712,3.254,715,1.354,717,1.101,718,2.444,719,2.444,721,1.652,722,1.244,723,1.101,724,1.101,725,1.101,726,1.101,727,0.971,728,1.101,729,1.101,730,1.873,731,2.288,732,0.874,733,2.789,734,2.789,735,1.101,736,2.764,737,1.354,739,1.101,740,2.373,746,1.101,747,0.732,754,0.971,758,1.652,759,1.15,760,1.101,762,1.873,763,0.874,764,1.101,765,0.874,766,3.215,768,1.101,771,2.884,773,2.884,774,1.652,776,3.515,777,2.444,781,2.541,782,1.101,786,4.263,790,2.444,791,2.884,792,1.873,793,1.101,794,1.101,795,1.101,796,1.101,800,2.502,801,2.084,802,2.288,804,2.884,829,2.147,830,2.975,835,1.101,836,3.941,840,1.101,851,3.132,854,1.101,875,2.155,883,2.336,912,2.85,913,2.85,919,0.971,920,0.971,921,2.711,922,0.796,937,2.543,938,2.543,941,3.1,948,0.796,951,2.288,960,0.874,970,1.939,983,0.676,992,0.971,1001,1.939,1012,1.652,1019,3.132,1030,0.971,1042,0.874,1043,2.789,1046,2.336,1096,1.652,1097,1.939,1110,2.85,1111,0.874,1112,1.486,1125,0.874,1157,0.971,1168,0.971,1171,2.85,1215,2.884,1260,3.871,1261,1.299,1262,1.101,1263,4.147,1264,3.401,1265,3.401,1266,3.401,1267,5.428,1268,4.657,1269,4.147,1270,2.21,1271,3.515,1272,1.873,1273,4.147,1274,2.21,1275,3.401,1276,1.486,1277,3.813,1278,3.401,1279,2.21,1280,3.232,1281,2.21,1282,2.883,1283,1.354,1284,1.299,1285,1.299,1286,1.299,1287,1.873,1288,1.101,1289,2.444,1290,1.299,1291,1.299,1292,1.299,1293,3.813,1294,1.299,1295,1.244,1296,1.101,1297,1.299,1298,3.401,1299,2.21,1300,1.299,1301,1.299,1302,1.299,1303,1.299,1304,1.299,1305,1.873,1306,1.299,1307,1.299,1308,3.813,1309,3.401,1310,1.299,1311,2.21,1312,2.21,1313,1.101,1314,1.299,1315,1.299,1316,1.299,1317,1.299,1318,1.299,1319,1.299,1320,1.299,1321,2.21,1322,2.883,1323,2.21,1324,1.299,1325,2.21,1326,2.21,1327,1.299,1328,1.652,1329,4.657,1330,1.299,1331,2.883,1332,4.856,1333,2.21,1334,1.299,1335,2.883,1336,4.856,1337,4.502,1338,1.299,1339,1.299,1340,3.232,1341,3.232,1342,2.883,1343,2.883,1344,1.299,1345,1.299,1346,2.883,1347,4.147,1348,5.311,1349,4.147,1350,1.299,1351,1.299,1352,1.101,1353,1.299,1354,1.299,1355,1.299,1356,2.883,1357,1.299,1358,1.299,1359,1.299,1360,1.299,1361,1.299,1362,1.299,1363,1.299,1364,1.299,1365,1.299,1366,1.299,1367,1.299,1368,1.299,1369,4.147,1370,1.299,1371,1.299,1372,1.299,1373,1.299,1374,2.883,1375,1.299,1376,1.299,1377,1.299,1378,1.299,1379,1.299,1380,2.21,1381,3.401,1382,2.883,1383,4.147,1384,2.883,1385,1.873,1386,1.299,1387,1.299,1388,2.21,1389,1.101,1390,1.299,1391,3.401,1392,1.299,1393,1.299,1394,1.299,1395,1.299,1396,1.299,1397,1.299,1398,1.299,1399,3.401,1400,2.21,1401,2.21,1402,1.101,1403,1.299,1404,1.299,1405,1.299,1406,2.884,1407,1.101,1408,2.21,1409,2.21,1410,1.299,1411,2.21,1412,1.299,1413,1.299,1414,1.299,1415,3.401,1416,2.883,1417,1.299,1418,1.101,1419,1.299,1420,0.971,1421,1.299,1422,1.299,1423,1.101,1424,3.401,1425,2.883,1426,2.21,1427,1.299,1428,2.883,1429,2.883,1430,2.541,1431,2.883,1432,1.299,1433,2.21,1434,1.299,1435,1.299,1436,2.21,1437,2.883,1438,1.299,1439,1.101,1440,1.299,1441,1.299,1442,1.299,1443,1.299,1444,2.21,1445,1.299,1446,1.299,1447,1.299,1448,1.299,1449,1.299,1450,1.299,1451,2.21,1452,2.883,1453,1.299,1454,1.299,1455,2.883,1456,1.299,1457,1.299,1458,1.299,1459,1.299,1460,1.299,1461,1.299,1462,1.299,1463,2.21,1464,1.299,1465,1.299,1466,1.299,1467,1.299,1468,1.299,1469,1.299,1470,1.299,1471,1.299,1472,1.299,1473,4.147,1474,1.101,1475,1.299,1476,1.299,1477,1.299,1478,1.101,1479,1.101,1480,1.299,1481,1.299,1482,1.299,1483,1.299,1484,1.299,1485,0.796,1486,1.299,1487,3.401,1488,1.299,1489,1.299,1490,2.21,1491,1.101,1492,2.21,1493,2.21,1494,1.299,1495,1.299,1496,1.299,1497,1.299,1498,2.21,1499,1.101,1500,1.299,1501,1.299,1502,2.21,1503,1.299,1504,1.299,1505,1.299,1506,2.883,1507,1.299,1508,1.299,1509,1.299,1510,1.299,1511,1.299,1512,1.299,1513,1.299,1514,1.299,1515,1.299,1516,1.299,1517,1.299,1518,1.299,1519,1.299,1520,1.299,1521,1.299]],["title/modules/JS44DModule.html",[885,1.652,1522,2.095]],["body/modules/JS44DModule.html",[1,1.727,3,0.206,4,0.206,8,0.147,17,0.025,139,1.912,199,0.522,203,0.335,210,1.745,211,0.206,212,0.078,264,0.908,272,1.707,274,1.707,276,1.707,279,1.727,281,1.727,287,1.403,289,1.707,291,1.707,295,1.601,297,1.601,299,1.707,301,1.707,307,1.499,309,1.499,311,0.013,312,0.017,313,0.013,421,4.162,569,1.626,848,4.162,885,1.745,886,3.541,887,1.88,888,2.034,889,3.684,890,1.745,891,2.646,892,3.357,895,3.263,896,2.214,898,2.214,899,3.263,900,2.973,901,4.113,902,2.214,905,3.627,1522,4.446,1523,3.063,1524,3.063,1525,3.613,1526,3.063,1527,3.613,1528,3.613,1529,4.113,1530,4.852,1531,3.063,1532,4.852,1533,3.613,1534,3.613,1535,3.613,1536,3.613,1537,3.613,1538,3.613,1539,3.613,1540,3.613,1541,3.613,1542,3.613,1543,3.063,1544,3.063,1545,3.063,1546,3.613,1547,3.613,1548,3.613]],["title/components/ListSelectorDialog.html",[0,0.195,279,0.859]],["body/components/ListSelectorDialog.html",[0,0.299,1,0.829,2,1.146,3,0.188,4,0.188,6,0.829,7,1.069,8,0.135,10,1.387,11,1.924,13,0.829,14,1.447,15,1.003,16,0.681,17,0.025,34,2.724,54,1.529,68,0.338,101,1.146,105,2.943,113,0.658,114,1.791,116,1.056,117,1.861,118,1.693,119,3.907,122,0.821,130,1.792,135,2.052,136,2.568,137,0.728,140,1.585,141,0.636,143,0.996,144,0.813,145,0.582,146,0.852,147,1.302,148,0.953,149,0.883,156,0.769,165,0.977,166,1.64,175,1.297,180,2.663,181,2.568,182,3.067,183,3.067,184,1.825,185,3.067,187,3.067,188,3.067,189,2.076,191,2.724,196,2.466,198,3.031,199,0.44,200,1.717,201,2.022,202,1.689,203,0.306,204,2.724,205,1.857,208,2.022,209,2.219,211,0.188,212,0.071,220,1.916,228,1.08,264,0.829,265,1.302,266,1.222,267,0.777,268,1.609,269,1.069,271,1.069,272,0.829,273,1.069,274,0.829,275,1.069,276,0.829,277,0.942,278,1.477,279,1.417,280,1.069,281,0.829,282,1.003,283,1.069,284,0.777,285,0.957,286,1.069,287,0.942,288,1.069,289,0.829,290,1.069,291,0.829,292,1.075,293,0.884,294,1.069,295,0.777,296,1.069,297,0.777,298,1.069,299,0.829,300,1.069,301,0.829,302,0.884,303,1.069,304,0.777,305,0.829,306,0.884,307,0.728,308,1.069,309,0.728,310,1.069,311,0.011,312,0.016,313,0.011,324,5.626,338,2.797,447,2.022,453,3.174,459,1.329,588,2.537,891,2.203,1430,2.795,1549,2.797,1550,6.12,1551,3.907,1552,5.226,1553,4.56,1554,4.116,1555,5.226,1556,5.226,1557,1.857,1558,4.56,1559,3.299,1560,3.299,1561,3.299,1562,3.299,1563,4.56,1564,3.299,1565,3.299,1566,3.409,1567,3.299,1568,4.56,1569,6.273,1570,5.918,1571,3.299,1572,2.943,1573,3.299,1574,3.299,1575,4.56,1576,4.56,1577,3.299,1578,3.299,1579,3.299,1580,3.299,1581,3.299,1582,3.299,1583,3.299,1584,3.299,1585,3.299,1586,2.219,1587,3.299,1588,3.299,1589,3.299,1590,3.299,1591,3.299,1592,3.299,1593,2.797,1594,3.299,1595,3.299,1596,3.299,1597,3.299,1598,4.56,1599,3.299,1600,4.56,1601,2.466,1602,4.56,1603,3.299,1604,3.299,1605,3.299,1606,3.299,1607,2.466,1608,3.299]],["title/components/LoginCmp.html",[0,0.195,281,0.859]],["body/components/LoginCmp.html",[0,0.304,1,0.861,2,1.176,3,0.196,4,0.196,5,2.774,6,0.861,7,1.11,8,0.14,10,1.423,11,1.963,13,0.861,14,1.438,15,1.042,16,0.708,17,0.025,34,2.897,46,5.249,54,0.807,57,3.985,59,3.222,68,0.351,88,3.985,101,1.176,113,0.675,114,0.978,116,1.019,117,1.742,118,1.727,119,3.985,122,0.843,130,1.84,135,2.106,136,2.635,137,0.756,139,1.742,140,1.607,141,0.614,143,0.729,144,0.791,145,0.494,146,0.624,147,1.712,148,0.964,149,0.893,156,0.385,165,0.729,166,1.254,180,2.399,181,2.635,182,3.148,183,3.148,184,1.841,185,3.148,186,1.413,187,3.148,188,3.148,189,1.723,191,2.897,198,1.655,199,0.461,202,1.767,203,0.318,204,2.768,205,1.929,206,1.84,207,2.305,208,2.1,209,2.305,210,1.655,211,0.196,212,0.074,232,0.978,264,0.861,265,1.336,266,1.254,267,0.807,268,1.635,269,1.11,271,1.11,272,0.861,273,1.11,274,0.861,275,1.11,276,0.861,277,0.978,278,1.516,279,0.861,280,1.11,281,1.44,282,1.621,283,1.11,284,0.807,285,0.675,286,1.11,287,0.967,288,1.11,289,0.861,290,1.11,291,0.861,292,1.103,293,0.918,294,1.11,295,0.807,296,1.11,297,0.807,298,1.11,299,0.861,300,1.11,301,0.861,302,1.535,303,1.11,304,0.807,305,0.861,306,0.918,307,0.756,308,1.11,309,0.756,310,1.11,311,0.012,312,0.016,313,0.012,459,0.807,643,2.399,672,2.575,801,3.794,874,1.929,996,4.401,1011,2.561,1091,2.1,1124,2.561,1125,2.305,1557,1.929,1601,2.561,1609,2.905,1610,5.124,1611,5.331,1612,6.191,1613,5.331,1614,6.191,1615,5.331,1616,6.191,1617,5.331,1618,5.331,1619,5.331,1620,4.52,1621,5.331,1622,6.191,1623,6.191,1624,5.331,1625,3.427,1626,3.427,1627,3.427,1628,3.427,1629,3.427,1630,4.681,1631,3.427,1632,3.427,1633,3.427,1634,4.681,1635,4.681,1636,3.427,1637,2.561,1638,3.427,1639,2.868,1640,2.1,1641,3.427,1642,3.427,1643,3.427,1644,3.427,1645,3.427,1646,2.561,1647,3.427,1648,3.427,1649,3.427,1650,3.427,1651,2.905,1652,3.427,1653,5.331,1654,2.1,1655,3.427,1656,3.427,1657,3.427,1658,3.427]],["title/classes/MD5.html",[212,0.074,1091,2.095]],["body/classes/MD5.html",[3,0.093,4,0.093,6,1.17,8,0.067,14,1.128,16,1.235,17,0.026,18,2.083,33,1.121,44,1.336,54,1.287,68,0.167,92,1.099,93,1.099,105,1.507,107,1.703,113,0.625,114,1.121,116,0.991,118,2.228,122,0.482,139,0.497,141,0.555,143,0.905,144,0.775,145,0.248,146,0.815,148,0.417,149,0.899,151,2.284,153,1.507,156,0.757,157,1.222,165,1.021,166,0.438,175,0.642,186,0.385,193,2.621,198,0.79,199,0.322,202,0.467,203,0.152,211,0.224,212,0.106,220,0.687,228,1.323,232,1.684,239,2.54,251,1.345,261,2.083,277,1.728,302,0.717,305,0.411,311,0.012,312,0.009,313,0.012,314,1.293,315,0.642,317,2.422,320,2.255,323,1.428,327,1.95,341,1.002,371,1.099,383,1.099,387,0.79,388,2.083,391,1.507,393,0.735,407,4.787,408,4.022,409,4.573,413,1.099,414,3.131,416,1.8,434,1.002,437,3.347,439,2.937,446,1.769,448,0.92,449,0.687,459,1.158,462,0.735,463,2.094,465,1.393,507,1.002,562,2.044,565,1.529,567,1.293,568,1.336,569,0.735,588,2.517,589,2.669,590,1.64,595,0.717,596,4.154,600,2.887,603,1.002,609,0.92,632,1.336,643,2.517,647,2.064,653,4.412,663,0.529,672,3.297,673,2.656,688,2.212,697,1.099,698,2.915,699,1.002,702,1.64,703,2.001,710,0.92,712,2.407,715,2.083,722,0.92,731,1.099,732,1.099,733,2.642,734,1.099,737,1.64,740,1.052,742,1.222,744,1.222,745,1.64,747,0.92,759,1.393,763,1.8,765,1.8,766,3.312,781,1.002,800,2.924,801,1.64,802,1.8,819,1.222,829,2.621,830,3.131,832,1.222,836,1.099,851,3.763,857,1.099,864,3.833,874,1.507,883,2.852,900,2.407,902,1.002,906,1.099,907,1.222,908,1.222,910,2.881,911,4.63,912,2.001,913,2.001,914,1.386,915,2.881,916,2.881,918,2.269,919,1.222,920,2.001,921,1.002,922,1.002,923,1.386,925,1.8,926,1.8,927,2.269,929,2.269,930,1.386,931,2.269,932,1.386,933,1.386,934,1.222,935,1.386,937,2.54,938,1.222,939,2.269,941,1.222,944,1.222,945,2.286,946,1.222,947,1.386,948,1.002,949,1.386,951,1.8,953,1.386,954,3.674,955,1.386,956,1.222,957,1.386,958,1.222,959,1.386,960,2.642,961,1.099,962,2.001,963,1.222,964,1.222,965,1.222,966,1.222,967,1.222,968,1.222,969,1.099,970,1.099,971,1.386,972,1.222,973,1.8,974,1.8,975,1.099,976,2.001,977,1.222,978,1.222,979,1.222,980,1.222,981,1.386,982,2.937,983,0.851,984,1.222,985,1.386,986,1.386,987,3.24,988,1.386,989,1.386,990,2.937,991,1.386,992,1.222,993,2.881,994,1.222,995,1.386,996,2.642,997,1.386,998,1.386,999,1.386,1000,1.386,1001,1.099,1002,1.386,1003,2.001,1004,1.386,1005,1.386,1006,1.386,1007,2.269,1008,1.386,1009,1.386,1010,1.386,1011,1.222,1012,1.222,1013,1.386,1014,1.222,1015,1.386,1016,1.222,1017,1.222,1018,1.222,1019,1.099,1020,1.386,1021,1.386,1022,1.386,1023,1.386,1024,1.386,1025,1.222,1026,1.386,1027,2.269,1028,3.674,1029,3.674,1030,3.24,1031,3.674,1032,3.674,1033,1.386,1034,1.386,1035,2.269,1036,1.386,1037,1.386,1038,1.386,1039,1.386,1040,1.386,1041,1.222,1042,3.131,1043,1.099,1044,2.269,1045,2.269,1046,1.002,1047,3.479,1048,1.386,1049,1.386,1050,1.386,1051,3.946,1052,1.222,1053,1.386,1054,2.937,1055,1.222,1056,1.099,1057,2.269,1058,1.386,1059,1.386,1060,1.386,1061,1.386,1062,1.386,1063,1.386,1064,2.269,1065,2.269,1066,1.386,1067,1.386,1068,1.386,1069,1.386,1070,2.269,1071,1.386,1072,2.269,1073,3.33,1074,2.269,1075,2.269,1076,2.269,1077,1.386,1078,2.269,1079,1.386,1080,1.222,1081,2.269,1082,2.269,1083,1.222,1084,1.386,1085,1.386,1086,1.386,1087,1.386,1088,1.386,1089,1.222,1090,3.33,1091,2.656,1092,1.386,1093,1.386,1094,1.386,1095,2.269,1096,1.222,1097,1.099,1098,1.222,1099,2.269,1100,1.386,1101,1.386,1102,1.386,1103,1.386,1104,1.386,1105,1.386,1106,1.386,1107,1.386,1108,1.386,1109,1.386,1110,3.479,1111,2.286,1112,2.915,1113,1.386,1114,2.269,1115,1.386,1116,1.386,1117,3.33,1118,1.386,1119,1.386,1120,1.386,1121,2.269,1122,1.386,1123,1.386,1124,2.54,1125,2.286,1126,2.937,1127,1.386,1128,1.386,1129,1.386,1130,1.099,1131,1.386,1132,2.269,1133,1.222,1134,1.386,1135,1.386,1136,1.386,1137,1.386,1138,3.674,1139,4.166,1140,2.881,1141,4.166,1142,1.386,1143,1.386,1144,2.269,1145,1.386,1146,1.386,1147,1.386,1148,1.386,1149,1.222,1150,1.386,1151,1.386,1152,1.386,1153,1.386,1154,1.386,1155,1.386,1156,1.386,1157,1.222,1158,2.881,1159,2.881,1160,4.166,1161,2.881,1162,1.386,1163,1.386,1164,1.386,1165,1.386,1166,1.386,1167,1.386,1168,1.222,1169,1.386,1170,1.386,1171,2.001,1172,2.269,1173,1.386,1174,1.386,1175,1.386,1176,1.386,1177,1.386,1178,5.429,1179,2.269,1180,2.269,1181,2.269,1182,2.269,1183,1.386,1184,2.269,1185,1.386,1186,2.269,1187,2.001,1188,1.386,1189,0.92,1190,1.386,1191,1.386,1192,1.386,1193,1.386,1194,1.386,1195,2.881,1196,3.673,1197,1.386,1198,1.386,1199,1.386,1200,2.269,1201,2.269,1202,2.54,1203,1.386,1204,2.269,1205,1.222,1206,1.222,1207,1.386,1208,1.222,1313,2.269,1659,1.634,1660,2.676,1661,2.676,1662,2.676,1663,2.676,1664,2.676,1665,2.676,1666,2.676,1667,2.676,1668,2.676,1669,2.676,1670,2.676,1671,2.676,1672,1.634,1673,1.634,1674,1.634,1675,1.634,1676,1.634,1677,1.634,1678,1.634,1679,1.634,1680,1.634,1681,1.634,1682,1.634,1683,1.634,1684,1.634,1685,1.634,1686,1.634,1687,1.634,1688,1.634,1689,1.634,1690,2.676,1691,1.634,1692,1.634,1693,1.634,1694,1.634,1695,1.634]],["title/injectables/Modal.html",[285,0.493,595,0.916]],["body/injectables/Modal.html",[0,0.361,3,0.179,4,0.179,8,0.128,17,0.025,31,2.699,33,1.257,68,0.595,107,2.168,113,0.635,114,0.896,116,1.065,117,2.07,118,1.952,122,0.793,137,0.693,140,1.363,141,0.586,143,1.086,144,0.712,145,0.615,146,0.824,148,0.905,149,0.796,153,2.48,156,0.721,165,0.938,166,0.841,175,1.234,180,3.009,186,1.42,199,0.379,201,3.933,203,0.291,204,1.516,211,0.179,212,0.095,228,1.051,232,0.896,251,0.74,266,1.18,285,0.991,311,0.011,312,0.015,313,0.011,317,1.633,391,1.767,442,1.633,449,1.319,462,1.412,583,2.079,586,2.363,588,2.958,595,1.18,604,2.699,605,2.006,609,2.48,630,2.346,643,1.412,661,1.923,663,1.648,667,2.111,722,2.48,727,3.804,747,1.767,766,3.421,898,3.381,921,3.792,925,4.374,984,2.346,1014,4.344,1019,3.909,1046,1.923,1083,3.292,1259,1.767,1551,4.861,1572,2.865,1696,2.346,1697,5.089,1698,5.089,1699,5.517,1700,4.405,1701,4.405,1702,4.405,1703,3.139,1704,6.025,1705,5.089,1706,4.678,1707,4.405,1708,4.405,1709,4.405,1710,3.139,1711,4.405,1712,6.772,1713,6.807,1714,3.139,1715,5.811,1716,4.314,1717,5.089,1718,5.517,1719,5.517,1720,5.811,1721,4.124,1722,4.926,1723,6.025,1724,5.811,1725,4.926,1726,4.926,1727,5.811,1728,4.405,1729,3.139,1730,4.405,1731,5.246,1732,3.139,1733,3.734,1734,3.139,1735,3.139,1736,3.139,1737,3.292,1738,2.346,1739,3.139,1740,3.139,1741,2.346,1742,3.139,1743,3.139,1744,3.139,1745,3.139,1746,3.139,1747,3.139,1748,3.139,1749,2.661,1750,3.139,1751,3.139,1752,3.139,1753,3.139,1754,3.139,1755,3.139,1756,4.405,1757,3.139,1758,3.139,1759,3.734,1760,3.139,1761,3.139,1762,3.139,1763,3.139,1764,3.139,1765,3.139,1766,3.139,1767,3.139,1768,3.139,1769,3.139,1770,3.139,1771,3.139,1772,3.139,1773,3.139,1774,3.139,1775,3.139,1776,3.139,1777,3.139,1778,3.139,1779,3.139,1780,3.139,1781,3.139,1782,3.139]],["title/injectables/ModalConfig.html",[180,1.539,595,0.916]],["body/injectables/ModalConfig.html",[3,0.195,4,0.195,8,0.139,17,0.025,33,0.972,34,2.891,35,4.272,57,3.484,65,3.972,68,0.349,88,3.484,107,2.089,113,0.672,118,1.722,122,0.839,137,1.173,141,0.641,143,0.53,144,0.417,145,0.624,146,0.708,148,1.067,149,0.977,151,2.429,156,0.672,165,0.726,180,3.082,181,3.562,182,3.135,183,3.574,184,1.887,185,3.574,186,1.252,187,3.574,188,3.574,189,1.957,191,2.567,193,3.627,199,0.253,203,0.316,211,0.195,212,0.074,228,0.704,251,0.803,285,1,311,0.019,312,0.016,313,0.012,325,4.272,327,2.097,403,3.135,449,2.401,459,1.098,568,1.832,583,1.51,586,2.552,588,2.097,589,2.426,595,1.249,605,1.609,622,3.844,632,2.487,646,4.73,661,2.087,663,1.51,766,2.426,883,2.857,907,3.484,921,3.502,922,2.857,1001,3.844,1130,3.135,1254,3.952,1295,2.624,1352,3.952,1551,4.73,1554,3.135,1572,1.918,1706,5.364,1716,4.845,1721,3.484,1722,3.952,1783,2.546,1784,4.661,1785,5.314,1786,5.314,1787,5.314,1788,5.314,1789,5.314,1790,4.661,1791,3.406,1792,4.661,1793,3.406,1794,4.661,1795,4.661,1796,4.661,1797,3.406,1798,3.406,1799,5.715,1800,3.406,1801,3.406,1802,4.661,1803,4.661,1804,3.406,1805,3.406,1806,3.406,1807,3.406,1808,4.661,1809,4.661,1810,5.715,1811,4.661,1812,4.661,1813,5.314,1814,4.661,1815,4.845,1816,3.406,1817,3.406,1818,3.406,1819,3.406,1820,3.406,1821,5.715,1822,3.406,1823,3.406,1824,3.972,1825,4.661,1826,3.406,1827,4.661,1828,6.18,1829,3.406,1830,3.406,1831,4.661,1832,3.406,1833,3.406,1834,3.406,1835,3.406,1836,3.406]],["title/injectables/ModalDialogInstance.html",[140,0.916,595,0.916]],["body/injectables/ModalDialogInstance.html",[3,0.205,4,0.205,8,0.146,17,0.025,68,0.367,113,0.696,114,1.936,116,0.85,117,1.853,122,0.869,135,2.172,137,1.289,140,1.293,141,0.637,143,0.909,144,0.716,145,0.605,146,0.778,148,0.559,149,0.963,156,0.613,165,1.015,166,1.747,175,2.295,184,1.378,189,2.009,199,0.267,203,0.333,211,0.205,212,0.104,228,1.325,232,1.558,251,1.138,266,1.293,285,0.963,311,0.022,312,0.017,313,0.013,403,3.248,459,1.376,480,3.038,565,2.172,583,1.564,585,3.248,586,2.539,587,2.681,588,2.824,589,2.84,590,2.959,594,5.6,595,1.293,596,2.413,597,3.041,598,2.413,599,3.041,600,2.02,601,3.041,602,3.041,603,2.959,604,2.959,605,2.016,606,4.627,607,4.627,608,4.093,609,2.718,610,4.093,611,4.627,612,4.627,613,4.627,614,4.627,615,3.041,616,3.041,617,3.041,618,4.093,619,3.041,620,4.093,621,4.093,622,4.386,623,4.093,624,5.528,625,3.041,626,3.041,627,4.093,628,4.627,629,3.041,630,4.364,631,4.093,632,1.898,633,4.093,634,3.041,635,4.093,636,4.093,637,4.093,638,3.041,639,3.609,640,3.609,641,3.609,642,3.609,643,2.172,644,4.093,645,4.093,646,3.609,647,2.028,648,4.95,649,4.093,650,3.609,651,3.609,652,2.959,653,3.248,654,4.093,655,3.041,656,4.95,657,3.041,658,3.041,659,3.041,661,2.198,663,1.162,1837,4.828,1838,4.828,1839,4.828,1840,4.828,1841,3.587,1842,3.587,1843,3.587,1844,3.587,1845,3.587,1846,3.587,1847,3.587,1848,3.587,1849,3.587,1850,3.587,1851,3.587,1852,3.587,1853,3.587,1854,3.587,1855,3.587]],["title/modules/ModalModule.html",[885,1.652,1856,2.095]],["body/modules/ModalModule.html",[3,0.276,4,0.276,8,0.197,17,0.025,140,1.819,199,0.505,203,0.449,204,3.227,205,2.725,206,2.298,207,3.255,211,0.276,212,0.105,264,1.216,284,1.677,285,0.979,304,1.677,311,0.017,312,0.02,313,0.017,569,2.178,885,2.338,887,2.518,888,2.725,889,4.226,890,2.338,891,3.035,892,3.85,895,3.932,896,2.966,898,2.966,899,3.932,1529,4.957,1586,3.255,1856,4.361,1857,4.103,1858,4.103,1859,4.103,1860,4.103,1861,4.84,1862,4.84,1863,4.84]],["title/classes/OKOnlyContent.html",[212,0.074,1864,2.3]],["body/classes/OKOnlyContent.html",[0,0.322,3,0.26,4,0.26,8,0.186,10,1.384,11,2.073,14,0.94,17,0.025,44,2.213,68,0.466,101,1.144,113,0.812,116,1.082,117,1.712,137,1.243,140,1.638,141,0.593,143,0.709,144,0.558,145,0.593,146,0.606,148,0.952,149,0.882,156,0.788,189,2.463,199,0.475,203,0.422,206,2.213,211,0.322,212,0.122,284,1.073,285,0.812,305,1.144,311,0.016,312,0.02,313,0.016,315,1.789,459,1.073,586,2.417,605,1.571,663,1.475,740,2.213,800,3.276,890,2.199,1189,2.563,1259,2.563,1283,2.789,1295,3.171,1430,3.747,1485,2.789,1557,2.563,1639,3.451,1640,2.789,1654,2.789,1864,4.113,1865,3.403,1866,5.566,1867,3.859,1868,4.552,1869,4.298,1870,4.298,1871,4.552,1872,4.552,1873,4.552,1874,3.062,1875,3.062,1876,3.062,1877,3.062,1878,3.062,1879,3.062,1880,3.859,1881,2.563,1882,3.062,1883,3.062]],["title/components/OKOnlyModal.html",[0,0.195,284,0.806]],["body/components/OKOnlyModal.html",[0,0.334,1,1.037,2,1.331,3,0.236,4,0.236,6,1.037,7,1.337,8,0.168,10,1.61,11,2.152,13,1.037,14,1.464,15,1.255,16,0.853,17,0.025,44,2.424,54,0.973,68,0.422,101,1.331,113,0.764,116,0.96,117,1.939,122,0.953,135,2.382,136,2.981,137,1.169,140,1.748,141,0.591,143,0.824,144,0.782,145,0.542,146,0.705,147,1.511,156,0.656,165,0.824,166,1.419,189,1.949,199,0.459,203,0.383,206,2.081,211,0.302,212,0.115,264,1.037,265,1.511,266,1.419,267,0.973,268,1.76,269,1.337,271,1.337,272,1.037,273,1.337,274,1.037,275,1.337,276,1.037,277,1.178,278,1.715,279,1.037,280,1.337,281,1.037,282,1.255,283,1.337,284,1.453,285,0.941,286,1.337,287,1.094,288,1.337,289,1.037,290,1.337,291,1.037,292,1.248,293,1.106,294,1.337,295,0.973,296,1.337,297,0.973,298,1.337,299,1.037,300,1.337,301,1.037,302,1.106,303,1.337,304,0.973,305,1.469,306,1.106,307,0.911,308,1.337,309,0.911,310,1.337,311,0.014,312,0.018,313,0.014,459,0.973,586,2.402,605,1.828,663,1.337,740,1.622,800,2.558,890,2.558,1189,2.981,1259,2.324,1283,3.245,1295,2.324,1430,3.908,1485,3.245,1557,2.981,1637,3.086,1639,3.583,1640,2.53,1654,2.53,1864,3.932,1865,3.086,1866,3.499,1869,3.561,1870,3.561,1874,2.776,1875,2.776,1876,3.561,1877,3.561,1878,3.932,1879,3.932,1880,4.956,1881,3.292,1882,2.776,1883,2.776,1884,4.128,1885,4.128,1886,4.128,1887,4.128,1888,4.128]],["title/components/QueryBand.html",[0,0.195,287,0.706]],["body/components/QueryBand.html",[0,0.231,1,0.533,2,0.828,3,0.121,4,0.121,5,2.101,6,0.828,7,0.686,8,0.165,13,0.533,14,1.364,15,0.644,16,1.32,17,0.025,26,2.716,29,3.512,31,2.475,32,3.545,33,0.605,34,1.951,54,0.499,55,2.716,56,2.716,59,2.717,62,4.051,68,0.217,95,2.716,97,3.748,101,0.828,113,0.475,116,1.105,118,1.308,122,0.593,130,1.294,137,0.468,141,0.644,143,0.629,144,0.64,145,0.581,146,0.538,147,0.94,148,1.075,149,0.904,156,0.612,165,0.976,166,1.639,184,1.874,186,1.602,191,1.951,199,0.158,200,2.717,202,1.746,203,0.196,211,0.298,212,0.087,228,1.221,232,0.605,250,2.717,251,1.363,264,0.533,265,0.94,266,0.882,267,1.073,268,1.3,269,0.686,271,0.686,272,0.533,273,0.686,274,0.533,275,0.686,276,0.533,277,0.605,278,1.067,279,0.533,280,0.686,281,0.533,282,0.644,283,0.686,284,0.499,285,0.475,286,0.686,287,1.125,288,0.686,289,0.533,290,0.686,291,0.533,292,1.529,293,1.55,294,0.686,295,0.499,296,0.686,297,0.499,298,0.686,299,0.533,300,0.686,301,0.533,302,0.568,303,0.686,304,0.499,305,0.533,306,0.568,307,0.727,308,0.686,309,0.727,310,0.686,311,0.007,312,0.011,313,0.007,323,0.89,387,2.857,393,2.535,436,2.716,442,1.103,444,1.425,445,1.584,446,3.529,447,1.298,448,2.274,449,2.431,450,3.748,451,1.584,452,1.584,453,2.274,454,3.019,455,2.716,456,4.114,457,3.199,458,3.019,459,1.23,460,3.687,461,4.211,462,2.349,463,1.817,464,3.512,465,2.37,466,3.011,467,3.019,468,2.716,469,3.019,470,3.019,471,3.903,472,3.019,473,3.903,474,3.019,475,3.019,476,3.019,477,3.019,478,3.019,479,3.019,480,3.417,481,3.512,482,3.019,483,3.019,484,4.417,485,3.019,486,3.019,487,3.019,488,3.019,489,2.461,490,2.461,491,2.791,492,3.019,493,3.019,494,2.461,495,2.475,496,3.019,497,2.215,498,3.019,499,3.019,500,3.019,501,3.019,502,3.019,503,2.215,504,2.215,505,3.019,506,2.215,507,2.018,508,3.019,509,3.019,510,3.019,511,3.019,512,3.019,513,3.019,514,1.584,515,3.019,516,3.019,517,2.716,518,1.584,519,1.103,520,3.019,521,3.404,522,3.404,523,3.019,524,3.019,525,3.019,526,2.461,527,3.019,528,3.404,529,3.019,530,1.584,531,1.584,532,2.461,533,1.298,534,2.461,535,1.584,536,1.584,537,1.584,538,1.584,539,1.584,540,3.019,541,1.584,542,1.584,543,1.584,544,1.584,545,3.404,546,1.584,547,3.404,548,1.584,549,3.404,550,3.019,551,1.584,552,2.215,553,1.584,554,3.404,555,1.584,556,1.584,557,3.404,558,1.584,559,3.404,560,2.461,561,1.584,562,1.713,563,2.461,564,1.584,565,0.953,566,2.018,567,1.951,568,0.833,569,0.953,570,2.461,571,1.584,572,1.584,573,1.584,574,3.404,575,1.584,576,3.404,577,1.584,578,3.404,579,1.584,580,3.404,581,1.584,582,3.404,583,1.067,584,2.461,1889,2.791,1890,3.292,1891,2.791,1892,2.119,1893,3.292,1894,2.119,1895,2.119,1896,2.119,1897,2.119,1898,2.119,1899,2.119,1900,2.119,1901,2.119,1902,2.119,1903,2.119,1904,2.119,1905,2.119,1906,2.119,1907,2.119,1908,2.119,1909,2.119,1910,2.119,1911,2.119,1912,2.119,1913,2.119,1914,2.119,1915,2.119,1916,2.119,1917,2.119,1918,2.119,1919,2.119,1920,1.584,1921,2.119,1922,2.119,1923,2.119,1924,2.119,1925,2.119,1926,2.119,1927,2.119,1928,2.119,1929,2.119,1930,2.119,1931,2.119,1932,1.584]],["title/directives/QueryBandDirective.html",[267,0.806,309,0.755]],["body/directives/QueryBandDirective.html",[0,0.251,3,0.178,4,0.178,5,1.625,6,0.785,8,0.179,13,0.785,14,1.137,16,1.324,17,0.026,26,2.101,29,2.953,31,1.914,32,3.11,33,0.892,34,1.509,55,2.101,56,2.953,59,2.284,62,4.312,68,0.32,95,2.101,97,3.374,101,0.785,113,0.633,116,1.096,118,1.644,141,0.29,145,0.29,148,1.023,156,0.493,184,1.854,186,1.603,191,1.509,199,0.232,200,2.641,202,1.892,203,0.29,211,0.331,212,0.11,228,1.342,232,0.892,250,2.641,251,1.511,267,1.196,287,1.137,292,1.456,293,1.475,306,0.837,307,0.689,309,0.969,311,0.011,312,0.015,313,0.011,323,1.312,387,3.139,393,2.838,436,3.414,442,1.625,444,2.101,445,2.335,446,3.585,447,1.914,448,2.858,449,2.437,450,3.787,451,3.281,452,3.794,453,1.759,454,2.335,455,2.101,456,3.703,457,2.69,458,2.335,459,1.034,460,3.281,461,3.794,462,1.975,463,1.405,464,2.953,465,2.284,466,2.865,467,2.335,468,2.101,469,2.335,470,2.335,471,3.281,472,2.335,473,3.281,474,2.335,475,2.335,476,2.335,477,2.335,478,2.335,479,2.335,480,3.381,481,3.414,482,2.335,483,2.335,484,4.37,485,3.281,486,2.335,487,3.281,488,2.335,489,2.335,490,2.335,491,2.69,492,2.335,493,2.335,494,2.335,495,2.69,496,2.335,497,2.101,498,2.335,499,2.335,500,2.335,501,2.335,502,2.335,503,2.101,504,2.101,505,2.335,506,2.953,507,2.69,508,2.335,509,2.335,510,2.335,511,2.335,512,2.335,513,2.335,514,2.335,515,2.335,516,2.335,517,2.101,518,2.335,519,1.625,520,2.335,521,3.794,522,3.794,523,3.281,524,2.335,525,2.335,526,2.335,527,2.335,528,2.335,529,3.794,530,2.335,531,2.335,532,2.335,533,1.914,534,2.335,535,2.335,536,2.335,537,2.335,538,2.335,539,2.335,540,3.794,541,2.335,542,2.335,543,2.335,544,2.335,545,2.335,546,2.335,547,2.335,548,2.335,549,2.335,550,3.794,551,2.335,552,2.101,553,2.335,554,2.335,555,2.335,556,2.335,557,2.335,558,2.335,559,2.335,560,3.281,561,2.335,562,2.284,563,3.281,564,2.335,565,1.405,566,2.69,567,2.452,568,1.228,569,1.405,570,3.281,571,2.335,572,2.335,573,2.335,574,2.335,575,2.335,576,2.335,577,2.335,578,2.335,579,2.335,580,2.335,581,2.335,582,2.335,583,1.012,584,3.281,1932,2.335,1933,3.123]],["title/components/QuickFindInput.html",[0,0.195,289,0.859]],["body/components/QuickFindInput.html",[0,0.348,1,1.136,2,1.409,3,0.258,4,0.258,6,1.136,7,1.464,8,0.184,13,1.136,14,1.476,15,1.374,16,0.934,17,0.025,54,1.065,68,0.463,101,1.409,113,0.809,116,1.02,130,2.204,137,1.346,141,0.591,144,0.747,145,0.52,147,1.6,148,0.949,149,0.963,199,0.454,202,1.87,203,0.419,211,0.258,212,0.098,251,1.502,264,1.136,265,1.6,266,1.502,267,1.065,268,1.819,269,1.464,271,1.464,272,1.136,273,1.464,274,1.136,275,1.464,276,1.136,277,1.29,278,1.816,279,1.136,280,1.464,281,1.136,282,1.374,283,1.464,284,1.065,285,0.809,286,1.464,287,1.158,288,1.464,289,1.602,290,2.163,291,1.136,292,1.321,293,1.211,294,1.464,295,1.065,296,1.464,297,1.065,298,1.464,299,1.136,300,1.464,301,1.136,302,1.211,303,1.464,304,1.065,305,1.136,306,1.211,307,0.998,308,1.464,309,0.998,310,1.464,311,0.016,312,0.02,313,0.016,446,3.41,1531,3.832,1934,3.832,1935,6.096,1936,5.607,1937,6.374,1938,4.52,1939,4.52,1940,4.52,1941,4.52,1942,4.52,1943,4.52,1944,4.52]],["title/components/RecordEditWindow.html",[0,0.195,291,0.859]],["body/components/RecordEditWindow.html",[0,0.341,1,1.088,2,1.372,3,0.247,4,0.247,6,1.088,7,1.402,8,0.177,10,1.66,11,2.201,13,1.088,14,1.47,15,1.316,16,0.894,17,0.025,54,1.02,68,0.443,101,1.088,113,0.787,116,1.007,117,1.818,122,0.983,130,2.145,135,2.456,136,3.073,140,1.601,141,0.582,143,0.674,144,0.769,145,0.506,146,0.577,147,1.558,165,0.85,166,1.462,196,3.236,198,2.637,199,0.481,202,1.558,203,0.402,204,2.888,205,2.438,206,2.145,207,2.912,208,2.653,211,0.247,212,0.094,264,1.088,265,1.558,266,1.462,267,1.02,268,1.791,269,1.402,271,1.402,272,1.088,273,1.402,274,1.088,275,1.402,276,1.088,277,1.236,278,1.768,279,1.088,280,1.402,281,1.088,282,1.316,283,1.402,284,1.02,285,0.787,286,1.402,287,1.127,288,1.402,289,1.088,290,1.402,291,1.577,292,1.525,293,1.681,294,1.402,295,1.02,296,1.402,297,1.02,298,1.402,299,1.088,300,1.402,301,1.088,302,1.16,303,1.402,304,1.02,305,1.088,306,1.16,307,0.956,308,1.402,309,0.956,310,1.402,311,0.015,312,0.019,313,0.015,459,1.02,605,2.064,675,5.068,736,2.84,884,3.671,903,3.67,1593,3.67,1945,3.67,1946,6.276,1947,4.329,1948,4.329,1949,4.329,1950,4.329,1951,4.329,1952,4.329,1953,4.329,1954,5.458,1955,4.627,1956,4.329,1957,4.329]],["title/components/RecordList.html",[0,0.195,295,0.806]],["body/components/RecordList.html",[0,0.216,1,0.951,2,0.765,3,0.11,4,0.11,6,0.482,7,0.621,8,0.078,10,0.926,11,1.394,13,0.482,14,1.357,15,1.43,16,1.35,17,0.026,33,1.6,54,1.321,68,0.481,101,0.765,107,2.062,113,0.439,114,1.844,116,0.992,117,1.952,118,1.396,122,0.548,130,1.196,135,1.37,137,0.423,139,1.151,140,1.014,141,0.599,143,0.817,144,0.731,145,0.562,146,0.699,147,0.869,148,0.474,149,0.439,151,1.967,153,1.08,156,0.67,165,0.913,166,1.539,175,1.967,180,1.37,181,1.08,184,1.23,186,1.108,199,0.436,200,2.447,201,2.32,202,1.081,203,0.178,204,2.082,205,1.08,208,1.175,209,1.29,210,0.926,211,0.216,212,0.041,220,1.279,228,0.629,231,4.294,232,1.844,233,2.581,250,1.97,251,1.283,256,1.625,260,2.899,264,0.482,265,0.869,266,0.816,267,0.452,268,1.23,269,0.621,271,0.621,272,1.319,273,0.621,274,0.482,275,0.621,276,0.482,277,0.547,278,0.986,279,1.258,280,0.621,281,0.482,282,0.583,283,0.621,284,0.452,285,0.785,286,0.621,287,1.158,288,0.621,289,0.482,290,0.621,291,0.482,292,1.555,293,1.707,294,0.621,295,1.016,296,0.621,297,0.452,298,0.621,299,0.482,300,0.621,301,0.482,302,0.514,303,0.621,304,0.452,305,0.482,306,0.514,307,0.423,308,0.621,309,0.423,310,0.621,311,0.013,312,0.011,313,0.007,323,0.806,391,1.08,393,2.252,433,2.275,447,1.175,450,2.32,453,2.647,456,2.899,457,2.32,459,1.321,462,1.37,463,0.863,464,2.047,465,1.584,466,2.833,468,2.047,480,1.584,491,1.865,497,2.047,506,1.29,517,1.29,533,1.175,552,2.047,562,2.604,565,1.703,566,2.32,567,0.926,568,1.196,604,3.521,605,2.118,622,2.047,632,2.139,640,1.433,643,2.116,663,0.621,671,3.661,672,2.082,677,1.29,691,1.433,700,3.209,710,1.714,740,0.754,745,1.865,758,1.433,766,1.584,769,4.615,803,4.243,805,4.448,857,3.366,860,2.275,884,1.29,891,1.471,900,2.32,902,1.175,926,2.047,945,2.047,951,2.047,956,1.433,1054,2.275,1055,2.275,1056,2.047,1098,2.83,1111,1.29,1276,3.661,1328,1.433,1337,4.243,1340,3.209,1341,1.625,1406,3.986,1407,1.625,1474,2.581,1543,1.625,1545,1.625,1554,2.899,1572,1.08,1586,1.29,1721,1.433,1731,2.581,1741,2.275,1759,3.209,1889,2.581,1920,3.222,1932,2.275,1955,1.625,1958,1.625,1959,3.209,1960,3.044,1961,3.044,1962,3.044,1963,3.786,1964,4.311,1965,3.655,1966,3.044,1967,3.209,1968,3.044,1969,3.786,1970,4.311,1971,3.044,1972,3.044,1973,3.786,1974,3.044,1975,3.786,1976,4.702,1977,1.625,1978,3.044,1979,3.044,1980,1.917,1981,5.745,1982,1.917,1983,3.044,1984,3.044,1985,4.311,1986,3.044,1987,3.044,1988,1.917,1989,5.2,1990,1.917,1991,1.917,1992,3.044,1993,1.917,1994,3.044,1995,3.044,1996,1.917,1997,3.655,1998,1.917,1999,1.917,2000,1.917,2001,3.044,2002,1.917,2003,3.044,2004,3.655,2005,3.044,2006,1.917,2007,1.917,2008,3.044,2009,1.917,2010,3.044,2011,1.917,2012,3.044,2013,3.044,2014,3.044,2015,1.917,2016,1.917,2017,3.044,2018,1.917,2019,3.044,2020,1.917,2021,1.917,2022,1.917,2023,1.917,2024,3.044,2025,1.917,2026,5.246,2027,1.917,2028,3.786,2029,3.786,2030,3.044,2031,3.044,2032,3.044,2033,3.786,2034,1.917,2035,1.917,2036,1.917,2037,1.917,2038,1.917,2039,1.917,2040,1.917,2041,1.917,2042,1.917,2043,1.917,2044,1.917,2045,4.702,2046,1.917,2047,1.917,2048,1.917,2049,3.044,2050,1.917,2051,1.917,2052,1.917,2053,3.044,2054,4.311,2055,1.917,2056,1.917,2057,1.917,2058,1.917,2059,1.917,2060,3.786,2061,4.311,2062,1.625,2063,1.917,2064,1.917,2065,1.917,2066,1.917,2067,1.917,2068,1.917,2069,1.917,2070,1.917,2071,4.311,2072,1.917,2073,3.044,2074,3.044,2075,3.786,2076,3.044,2077,1.917,2078,3.786,2079,4.311,2080,5.246,2081,3.786,2082,1.917,2083,1.917,2084,4.311,2085,1.917,2086,3.044,2087,1.917,2088,1.917,2089,1.917,2090,3.044,2091,1.917,2092,1.917,2093,1.917,2094,1.917,2095,1.917,2096,1.625,2097,1.917,2098,1.917,2099,3.044,2100,1.917,2101,3.044,2102,4.702,2103,3.044,2104,3.044,2105,3.786,2106,4.311,2107,1.917,2108,3.044,2109,4.702,2110,4.311,2111,1.917,2112,3.786,2113,3.044,2114,1.917,2115,1.917,2116,1.917,2117,1.917,2118,1.917,2119,1.917,2120,4.311,2121,3.044,2122,3.044,2123,4.311,2124,3.044,2125,1.917,2126,3.044,2127,3.044,2128,3.044,2129,3.044,2130,3.044,2131,1.917,2132,1.917,2133,1.917,2134,1.917,2135,1.917,2136,1.917,2137,3.044,2138,1.917,2139,1.917,2140,1.917,2141,1.917,2142,4.311,2143,1.917,2144,1.917]],["title/components/Tab.html",[0,0.195,297,0.806]],["body/components/Tab.html",[0,0.362,1,1.116,2,1.394,3,0.254,4,0.254,6,1.116,7,1.438,8,0.181,13,1.116,14,1.476,15,1.35,16,0.917,17,0.025,33,1.267,54,1.046,68,0.454,101,1.52,130,2.179,137,0.98,141,0.561,143,0.691,144,0.776,145,0.561,146,0.591,147,1.583,148,0.691,149,0.64,156,0.623,184,1.583,186,1.425,189,2.226,199,0.33,202,1.726,203,0.412,211,0.317,212,0.12,264,1.116,265,1.583,266,1.486,267,1.046,268,1.808,269,1.438,271,1.438,272,1.116,273,1.438,274,1.116,275,1.438,276,1.116,277,1.267,278,1.796,279,1.116,280,1.438,281,1.116,282,1.35,283,1.438,284,1.046,285,0.8,286,1.438,287,1.145,288,1.438,289,1.116,290,1.438,291,1.116,292,1.307,293,1.189,294,1.438,295,1.046,296,1.438,297,1.62,298,1.438,299,1.714,300,1.438,301,1.116,302,1.189,303,1.438,304,1.046,305,1.116,306,1.189,307,0.98,308,1.438,309,0.98,310,1.438,311,0.015,312,0.019,313,0.015,583,1.796,595,1.62,1646,3.319,2145,3.319,2146,5.126,2147,4.701,2148,5.545,2149,4.44,2150,3.764,2151,3.764,2152,3.764,2153,3.764,2154,3.764,2155,3.764,2156,4.701,2157,3.764,2158,3.764,2159,3.764,2160,3.764]],["title/components/Tabs.html",[0,0.195,299,0.859]],["body/components/Tabs.html",[0,0.358,1,1.085,2,1.369,3,0.247,4,0.247,6,1.085,7,1.398,8,0.176,13,1.085,14,1.473,15,1.313,16,0.892,17,0.025,33,1.232,54,1.017,68,0.442,101,1.5,113,0.786,122,0.981,141,0.581,143,0.93,144,0.809,145,0.505,146,0.795,147,1.555,148,0.672,149,0.623,156,0.485,165,0.93,166,1.599,175,1.697,184,1.555,186,1.284,189,1.589,199,0.321,202,1.704,203,0.4,211,0.311,212,0.118,264,1.085,265,1.555,266,1.46,267,1.017,268,1.79,269,1.398,271,1.398,272,1.085,273,1.398,274,1.085,275,1.398,276,1.085,277,1.232,278,1.765,279,1.085,280,1.398,281,1.085,282,1.313,283,1.398,284,1.017,285,0.786,286,1.398,287,1.125,288,1.398,289,1.085,290,1.398,291,1.085,292,1.284,293,1.157,294,1.398,295,1.017,296,1.398,297,1.65,298,1.398,299,1.733,300,1.398,301,1.085,302,1.157,303,1.398,304,1.017,305,1.085,306,1.157,307,0.953,308,1.398,309,0.953,310,1.398,311,0.015,312,0.019,313,0.015,583,1.398,595,1.599,1646,3.227,2145,3.227,2146,3.66,2147,3.66,2150,5.061,2151,4.619,2152,3.66,2153,4.619,2154,3.66,2155,3.66,2156,4.619,2157,4.619,2158,3.66,2159,3.66,2160,3.66,2161,5.448,2162,5.448,2163,5.448,2164,4.317,2165,4.317,2166,4.317,2167,4.317]],["title/classes/Utf8.html",[212,0.074,759,1.779]],["body/classes/Utf8.html",[3,0.189,4,0.189,8,0.135,17,0.026,33,1.747,44,1.793,68,0.606,113,0.658,114,2.004,116,0.514,118,2.294,122,0.821,141,0.621,143,0.977,144,0.769,146,0.836,149,0.854,151,1.297,156,0.665,165,1.011,166,0.884,186,0.778,193,1.859,211,0.189,212,0.071,220,2.196,228,1.321,268,1.964,311,0.012,312,0.016,313,0.012,315,1.297,335,5.018,369,3.069,371,3.069,387,2.724,388,3.204,396,2.468,397,2.799,406,2.796,413,2.221,414,3.517,416,3.069,418,2.468,759,2.374,1097,2.221,1196,4.425,1202,3.411,1205,3.411,1206,3.411,1280,2.799,1402,2.799,2168,2.799,2169,4.562,2170,4.562,2171,4.562,2172,4.562,2173,4.562,2174,5.64,2175,4.562,2176,5.228,2177,4.562,2178,4.562,2179,4.562,2180,4.562,2181,3.301,2182,3.301,2183,3.301,2184,4.562,2185,3.301,2186,6.882,2187,3.301,2188,5.228,2189,3.301,2190,3.301,2191,4.562,2192,3.301,2193,3.301,2194,4.562,2195,3.301,2196,3.301,2197,3.301,2198,3.301,2199,3.301,2200,4.562,2201,4.562,2202,3.301,2203,3.301,2204,3.301,2205,4.562,2206,3.301,2207,3.301,2208,5.228,2209,3.301,2210,3.301,2211,4.562,2212,4.562,2213,3.301,2214,3.301,2215,6.821,2216,6.394,2217,3.301,2218,6.491,2219,3.301,2220,5.228,2221,5.228,2222,3.301,2223,4.562,2224,5.228,2225,5.228,2226,3.301,2227,5.228,2228,3.301,2229,3.301,2230,3.301,2231,3.301,2232,5.228,2233,5.919,2234,5.228,2235,4.562,2236,4.562,2237,5.64,2238,3.301,2239,3.301,2240,5.919,2241,6.57,2242,5.64,2243,5.228,2244,4.562,2245,3.301,2246,6.121,2247,3.301,2248,3.301,2249,3.301,2250,3.301,2251,3.301]],["title/components/WebAppContainer.html",[0,0.195,301,0.859]],["body/components/WebAppContainer.html",[0,0.323,1,0.966,2,1.271,3,0.22,4,0.22,6,0.966,7,1.245,8,0.157,10,1.537,13,0.966,14,1.454,15,1.169,16,0.794,17,0.025,44,1.51,54,0.906,68,0.393,101,1.271,105,2.164,107,1.987,113,0.729,114,1.827,116,0.934,122,0.91,130,1.987,137,0.848,139,1.825,141,0.605,143,0.598,144,0.736,145,0.557,146,0.512,147,1.78,148,0.787,149,0.729,165,0.787,166,1.354,184,1.713,186,1.191,199,0.446,200,2.94,201,3.678,202,1.443,203,0.356,204,1.857,210,1.857,211,0.22,212,0.083,232,1.713,251,0.906,264,0.966,265,1.443,266,1.354,267,0.906,268,1.713,269,1.245,271,1.245,272,0.966,273,1.245,274,0.966,275,1.245,276,0.966,277,1.097,278,1.638,279,0.966,280,1.245,281,1.271,282,1.169,283,1.245,284,0.906,285,0.994,286,1.245,287,1.044,288,1.245,289,0.966,290,1.245,291,0.966,292,1.191,293,1.03,294,1.245,295,0.906,296,1.245,297,0.906,298,1.245,299,0.966,300,1.245,301,1.508,302,1.513,303,1.245,304,0.906,305,0.966,306,1.03,307,0.848,308,1.245,309,0.848,310,1.245,311,0.013,312,0.018,313,0.013,317,2,387,2.442,437,3.098,446,3.123,457,2.355,605,1.327,632,1.51,643,1.729,647,1.615,874,2.846,891,2.442,1544,3.258,1586,2.585,1601,2.873,1610,2.873,1651,3.258,1738,3.779,1891,4.286,1959,4.789,1967,5.088,1977,3.258,2062,3.258,2096,3.258,2252,3.258,2253,5.055,2254,5.055,2255,5.649,2256,6.001,2257,5.649,2258,5.649,2259,5.055,2260,3.843,2261,3.843,2262,3.843,2263,3.843,2264,3.843,2265,3.843,2266,3.843,2267,5.055,2268,3.843,2269,3.843,2270,3.843,2271,3.843,2272,3.843,2273,3.843,2274,3.843,2275,3.843,2276,3.843,2277,3.843,2278,3.843,2279,3.843,2280,3.843,2281,3.843,2282,3.843,2283,5.649,2284,5.649,2285,3.843,2286,3.843,2287,3.843,2288,3.843,2289,3.843,2290,5.649,2291,3.843,2292,3.843]],["title/components/YesNoModal.html",[0,0.195,304,0.806]],["body/components/YesNoModal.html",[0,0.329,1,1.005,2,1.304,3,0.228,4,0.228,6,1.005,7,1.296,8,0.163,10,1.578,11,2.12,13,1.005,14,1.46,15,1.216,16,0.826,17,0.025,44,2.395,54,0.943,68,0.409,101,1.304,113,0.748,116,1.008,117,1.92,122,0.934,135,2.335,136,2.921,137,1.145,140,1.733,141,0.6,143,0.897,144,0.793,145,0.534,146,0.767,147,1.481,156,0.684,165,0.897,166,1.543,175,1.572,186,0.943,189,1.91,199,0.453,203,0.371,206,2.039,211,0.296,212,0.112,264,1.005,265,1.481,266,1.39,267,0.943,268,1.739,269,1.296,271,1.296,272,1.005,273,1.296,274,1.005,275,1.296,276,1.005,277,1.142,278,1.681,279,1.005,280,1.296,281,1.005,282,1.216,283,1.296,284,0.943,285,0.933,286,1.296,287,1.072,288,1.296,289,1.005,290,1.296,291,1.005,292,1.223,293,1.072,294,1.296,295,0.943,296,1.296,297,0.943,298,1.296,299,1.005,300,1.296,301,1.005,302,1.072,303,1.296,304,1.436,305,1.447,306,1.072,307,0.883,308,1.296,309,0.883,310,1.296,311,0.014,312,0.018,313,0.014,459,0.943,583,1.296,586,2.425,605,1.791,652,3.735,663,1.296,740,1.572,800,2.507,890,2.507,969,2.69,1189,2.921,1259,2.252,1283,3.18,1295,2.252,1430,3.18,1485,3.18,1557,2.921,1566,3.879,1572,2.252,1607,2.99,1637,2.99,1639,3.529,1640,2.451,1654,2.451,1869,3.49,1870,3.49,1874,2.69,1875,2.69,1876,3.49,1877,3.49,1878,3.874,1879,3.874,1881,3.243,1882,2.69,1883,2.69,2293,2.99,2294,4.882,2295,4.882,2296,4,2297,4,2298,4,2299,3.874,2300,4,2301,4,2302,4,2303,3.391,2304,3.391,2305,3.391,2306,3.391]],["title/classes/YesNoModalContent.html",[212,0.074,2299,2.3]],["body/classes/YesNoModalContent.html",[0,0.311,3,0.247,4,0.247,8,0.176,10,1.313,11,2.006,14,0.892,17,0.025,44,2.141,68,0.442,101,1.085,113,0.786,116,1.101,117,1.657,137,1.203,140,1.599,141,0.612,143,0.672,144,0.529,145,0.612,146,0.575,148,1.007,149,0.932,156,0.794,186,1.284,189,2.43,199,0.466,203,0.4,206,2.141,211,0.311,212,0.118,285,0.786,304,1.017,305,1.085,311,0.015,312,0.019,313,0.015,315,1.697,459,1.017,583,2.031,586,2.468,605,1.49,652,2.646,663,1.398,740,2.141,800,3.238,890,2.086,969,2.904,1189,2.431,1259,2.431,1283,2.646,1295,3.068,1485,2.646,1557,2.431,1566,3.227,1572,3.068,1607,3.227,1639,3.339,1640,2.646,1654,2.646,1867,3.66,1869,4.217,1870,4.217,1874,2.904,1875,2.904,1876,2.904,1877,2.904,1878,2.904,1879,2.904,1881,2.431,1882,2.904,1883,2.904,2293,3.227,2294,3.66,2295,3.66,2299,4.015,2303,5.48,2304,5.48,2305,5.48,2306,3.66,2307,4.317,2308,4.317,2309,4.317,2310,4.317,2311,4.317,2312,4.317]],["title/coverage.html",[2313,3.962]],["body/coverage.html",[0,0.4,1,1.034,8,0.168,9,3.487,11,1.514,17,0.025,33,2.04,35,4.761,139,1.251,140,1.102,145,0.381,180,1.851,206,1.616,212,0.147,251,0.969,267,1.245,272,1.034,274,1.328,276,1.328,279,1.034,281,1.034,284,0.969,285,0.593,287,0.85,289,1.034,291,1.034,295,0.969,297,1.245,299,1.328,301,1.034,304,0.969,307,0.908,309,0.908,311,0.014,312,0.018,313,0.014,314,1.987,316,3.487,320,2.14,388,2.52,420,3.237,421,2.52,423,3.487,444,3.925,585,2.766,586,2.549,587,3.949,595,1.832,660,2.14,662,3.487,688,2.316,736,2.14,759,2.14,848,2.52,849,3.487,859,4.478,906,4.284,909,2.766,961,2.766,975,2.766,983,2.14,1091,2.52,1209,4.478,1247,3.487,1249,3.487,1260,3.074,1262,4.478,1549,3.487,1609,3.487,1696,3.949,1737,3.074,1783,3.949,1815,3.487,1824,3.074,1864,2.766,1865,3.949,1881,2.316,1934,3.487,1945,3.487,1958,3.487,2145,4.604,2168,3.487,2252,3.487,2293,3.949,2299,2.766,2313,3.487,2314,4.113,2315,4.113,2316,5.283,2317,5.283,2318,4.113,2319,4.113,2320,4.113,2321,4.113,2322,5.836,2323,4.113,2324,4.113,2325,5.283,2326,4.113,2327,6.63,2328,6.715,2329,6.37,2330,4.113,2331,4.113,2332,4.113,2333,4.113,2334,4.113,2335,4.113,2336,4.113,2337,5.283,2338,4.113,2339,4.113,2340,4.113,2341,5.836,2342,5.283,2343,4.113,2344,4.113,2345,4.113,2346,4.113,2347,4.113,2348,4.113,2349,4.113,2350,4.113,2351,4.113,2352,4.113,2353,4.113,2354,4.113,2355,4.113,2356,4.113,2357,4.113,2358,4.113,2359,4.948,2360,3.487,2361,3.487,2362,4.113]],["title/dependencies.html",[888,2.317,2363,2.852]],["body/dependencies.html",[17,0.023,311,0.019,312,0.022,313,0.019,888,3.584,2364,5.595,2365,5.595,2366,5.595]],["title/index.html",[68,0.292,2367,2.418,2368,2.132]],["body/index.html",[0,0.39,2,1.494,5,2.226,8,0.123,10,0.916,14,0.622,15,0.916,16,1.228,17,0.024,18,1.845,41,3.626,42,3.626,54,1.441,107,1.183,108,2.025,117,1.96,118,0.975,139,1.74,141,0.397,143,0.469,144,0.61,151,1.681,155,1.845,156,0.338,199,0.442,212,0.141,250,2.226,251,0.71,252,2.553,265,0.859,272,1.361,285,0.781,287,0.884,292,1.441,293,0.807,297,1.172,302,1.451,311,0.01,312,0.015,313,0.015,315,2.456,320,1.567,323,2.404,325,2.251,327,1.925,330,3.626,356,3.626,363,2.251,391,3.05,396,2.251,448,1.695,449,1.265,450,1.845,453,1.695,455,2.025,459,1.172,462,1.355,463,1.355,465,2.226,466,1.567,480,2.226,481,2.877,484,2.025,491,1.845,504,2.025,519,1.567,565,1.355,567,1.455,568,2.129,604,1.845,641,2.251,643,2.86,647,1.797,651,2.251,660,2.977,664,2.251,665,3.626,667,4.387,668,5.297,671,4.113,672,3.432,673,3.997,677,3.643,678,2.553,685,2.553,691,2.251,699,1.845,702,1.845,710,2.801,712,3.049,715,3.643,721,2.251,722,2.408,736,3.394,737,1.845,740,2.403,745,1.845,747,3.766,754,3.197,781,1.845,860,2.251,885,1.455,886,3.221,887,1.567,891,1.455,892,1.845,898,3.319,899,3.848,905,2.251,908,4.752,909,2.877,922,1.845,925,3.346,926,3.643,934,2.251,944,2.251,945,2.877,946,2.251,948,3.049,958,3.719,973,2.025,974,2.025,982,4.277,983,2.819,987,3.197,990,3.197,994,2.251,996,2.025,1003,3.719,1016,2.251,1017,3.197,1018,2.251,1025,2.251,1041,2.251,1042,3.643,1043,2.025,1046,1.845,1047,2.251,1052,3.719,1056,3.643,1080,2.251,1089,2.251,1112,2.877,1126,3.197,1130,2.025,1133,2.251,1187,2.251,1208,4.443,1271,4.218,1272,2.553,1276,2.025,1287,3.626,1288,3.626,1289,2.553,1296,2.553,1305,2.553,1328,2.251,1385,2.553,1389,2.553,1418,2.553,1420,2.251,1423,2.553,1439,2.553,1478,2.553,1479,2.553,1499,2.553,1522,3.319,1554,2.025,1610,3.719,1725,2.553,1726,2.553,1733,2.553,1738,2.251,1741,2.251,1749,2.553,1856,3.319,1965,2.553,1989,3.626,2004,3.626,2368,2.251,2369,6.447,2370,3.011,2371,3.011,2372,3.011,2373,3.011,2374,4.975,2375,6.447,2376,6.114,2377,3.011,2378,4.277,2379,3.011,2380,4.277,2381,3.011,2382,5.721,2383,4.277,2384,4.277,2385,3.011,2386,5.417,2387,3.011,2388,3.011,2389,3.011,2390,3.011,2391,4.277,2392,4.277,2393,3.011,2394,3.011,2395,4.277,2396,4.975,2397,3.011,2398,3.011,2399,4.277,2400,4.277,2401,4.975,2402,4.277,2403,3.011,2404,3.011,2405,3.011,2406,3.011,2407,2.553,2408,4.975,2409,3.011,2410,4.277,2411,3.011,2412,6.114,2413,3.011,2414,3.011,2415,4.277,2416,3.011,2417,3.011,2418,3.011,2419,3.011,2420,3.011,2421,2.553,2422,4.277,2423,3.011,2424,3.011,2425,3.011,2426,4.277,2427,4.277,2428,3.011,2429,4.277,2430,3.011,2431,4.277,2432,3.011,2433,4.277,2434,3.011,2435,4.277,2436,4.975,2437,3.011,2438,3.011,2439,3.011,2440,3.011,2441,3.011,2442,4.277,2443,3.011,2444,4.277,2445,3.011,2446,3.011,2447,3.011,2448,3.011,2449,4.277,2450,3.011,2451,3.011,2452,3.011,2453,3.011,2454,3.011,2455,3.011,2456,4.975,2457,3.011,2458,3.011,2459,3.011,2460,3.011,2461,4.277,2462,3.011,2463,3.011,2464,3.011,2465,4.277,2466,3.011,2467,3.011,2468,3.011,2469,3.011,2470,3.011,2471,3.011,2472,3.011,2473,4.277,2474,3.011,2475,3.011,2476,4.277,2477,3.011,2478,3.011,2479,3.011,2480,3.011,2481,3.011,2482,3.011,2483,3.011,2484,3.011,2485,2.553,2486,2.553]],["title/license.html",[2367,2.418,2368,2.132,2487,2.418]],["body/license.html",[17,0.021,93,3.397,175,1.985,311,0.018,312,0.021,313,0.018,408,3.397,568,2.357,639,4.782,896,3.095,909,3.397,948,3.095,1276,3.397,1420,4.483,1620,4.282,1920,3.775,1997,4.282,2407,4.282,2421,4.282,2485,4.282,2486,4.282,2487,4.282,2488,5.051,2489,6.398,2490,5.051,2491,5.998,2492,5.051,2493,5.051,2494,5.051,2495,5.051,2496,5.051,2497,5.051,2498,7.022,2499,5.051,2500,5.051,2501,5.998,2502,5.051,2503,5.051,2504,5.051,2505,5.051,2506,5.051,2507,5.051,2508,5.051,2509,5.998,2510,5.051,2511,5.051,2512,5.051,2513,5.051,2514,5.051,2515,5.998,2516,5.998,2517,5.051,2518,5.051,2519,5.051,2520,5.051,2521,5.051,2522,5.051,2523,5.051,2524,5.051,2525,5.051,2526,5.051,2527,5.051,2528,5.051,2529,5.051,2530,5.051,2531,5.051,2532,5.051,2533,5.051,2534,5.051,2535,5.051,2536,5.051,2537,5.051,2538,5.051,2539,5.051,2540,5.051,2541,5.051,2542,5.051,2543,5.051]],["title/modules.html",[887,2.432]],["body/modules.html",[17,0.022,311,0.019,312,0.022,313,0.019,433,4.963,886,3.111,887,2.876,1491,5.629,1522,3.387,1856,3.387,2544,6.639,2545,6.639]],["title/overview.html",[2546,3.962]],["body/overview.html",[1,1.663,2,1.024,17,0.025,44,2.064,139,1.866,140,1.557,220,1.712,264,1.024,272,1.663,274,1.663,276,1.663,279,1.663,281,1.663,284,1.559,285,0.838,287,1.367,289,1.663,291,1.663,295,1.559,297,1.559,299,1.663,301,1.663,304,1.559,306,1.092,307,1.46,309,1.46,311,0.014,312,0.018,313,0.014,315,1.602,406,2.498,418,3.047,421,4.054,422,3.047,569,1.834,660,3.024,661,2.498,736,3.024,848,4.054,885,1.969,886,3.813,887,2.121,888,2.295,889,2.741,890,1.969,891,1.969,892,2.498,893,3.455,894,3.455,895,3.533,896,2.498,983,2.121,1522,4.461,1523,3.455,1524,3.455,1526,3.455,1856,4.238,1857,3.455,1858,3.455,1859,3.455,1860,3.455,2546,3.455,2547,4.076,2548,4.076]],["title/miscellaneous/variables.html",[519,2.141,2549,2.418]],["body/miscellaneous/variables.html",[17,0.025,68,0.499,107,2.307,145,0.606,148,0.981,149,1,151,1.914,156,0.659,180,2.641,184,1.39,228,1.212,232,1.798,311,0.017,312,0.02,313,0.017,323,2.466,383,3.276,434,2.985,437,3.597,519,2.535,567,2.353,586,2.161,647,2.466,740,1.914,906,3.276,960,3.276,961,3.948,962,4.387,963,3.641,964,3.641,965,3.641,966,3.641,967,3.641,968,3.641,972,3.641,973,3.276,974,3.276,975,3.948,976,4.387,977,3.641,978,3.641,979,3.641,980,3.641,1696,3.641,1737,4.387,1783,3.641,1824,4.387,1881,3.305,2359,4.129,2360,4.976,2361,4.976,2549,4.129,2550,6.3,2551,4.871,2552,4.871,2553,5.869,2554,4.871,2555,4.871]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":33,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["0.2s",{"_index":83,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["0/1",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2342,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["00000000",{"_index":1165,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["0123456789abcdef'.split",{"_index":1672,"title":{},"body":{"classes/MD5.html":{}}}],["0x010000",{"_index":2251,"title":{},"body":{"classes/Utf8.html":{}}}],["0x07",{"_index":1206,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x0800",{"_index":2249,"title":{},"body":{"classes/Utf8.html":{}}}],["0x0f",{"_index":1202,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x10000",{"_index":2210,"title":{},"body":{"classes/Utf8.html":{}}}],["0x1f",{"_index":1205,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3f",{"_index":414,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3ff",{"_index":2212,"title":{},"body":{"classes/Utf8.html":{}}}],["0x80",{"_index":1196,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0xc0",{"_index":2221,"title":{},"body":{"classes/Utf8.html":{}}}],["0xd800",{"_index":2208,"title":{},"body":{"classes/Utf8.html":{}}}],["0xdc00",{"_index":2213,"title":{},"body":{"classes/Utf8.html":{}}}],["0xe0",{"_index":2224,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf0",{"_index":2227,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf8",{"_index":2250,"title":{},"body":{"classes/Utf8.html":{}}}],["0xff",{"_index":2236,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffe00000",{"_index":2226,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff",{"_index":2209,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff0000",{"_index":2222,"title":{},"body":{"classes/Utf8.html":{}}}],["0xfffff800",{"_index":2219,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffffff80",{"_index":2214,"title":{},"body":{"classes/Utf8.html":{}}}],["1",{"_index":220,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["1.18.02.16a",{"_index":1630,"title":{},"body":{"components/LoginCmp.html":{}}}],["1.18.06.17a",{"_index":1387,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["1/1",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2317,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2319,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2321,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":418,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["10).replace",{"_index":1164,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["10/10",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":35,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/ModalConfig.html":{},"coverage.html":{}}}],["1063",{"_index":1634,"title":{},"body":{"components/LoginCmp.html":{}}}],["1070px",{"_index":1611,"title":{},"body":{"components/LoginCmp.html":{}}}],["10px",{"_index":58,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["12",{"_index":416,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["12/40",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2547,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":30,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["16",{"_index":2318,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["1732584193",{"_index":1190,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["1732584194",{"_index":1192,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["18",{"_index":413,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["18/09",{"_index":1368,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["181px",{"_index":90,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["1px",{"_index":74,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["2",{"_index":44,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["20",{"_index":2316,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1616,"title":{},"body":{"components/LoginCmp.html":{}}}],["2017",{"_index":2490,"title":{},"body":{"license.html":{}}}],["24px",{"_index":471,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["25px",{"_index":89,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["26/27",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1813,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["271733878",{"_index":1193,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["271733879",{"_index":1191,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["28/51",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":477,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["3",{"_index":406,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["3.2.1",{"_index":2366,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1177,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["33",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["34/39",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":253,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["350",{"_index":1576,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["3px",{"_index":75,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["4",{"_index":371,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["400",{"_index":1575,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["41",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["4c",{"_index":1128,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4d",{"_index":672,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["4d's",{"_index":1289,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["4daction",{"_index":1077,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4daction/rest_proxyhttpget",{"_index":1088,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["5/12",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1815,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{}}}],["54",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1197,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["570",{"_index":190,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["5px",{"_index":29,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["6",{"_index":388,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["6/18",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["630",{"_index":221,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["64",{"_index":1194,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["667",{"_index":1635,"title":{},"body":{"components/LoginCmp.html":{}}}],["670px",{"_index":1615,"title":{},"body":{"components/LoginCmp.html":{}}}],["7",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1201,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["87",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2548,"title":{},"body":{"overview.html":{}}}],["9/]/.test(input",{"_index":378,"title":{},"body":{"classes/Base64.html":{}}}],["93",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":69,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["__karma__",{"_index":2360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_attributes",{"_index":1303,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_backdropref",{"_index":613,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_bootstrapref",{"_index":612,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_config",{"_index":1737,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_defaultconfig",{"_index":1824,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_editwindowconfig",{"_index":1960,"title":{},"body":{"components/RecordList.html":{}}}],["_fourdurl",{"_index":999,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_listcache",{"_index":1033,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_modified",{"_index":1306,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_previousadvancedquery",{"_index":1961,"title":{},"body":{"components/RecordList.html":{}}}],["_previousquery",{"_index":1962,"title":{},"body":{"components/RecordList.html":{}}}],["_recnum",{"_index":1293,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_registrycache",{"_index":1034,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_resultdefered",{"_index":614,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_savedsearches",{"_index":2110,"title":{},"body":{"components/RecordList.html":{}}}],["_savedsets",{"_index":2120,"title":{},"body":{"components/RecordList.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":343,"title":{},"body":{"classes/Base64.html":{}}}],["ability",{"_index":2442,"title":{},"body":{"index.html":{}}}],["above",{"_index":93,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["absolute",{"_index":66,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["acceptheader",{"_index":1064,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["acceptheader:string",{"_index":1059,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["accepts",{"_index":1809,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["access",{"_index":448,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["accessing",{"_index":2425,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":135,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{}}}],["act",{"_index":1055,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["acting",{"_index":2441,"title":{},"body":{"index.html":{}}}],["action",{"_index":1920,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{},"license.html":{}}}],["actions",{"_index":1785,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["active",{"_index":2146,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["actual_component",{"_index":310,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["add",{"_index":250,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["add/edit",{"_index":1987,"title":{},"body":{"components/RecordList.html":{}}}],["add/edit/delete",{"_index":2469,"title":{},"body":{"index.html":{}}}],["add32",{"_index":1661,"title":{},"body":{"classes/MD5.html":{}}}],["add32(a",{"_index":1674,"title":{},"body":{"classes/MD5.html":{}}}],["added",{"_index":1041,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["adding",{"_index":2083,"title":{},"body":{"components/RecordList.html":{}}}],["additional",{"_index":1052,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["additionally",{"_index":2468,"title":{},"body":{"index.html":{}}}],["adds",{"_index":2433,"title":{},"body":{"index.html":{}}}],["addtab",{"_index":2161,"title":{},"body":{"components/Tabs.html":{}}}],["addtab(tab",{"_index":2157,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["adjust",{"_index":2068,"title":{},"body":{"components/RecordList.html":{}}}],["advanced",{"_index":15,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["advancedquery",{"_index":2024,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquery['dialogconfig",{"_index":2095,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquerycomponent",{"_index":1,"title":{"components/AdvancedQueryComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["aftercontentinit",{"_index":1959,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["afterviewinit",{"_index":12,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["alert('record",{"_index":2089,"title":{},"body":{"components/RecordList.html":{}}}],["alert(reason",{"_index":1955,"title":{},"body":{"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["algorithm",{"_index":362,"title":{},"body":{"classes/Base64.html":{}}}],["allow",{"_index":2482,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1723,"title":{},"body":{"injectables/Modal.html":{}}}],["allowmultiple",{"_index":1712,"title":{},"body":{"injectables/Modal.html":{}}}],["allows",{"_index":2465,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":1274,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["already",{"_index":2082,"title":{},"body":{"components/RecordList.html":{}}}],["and/or",{"_index":1620,"title":{},"body":{"components/LoginCmp.html":{},"license.html":{}}}],["angular",{"_index":898,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["angular/common",{"_index":1533,"title":{},"body":{"modules/JS44DModule.html":{}}}],["angular/common/http",{"_index":902,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["angular/core",{"_index":203,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["angular/forms",{"_index":1531,"title":{},"body":{"modules/JS44DModule.html":{},"components/QuickFindInput.html":{}}}],["angular/platform",{"_index":432,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["angular2",{"_index":204,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["angular5",{"_index":1039,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["answer",{"_index":1876,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["anyway",{"_index":401,"title":{},"body":{"classes/Base64.html":{}}}],["api",{"_index":603,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["app",{"_index":1003,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["appear",{"_index":50,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["applicable",{"_index":1279,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["application",{"_index":1738,"title":{},"body":{"injectables/Modal.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["application'},{'name",{"_index":303,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["application/x",{"_index":1061,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["applications",{"_index":1743,"title":{},"body":{"injectables/Modal.html":{}}}],["applied",{"_index":744,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["appref",{"_index":1705,"title":{},"body":{"injectables/Modal.html":{}}}],["appref.injector.get(app_component",{"_index":1747,"title":{},"body":{"injectables/Modal.html":{}}}],["apps",{"_index":2457,"title":{},"body":{"index.html":{}}}],["argument",{"_index":949,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["arising",{"_index":2541,"title":{},"body":{"license.html":{}}}],["array",{"_index":151,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(>config.keyboard",{"_index":1829,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["ascending",{"_index":735,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["ascii",{"_index":374,"title":{},"body":{"classes/Base64.html":{}}}],["assets",{"_index":2415,"title":{},"body":{"index.html":{}}}],["assets/main';and",{"_index":2419,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1276,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["associates",{"_index":2466,"title":{},"body":{"index.html":{}}}],["assume",{"_index":1508,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["astral",{"_index":394,"title":{},"body":{"classes/Base64.html":{}}}],["atk’s",{"_index":364,"title":{},"body":{"classes/Base64.html":{}}}],["atob",{"_index":355,"title":{},"body":{"classes/Base64.html":{}}}],["atob`/`btoa",{"_index":332,"title":{},"body":{"classes/Base64.html":{}}}],["attribute",{"_index":1322,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["attributes",{"_index":992,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["attributes/properties",{"_index":1446,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["audit",{"_index":1343,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["authenticate",{"_index":2461,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":2473,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":987,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["authors",{"_index":2531,"title":{},"body":{"license.html":{}}}],["auto",{"_index":22,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["automatically",{"_index":641,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["available",{"_index":2429,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":1083,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["b",{"_index":407,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["back",{"_index":1370,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["backdropref",{"_index":1838,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["backdropref(value",{"_index":617,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["backend",{"_index":982,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["backends",{"_index":2478,"title":{},"body":{"index.html":{}}}],["background",{"_index":1612,"title":{},"body":{"components/LoginCmp.html":{}}}],["background:#ddd",{"_index":71,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#f8f8f8",{"_index":37,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#fff",{"_index":40,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["band",{"_index":450,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["band'},{'name",{"_index":288,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["bar",{"_index":481,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["base",{"_index":2426,"title":{},"body":{"index.html":{}}}],["base64",{"_index":314,"title":{"classes/Base64.html":{}},"body":{"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["base64.encode(utf8.utf8encode((columns",{"_index":811,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify",{"_index":1122,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(recordlist",{"_index":845,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(values",{"_index":1466,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(pwd",{"_index":1101,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(record.recordtojson('update",{"_index":842,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(this.getcolumnlistjson",{"_index":1393,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('add",{"_index":1427,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('update",{"_index":1440,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(url",{"_index":1087,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(user",{"_index":1100,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.error",{"_index":379,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat((buffer",{"_index":419,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat(buffer",{"_index":415,"title":{},"body":{"classes/Base64.html":{}}}],["base64imageref",{"_index":421,"title":{"pipes/Base64ImageRef.html":{}},"body":{"pipes/Base64ImageRef.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":363,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"index.html":{}}}],["basic",{"_index":2449,"title":{},"body":{"index.html":{}}}],["basically",{"_index":2452,"title":{},"body":{"index.html":{}}}],["before",{"_index":970,"title":{},"body":{"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["beforeclose",{"_index":1250,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["beforedismiss",{"_index":1251,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["being",{"_index":47,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["belong",{"_index":1371,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["below",{"_index":1752,"title":{},"body":{"injectables/Modal.html":{}}}],["between",{"_index":929,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["binding",{"_index":1248,"title":{},"body":{"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{}}}],["bitcounter",{"_index":384,"title":{},"body":{"classes/Base64.html":{}}}],["bitstorage",{"_index":385,"title":{},"body":{"classes/Base64.html":{}}}],["blank",{"_index":703,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["blob",{"_index":109,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["block",{"_index":31,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["blocking",{"_index":1716,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["body",{"_index":800,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["body.action",{"_index":1425,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.callbackmethod",{"_index":1424,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.cascadedelete",{"_index":1445,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.columns",{"_index":810,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.filteroptions",{"_index":814,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.hash",{"_index":1074,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.numrecs",{"_index":807,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.orderby",{"_index":815,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.querystring",{"_index":808,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.recorddata",{"_index":1426,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordid",{"_index":1390,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordnum",{"_index":1391,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.registryvalue",{"_index":1151,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.sessionkey",{"_index":1072,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.startrec",{"_index":806,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.tablename",{"_index":804,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["body.variableslist",{"_index":1392,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["boolean",{"_index":583,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["booleanvalue",{"_index":1210,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["bootstrap",{"_index":890,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["bootstrapref",{"_index":1839,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["bootstrapref(value",{"_index":619,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["border",{"_index":97,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["border:0",{"_index":96,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["bottom",{"_index":531,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:10px",{"_index":475,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:1px",{"_index":98,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["box",{"_index":72,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["break",{"_index":1337,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["browse",{"_index":2545,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":433,"title":{},"body":{"pipes/Base64ImageRef.html":{},"components/RecordList.html":{},"modules.html":{}}}],["btn",{"_index":534,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["btoa",{"_index":389,"title":{},"body":{"classes/Base64.html":{}}}],["buffer",{"_index":386,"title":{},"body":{"classes/Base64.html":{}}}],["build",{"_index":835,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["builds",{"_index":2444,"title":{},"body":{"index.html":{}}}],["built",{"_index":2464,"title":{},"body":{"index.html":{}}}],["bulkdelete",{"_index":682,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["bulkdelete(query",{"_index":687,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["bulkupdate",{"_index":683,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["button",{"_index":480,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttonlabel",{"_index":1570,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["buttons",{"_index":491,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttontext",{"_index":1550,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["byte",{"_index":2215,"title":{},"body":{"classes/Utf8.html":{}}}],["byte1",{"_index":2241,"title":{},"body":{"classes/Utf8.html":{}}}],["byte2",{"_index":2242,"title":{},"body":{"classes/Utf8.html":{}}}],["byte3",{"_index":2243,"title":{},"body":{"classes/Utf8.html":{}}}],["byte4",{"_index":2244,"title":{},"body":{"classes/Utf8.html":{}}}],["bytearray",{"_index":2169,"title":{},"body":{"classes/Utf8.html":{}}}],["bytecount",{"_index":2170,"title":{},"body":{"classes/Utf8.html":{}}}],["byteindex",{"_index":2171,"title":{},"body":{"classes/Utf8.html":{}}}],["bytes",{"_index":2245,"title":{},"body":{"classes/Utf8.html":{}}}],["bytestring",{"_index":2200,"title":{},"body":{"classes/Utf8.html":{}}}],["c",{"_index":408,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["c9c9c9",{"_index":100,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cache",{"_index":1156,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cached",{"_index":1029,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculated",{"_index":1269,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["calculatehash",{"_index":975,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatehash(body",{"_index":1075,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculates",{"_index":972,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["calculation",{"_index":1659,"title":{},"body":{"classes/MD5.html":{}}}],["call",{"_index":565,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["call4drestmethod",{"_index":2430,"title":{},"body":{"index.html":{}}}],["call4drestmethod(fourdmethod",{"_index":1058,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["callback",{"_index":1298,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["called",{"_index":919,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["caller",{"_index":1053,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calling",{"_index":2432,"title":{},"body":{"index.html":{}}}],["calls",{"_index":2427,"title":{},"body":{"index.html":{}}}],["can't",{"_index":106,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["can\\'t",{"_index":270,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cancel",{"_index":652,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["cancelled",{"_index":640,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["carneiro",{"_index":2486,"title":{},"body":{"index.html":{},"license.html":{}}}],["cascade",{"_index":503,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["cascadedeleterecord",{"_index":505,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["case",{"_index":393,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["catch",{"_index":2291,"title":{},"body":{"components/WebAppContainer.html":{}}}],["catch((e",{"_index":1657,"title":{},"body":{"components/LoginCmp.html":{}}}],["catch((error",{"_index":1416,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["catch((reason",{"_index":884,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["catch(e",{"_index":2289,"title":{},"body":{"components/WebAppContainer.html":{}}}],["ccc",{"_index":76,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["cdata",{"_index":1378,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["changed",{"_index":1770,"title":{},"body":{"injectables/Modal.html":{}}}],["changes",{"_index":1157,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["changeselection",{"_index":1553,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changeselection(ev",{"_index":1563,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changing",{"_index":1324,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["character",{"_index":351,"title":{},"body":{"classes/Base64.html":{}}}],["characters",{"_index":375,"title":{},"body":{"classes/Base64.html":{}}}],["charge",{"_index":2495,"title":{},"body":{"license.html":{}}}],["check",{"_index":1482,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkbox",{"_index":1233,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["checked",{"_index":1771,"title":{},"body":{"injectables/Modal.html":{}}}],["checks",{"_index":1473,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkscalarvalue",{"_index":2172,"title":{},"body":{"classes/Utf8.html":{}}}],["checkscalarvalue(codepoint",{"_index":2184,"title":{},"body":{"classes/Utf8.html":{}}}],["choice",{"_index":1112,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["chromium",{"_index":334,"title":{},"body":{"classes/Base64.html":{}}}],["claim",{"_index":2534,"title":{},"body":{"license.html":{}}}],["class",{"_index":212,"title":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["class/parameter",{"_index":1142,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["classes",{"_index":315,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"overview.html":{}}}],["classname",{"_index":1215,"title":{},"body":{"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["clause",{"_index":732,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clean",{"_index":1096,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clear",{"_index":566,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["clear:both",{"_index":94,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["clearform",{"_index":561,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["clearquery",{"_index":1964,"title":{},"body":{"components/RecordList.html":{}}}],["clearrecord",{"_index":1334,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clearrecorddirtyflag",{"_index":1480,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clears",{"_index":1333,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clicking",{"_index":1803,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["clicks",{"_index":649,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["cliking",{"_index":1984,"title":{},"body":{"components/RecordList.html":{}}}],["closable",{"_index":1802,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["close",{"_index":622,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["close(result",{"_index":631,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["closed",{"_index":1254,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/ModalConfig.html":{}}}],["closedialog",{"_index":1700,"title":{},"body":{"injectables/Modal.html":{}}}],["closedialog(event",{"_index":1708,"title":{},"body":{"injectables/Modal.html":{}}}],["closing",{"_index":1255,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["cluster_fourdmodule",{"_index":893,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_fourdmodule_providers",{"_index":894,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_js44dmodule",{"_index":1523,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_declarations",{"_index":1524,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_exports",{"_index":1526,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_imports",{"_index":1525,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_js44dmodule_providers",{"_index":1527,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_modalmodule",{"_index":1857,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1858,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1859,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_providers",{"_index":1860,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cmn",{"_index":1662,"title":{},"body":{"classes/MD5.html":{}}}],["cmn(q",{"_index":1676,"title":{},"body":{"classes/MD5.html":{}}}],["code",{"_index":960,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["codepoint",{"_index":2186,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints",{"_index":2229,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints.length",{"_index":2231,"title":{},"body":{"classes/Utf8.html":{}}}],["col",{"_index":773,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.field",{"_index":788,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.formula",{"_index":790,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.indexof",{"_index":775,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.joinfk",{"_index":1496,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.joinpk",{"_index":1497,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.longname",{"_index":792,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.name",{"_index":791,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.substr(col.indexof",{"_index":778,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.subtable",{"_index":1486,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.fields",{"_index":1489,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.tablename",{"_index":1495,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["collection",{"_index":665,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["collist",{"_index":768,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["collist.push",{"_index":777,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["color",{"_index":469,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["color:#282828",{"_index":38,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cols",{"_index":1502,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col",{"_index":1504,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col.name",{"_index":1505,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["column",{"_index":723,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["columns",{"_index":674,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["combine",{"_index":460,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["combined",{"_index":927,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["combinesearches",{"_index":2133,"title":{},"body":{"components/RecordList.html":{}}}],["comes",{"_index":1272,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["commonmodule",{"_index":1532,"title":{},"body":{"modules/JS44DModule.html":{}}}],["companion",{"_index":2371,"title":{},"body":{"index.html":{}}}],["comparator",{"_index":157,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["comparatorlist",{"_index":131,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["compatible",{"_index":354,"title":{},"body":{"classes/Base64.html":{}}}],["complete",{"_index":1407,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["completion",{"_index":1057,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["component",{"_index":0,"title":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["component.dialogconfig",{"_index":1782,"title":{},"body":{"injectables/Modal.html":{}}}],["component_template",{"_index":269,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["componentfactoryresolver",{"_index":1704,"title":{},"body":{"injectables/Modal.html":{}}}],["componentref",{"_index":594,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{},"overview.html":{}}}],["components/widgets",{"_index":2410,"title":{},"body":{"index.html":{}}}],["componenttype",{"_index":1718,"title":{},"body":{"injectables/Modal.html":{}}}],["componenttype['name",{"_index":1776,"title":{},"body":{"injectables/Modal.html":{}}}],["conditions",{"_index":2514,"title":{},"body":{"license.html":{}}}],["config",{"_index":1551,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["config.isblocking",{"_index":1827,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard",{"_index":1828,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard).length",{"_index":1830,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.selfcentered",{"_index":1761,"title":{},"body":{"injectables/Modal.html":{}}}],["config.size",{"_index":1825,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["configuration",{"_index":1721,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["configured",{"_index":648,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["confirm((this.queryband.cascadedeleterecord",{"_index":2085,"title":{},"body":{"components/RecordList.html":{}}}],["connection",{"_index":2542,"title":{},"body":{"license.html":{}}}],["connector",{"_index":158,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["console.log('authenticated",{"_index":1652,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log('error",{"_index":829,"title":{},"body":{"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["console.log('hash",{"_index":979,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["console.log('oops",{"_index":1656,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(e",{"_index":1658,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(event",{"_index":1780,"title":{},"body":{"injectables/Modal.html":{}}}],["console.log(this.dialoginstance",{"_index":2056,"title":{},"body":{"components/RecordList.html":{}}}],["const",{"_index":232,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(@inject(httpclient",{"_index":1036,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["constructor(componentfactoryresolver",{"_index":1703,"title":{},"body":{"injectables/Modal.html":{}}}],["constructor(dialog",{"_index":1557,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(elementref",{"_index":1892,"title":{},"body":{"components/QueryBand.html":{}}}],["constructor(fourd",{"_index":138,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["constructor(modal",{"_index":1977,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["constructor(private",{"_index":442,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["constructor(public",{"_index":1601,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["constructor(tabs",{"_index":2147,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["constructor(title",{"_index":1867,"title":{},"body":{"classes/OKOnlyContent.html":{},"classes/YesNoModalContent.html":{}}}],["contain",{"_index":400,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["container",{"_index":2470,"title":{},"body":{"index.html":{}}}],["containers/advancedquery",{"_index":1536,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/queryband",{"_index":1535,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordeditwindow",{"_index":1538,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordlist",{"_index":1537,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/tabs",{"_index":1539,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/webappcontainer",{"_index":1540,"title":{},"body":{"modules/JS44DModule.html":{}}}],["contains",{"_index":402,"title":{},"body":{"classes/Base64.html":{}}}],["content",{"_index":305,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["content'},{'name",{"_index":286,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["contentchild",{"_index":447,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["contentchild('customqueryband",{"_index":451,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentchild(datagrid",{"_index":2019,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(queryband",{"_index":2017,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(querybanddirective",{"_index":526,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentheaders",{"_index":1060,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentheaders['accept",{"_index":1065,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentref",{"_index":606,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["contents",{"_index":1271,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["context",{"_index":1881,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.body",{"_index":1879,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.notext",{"_index":2295,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.oktext",{"_index":1880,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["context.title",{"_index":1878,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.yestext",{"_index":2294,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["continuation",{"_index":2240,"title":{},"body":{"classes/Utf8.html":{}}}],["continuationbyte",{"_index":2234,"title":{},"body":{"classes/Utf8.html":{}}}],["contract",{"_index":2538,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2484,"title":{},"body":{"index.html":{}}}],["control",{"_index":1726,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["controls/fourddropdown",{"_index":1541,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/fourdregistryinput",{"_index":1548,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/quickfindinput",{"_index":1542,"title":{},"body":{"modules/JS44DModule.html":{}}}],["convert",{"_index":434,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["converted",{"_index":1049,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["convertobjecttourl",{"_index":961,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertobjecttourl(body",{"_index":1078,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["converts",{"_index":1158,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["copies",{"_index":2509,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1420,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{},"license.html":{}}}],["copyright",{"_index":2489,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":382,"title":{},"body":{"classes/Base64.html":{}}}],["corresponding",{"_index":2038,"title":{},"body":{"components/RecordList.html":{}}}],["corresponds",{"_index":918,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cors",{"_index":1084,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["counter",{"_index":2205,"title":{},"body":{"classes/Utf8.html":{}}}],["coverage",{"_index":2313,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crap",{"_index":1067,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["create",{"_index":2443,"title":{},"body":{"index.html":{}}}],["createbyte",{"_index":2173,"title":{},"body":{"classes/Utf8.html":{}}}],["createbyte(codepoint",{"_index":2187,"title":{},"body":{"classes/Utf8.html":{}}}],["credentials",{"_index":2474,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1403,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["crud",{"_index":1288,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["css3",{"_index":77,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currectly",{"_index":2438,"title":{},"body":{"index.html":{}}}],["current",{"_index":463,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["currently",{"_index":1474,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["currentrecord",{"_index":675,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordEditWindow.html":{}}}],["currentrecordnumber",{"_index":1382,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["currenttable",{"_index":115,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currentuser",{"_index":994,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["currentuserid",{"_index":995,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["currentuserpassword",{"_index":997,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["custom",{"_index":449,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["custombuttonbar",{"_index":445,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["custombuttonbar'},{'name",{"_index":308,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["custombuttonbardirective",{"_index":307,"title":{"directives/CustomButtonBarDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["custome",{"_index":564,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["customstyle",{"_index":1786,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["d",{"_index":409,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["damages",{"_index":2535,"title":{},"body":{"license.html":{}}}],["data",{"_index":740,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data('kendowindow",{"_index":1760,"title":{},"body":{"injectables/Modal.html":{}}}],["data[field.name",{"_index":1456,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["database",{"_index":673,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["datagrid",{"_index":272,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["datagrid'},{'name",{"_index":273,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["datagrid/datagrid",{"_index":1543,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["datamodel",{"_index":782,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["date",{"_index":851,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["date')?element.value.replace",{"_index":241,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["date(0,0,0,hh,mm,ss",{"_index":1319,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["date(datevalue",{"_index":1170,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["date(value.replace",{"_index":854,"title":{},"body":{"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["date.tolocaledatestring",{"_index":855,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["dateto4dformat(thedate",{"_index":1162,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datetodomformat(thedate",{"_index":1167,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datevalue",{"_index":1168,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["datevalue.getfullyear().tostring",{"_index":1375,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["datevalue.getmonth",{"_index":1376,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dbl",{"_index":1983,"title":{},"body":{"components/RecordList.html":{}}}],["deal",{"_index":1997,"title":{},"body":{"components/RecordList.html":{},"license.html":{}}}],["dealings",{"_index":2543,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1940,"title":{},"body":{"components/QuickFindInput.html":{}}}],["declaration",{"_index":2408,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":889,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}],["declare",{"_index":971,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["declared",{"_index":2403,"title":{},"body":{"index.html":{}}}],["decode",{"_index":321,"title":{},"body":{"classes/Base64.html":{}}}],["decode(input",{"_index":345,"title":{},"body":{"classes/Base64.html":{}}}],["decoded",{"_index":381,"title":{},"body":{"classes/Base64.html":{}}}],["decodesymbol",{"_index":2174,"title":{},"body":{"classes/Utf8.html":{}}}],["decoding",{"_index":361,"title":{},"body":{"classes/Base64.html":{}}}],["decorators",{"_index":1932,"title":{},"body":{"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["default",{"_index":148,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["default=false",{"_index":1442,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["defaultconfig",{"_index":1706,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["defaultconfig.keyboard",{"_index":1831,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaultconfig.size",{"_index":1826,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaults",{"_index":1001,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["defaultvalue",{"_index":1149,"title":{},"body":{"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/MD5.html":{}}}],["deferred",{"_index":585,"title":{"classes/Deferred.html":{}},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["defined",{"_index":141,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["defines",{"_index":694,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["definition",{"_index":1295,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["del",{"_index":543,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["delete",{"_index":466,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["deleted",{"_index":700,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["deleterecord",{"_index":1965,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["deleterecord(cascade",{"_index":1443,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["deletes",{"_index":2451,"title":{},"body":{"index.html":{}}}],["depend",{"_index":2479,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":888,"title":{"dependencies.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":2453,"title":{},"body":{"index.html":{}}}],["descending",{"_index":796,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["described",{"_index":356,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["describes",{"_index":907,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["describing",{"_index":1296,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["description",{"_index":663,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["designed",{"_index":352,"title":{},"body":{"classes/Base64.html":{}}}],["detailed",{"_index":2380,"title":{},"body":{"index.html":{}}}],["determine",{"_index":923,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["development",{"_index":1005,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["di",{"_index":1744,"title":{},"body":{"injectables/Modal.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["dialog.close",{"_index":637,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialog.resizing._draggable.userevents.bind('release",{"_index":2058,"title":{},"body":{"components/RecordList.html":{}}}],["dialog.title(title",{"_index":629,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialogcomponentref",{"_index":1765,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogcomponentref.changedetectorref.detectchanges",{"_index":1772,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogconfig",{"_index":119,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{}}}],["dialogid",{"_index":1713,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance",{"_index":1759,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["dialoginstance.contentref",{"_index":1764,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.kendodialog",{"_index":1766,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.result",{"_index":1778,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogs/listselectordialog",{"_index":1545,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["digest",{"_index":1092,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["directive",{"_index":267,"title":{"directives/CustomButtonBarDirective.html":{},"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{}}}],["directives",{"_index":306,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["directly",{"_index":1389,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["directory",{"_index":2417,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1352,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{}}}],["disabled",{"_index":1344,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dismiss",{"_index":624,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dismissal",{"_index":1258,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["dismissed",{"_index":1257,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["display",{"_index":2004,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["display:inline",{"_index":26,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["display:none",{"_index":472,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["displayed",{"_index":2467,"title":{},"body":{"index.html":{}}}],["displays",{"_index":2463,"title":{},"body":{"index.html":{}}}],["dispose",{"_index":656,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["distinctuntilchanged",{"_index":1941,"title":{},"body":{"components/QuickFindInput.html":{}}}],["distribute",{"_index":2506,"title":{},"body":{"license.html":{}}}],["divided",{"_index":2394,"title":{},"body":{"index.html":{}}}],["doaddrecord",{"_index":576,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doclear",{"_index":559,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["documentation",{"_index":909,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation](https://github.com/fourctv/fourdrestapi/wiki/the",{"_index":1207,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dodeleterecord",{"_index":580,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doeditrecord",{"_index":578,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doesn't",{"_index":1748,"title":{},"body":{"injectables/Modal.html":{}}}],["doexportgrid",{"_index":574,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["domanagesets",{"_index":1889,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{}}}],["domanagesets(action",{"_index":552,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["domsanitizer",{"_index":431,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["doqbe",{"_index":545,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doqff",{"_index":547,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doquery",{"_index":123,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["dorefresh",{"_index":554,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dosort",{"_index":557,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dot",{"_index":1277,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dowehaveaquery",{"_index":582,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["down",{"_index":42,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["drop",{"_index":41,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["dropdown",{"_index":860,"title":{},"body":{"components/FourDDropDown.html":{},"components/RecordList.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":275,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["dropdownisopen",{"_index":525,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["during",{"_index":1004,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dynamic",{"_index":984,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["each",{"_index":715,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["edit",{"_index":293,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["editing",{"_index":2069,"title":{},"body":{"components/RecordList.html":{}}}],["editwindow",{"_index":1973,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler",{"_index":1966,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler(result",{"_index":1995,"title":{},"body":{"components/RecordList.html":{}}}],["effect",{"_index":80,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element",{"_index":266,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["element.comparator",{"_index":236,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.connector",{"_index":244,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field",{"_index":238,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field.name",{"_index":235,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.split",{"_index":2275,"title":{},"body":{"components/WebAppContainer.html":{}}}],["elementref",{"_index":200,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["embedded",{"_index":436,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["emitted",{"_index":507,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["empty",{"_index":1282,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["enable",{"_index":484,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enableaddrecord",{"_index":500,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebutton",{"_index":1890,"title":{},"body":{"components/QueryBand.html":{}}}],["enablebutton(btn",{"_index":532,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebuttonbar",{"_index":499,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablecombisearch",{"_index":493,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enabled",{"_index":504,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enabledeleterecord",{"_index":502,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableeditrecord",{"_index":501,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableexportgrid",{"_index":498,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqbe",{"_index":486,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqff",{"_index":488,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesets",{"_index":492,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesort",{"_index":496,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["encapsulation",{"_index":2253,"title":{},"body":{"components/WebAppContainer.html":{}}}],["encode",{"_index":322,"title":{},"body":{"classes/Base64.html":{}}}],["encode(input",{"_index":347,"title":{},"body":{"classes/Base64.html":{}}}],["encodecodepoint",{"_index":2175,"title":{},"body":{"classes/Utf8.html":{}}}],["encodecodepoint(codepoint",{"_index":2191,"title":{},"body":{"classes/Utf8.html":{}}}],["encoded",{"_index":383,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(obj[p",{"_index":967,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2238,"title":{},"body":{"classes/Utf8.html":{}}}],["ensures",{"_index":2471,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2117,"title":{},"body":{"components/RecordList.html":{}}}],["entire",{"_index":2014,"title":{},"body":{"components/RecordList.html":{}}}],["entries",{"_index":1028,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["entry",{"_index":1047,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["entrycomponents",{"_index":1529,"title":{},"body":{"modules/JS44DModule.html":{},"modules/ModalModule.html":{}}}],["equivalent",{"_index":1470,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["error",{"_index":317,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/WebAppContainer.html":{}}}],["error('invalid",{"_index":2233,"title":{},"body":{"classes/Utf8.html":{}}}],["error/warning",{"_index":1774,"title":{},"body":{"injectables/Modal.html":{}}}],["essential",{"_index":2397,"title":{},"body":{"index.html":{}}}],["establish",{"_index":939,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["establishes",{"_index":932,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["etc",{"_index":2440,"title":{},"body":{"index.html":{}}}],["ev",{"_index":1565,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["ev.target.selectedindex",{"_index":1606,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["event",{"_index":175,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"license.html":{}}}],["event.preventdefault",{"_index":1646,"title":{},"body":{"components/LoginCmp.html":{},"components/Tab.html":{},"components/Tabs.html":{}}}],["event.stoppropagation",{"_index":1607,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["event.target.selectedindex",{"_index":225,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["event.target.textcontent",{"_index":258,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["eventemitter",{"_index":446,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/WebAppContainer.html":{}}}],["events",{"_index":506,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["example",{"_index":1478,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["excel",{"_index":497,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["excellent",{"_index":365,"title":{},"body":{"classes/Base64.html":{}}}],["execute",{"_index":1459,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["executed",{"_index":1299,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["exist",{"_index":2070,"title":{},"body":{"components/RecordList.html":{}}}],["existing",{"_index":1733,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["exists",{"_index":563,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["exit",{"_index":645,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["export",{"_index":211,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["exports",{"_index":892,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":2522,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1769,"title":{},"body":{"injectables/Modal.html":{}}}],["expresstion",{"_index":1270,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["extend",{"_index":2445,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":2448,"title":{},"body":{"index.html":{}}}],["extra",{"_index":2207,"title":{},"body":{"classes/Utf8.html":{}}}],["extractmodeldata",{"_index":1454,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["false",{"_index":186,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["fetching",{"_index":670,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["ff",{"_index":1663,"title":{},"body":{"classes/MD5.html":{}}}],["ff(a",{"_index":1179,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["field",{"_index":155,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["field's",{"_index":1506,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.formula",{"_index":1516,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.isrelated",{"_index":1511,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.longname",{"_index":104,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.name",{"_index":230,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.readonly",{"_index":1521,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.related",{"_index":213,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["field.subtable",{"_index":1519,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.type",{"_index":1335,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/attribute",{"_index":1292,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/column",{"_index":713,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["field/property",{"_index":1512,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fieldlist",{"_index":132,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["fieldname",{"_index":1329,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fields",{"_index":108,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fields/columns",{"_index":716,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2499,"title":{},"body":{"license.html":{}}}],["filter",{"_index":689,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["filtered",{"_index":1127,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["filteroptions",{"_index":676,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["first",{"_index":1402,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["fit",{"_index":2013,"title":{},"body":{"components/RecordList.html":{}}}],["fitness",{"_index":2527,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1309,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fld",{"_index":772,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.formula",{"_index":784,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.longname",{"_index":787,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.name",{"_index":785,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["float:left",{"_index":24,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["floating",{"_index":2400,"title":{},"body":{"index.html":{}}}],["folder",{"_index":2416,"title":{},"body":{"index.html":{}}}],["following",{"_index":948,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":862,"title":{},"body":{"components/FourDDropDown.html":{}}}],["foreign",{"_index":938,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["form",{"_index":567,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":733,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["formatted",{"_index":1161,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["formcontrol",{"_index":1937,"title":{},"body":{"components/QuickFindInput.html":{}}}],["formdata",{"_index":976,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata.hasownproperty(key",{"_index":977,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata[key",{"_index":978,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["forms",{"_index":2483,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":1530,"title":{},"body":{"modules/JS44DModule.html":{}}}],["formula",{"_index":786,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["formulas",{"_index":1463,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["found",{"_index":754,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fourd",{"_index":147,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["fourd.module",{"_index":1534,"title":{},"body":{"modules/JS44DModule.html":{}}}],["fourdapiversion",{"_index":1015,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdcollection",{"_index":660,"title":{"injectables/FourDCollection.html":{}},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourddatetolocalestring",{"_index":853,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["fourddatetostring",{"_index":848,"title":{"pipes/FourDDateToString.html":{}},"body":{"pipes/FourDDateToString.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["fourddeletecallbackmethod_",{"_index":1301,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourddropdown",{"_index":274,"title":{"components/FourDDropDown.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdinterface",{"_index":139,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdinterface._fourdurl",{"_index":1007,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._listcache[listname",{"_index":1114,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache",{"_index":1144,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache.push(body",{"_index":1152,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.authentication",{"_index":874,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["fourdinterface.currentuser",{"_index":802,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserid",{"_index":1099,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserpassword",{"_index":1095,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.fourdapiversion",{"_index":1012,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance",{"_index":765,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance.call4drestmethod('rest_getapiversion",{"_index":1009,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.sessionkey",{"_index":1073,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.emit(fourdinterface.currentuser",{"_index":1107,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.subscribe",{"_index":1231,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["fourdinterface.userhassignedin.subscribe(user",{"_index":877,"title":{},"body":{"components/FourDDropDown.html":{}}}],["fourdmethod",{"_index":1045,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdmodel",{"_index":736,"title":{},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"components/RecordEditWindow.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdmodels",{"_index":666,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fourdmodule",{"_index":886,"title":{"modules/FourDModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fourdquery",{"_index":688,"title":{"classes/FourDQuery.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["fourdregistryinput",{"_index":276,"title":{"components/FourDRegistryInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdrest",{"_index":1013,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdrestapi",{"_index":1044,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdsavecallbackmethod_",{"_index":1300,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourdurl",{"_index":1008,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdurl():string",{"_index":1006,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdversion",{"_index":1622,"title":{},"body":{"components/LoginCmp.html":{}}}],["free",{"_index":2494,"title":{},"body":{"license.html":{}}}],["fresh",{"_index":1419,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fully",{"_index":353,"title":{},"body":{"classes/Base64.html":{}}}],["funcionality",{"_index":2399,"title":{},"body":{"index.html":{}}}],["function",{"_index":323,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":668,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["functions",{"_index":958,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["furnished",{"_index":2512,"title":{},"body":{"license.html":{}}}],["further",{"_index":696,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["g",{"_index":341,"title":{},"body":{"classes/Base64.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["g,''):element.value",{"_index":242,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["generic",{"_index":1038,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["get(field",{"_index":1307,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["get4dlist(listname",{"_index":1113,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getcolumnlist(includesubtables",{"_index":1501,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson",{"_index":684,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson(columns",{"_index":706,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getfielddescription(fieldname",{"_index":1509,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfieldproperties(fieldname",{"_index":1330,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfiltered4dlist(listname",{"_index":1135,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getlength",{"_index":756,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getlongname(fieldname",{"_index":1507,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecord",{"_index":2450,"title":{},"body":{"index.html":{}}}],["getrecord(recordnumber",{"_index":1386,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecords",{"_index":685,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["getrecords(query",{"_index":717,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getregistryvalue(theclass",{"_index":1143,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getresult",{"_index":1854,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["gets",{"_index":1111,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["getselectedrecords",{"_index":2021,"title":{},"body":{"components/RecordList.html":{}}}],["getter/setter",{"_index":2447,"title":{},"body":{"index.html":{}}}],["getting",{"_index":2367,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvaluesfrom4d(values",{"_index":1464,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["gg",{"_index":1664,"title":{},"body":{"classes/MD5.html":{}}}],["gg(a",{"_index":1181,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["given",{"_index":1328,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["global",{"_index":985,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["glyphicon",{"_index":521,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["going",{"_index":2388,"title":{},"body":{"index.html":{}}}],["grab",{"_index":1418,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["granted",{"_index":2493,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1989,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["grid's",{"_index":2042,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows",{"_index":2028,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows.length",{"_index":2115,"title":{},"body":{"components/RecordList.html":{}}}],["groove",{"_index":478,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["gt;table.field",{"_index":794,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["h5",{"_index":27,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["h5:hover",{"_index":36,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["hack",{"_index":1751,"title":{},"body":{"injectables/Modal.html":{}}}],["handle",{"_index":857,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["handled",{"_index":411,"title":{},"body":{"classes/Base64.html":{}}}],["hash",{"_index":973,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1071,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["height",{"_index":191,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["height(v",{"_index":1587,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["height:40px",{"_index":474,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hello",{"_index":1869,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["here",{"_index":396,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"index.html":{}}}],["hereby",{"_index":2492,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1665,"title":{},"body":{"classes/MD5.html":{}}}],["hex(x",{"_index":1204,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hex_chr",{"_index":1660,"title":{},"body":{"classes/MD5.html":{}}}],["hh",{"_index":1313,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["hh(a",{"_index":1182,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hh:mm:ss",{"_index":1172,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hidden",{"_index":62,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hideno",{"_index":2303,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["hierarchical",{"_index":1132,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hierarchy",{"_index":1134,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["highlighted",{"_index":454,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hits",{"_index":2033,"title":{},"body":{"components/RecordList.html":{}}}],["hitting",{"_index":1986,"title":{},"body":{"components/RecordList.html":{}}}],["holders",{"_index":2532,"title":{},"body":{"license.html":{}}}],["holds",{"_index":742,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["horizontal",{"_index":2481,"title":{},"body":{"index.html":{}}}],["hostlistener",{"_index":2023,"title":{},"body":{"components/RecordList.html":{}}}],["hostlistener('window:resize",{"_index":2064,"title":{},"body":{"components/RecordList.html":{}}}],["hostlisteners",{"_index":1974,"title":{},"body":{"components/RecordList.html":{}}}],["hostviewref",{"_index":1697,"title":{},"body":{"injectables/Modal.html":{}}}],["hover",{"_index":51,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["html",{"_index":265,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["http",{"_index":1016,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["http://localhost:8080",{"_index":1000,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["http://whatwg.org/c#alphanumeric",{"_index":373,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/common",{"_index":349,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/webappapis.html#dom",{"_index":358,"title":{},"body":{"classes/Base64.html":{}}}],["httpclient",{"_index":900,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["httpclient:httpclient",{"_index":1037,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpclientmodule",{"_index":901,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{}}}],["httpheaders",{"_index":953,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpheaders(contentheaders",{"_index":1070,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["https://gist.github.com/atk/1020396",{"_index":366,"title":{},"body":{"classes/Base64.html":{}}}],["https://mths.be/punycode",{"_index":2204,"title":{},"body":{"classes/Utf8.html":{}}}],["i.e",{"_index":630,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["icon",{"_index":468,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["icustommodal",{"_index":206,"title":{"classes/ICustomModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModal.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["icustommodalcomponent",{"_index":11,"title":{"classes/ICustomModalComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["id",{"_index":153,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{}}}],["idattribute",{"_index":1294,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["identification",{"_index":1724,"title":{},"body":{"injectables/Modal.html":{}}}],["identifier",{"_index":2314,"title":{},"body":{"coverage.html":{}}}],["ifielddescription",{"_index":1260,"title":{"interfaces/IFieldDescription.html":{}},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["ignore",{"_index":1372,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["ii",{"_index":1666,"title":{},"body":{"classes/MD5.html":{}}}],["ii(a",{"_index":1184,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["image",{"_index":435,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["imagetype",{"_index":426,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["immediately",{"_index":2137,"title":{},"body":{"components/RecordList.html":{}}}],["implementation",{"_index":333,"title":{},"body":{"classes/Base64.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["implicitly",{"_index":1814,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["implied",{"_index":2523,"title":{},"body":{"license.html":{}}}],["import",{"_index":199,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["important",{"_index":46,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{}}}],["importing",{"_index":2409,"title":{},"body":{"index.html":{}}}],["imports",{"_index":905,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{}}}],["in'},{'name",{"_index":283,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["include",{"_index":2247,"title":{},"body":{"classes/Utf8.html":{}}}],["included",{"_index":2407,"title":{},"body":{"index.html":{},"license.html":{}}}],["includes",{"_index":1499,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["includesubtables",{"_index":1498,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["including",{"_index":2501,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2271,"title":{},"body":{"components/WebAppContainer.html":{}}}],["incorrect",{"_index":1621,"title":{},"body":{"components/LoginCmp.html":{}}}],["indeed",{"_index":1323,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["index",{"_index":68,"title":{"index.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1263,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["indicates",{"_index":1019,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["individual",{"_index":1285,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["inelement",{"_index":611,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["informed",{"_index":724,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["inherit",{"_index":861,"title":{},"body":{"components/FourDDropDown.html":{}}}],["initialization",{"_index":1479,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["initialize",{"_index":762,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["initialized",{"_index":2000,"title":{},"body":{"components/RecordList.html":{}}}],["initiator",{"_index":1002,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["inject",{"_index":763,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["injectable",{"_index":595,"title":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["injectables",{"_index":661,"title":{},"body":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"overview.html":{}}}],["injected",{"_index":746,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["input",{"_index":202,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{}}}],["input'},{'name",{"_index":278,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["input.charcodeat(position",{"_index":417,"title":{},"body":{"classes/Base64.html":{}}}],["input.length",{"_index":370,"title":{},"body":{"classes/Base64.html":{}}}],["input.replace",{"_index":372,"title":{},"body":{"classes/Base64.html":{}}}],["inputs",{"_index":130,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{}}}],["inputtype",{"_index":1216,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["insert",{"_index":1341,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["inserted",{"_index":1422,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["insertrecord",{"_index":1423,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["inside",{"_index":609,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["install",{"_index":2391,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2390,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2378,"title":{},"body":{"index.html":{}}}],["instance",{"_index":921,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["instances",{"_index":926,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["instead",{"_index":726,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["instruct",{"_index":2387,"title":{},"body":{"index.html":{}}}],["instruction",{"_index":1784,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["interact",{"_index":2456,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":2012,"title":{},"body":{"components/RecordList.html":{}}}],["interface",{"_index":983,"title":{"interfaces/IFieldDescription.html":{}},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaceinstance:fourdinterface",{"_index":986,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["interfaces",{"_index":1261,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["internal",{"_index":518,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["intersection",{"_index":910,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["invalid",{"_index":380,"title":{},"body":{"classes/Base64.html":{}}}],["invalidcharactererror",{"_index":318,"title":{},"body":{"classes/Base64.html":{}}}],["invoked",{"_index":642,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{}}}],["isblocking",{"_index":188,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["iscalculatedfield(field",{"_index":1515,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isdraggable",{"_index":1787,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isitemselected",{"_index":124,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["isitemselected(field",{"_index":167,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["isitemselected(item",{"_index":870,"title":{},"body":{"components/FourDDropDown.html":{}}}],["ismodal",{"_index":187,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["ismodifiedfield(field",{"_index":1513,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isnan(config.keyboard",{"_index":1832,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isnan(thedate",{"_index":1174,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isnan(thedate))?thedate.tojson().substr(0",{"_index":1163,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isreadonly(field",{"_index":1520,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrecordloaded",{"_index":1475,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelated",{"_index":1264,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelatedfield(field",{"_index":1510,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isresizable",{"_index":185,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["issubtable(field",{"_index":1518,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["issues",{"_index":1085,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["it's",{"_index":1405,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["item",{"_index":105,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["item.class",{"_index":1145,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.length",{"_index":2276,"title":{},"body":{"components/WebAppContainer.html":{}}}],["item.parameter",{"_index":1146,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.selector",{"_index":1147,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item[1",{"_index":2278,"title":{},"body":{"components/WebAppContainer.html":{}}}],["items",{"_index":945,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["itemslist",{"_index":1555,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["it’s",{"_index":2239,"title":{},"body":{"classes/Utf8.html":{}}}],["j",{"_index":1200,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["join",{"_index":911,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["joinfk",{"_index":912,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["joinpk",{"_index":913,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["jointable",{"_index":914,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["jpeg",{"_index":428,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["jquery",{"_index":2365,"title":{},"body":{"dependencies.html":{}}}],["js44d",{"_index":1208,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["js44d';they",{"_index":2406,"title":{},"body":{"index.html":{}}}],["js44d';you",{"_index":2413,"title":{},"body":{"index.html":{}}}],["js44d/jsfourdcollection",{"_index":904,"title":{},"body":{"modules/FourDModule.html":{}}}],["js44d/jsfourdinterface",{"_index":210,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["js44d/jsfourdmodel",{"_index":903,"title":{},"body":{"modules/FourDModule.html":{},"components/RecordEditWindow.html":{}}}],["js44dmodule",{"_index":1522,"title":{"modules/JS44DModule.html":{}},"body":{"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsfourdcollection",{"_index":1284,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["jsfourdinterface",{"_index":760,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["jsfourdmodel",{"_index":761,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json",{"_index":709,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.parse(atob(this.urlsearchparms['key",{"_index":2286,"title":{},"body":{"components/WebAppContainer.html":{}}}],["json.parse(localstorage.getitem(tablename",{"_index":2109,"title":{},"body":{"components/RecordList.html":{}}}],["json.parse(recorddata[field",{"_index":1453,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(collist",{"_index":793,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.stringify(error",{"_index":1110,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["json.stringify(query",{"_index":809,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json.stringify(recorddata",{"_index":1379,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(savedsearches",{"_index":2113,"title":{},"body":{"components/RecordList.html":{}}}],["json.stringify(savedsets",{"_index":2141,"title":{},"body":{"components/RecordList.html":{}}}],["julio",{"_index":2485,"title":{},"body":{"index.html":{},"license.html":{}}}],["k",{"_index":1690,"title":{},"body":{"classes/MD5.html":{}}}],["keep",{"_index":1304,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["keeps",{"_index":1302,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["kendo.prompt('please",{"_index":2116,"title":{},"body":{"components/RecordList.html":{}}}],["kendo.ui.progress($(this.elementref.nativeelement",{"_index":2074,"title":{},"body":{"components/RecordList.html":{}}}],["kendodialog",{"_index":607,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["kendoui",{"_index":2462,"title":{},"body":{"index.html":{}}}],["key",{"_index":647,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.password",{"_index":2288,"title":{},"body":{"components/WebAppContainer.html":{}}}],["keyboard",{"_index":646,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["kind",{"_index":2521,"title":{},"body":{"license.html":{}}}],["last",{"_index":256,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["latest",{"_index":755,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["latin1",{"_index":404,"title":{},"body":{"classes/Base64.html":{}}}],["left",{"_index":57,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["left:5px",{"_index":476,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["legend",{"_index":264,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["length",{"_index":369,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["less",{"_index":112,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lesslines",{"_index":125,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lest",{"_index":1404,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["let's",{"_index":780,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["level",{"_index":1131,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["lg",{"_index":1821,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["li",{"_index":25,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["li:hover",{"_index":39,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["liability",{"_index":2536,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2533,"title":{},"body":{"license.html":{}}}],["library",{"_index":2369,"title":{},"body":{"index.html":{}}}],["license",{"_index":2487,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2502,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2524,"title":{},"body":{"license.html":{}}}],["line",{"_index":252,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["linear",{"_index":84,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lines",{"_index":947,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["links",{"_index":933,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["list",{"_index":54,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["list'},{'name",{"_index":296,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["listed",{"_index":725,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["listing",{"_index":711,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["listitems",{"_index":1121,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listname",{"_index":864,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listoffields",{"_index":160,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["listoptions",{"_index":865,"title":{},"body":{"components/FourDDropDown.html":{}}}],["lists",{"_index":1027,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listselectordialog",{"_index":279,"title":{"components/ListSelectorDialog.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["listselectordialog.dialogconfig",{"_index":1603,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listvalues",{"_index":1117,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["loaded",{"_index":758,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["loading",{"_index":2075,"title":{},"body":{"components/RecordList.html":{}}}],["loadlistfrom4d",{"_index":863,"title":{},"body":{"components/FourDDropDown.html":{}}}],["loadvaluefrom4d",{"_index":1213,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["locale",{"_index":852,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["localstorage.setitem(tablename",{"_index":2112,"title":{},"body":{"components/RecordList.html":{}}}],["log",{"_index":282,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["logged",{"_index":993,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["login",{"_index":1610,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["login/login",{"_index":1544,"title":{},"body":{"modules/JS44DModule.html":{},"components/WebAppContainer.html":{}}}],["logincmp",{"_index":281,"title":{"components/LoginCmp.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["logincmp.dialogconfig",{"_index":2282,"title":{},"body":{"components/WebAppContainer.html":{}}}],["long",{"_index":1278,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["longname",{"_index":776,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["look",{"_index":2423,"title":{},"body":{"index.html":{}}}],["loop",{"_index":412,"title":{},"body":{"classes/Base64.html":{}}}],["ls",{"_index":1834,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["lt;table.field",{"_index":795,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["made",{"_index":2428,"title":{},"body":{"index.html":{}}}],["main",{"_index":18,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["make",{"_index":49,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["makes",{"_index":1794,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid",{"_index":1790,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid(config",{"_index":1792,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["manage",{"_index":464,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["management",{"_index":2037,"title":{},"body":{"components/RecordList.html":{}}}],["managesearches",{"_index":2134,"title":{},"body":{"components/RecordList.html":{}}}],["managesets",{"_index":2139,"title":{},"body":{"components/RecordList.html":{}}}],["many",{"_index":1273,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["map",{"_index":1297,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["margin",{"_index":32,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["margin:0px",{"_index":21,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["mark",{"_index":1326,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["master",{"_index":1796,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["match",{"_index":329,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["matched",{"_index":398,"title":{},"body":{"classes/Base64.html":{}}}],["matching",{"_index":312,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["may/15/09",{"_index":1364,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["md5",{"_index":1091,"title":{"classes/MD5.html":{}},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["md5(s",{"_index":1684,"title":{},"body":{"classes/MD5.html":{}}}],["md5.cmn((b",{"_index":1180,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(b",{"_index":1183,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(c",{"_index":1185,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.hex_chr[(n",{"_index":1203,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.md5(this.password",{"_index":1648,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5.md5(value",{"_index":980,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["md5.md5cycle(state",{"_index":1198,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md51",{"_index":1667,"title":{},"body":{"classes/MD5.html":{}}}],["md51(s",{"_index":1186,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5blk",{"_index":1668,"title":{},"body":{"classes/MD5.html":{}}}],["md5blk(s",{"_index":1687,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle",{"_index":1669,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle(x",{"_index":1689,"title":{},"body":{"classes/MD5.html":{}}}],["md5pwd",{"_index":1647,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5pwd.touppercase",{"_index":1650,"title":{},"body":{"components/LoginCmp.html":{}}}],["mdi",{"_index":2402,"title":{},"body":{"index.html":{}}}],["me.clearrecorddirtyflag",{"_index":1436,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.primarykey_",{"_index":1433,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.recordnumber",{"_index":1411,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.refresh().then((rec",{"_index":1413,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me[me.primarykey_",{"_index":1434,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["means",{"_index":704,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["menu",{"_index":1994,"title":{},"body":{"components/RecordList.html":{}}}],["merchantability",{"_index":2526,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2504,"title":{},"body":{"license.html":{}}}],["message",{"_index":324,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["messages",{"_index":326,"title":{},"body":{"classes/Base64.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["method",{"_index":562,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["methods",{"_index":122,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["microsyntaxes.html#space",{"_index":350,"title":{},"body":{"classes/Base64.html":{}}}],["minheight",{"_index":1788,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["minwidth",{"_index":1789,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["miscellaneous",{"_index":2549,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":2488,"title":{},"body":{"license.html":{}}}],["mm",{"_index":1315,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["modal",{"_index":285,"title":{"injectables/Modal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["modal.hostviewref",{"_index":1756,"title":{},"body":{"injectables/Modal.html":{}}}],["modal.opendialoglist.push",{"_index":1777,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/commonmodals/okonlymodal",{"_index":1862,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/okonlymodal.ts",{"_index":1865,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["modal/commonmodals/okonlymodal.ts:10",{"_index":1868,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:12",{"_index":1873,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:13",{"_index":1871,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:14",{"_index":1872,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:33",{"_index":1887,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:34",{"_index":1886,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:36",{"_index":1888,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:40",{"_index":1884,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:45",{"_index":1885,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/yesnomodal",{"_index":1863,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/yesnomodal.ts",{"_index":2293,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["modal/commonmodals/yesnomodal.ts:11",{"_index":2307,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:13",{"_index":2311,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:14",{"_index":2308,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:15",{"_index":2309,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:16",{"_index":2312,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:17",{"_index":2310,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:37",{"_index":2301,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:38",{"_index":2300,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:40",{"_index":2302,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:44",{"_index":2296,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:50",{"_index":2298,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:55",{"_index":2297,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/models/icustommodal",{"_index":207,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{}}}],["modal/models/icustommodal.ts",{"_index":1247,"title":{},"body":{"classes/ICustomModal.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent",{"_index":208,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/icustommodalcomponent.ts",{"_index":1249,"title":{},"body":{"classes/ICustomModalComponent.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent.ts:13",{"_index":1256,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:18",{"_index":1253,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:8",{"_index":1252,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/modalconfig",{"_index":209,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{}}}],["modal/models/modalconfig.ts",{"_index":1783,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/models/modalconfig.ts:17",{"_index":1820,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:24",{"_index":1798,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:31",{"_index":1801,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:39",{"_index":1807,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:41",{"_index":1823,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:42",{"_index":1817,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:44",{"_index":1800,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:45",{"_index":1816,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:47",{"_index":1818,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:49",{"_index":1819,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:51",{"_index":1805,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:53",{"_index":1804,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:55",{"_index":1806,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:57",{"_index":1822,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:59",{"_index":1797,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:67",{"_index":1793,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:86",{"_index":1791,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modaldialoginstance",{"_index":205,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/modaldialoginstance.ts",{"_index":587,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["modal/models/modaldialoginstance.ts:22",{"_index":1847,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:24",{"_index":1849,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:28",{"_index":1848,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:30",{"_index":1846,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:31",{"_index":1845,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:32",{"_index":1840,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:38",{"_index":1851,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:41",{"_index":1853,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:49",{"_index":1855,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:56",{"_index":1844,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:6",{"_index":592,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:64",{"_index":1841,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:7",{"_index":593,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:8",{"_index":591,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:82",{"_index":1842,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:91",{"_index":1843,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/providers/modal",{"_index":1586,"title":{},"body":{"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["modal/providers/modal.ts",{"_index":1696,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/providers/modal.ts:121",{"_index":1710,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:144",{"_index":1729,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:20",{"_index":1734,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:21",{"_index":1735,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:23",{"_index":1707,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:43",{"_index":1714,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:63",{"_index":1732,"title":{},"body":{"injectables/Modal.html":{}}}],["modalconfig",{"_index":180,"title":{"injectables/ModalConfig.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalconfig.makevalid(defaultconfig",{"_index":1745,"title":{},"body":{"injectables/Modal.html":{}}}],["modaldialoginstance",{"_index":140,"title":{"injectables/ModalDialogInstance.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmodule",{"_index":1856,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mode",{"_index":1340,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["model",{"_index":677,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["modelcontentdata",{"_index":136,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{}}}],["modelcontentdata(parms",{"_index":1640,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modelcontentdata(v",{"_index":1593,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["modeldef",{"_index":769,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["models",{"_index":678,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["models/icustommodal",{"_index":1874,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/icustommodalcomponent",{"_index":1875,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/modalconfig",{"_index":1736,"title":{},"body":{"injectables/Modal.html":{}}}],["models/modaldialoginstance",{"_index":1259,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modified",{"_index":836,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["modify",{"_index":2421,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":885,"title":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":887,"title":{"modules.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":111,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["morelines",{"_index":126,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["moz",{"_index":86,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["multicolumn",{"_index":494,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["multiple",{"_index":925,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["multiples",{"_index":1775,"title":{},"body":{"injectables/Modal.html":{}}}],["n",{"_index":1187,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["name",{"_index":144,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["names",{"_index":714,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["native",{"_index":331,"title":{},"body":{"classes/Base64.html":{}}}],["nativescript",{"_index":2422,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":19,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["need",{"_index":391,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["new",{"_index":251,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{}}}],["newmodel",{"_index":803,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["newmodel.clearrecorddirtyflag",{"_index":826,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.populatemodeldata(record",{"_index":825,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.primarykey_",{"_index":2103,"title":{},"body":{"components/RecordList.html":{}}}],["newmodel.tablename",{"_index":805,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["next",{"_index":60,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ng2",{"_index":1773,"title":{},"body":{"injectables/Modal.html":{}}}],["ngaftercontentinit",{"_index":1967,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["ngafterviewinit",{"_index":127,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["ngmodule",{"_index":899,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["noaudit",{"_index":1342,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["non",{"_index":1365,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["none",{"_index":56,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["none')?'block':'none",{"_index":551,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["noninfringement",{"_index":2530,"title":{},"body":{"license.html":{}}}],["nope",{"_index":779,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["note",{"_index":325,"title":{},"body":{"classes/Base64.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["notext",{"_index":2305,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["notice",{"_index":2515,"title":{},"body":{"license.html":{}}}],["notification",{"_index":1812,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["nov",{"_index":1367,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["now",{"_index":1106,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["npm",{"_index":2392,"title":{},"body":{"index.html":{}}}],["null",{"_index":632,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["null/undefined",{"_index":858,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["number",{"_index":193,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"classes/Utf8.html":{}}}],["numeric",{"_index":1810,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["numofrecords",{"_index":719,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["o",{"_index":87,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["obj",{"_index":962,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["obj.hasownproperty(p",{"_index":965,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":107,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1460,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["observable",{"_index":954,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["obtained",{"_index":2475,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":2497,"title":{},"body":{"license.html":{}}}],["occurrences",{"_index":1727,"title":{},"body":{"injectables/Modal.html":{}}}],["ok",{"_index":1430,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["ok($event",{"_index":1566,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["okonlycontent",{"_index":1864,"title":{"classes/OKOnlyContent.html":{}},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["okonlymodal",{"_index":284,"title":{"components/OKOnlyModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["oktext",{"_index":1866,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["once",{"_index":1742,"title":{},"body":{"injectables/Modal.html":{}}}],["one",{"_index":1046,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["ones",{"_index":48,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["oninit",{"_index":1585,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["onresize",{"_index":2065,"title":{},"body":{"components/RecordList.html":{}}}],["opacity:0",{"_index":64,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["opacity:1",{"_index":53,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["open",{"_index":604,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"index.html":{}}}],["open(componenttype",{"_index":1711,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog",{"_index":1701,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog(component",{"_index":1728,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialoglist",{"_index":1698,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside",{"_index":1702,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside(componenttype",{"_index":1730,"title":{},"body":{"injectables/Modal.html":{}}}],["opens",{"_index":1715,"title":{},"body":{"injectables/Modal.html":{}}}],["openstateicon",{"_index":520,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["operation",{"_index":698,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimize",{"_index":1030,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimized",{"_index":360,"title":{},"body":{"classes/Base64.html":{}}}],["optimizing",{"_index":2073,"title":{},"body":{"components/RecordList.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["options",{"_index":1051,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["options.headers",{"_index":1069,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["order",{"_index":731,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["orderby",{"_index":679,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["originalvalue",{"_index":1211,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["otherwise",{"_index":2540,"title":{},"body":{"license.html":{}}}],["out",{"_index":896,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":387,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["outputs",{"_index":1891,"title":{},"body":{"components/QueryBand.html":{},"components/WebAppContainer.html":{}}}],["outside",{"_index":403,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["overview",{"_index":2546,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":964,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2363,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":59,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["padding:5px",{"_index":28,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["page",{"_index":2386,"title":{},"body":{"index.html":{}}}],["pages",{"_index":2458,"title":{},"body":{"index.html":{}}}],["paging",{"_index":729,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["param",{"_index":766,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["parameter",{"_index":439,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["parameters",{"_index":143,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["parametervalue",{"_index":1217,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["params",{"_index":2273,"title":{},"body":{"components/WebAppContainer.html":{}}}],["parms",{"_index":1639,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["parms.hasownproperty('version",{"_index":1641,"title":{},"body":{"components/LoginCmp.html":{}}}],["parms['version",{"_index":1643,"title":{},"body":{"components/LoginCmp.html":{}}}],["parse",{"_index":2272,"title":{},"body":{"components/WebAppContainer.html":{}}}],["parseint(resultjson['selected",{"_index":822,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["part",{"_index":2477,"title":{},"body":{"index.html":{}}}],["particular",{"_index":2528,"title":{},"body":{"license.html":{}}}],["pascal's",{"_index":2370,"title":{},"body":{"index.html":{}}}],["passed",{"_index":1720,"title":{},"body":{"injectables/Modal.html":{}}}],["password",{"_index":996,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"index.html":{}}}],["payload",{"_index":1040,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["peer",{"_index":2364,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":920,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["permission",{"_index":2491,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2510,"title":{},"body":{"license.html":{}}}],["person",{"_index":2496,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2511,"title":{},"body":{"license.html":{}}}],["picture",{"_index":110,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["pipe",{"_index":420,"title":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["pipe({name",{"_index":440,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pipes",{"_index":422,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"overview.html":{}}}],["pipes/base64imageref.pipe",{"_index":1546,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipes/fourddatetostring.pipe",{"_index":1547,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipetransform",{"_index":430,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pk",{"_index":2102,"title":{},"body":{"components/RecordList.html":{}}}],["pkfield",{"_index":2142,"title":{},"body":{"components/RecordList.html":{}}}],["plan",{"_index":2414,"title":{},"body":{"index.html":{}}}],["please",{"_index":1618,"title":{},"body":{"components/LoginCmp.html":{}}}],["point",{"_index":1080,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["points",{"_index":1048,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["populate",{"_index":669,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populated",{"_index":739,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populatemodeldata(recorddata",{"_index":1447,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["populates",{"_index":1380,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["portions",{"_index":2518,"title":{},"body":{"license.html":{}}}],["position",{"_index":65,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/ModalConfig.html":{}}}],["position:absolute",{"_index":482,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["position:relative",{"_index":23,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["possible",{"_index":1283,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["post",{"_index":974,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["predefined",{"_index":2292,"title":{},"body":{"components/WebAppContainer.html":{}}}],["prepares",{"_index":708,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["present",{"_index":2439,"title":{},"body":{"index.html":{}}}],["presents",{"_index":2480,"title":{},"body":{"index.html":{}}}],["presses",{"_index":644,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["previous",{"_index":1098,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["previousquery",{"_index":2093,"title":{},"body":{"components/RecordList.html":{}}}],["primary",{"_index":941,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["primarykey_",{"_index":1291,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["private",{"_index":114,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["privileges",{"_index":991,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["procedure",{"_index":2385,"title":{},"body":{"index.html":{}}}],["process",{"_index":2437,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1462,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["programmatically",{"_index":1476,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["progress",{"_index":2076,"title":{},"body":{"components/RecordList.html":{}}}],["promise",{"_index":588,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise((resolve",{"_index":600,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["promiselike",{"_index":597,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promisewrapper.completer",{"_index":616,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise|any|*|promise",{"_index":625,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["properties",{"_index":113,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["property",{"_index":937,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["propriety",{"_index":1359,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["provide",{"_index":2396,"title":{},"body":{"index.html":{}}}],["provided",{"_index":2519,"title":{},"body":{"license.html":{}}}],["providers",{"_index":891,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":667,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"index.html":{}}}],["providing",{"_index":2446,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":1081,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["proxyurlthru4d(url",{"_index":1086,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["public",{"_index":116,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["publish",{"_index":2505,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2529,"title":{},"body":{"license.html":{}}}],["pwd",{"_index":1090,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["q",{"_index":1678,"title":{},"body":{"classes/MD5.html":{}}}],["qbe",{"_index":485,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["qff",{"_index":487,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queries",{"_index":745,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["query",{"_index":16,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["query'},{'name",{"_index":271,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["query+filter",{"_index":693,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["query0",{"_index":154,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryaddrecord",{"_index":515,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryband",{"_index":287,"title":{"components/QueryBand.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["queryband's",{"_index":514,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querybanddirective",{"_index":309,"title":{"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["querybandisopen",{"_index":524,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querydeleterecord",{"_index":517,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["queryeditrecord",{"_index":516,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryexportgrid",{"_index":512,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfield",{"_index":168,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.field",{"_index":226,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields",{"_index":262,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields[event.target.selectedindex",{"_index":227,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.name",{"_index":229,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.querytable",{"_index":257,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfieldlist",{"_index":133,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfields",{"_index":246,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfromfile",{"_index":509,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfromqbe",{"_index":508,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryid",{"_index":247,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querying",{"_index":1385,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["queryitems",{"_index":233,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["queryitems.push(tablename",{"_index":2144,"title":{},"body":{"components/RecordList.html":{}}}],["queryitems.push(thefield.longname",{"_index":243,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querymanagesets",{"_index":513,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryrefresh",{"_index":510,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querysortgrid",{"_index":511,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querystring",{"_index":680,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["querytable",{"_index":159,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["quick",{"_index":2383,"title":{},"body":{"index.html":{}}}],["quickfind",{"_index":290,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["quickfinder",{"_index":467,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["quickfindinput",{"_index":289,"title":{"components/QuickFindInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["radius",{"_index":479,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["range",{"_index":405,"title":{},"body":{"classes/Base64.html":{}}}],["raquo",{"_index":102,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["read",{"_index":1280,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["readcontinuationbyte",{"_index":2176,"title":{},"body":{"classes/Utf8.html":{}}}],["readonly",{"_index":1265,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["really",{"_index":2086,"title":{},"body":{"components/RecordList.html":{}}}],["reason",{"_index":598,"title":{},"body":{"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/ModalDialogInstance.html":{}}}],["rec.clearrecorddirtyflag",{"_index":1414,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["received",{"_index":988,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reclist",{"_index":823,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["reclist.foreach(record",{"_index":824,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recnum",{"_index":840,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["record",{"_index":292,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["record's",{"_index":1356,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["record(s",{"_index":1992,"title":{},"body":{"components/RecordList.html":{}}}],["record.recordisdirty",{"_index":837,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["record.recordnumber",{"_index":841,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["record.tablename",{"_index":839,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recorddata",{"_index":1346,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata.hasownproperty('_recnum",{"_index":1448,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['_recnum",{"_index":1449,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields",{"_index":1358,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields'][field.longname",{"_index":1374,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['noaudit",{"_index":1351,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['savecallback",{"_index":1350,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['timestamp",{"_index":1354,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata[field",{"_index":1452,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordeditwindow",{"_index":291,"title":{"components/RecordEditWindow.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordid",{"_index":1383,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordisdirty",{"_index":1483,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordlist",{"_index":295,"title":{"components/RecordList.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordlist.length",{"_index":843,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recordlist.push",{"_index":838,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recordnumber",{"_index":1381,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordnumber(v",{"_index":1472,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records",{"_index":671,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["records.foreach(id",{"_index":2143,"title":{},"body":{"components/RecordList.html":{}}}],["records.getrecords(query",{"_index":1408,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.model",{"_index":1401,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models.length",{"_index":1410,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models[0].recordnumber",{"_index":1412,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordsaved",{"_index":2091,"title":{},"body":{"components/RecordList.html":{}}}],["recordtojson(mode",{"_index":1345,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reference",{"_index":2405,"title":{},"body":{"index.html":{}}}],["reference/import",{"_index":2411,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1406,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["refreshgrid",{"_index":1968,"title":{},"body":{"components/RecordList.html":{}}}],["refreshgrid(query",{"_index":2001,"title":{},"body":{"components/RecordList.html":{}}}],["regex_space_characters",{"_index":319,"title":{},"body":{"classes/Base64.html":{}}}],["registry",{"_index":277,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reject",{"_index":589,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["reject('invalid",{"_index":1109,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reject('no",{"_index":1399,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject('recordnotfound",{"_index":1417,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(error",{"_index":830,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["reject(error.text",{"_index":1438,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(resultjson.message",{"_index":834,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["reject(resultjson.returncode",{"_index":1437,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["rejected",{"_index":623,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["related",{"_index":92,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["relatedonetables",{"_index":134,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relatedtable",{"_index":103,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relates",{"_index":1281,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["relatesto",{"_index":1266,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["remove",{"_index":255,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["render",{"_index":1719,"title":{},"body":{"injectables/Modal.html":{}}}],["repeat",{"_index":1614,"title":{},"body":{"components/LoginCmp.html":{}}}],["replace",{"_index":1750,"title":{},"body":{"injectables/Modal.html":{}}}],["replace(base64.regex_space_characters",{"_index":368,"title":{},"body":{"classes/Base64.html":{}}}],["replicates",{"_index":1286,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["represent",{"_index":651,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["representation",{"_index":1339,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["representing",{"_index":1485,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["represents",{"_index":664,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["request",{"_index":1042,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["requests",{"_index":1017,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["require",{"_index":2361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1043,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["reset",{"_index":569,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"modules/ModalModule.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"overview.html":{}}}],["resize",{"_index":1981,"title":{},"body":{"components/RecordList.html":{}}}],["resolve",{"_index":590,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["resolve('no",{"_index":846,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolve(body.registryvalue",{"_index":1153,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface._listcache[listname",{"_index":1115,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface.authentication",{"_index":1108,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(item.registryvalue",{"_index":1148,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(listvalues",{"_index":1119,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(me",{"_index":1415,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(records",{"_index":1458,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(result",{"_index":1469,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(resultjson.deleted",{"_index":833,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolve(resultjson.values",{"_index":1137,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(this",{"_index":1398,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(this.models",{"_index":828,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolved",{"_index":621,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["response",{"_index":1126,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["responsetype",{"_index":1124,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["responsetype:'text",{"_index":1010,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rest_authenticate",{"_index":2436,"title":{},"body":{"index.html":{}}}],["rest_getrecords",{"_index":2455,"title":{},"body":{"index.html":{}}}],["rest_proxyhttpget",{"_index":1079,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["restapi",{"_index":908,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["restore",{"_index":458,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["restoreset",{"_index":1969,"title":{},"body":{"components/RecordList.html":{}}}],["restoreset(records",{"_index":2005,"title":{},"body":{"components/RecordList.html":{}}}],["restriction",{"_index":2500,"title":{},"body":{"license.html":{}}}],["result",{"_index":311,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.query",{"_index":2100,"title":{},"body":{"components/RecordList.html":{}}}],["result.query.length",{"_index":2097,"title":{},"body":{"components/RecordList.html":{}}}],["result.queryfields",{"_index":2098,"title":{},"body":{"components/RecordList.html":{}}}],["resulting",{"_index":730,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["resultjson",{"_index":819,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.fieldlist",{"_index":263,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["resultjson.returncode",{"_index":1429,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson.session",{"_index":1103,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.key",{"_index":1105,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.options._userid",{"_index":1104,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.valid",{"_index":832,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.values",{"_index":1118,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson['_recnum",{"_index":1432,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['recordid",{"_index":1435,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['records",{"_index":821,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resultjson['selected",{"_index":820,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["results",{"_index":313,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1331,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["retrieve",{"_index":712,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["retrieved",{"_index":697,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["retrieves",{"_index":721,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["retrieving",{"_index":695,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["return",{"_index":228,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"miscellaneous/variables.html":{}}}],["returna",{"_index":1517,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["returned",{"_index":737,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["returns",{"_index":165,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reuse",{"_index":455,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["rhex",{"_index":1670,"title":{},"body":{"classes/MD5.html":{}}}],["rhex(n",{"_index":1692,"title":{},"body":{"classes/MD5.html":{}}}],["right",{"_index":523,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["right:20px",{"_index":483,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["rights",{"_index":2503,"title":{},"body":{"license.html":{}}}],["row",{"_index":1985,"title":{},"body":{"components/RecordList.html":{}}}],["rowid",{"_index":1471,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["run",{"_index":1741,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["running",{"_index":1020,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runninginsideworkspace",{"_index":1023,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runquickfinder",{"_index":1935,"title":{},"body":{"components/QuickFindInput.html":{}}}],["runs",{"_index":2472,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":955,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rxjs/operators",{"_index":1942,"title":{},"body":{"components/QuickFindInput.html":{}}}],["s",{"_index":1178,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.charcodeat(i",{"_index":1195,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.length",{"_index":1188,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["saferesourceurl",{"_index":429,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["same",{"_index":1722,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["sanitizer",{"_index":443,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["save",{"_index":462,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["save/load",{"_index":489,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["saved",{"_index":456,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["savedsearches",{"_index":2105,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.foreach(element",{"_index":2136,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.push",{"_index":2111,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.splice(result",{"_index":2138,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches[result].search",{"_index":2125,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets",{"_index":2106,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.foreach(element",{"_index":2127,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.splice(result",{"_index":2140,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets[result].set",{"_index":2131,"title":{},"body":{"components/RecordList.html":{}}}],["saverecord",{"_index":1946,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["saveset",{"_index":2114,"title":{},"body":{"components/RecordList.html":{}}}],["saveusage",{"_index":2393,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1717,"title":{},"body":{"injectables/Modal.html":{}}}],["search",{"_index":457,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["searches",{"_index":461,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searches/set",{"_index":490,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searchlist",{"_index":2135,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.length",{"_index":2122,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.push(element.name",{"_index":2121,"title":{},"body":{"components/RecordList.html":{}}}],["searchname",{"_index":2108,"title":{},"body":{"components/RecordList.html":{}}}],["see",{"_index":781,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["select",{"_index":453,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["selected",{"_index":231,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/RecordList.html":{}}}],["selectedindex",{"_index":1552,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["selectedrecords",{"_index":1976,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrecords():array",{"_index":2025,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrows",{"_index":2030,"title":{},"body":{"components/RecordList.html":{}}}],["selectedvalue",{"_index":866,"title":{},"body":{"components/FourDDropDown.html":{}}}],["selectfield",{"_index":128,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selectfield(event",{"_index":173,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selecthighlited",{"_index":2107,"title":{},"body":{"components/RecordList.html":{}}}],["selection",{"_index":691,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{},"index.html":{}}}],["selectlist",{"_index":1978,"title":{},"body":{"components/RecordList.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["selector'},{'name",{"_index":280,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["selectorvalue",{"_index":1218,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["selecttab",{"_index":2162,"title":{},"body":{"components/Tabs.html":{}}}],["selecttab(event",{"_index":2151,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selectthistab",{"_index":2163,"title":{},"body":{"components/Tabs.html":{}}}],["selectthistab(tab",{"_index":2153,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selfcentered",{"_index":183,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["sell",{"_index":2508,"title":{},"body":{"license.html":{}}}],["send",{"_index":710,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["sends",{"_index":2460,"title":{},"body":{"index.html":{}}}],["sent",{"_index":922,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["separate",{"_index":2404,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":2216,"title":{},"body":{"classes/Utf8.html":{}}}],["serializes",{"_index":1338,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["series",{"_index":2373,"title":{},"body":{"index.html":{}}}],["server",{"_index":998,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["service",{"_index":747,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["service/component",{"_index":2381,"title":{},"body":{"index.html":{}}}],["services",{"_index":2374,"title":{},"body":{"index.html":{}}}],["serving",{"_index":2379,"title":{},"body":{"index.html":{}}}],["session",{"_index":990,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sessionkey",{"_index":1018,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["set",{"_index":459,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["set(field",{"_index":1310,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["setbackdropref(value",{"_index":1850,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setbootstrapref(value",{"_index":1852,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setheight(v",{"_index":1578,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setlist",{"_index":2126,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.length",{"_index":2129,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.push(element.name",{"_index":2128,"title":{},"body":{"components/RecordList.html":{}}}],["setmodelcontentdata(parms",{"_index":1637,"title":{},"body":{"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["setmodelcontentdata(v",{"_index":196,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["setname",{"_index":2119,"title":{},"body":{"components/RecordList.html":{}}}],["setregistryvalue(theclass",{"_index":1154,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["sets",{"_index":465,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["setting",{"_index":1327,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["settitle",{"_index":1837,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["settitle(title",{"_index":627,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["settitle(v",{"_index":1582,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setwidth(v",{"_index":1580,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["shadow:1px",{"_index":73,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["shall",{"_index":2516,"title":{},"body":{"license.html":{}}}],["shift",{"_index":2188,"title":{},"body":{"classes/Utf8.html":{}}}],["show",{"_index":1554,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"index.html":{}}}],["show(list",{"_index":1568,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["showadvancedquery",{"_index":1970,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow",{"_index":1971,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow(mode",{"_index":2008,"title":{},"body":{"components/RecordList.html":{}}}],["showerror",{"_index":1624,"title":{},"body":{"components/LoginCmp.html":{}}}],["showlogindialog",{"_index":2256,"title":{},"body":{"components/WebAppContainer.html":{}}}],["showrelatedtable",{"_index":129,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["showrelatedtable(event",{"_index":176,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["side",{"_index":951,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["sides",{"_index":2389,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1089,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sign's",{"_index":989,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["signed",{"_index":1025,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["signin",{"_index":2435,"title":{},"body":{"index.html":{}}}],["signin(user",{"_index":1094,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["similar",{"_index":946,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["simple",{"_index":944,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["single",{"_index":1130,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["singleton",{"_index":1740,"title":{},"body":{"injectables/Modal.html":{}}}],["size",{"_index":181,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["sm",{"_index":182,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["smooth",{"_index":79,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["software",{"_index":2498,"title":{},"body":{"license.html":{}}}],["solid",{"_index":99,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["something",{"_index":2424,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1619,"title":{},"body":{"components/LoginCmp.html":{}}}],["sort",{"_index":495,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["spec\\.ts",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":392,"title":{},"body":{"classes/Base64.html":{}}}],["specific",{"_index":610,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["specified",{"_index":1384,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sql",{"_index":915,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["src/.../jsfourdinterface.ts",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modal.ts",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modalconfig.ts",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/angular2",{"_index":586,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/main.scss",{"_index":2420,"title":{},"body":{"index.html":{}}}],["src/containers/advancedquery.ts",{"_index":9,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"coverage.html":{}}}],["src/containers/advancedquery.ts:152",{"_index":192,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:162",{"_index":152,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:163",{"_index":150,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:164",{"_index":162,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:165",{"_index":163,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:167",{"_index":178,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:168",{"_index":194,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:169",{"_index":195,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:171",{"_index":197,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:190",{"_index":142,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:192",{"_index":179,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:195",{"_index":172,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:202",{"_index":174,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:210",{"_index":169,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:214",{"_index":164,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:227",{"_index":171,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:235",{"_index":170,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:242",{"_index":177,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/queryband.ts",{"_index":444,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"coverage.html":{}}}],["src/containers/queryband.ts:10",{"_index":1933,"title":{},"body":{"directives/QueryBandDirective.html":{}}}],["src/containers/queryband.ts:104",{"_index":1902,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:109",{"_index":1903,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:114",{"_index":1897,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:119",{"_index":1904,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:124",{"_index":1900,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:129",{"_index":1896,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:134",{"_index":1895,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:139",{"_index":1899,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:144",{"_index":1898,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:149",{"_index":1894,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:154",{"_index":1910,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:155",{"_index":1909,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:156",{"_index":1912,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:157",{"_index":1913,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:158",{"_index":1908,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:160",{"_index":1911,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:165",{"_index":1905,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:166",{"_index":1907,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:167",{"_index":1906,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:172",{"_index":1930,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:174",{"_index":1931,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:176",{"_index":1929,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:181",{"_index":1893,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:187",{"_index":1927,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:192",{"_index":1926,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:222",{"_index":1921,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:226",{"_index":1922,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:230",{"_index":1928,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:234",{"_index":1919,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:239",{"_index":1923,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:243",{"_index":1924,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:247",{"_index":1915,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:257",{"_index":1918,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:261",{"_index":1914,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:265",{"_index":1917,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:269",{"_index":1916,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:273",{"_index":1925,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:99",{"_index":1901,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/recordeditwindow.ts",{"_index":1945,"title":{},"body":{"components/RecordEditWindow.html":{},"coverage.html":{}}}],["src/containers/recordeditwindow.ts:15",{"_index":1947,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:18",{"_index":1949,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:21",{"_index":1950,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:25",{"_index":1948,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordlist.ts",{"_index":1958,"title":{},"body":{"components/RecordList.html":{},"coverage.html":{}}}],["src/containers/recordlist.ts:115",{"_index":1990,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:125",{"_index":2002,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:134",{"_index":1988,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:142",{"_index":2011,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:149",{"_index":2009,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:179",{"_index":1991,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:192",{"_index":1996,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:199",{"_index":2007,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:216",{"_index":1993,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:25",{"_index":1980,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:30",{"_index":1982,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:344",{"_index":2006,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:35",{"_index":2018,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:36",{"_index":2020,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:41",{"_index":2022,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:57",{"_index":2015,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:59",{"_index":2016,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:60",{"_index":1979,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:71",{"_index":1998,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/tabs.ts",{"_index":2145,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["src/containers/tabs.ts:18",{"_index":2167,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:20",{"_index":2165,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:27",{"_index":2166,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:33",{"_index":2164,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:51",{"_index":2149,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/tabs.ts:52",{"_index":2148,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/webappcontainer.ts",{"_index":2252,"title":{},"body":{"components/WebAppContainer.html":{},"coverage.html":{}}}],["src/containers/webappcontainer.ts:17",{"_index":2260,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:19",{"_index":2261,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:21",{"_index":2259,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:23",{"_index":2264,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:38",{"_index":2263,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:48",{"_index":2262,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/controls/fourddropdown.ts",{"_index":859,"title":{},"body":{"components/FourDDropDown.html":{},"coverage.html":{}}}],["src/controls/fourddropdown.ts:26",{"_index":868,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:27",{"_index":869,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:28",{"_index":867,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:32",{"_index":873,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:42",{"_index":871,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:46",{"_index":872,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourdregistryinput.ts",{"_index":1209,"title":{},"body":{"components/FourDRegistryInput.html":{},"coverage.html":{}}}],["src/controls/fourdregistryinput.ts:19",{"_index":1220,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:20",{"_index":1223,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:21",{"_index":1224,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:22",{"_index":1221,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:23",{"_index":1222,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:25",{"_index":1229,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:26",{"_index":1228,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:27",{"_index":1219,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:31",{"_index":1226,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:41",{"_index":1227,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:51",{"_index":1225,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/quickfindinput.ts",{"_index":1934,"title":{},"body":{"components/QuickFindInput.html":{},"coverage.html":{}}}],["src/controls/quickfindinput.ts:16",{"_index":1938,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:17",{"_index":1939,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:18",{"_index":1936,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/datagrid/datagrid.ts",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["src/dialogs/listselectordialog.ts",{"_index":1549,"title":{},"body":{"components/ListSelectorDialog.html":{},"coverage.html":{}}}],["src/dialogs/listselectordialog.ts:25",{"_index":1577,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:35",{"_index":1560,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:36",{"_index":1562,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:37",{"_index":1559,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:38",{"_index":1561,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:40",{"_index":1579,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:41",{"_index":1581,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:42",{"_index":1583,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:45",{"_index":1584,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:52",{"_index":1573,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:54",{"_index":1558,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:57",{"_index":1574,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:64",{"_index":1571,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:70",{"_index":1564,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:74",{"_index":1567,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/fourd.module.ts",{"_index":897,"title":{},"body":{"modules/FourDModule.html":{}}}],["src/js44d.module.ts",{"_index":1528,"title":{},"body":{"modules/JS44DModule.html":{}}}],["src/js44d/base64.ts",{"_index":316,"title":{},"body":{"classes/Base64.html":{},"coverage.html":{}}}],["src/js44d/base64.ts:12",{"_index":337,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:18",{"_index":344,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:20",{"_index":342,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:26",{"_index":346,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:64",{"_index":348,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:8",{"_index":339,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/jsfourdcollection.ts",{"_index":662,"title":{},"body":{"injectables/FourDCollection.html":{},"coverage.html":{}}}],["src/js44d/jsfourdcollection.ts:103",{"_index":720,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:166",{"_index":690,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:18",{"_index":748,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:195",{"_index":701,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:20",{"_index":749,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:22",{"_index":750,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:235",{"_index":757,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:24",{"_index":751,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:26",{"_index":743,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:29",{"_index":738,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:32",{"_index":741,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:34",{"_index":752,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:37",{"_index":686,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:54",{"_index":707,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdinterface.ts",{"_index":906,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/js44d/jsfourdinterface.ts:456",{"_index":1673,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:458",{"_index":1691,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:536",{"_index":1677,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:541",{"_index":1679,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:545",{"_index":1680,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:549",{"_index":1682,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:553",{"_index":1683,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:557",{"_index":1686,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:592",{"_index":1688,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:603",{"_index":1693,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:612",{"_index":1681,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:617",{"_index":1685,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:627",{"_index":1675,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:636",{"_index":1695,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:677",{"_index":943,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:679",{"_index":950,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:681",{"_index":952,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:683",{"_index":924,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:685",{"_index":917,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:687",{"_index":928,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:689",{"_index":942,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:691",{"_index":940,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:693",{"_index":936,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdmodel.ts",{"_index":1262,"title":{},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts",{"_index":2168,"title":{},"body":{"classes/Utf8.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts:102",{"_index":2193,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:118",{"_index":2190,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:181",{"_index":2181,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:182",{"_index":2182,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:183",{"_index":2183,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:185",{"_index":2199,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:34",{"_index":2197,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:51",{"_index":2185,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:61",{"_index":2189,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:65",{"_index":2192,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:7",{"_index":2195,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:87",{"_index":2202,"title":{},"body":{"classes/Utf8.html":{}}}],["src/login/login.ts",{"_index":1609,"title":{},"body":{"components/LoginCmp.html":{},"coverage.html":{}}}],["src/login/login.ts:45",{"_index":1636,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:55",{"_index":1629,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:56",{"_index":1627,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:57",{"_index":1628,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:58",{"_index":1626,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:59",{"_index":1631,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:62",{"_index":1638,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:68",{"_index":1625,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:70",{"_index":1633,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:77",{"_index":1632,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/modal.module.ts",{"_index":1861,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/pipes/base64imageref.pipe.ts",{"_index":423,"title":{},"body":{"pipes/Base64ImageRef.html":{},"coverage.html":{}}}],["src/pipes/base64imageref.pipe.ts:13",{"_index":427,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["src/pipes/fourddatetostring.pipe.ts",{"_index":849,"title":{},"body":{"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["src/pipes/fourddatetostring.pipe.ts:11",{"_index":850,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["src/test.ts",{"_index":2359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":1317,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["standalone",{"_index":1021,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["standard",{"_index":357,"title":{},"body":{"classes/Base64.html":{}}}],["started",{"_index":2368,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":728,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["startrec",{"_index":718,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["state",{"_index":1189,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["statements",{"_index":2315,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":608,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["static",{"_index":118,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{}}}],["stay",{"_index":61,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["step",{"_index":2384,"title":{},"body":{"index.html":{}}}],["str",{"_index":963,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.join",{"_index":968,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.push(encodeuricomponent(p",{"_index":966,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str2rstr_utf8",{"_index":1671,"title":{},"body":{"classes/MD5.html":{}}}],["str2rstr_utf8(input",{"_index":1694,"title":{},"body":{"classes/MD5.html":{}}}],["string",{"_index":156,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string(input",{"_index":367,"title":{},"body":{"classes/Base64.html":{}}}],["string.fromcharcode(((codepoint",{"_index":2220,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode((codepoint",{"_index":2228,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(codepoint",{"_index":2217,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(value",{"_index":2211,"title":{},"body":{"classes/Utf8.html":{}}}],["string.length",{"_index":2206,"title":{},"body":{"classes/Utf8.html":{}}}],["stroke",{"_index":1811,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["strong",{"_index":91,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["structure",{"_index":1275,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["style",{"_index":55,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["styles.scss",{"_index":2418,"title":{},"body":{"index.html":{}}}],["sub",{"_index":1488,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.formula",{"_index":1490,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.longname",{"_index":1494,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.name",{"_index":1493,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields",{"_index":1487,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields.push",{"_index":1492,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subject",{"_index":2513,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2507,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1054,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["subscribe((v",{"_index":1011,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["subscribe(result",{"_index":1468,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subscribe(resultjson",{"_index":261,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["subscribed",{"_index":1093,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["substantial",{"_index":2517,"title":{},"body":{"license.html":{}}}],["subtable",{"_index":1267,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subtables",{"_index":1500,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["successfully",{"_index":1024,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["supplied",{"_index":692,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["support",{"_index":1491,"title":{},"body":{"interfaces/IFieldDescription.html":{},"modules.html":{}}}],["supposed",{"_index":399,"title":{},"body":{"classes/Base64.html":{}}}],["sure",{"_index":410,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["surrogates",{"_index":397,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["svg",{"_index":2544,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":533,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["switchstate",{"_index":528,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["symbol",{"_index":2218,"title":{},"body":{"classes/Utf8.html":{}}}],["symbols",{"_index":395,"title":{},"body":{"classes/Base64.html":{}}}],["t",{"_index":596,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["t\\n\\f\\r",{"_index":340,"title":{},"body":{"classes/Base64.html":{}}}],["tab",{"_index":297,"title":{"components/Tab.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["tab'},{'name",{"_index":298,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tab.active",{"_index":2156,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tab.title",{"_index":2150,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tabitem.active",{"_index":2155,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["table",{"_index":320,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{}}}],["table's",{"_index":1287,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["table.field",{"_index":734,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["tabled",{"_index":930,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablename",{"_index":260,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["tablenumber",{"_index":1290,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["tables",{"_index":935,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":299,"title":{"components/Tabs.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["tabs'},{'name",{"_index":300,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tabs.addtab(this",{"_index":2160,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tail",{"_index":1199,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["take",{"_index":2454,"title":{},"body":{"index.html":{}}}],["taken",{"_index":2203,"title":{},"body":{"classes/Utf8.html":{}}}],["takes",{"_index":2459,"title":{},"body":{"index.html":{}}}],["teh",{"_index":2003,"title":{},"body":{"components/RecordList.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["terms",{"_index":931,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["text",{"_index":1125,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8",{"_index":1066,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["textvalue",{"_index":1212,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["theclass",{"_index":1138,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thecustomquery",{"_index":452,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thedate",{"_index":1160,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.gethours",{"_index":1176,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.substr(0,4)+'/'+thedate.substr(4,2)+'/'+thedate.substr(6,2",{"_index":1169,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedefaultvalue",{"_index":1140,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedialog",{"_index":1699,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance",{"_index":1709,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance:modaldialoginstance",{"_index":1779,"title":{},"body":{"injectables/Modal.html":{}}}],["thefield",{"_index":237,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["thefield.type",{"_index":240,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["theform",{"_index":570,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform.length",{"_index":572,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform[0].reset",{"_index":573,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thegrid",{"_index":1963,"title":{},"body":{"components/RecordList.html":{}}}],["themodel",{"_index":771,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["themodel.getfieldproperties(col",{"_index":783,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["themodel.getfieldproperties(col.field",{"_index":789,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["then((authentication",{"_index":1651,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["then((message",{"_index":2088,"title":{},"body":{"components/RecordList.html":{}}}],["then((reclist",{"_index":1409,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["then((recnum",{"_index":1957,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["then((result",{"_index":2096,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["then((setname",{"_index":2118,"title":{},"body":{"components/RecordList.html":{}}}],["then((value",{"_index":1243,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["then((values",{"_index":881,"title":{},"body":{"components/FourDDropDown.html":{}}}],["then(result",{"_index":2080,"title":{},"body":{"components/RecordList.html":{}}}],["theparameter",{"_index":1139,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thequeryband",{"_index":527,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theselector",{"_index":1141,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thetime:string",{"_index":1175,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thevalue",{"_index":239,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this._attributes.hasownproperty(field",{"_index":1320,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._attributes[field",{"_index":1308,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._backdropref",{"_index":618,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._backdropref.destroy",{"_index":658,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref",{"_index":620,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref.destroy",{"_index":657,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._editwindowconfig",{"_index":2054,"title":{},"body":{"components/RecordList.html":{}}}],["this._modified",{"_index":1481,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field",{"_index":1514,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field.name",{"_index":1484,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified[field",{"_index":1325,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._previousadvancedquery",{"_index":2060,"title":{},"body":{"components/RecordList.html":{}}}],["this._previousquery",{"_index":2061,"title":{},"body":{"components/RecordList.html":{}}}],["this._recnum",{"_index":1455,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._resultdefered",{"_index":615,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.promise",{"_index":626,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.reject",{"_index":655,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.resolve(result",{"_index":638,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.appref",{"_index":1757,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref.element.nativeelement.location",{"_index":1753,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref['_rootcomponents'][0].location",{"_index":1754,"title":{},"body":{"injectables/Modal.html":{}}}],["this.booleanvalue",{"_index":1244,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.booleanvalue)?'y':'n",{"_index":1235,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.buttontext",{"_index":1599,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.call4drestmethod('rest_authenticate",{"_index":1102,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_get4dlist",{"_index":1116,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getfiltered4dlist",{"_index":1136,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getregistryvalue",{"_index":1150,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_setregistryvalue",{"_index":1155,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_update4dlist",{"_index":1123,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.classname",{"_index":1240,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.clearrecord",{"_index":1395,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.clearrecorddirtyflag",{"_index":1397,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.closedialog(event",{"_index":1758,"title":{},"body":{"injectables/Modal.html":{}}}],["this.columns",{"_index":767,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.config",{"_index":1602,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.height",{"_index":1588,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.title",{"_index":1592,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.width",{"_index":1590,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.constructor.valueof",{"_index":1400,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.contentref",{"_index":633,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.destroy",{"_index":659,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance",{"_index":634,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforeclose",{"_index":635,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforedismiss",{"_index":654,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.location.nativeelement).data('kendowindow",{"_index":628,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.context",{"_index":1882,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.currentrecord",{"_index":1951,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.insertrecord",{"_index":1956,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.isrecordloaded",{"_index":1952,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.updaterecord",{"_index":1953,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currenttable",{"_index":215,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.defaultvalue",{"_index":1242,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.deleterecord",{"_index":2051,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialog",{"_index":1654,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close",{"_index":245,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialog.close('loggedin",{"_index":1655,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.dialog.close('recordsaved",{"_index":1954,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.dialog.close(false",{"_index":2306,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close(this.selectedindex",{"_index":1608,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.dialog.close(true",{"_index":1883,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.kendodialog.setoptions",{"_index":222,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialoginstance",{"_index":2055,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialoginstance.contentref.location.nativeelement).data('kendowindow",{"_index":2057,"title":{},"body":{"components/RecordList.html":{}}}],["this.dispose",{"_index":636,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.domanagesets(action",{"_index":2041,"title":{},"body":{"components/RecordList.html":{}}}],["this.dropdownisopen",{"_index":550,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.editwindow",{"_index":2045,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindow['dialogconfig",{"_index":2053,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindowhandler(result",{"_index":2081,"title":{},"body":{"components/RecordList.html":{}}}],["this.elementref",{"_index":2281,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.elementref.nativeelement.getelementsbytagname('form",{"_index":571,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableaddrecord",{"_index":541,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablebuttonbar",{"_index":540,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enabledeleterecord",{"_index":544,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableeditrecord",{"_index":542,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableexportgrid",{"_index":539,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqbe",{"_index":535,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqff",{"_index":536,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesets",{"_index":537,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesort",{"_index":538,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.fieldlist",{"_index":161,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fieldlist.push(field",{"_index":214,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fields",{"_index":1332,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.filteroptions",{"_index":798,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd",{"_index":764,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_bulkdelete",{"_index":831,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_bulkupdate",{"_index":844,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getapplicationversion",{"_index":1644,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourd.call4drestmethod('rest_getfieldsintable",{"_index":259,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fourd.call4drestmethod('rest_getrecords",{"_index":816,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getvalues",{"_index":1467,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_loaddata",{"_index":1394,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_postdata",{"_index":1428,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.get4dlist(this.listname",{"_index":880,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.fourd.getregistryvalue(this.classname",{"_index":1241,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.setregistryvalue(this.classname",{"_index":1237,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.signin(key.username",{"_index":2287,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.fourd.signin(this.username",{"_index":1649,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourddeletecallbackmethod_",{"_index":1444,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdsavecallbackmethod_",{"_index":1349,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdversion",{"_index":1645,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.getcolumnlist",{"_index":1457,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getcolumnlistjson(columns",{"_index":812,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getcolumnlistjson(newmodel.getcolumnlist",{"_index":813,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getfielddescription(field).type",{"_index":1312,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field",{"_index":1311,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field).type",{"_index":1450,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getrecord(this.recordnumber",{"_index":1421,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.hasownproperty('timestamp",{"_index":1353,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.httpclient.post(fourdinterface.fourdurl",{"_index":1076,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.inputtype",{"_index":1232,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.invalidcharactererror(message",{"_index":336,"title":{},"body":{"classes/Base64.html":{}}}],["this.isblocking",{"_index":1835,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.iscalculatedfield(field",{"_index":1360,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.ismodifiedfield(fieldname",{"_index":1366,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isreadonly(field",{"_index":1363,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isrelatedfield(field",{"_index":1362,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(col",{"_index":1503,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(field",{"_index":1361,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.itemslist",{"_index":1594,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.keyboard",{"_index":1836,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.listname",{"_index":879,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.listoptions",{"_index":882,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadlistfrom4d",{"_index":876,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadvaluefrom4d",{"_index":1230,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.message",{"_index":338,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["this.modal.open(listselectordialog",{"_index":1604,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.modal.openinside(advancedquerycomponent",{"_index":2092,"title":{},"body":{"components/RecordList.html":{}}}],["this.modal.openinside(logincmp",{"_index":2280,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.modal.openinside(this.editwindow",{"_index":2078,"title":{},"body":{"components/RecordList.html":{}}}],["this.model",{"_index":770,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models",{"_index":818,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.length",{"_index":847,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.push(newmodel",{"_index":827,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.open(component",{"_index":1781,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openinside(componenttype",{"_index":1755,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openstateicon",{"_index":530,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.orderby",{"_index":799,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.originalvalue",{"_index":1236,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.parametervalue",{"_index":1238,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.populatemodeldata(resultjson",{"_index":1396,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.primarykey_",{"_index":1388,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.promise",{"_index":599,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.queryaddrecord.emit(null",{"_index":577,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryband.enableqbe",{"_index":2034,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.enablesets",{"_index":2039,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryaddrecord.subscribe",{"_index":2046,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querydeleterecord.subscribe",{"_index":2050,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryeditrecord.subscribe",{"_index":2048,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryexportgrid.subscribe",{"_index":2043,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryfromqbe.subscribe((query",{"_index":2035,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querymanagesets.subscribe((action",{"_index":2040,"title":{},"body":{"components/RecordList.html":{}}}],["this.querybandisopen",{"_index":529,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querydeleterecord.emit(null",{"_index":581,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryeditrecord.emit(null",{"_index":579,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryexportgrid.emit(null",{"_index":575,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfieldlist",{"_index":218,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.foreach(element",{"_index":234,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.length",{"_index":248,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.pop",{"_index":254,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.push",{"_index":249,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfromfile.emit(null",{"_index":548,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfromqbe.emit",{"_index":546,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querymanagesets.emit(action",{"_index":553,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryrefresh.emit(this.thequeryband.thecustomquery.currentquery",{"_index":556,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querysortgrid.emit(null",{"_index":558,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querystring",{"_index":797,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.quickfind.valuechanges.pipe(distinctuntilchanged(),debouncetime(1500),).subscribe(query",{"_index":1943,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.recordnumber",{"_index":1348,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.refreshgrid",{"_index":2099,"title":{},"body":{"components/RecordList.html":{}}}],["this.refreshgrid(query",{"_index":2032,"title":{},"body":{"components/RecordList.html":{}}}],["this.reject",{"_index":602,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.relatedonetables",{"_index":219,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.resolve",{"_index":601,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.restoreset(set",{"_index":2132,"title":{},"body":{"components/RecordList.html":{}}}],["this.runquickfinder.emit(query",{"_index":1944,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('data:image/'+imagetype+';base64,'+value",{"_index":441,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["this.selectedindex",{"_index":1605,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.selectedvalue",{"_index":878,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.selectlist.show(searchlist",{"_index":2124,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.show(setlist",{"_index":2130,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.title",{"_index":2123,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectorvalue",{"_index":1239,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.selectthistab(tab",{"_index":2152,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.showadvancedquery",{"_index":2036,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('add",{"_index":2047,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('edit",{"_index":2049,"title":{},"body":{"components/RecordList.html":{}}}],["this.showerror",{"_index":1653,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.showlogindialog",{"_index":2290,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.size",{"_index":1833,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.tablename",{"_index":1347,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.tabs.foreach((tabitem",{"_index":2154,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.length",{"_index":2158,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.push(tab",{"_index":2159,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.textvalue",{"_index":1234,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.thedialog",{"_index":1767,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.center().open",{"_index":1762,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.open",{"_index":1763,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thegrid",{"_index":2026,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord",{"_index":2071,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.deleterecord(this.queryband.cascadedeleterecord",{"_index":2087,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.refresh().then",{"_index":2077,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.exportgridtoexcel",{"_index":2044,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider",{"_index":2027,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider().models",{"_index":2029,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.loaddata(query",{"_index":2063,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model",{"_index":2084,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype",{"_index":2094,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.primarykey_",{"_index":2104,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.tablename",{"_index":2101,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.optimizegridloading",{"_index":2072,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.recordselected.subscribe((record",{"_index":2052,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.refresh",{"_index":2090,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.resize",{"_index":2067,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.selectedrows",{"_index":2031,"title":{},"body":{"components/RecordList.html":{}}}],["this.thequeryband.thecustomquery",{"_index":555,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.clearqueryform",{"_index":560,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.currentquery",{"_index":584,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.tipslist",{"_index":1596,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.totalrecordcount",{"_index":817,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.urlsearchparms.hasownproperty('key",{"_index":2285,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[element",{"_index":2279,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[item[0",{"_index":2277,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userhasloggedin.emit(fourdinterface.currentuser",{"_index":2284,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userisloggedin",{"_index":2283,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.viewref",{"_index":2079,"title":{},"body":{"components/RecordList.html":{}}}],["this.webappversion",{"_index":1642,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.windowheight",{"_index":223,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.windowresized(event",{"_index":2059,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowresized(null",{"_index":2066,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowwidth",{"_index":224,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this['timestamp",{"_index":1355,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field",{"_index":1451,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field.name",{"_index":1336,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[fieldname",{"_index":1369,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["those",{"_index":330,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["three",{"_index":2395,"title":{},"body":{"index.html":{}}}],["throughout",{"_index":328,"title":{},"body":{"classes/Base64.html":{}}}],["throw",{"_index":335,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["thru",{"_index":1082,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["time",{"_index":1171,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["timestamp",{"_index":1357,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["timeto4dformat(thedate",{"_index":1173,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tips",{"_index":1569,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["tipslist",{"_index":1556,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["title",{"_index":189,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["title(v",{"_index":1591,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["to/from",{"_index":1032,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["todo",{"_index":1746,"title":{},"body":{"injectables/Modal.html":{}}}],["toggledropdown",{"_index":549,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["token",{"_index":1725,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["tokens",{"_index":2434,"title":{},"body":{"index.html":{}}}],["top",{"_index":88,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["top:5px",{"_index":473,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tort",{"_index":2539,"title":{},"body":{"license.html":{}}}],["total",{"_index":753,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["totalrecordcount",{"_index":681,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["traffic",{"_index":1031,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["transform",{"_index":424,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transform(value",{"_index":425,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transition:opacity",{"_index":82,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transitions",{"_index":78,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transparent",{"_index":470,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["triangle",{"_index":522,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["trick",{"_index":1768,"title":{},"body":{"injectables/Modal.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":1877,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["true|false",{"_index":1441,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["try",{"_index":2062,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["tslint",{"_index":981,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tslint:disable",{"_index":969,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["tv",{"_index":1129,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["two",{"_index":934,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["type",{"_index":145,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":774,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["typeof(this[fieldname",{"_index":1373,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["typescript",{"_index":2372,"title":{},"body":{"index.html":{}}}],["ucs2decode",{"_index":2177,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2decode(string",{"_index":2194,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode",{"_index":2178,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode(array",{"_index":2196,"title":{},"body":{"classes/Utf8.html":{}}}],["ui",{"_index":2375,"title":{},"body":{"index.html":{}}}],["ul",{"_index":43,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ul#navigation",{"_index":20,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["undefined",{"_index":875,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["under",{"_index":1133,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["union",{"_index":916,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["unique",{"_index":1268,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["unpaired",{"_index":2248,"title":{},"body":{"classes/Utf8.html":{}}}],["up",{"_index":1097,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["update",{"_index":702,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["update4dlist(listname",{"_index":1120,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["updated",{"_index":705,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["updaterecord",{"_index":1439,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updates",{"_index":1305,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updating",{"_index":1321,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["upon",{"_index":1056,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["url",{"_index":437,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["url(\"/assets/login_splash.png",{"_index":1613,"title":{},"body":{"components/LoginCmp.html":{}}}],["url.split('&').foreach(element",{"_index":2274,"title":{},"body":{"components/WebAppContainer.html":{}}}],["urlencoded",{"_index":1063,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparams",{"_index":1050,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparms",{"_index":2255,"title":{},"body":{"components/WebAppContainer.html":{}}}],["usage",{"_index":438,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["use",{"_index":568,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["useb",{"_index":959,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["used",{"_index":327,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["useful",{"_index":2398,"title":{},"body":{"index.html":{}}}],["user",{"_index":643,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["userhasloggedin",{"_index":2258,"title":{},"body":{"components/WebAppContainer.html":{}}}],["userhassignedin",{"_index":1026,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["userisloggedin",{"_index":2257,"title":{},"body":{"components/WebAppContainer.html":{}}}],["username",{"_index":801,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["using",{"_index":722,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["usually",{"_index":650,"title":{},"body":{"classes/Deferred.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{}}}],["utf8",{"_index":759,"title":{"classes/Utf8.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["utf8.bytearray[utf8.byteindex",{"_index":2235,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.bytecount",{"_index":2232,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.byteindex",{"_index":2237,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.checkscalarvalue(codepoint",{"_index":2223,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.createbyte(codepoint",{"_index":2225,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.readcontinuationbyte",{"_index":2246,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.ucs2decode(string",{"_index":2230,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode",{"_index":2179,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode(bytestring",{"_index":2198,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode",{"_index":2180,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode(string",{"_index":2201,"title":{},"body":{"classes/Utf8.html":{}}}],["utility",{"_index":957,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["v",{"_index":198,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordEditWindow.html":{}}}],["v.buttonlabel",{"_index":1598,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.list",{"_index":1595,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.message",{"_index":1600,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.model.tablename",{"_index":216,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.previousquery",{"_index":217,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.tips",{"_index":1597,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v15",{"_index":1068,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["valid",{"_index":1795,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["validation",{"_index":1799,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value",{"_index":149,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["value.substr(0,2",{"_index":1314,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(3,2",{"_index":1316,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(6,2",{"_index":1318,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.tolocaledatestring",{"_index":856,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["value.touppercase",{"_index":1245,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["value/s",{"_index":1808,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value:'the",{"_index":1461,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["valuechanged",{"_index":1214,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["values",{"_index":883,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["var",{"_index":268,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["variable",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":519,"title":{"miscellaneous/variables.html":{}},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variableslist",{"_index":1465,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["various",{"_index":956,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["version",{"_index":1014,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["very",{"_index":45,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["via",{"_index":2377,"title":{},"body":{"index.html":{}}}],["view",{"_index":1999,"title":{},"body":{"components/RecordList.html":{}}}],["viewcontainerref",{"_index":201,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["viewencapsulation",{"_index":2265,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewencapsulation.none",{"_index":2254,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewref",{"_index":1731,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["visibility",{"_index":85,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:hidden",{"_index":63,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:visible",{"_index":52,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["void",{"_index":166,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["want",{"_index":1477,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["warranties",{"_index":2525,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2520,"title":{},"body":{"license.html":{}}}],["we'll",{"_index":1035,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["web",{"_index":302,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["webappcontainer",{"_index":301,"title":{"components/WebAppContainer.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["webappversion",{"_index":1623,"title":{},"body":{"components/LoginCmp.html":{}}}],["webkit",{"_index":81,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["welcome",{"_index":1617,"title":{},"body":{"components/LoginCmp.html":{}}}],["went",{"_index":1431,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["whether",{"_index":2537,"title":{},"body":{"license.html":{}}}],["whole",{"_index":727,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["whose",{"_index":699,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["wide",{"_index":1739,"title":{},"body":{"injectables/Modal.html":{}}}],["widget",{"_index":2412,"title":{},"body":{"index.html":{}}}],["widgets",{"_index":2376,"title":{},"body":{"index.html":{}}}],["widgets/services",{"_index":2476,"title":{},"body":{"index.html":{}}}],["width",{"_index":34,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width(v",{"_index":1589,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["width:100",{"_index":95,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width:180px",{"_index":70,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["wiki",{"_index":2382,"title":{},"body":{"index.html":{}}}],["win",{"_index":2267,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location",{"_index":2268,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search",{"_index":2269,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search.substr(1",{"_index":2270,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win:windowservice",{"_index":2266,"title":{},"body":{"components/WebAppContainer.html":{}}}],["window",{"_index":605,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["window'},{'name",{"_index":294,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["window:resize",{"_index":1975,"title":{},"body":{"components/RecordList.html":{}}}],["windowbase64",{"_index":359,"title":{},"body":{"classes/Base64.html":{}}}],["windowheight",{"_index":120,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["windowresized",{"_index":1972,"title":{},"body":{"components/RecordList.html":{}}}],["windowresized(event",{"_index":2010,"title":{},"body":{"components/RecordList.html":{}}}],["windows",{"_index":2401,"title":{},"body":{"index.html":{}}}],["windowwidth",{"_index":121,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["without",{"_index":639,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"license.html":{}}}],["work",{"_index":1749,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["workspace",{"_index":1022,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["world",{"_index":1870,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["wrap",{"_index":1377,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["wrapper",{"_index":2431,"title":{},"body":{"index.html":{}}}],["www",{"_index":1062,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["x",{"_index":653,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["xff]/.test(input",{"_index":390,"title":{},"body":{"classes/Base64.html":{}}}],["y",{"_index":1246,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["yes",{"_index":1572,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["yesnomodal",{"_index":304,"title":{"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["yesnomodalcontent",{"_index":2299,"title":{"classes/YesNoModalContent.html":{}},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["yestext",{"_index":2304,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["ymd",{"_index":1166,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["yyyymmdd",{"_index":1159,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["z",{"_index":67,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["z0",{"_index":377,"title":{},"body":{"classes/Base64.html":{}}}],["za",{"_index":376,"title":{},"body":{"classes/Base64.html":{}}}],["zoom",{"_index":895,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdvancedQueryComponent.html":{"url":"components/AdvancedQueryComponent.html","title":"component - AdvancedQueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdvancedQueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/advancedQuery.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                advanced-query\n            \n\n\n            \n                styles\n                \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n            \n\n            \n                template\n                    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n            \n        \n        \n            \n                {{item}}\n            \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n            \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTable\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                windowHeight\n                            \n                            \n                                    Private\n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doQuery\n                            \n                            \n                                isItemSelected\n                            \n                            \n                                lessLines\n                            \n                            \n                                moreLines\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectField\n                            \n                            \n                                showRelatedTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparatorList\n                            \n                            \n                                fieldList\n                            \n                            \n                                queryFieldList\n                            \n                            \n                                relatedOneTables\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface, dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/containers/advancedQuery.ts:190\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparatorList\n                    \n                \n                \n                    \n                        Default value : ['=', '!=', '>', '>=', '\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:163\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldList\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:162\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFieldList\n                    \n                \n                \n                    \n                        Default value : [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }]\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:164\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relatedOneTables\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:165\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doQuery\n                        \n                        \n                    \n                \n            \n            \n                \ndoQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(field: any, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lessLines\n                        \n                        \n                    \n                \n            \n            \n                \nlessLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moreLines\n                        \n                        \n                    \n                \n            \n            \n                \nmoreLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectField\n                        \n                        \n                    \n                \n            \n            \n                \nselectField(event, queryField)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRelatedTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowRelatedTable(event, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:152\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 570\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:169\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/advancedQuery.ts:171\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, ViewContainerRef, AfterViewInit, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'advanced-query',\n    template: `\n    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n                   \n        \n        \n            \n                {{item}}\n                   \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n                   \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n    `,\n    styles: [`\n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    `]\n})\n\nexport class AdvancedQueryComponent implements ICustomModalComponent, AfterViewInit {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    };\n\n    @Input() public fieldList: Array = [];\n    @Input() public comparatorList = ['=', '!=', '>', '>=', ' {\n            if (!field.related && field.longname && field.longname !== '') { this.fieldList.push(field) }\n        });\n        this.currentTable = v.model.tableName;\n        if (v.previousQuery) {\n            this.queryFieldList = v.previousQuery;\n        } else {\n            this.queryFieldList = [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }];\n        }\n        this.relatedOneTables = [this.currentTable];\n        for (let index = 0; index  1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    selectField(event, queryField) {\n        if (event.target.selectedIndex > 0) {\n            queryField.field = queryField.listOfFields[event.target.selectedIndex - 1];\n        } else {\n            queryField.field = { type: 'string', name: '' };\n        }\n    }\n\n    isItemSelected(field: any, queryField: any): string {\n        return (queryField.name === field.name) ? 'selected' : '';\n    }\n\n    doQuery() {\n        const queryItems = [];\n        this.queryFieldList.forEach(element => {\n            if (element.field.name !== '' && element.comparator !== '') {\n                const theField: any = element.field;\n                if (element.comparator === '!=') { element.comparator = '#'; }\n                const theValue = (theField.type === 'Date')?element.value.replace(/-/g,''):element.value;\n                queryItems.push(theField.longname + ';' + element.comparator + ';' + theValue + ';' + element.connector);\n            }\n        });\n        this.dialog.close({ query: queryItems, queryFields: this.queryFieldList });\n    }\n\n    moreLines() {\n        const queryID = 'query' + this.queryFieldList.length;\n        this.queryFieldList.push({ id: queryID, field: { type: 'string', name: '' }, comparator: '=', value: '', connector: ' And', queryTable: this.currentTable, listOfFields: this.fieldList }); // add a new query line\n        this.windowHeight += 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    lessLines() {\n        this.queryFieldList.pop(); // remove last item\n        this.windowHeight -= 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    showRelatedTable(event, queryField: any) {\n        queryField.queryTable = event.target.textContent;\n        this.fourD.call4DRESTMethod('REST_GetFieldsInTable', { TableName: queryField.queryTable })\n            .subscribe(resultJSON => {\n                queryField.listOfFields = resultJSON.fieldList;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                »                                                    {{relatedTable}}                                                                                                                                    {{field.longname}}                                                        {{item}}                                                                                                                                        Can\\'t query on Object fields            Can\\'t query on Object fields            Can\\'t query on Blob fields            Can\\'t query on Blob fields            Can\\'t query on Picture fields                                                And                Or                                                 More...            Less...                Query    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'AdvancedQueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base64.html":{"url":"classes/Base64.html","title":"class - Base64","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base64\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/base64.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                error\n                            \n                            \n                                InvalidCharacterError\n                            \n                            \n                                    Private\n                                    Static\n                                REGEX_SPACE_CHARACTERS\n                            \n                            \n                                    Private\n                                    Static\n                                TABLE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decode\n                            \n                            \n                                    Static\n                                encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InvalidCharacterError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\tthis.message = message;\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            REGEX_SPACE_CHARACTERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[\\t\\n\\f\\r ]/g\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            TABLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Base64 {\n\n\n\t/*--------------------------------------------------------------------------*/\n\n\tInvalidCharacterError = function (message) {\n\t\tthis.message = message;\n\t};\n\n\tprivate static error = function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t};\n\n\tprivate static TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tprivate static REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tpublic static decode(input): string {\n\t\tinput = String(input)\n\t\t\t.replace(Base64.REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\tBase64.error(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position > (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tpublic static encode(input): string {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\tBase64.error(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position > 18 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) > 10) +\n\t\t\t\tBase64.TABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt((buffer > 2) +\n\t\t\t\tBase64.TABLE.charAt((buffer \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Base64ImageRef.html":{"url":"pipes/Base64ImageRef.html","title":"pipe - Base64ImageRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Base64ImageRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/Base64ImageRef.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        base64ImageRef\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, imageType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/Base64ImageRef.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    imageType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'jpeg'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n/*\n * Convert a Base64 Image string into an embedded Image URL \n * Usage:\n *   value | base64ImageRef {:type}\n * Parameters:\n *   optional image type parameter, default is \"jpeg\"\n*/\n@Pipe({name: 'base64ImageRef'})\nexport class Base64ImageRef implements PipeTransform {\n  transform(value: string, imageType: string = 'jpeg'): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('data:image/'+imageType+';base64,'+value);\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CustomButtonBarDirective.html":{"url":"directives/CustomButtonBarDirective.html","title":"directive - CustomButtonBarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CustomButtonBarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        custombuttonbar\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deferred.html":{"url":"classes/Deferred.html","title":"class - Deferred","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deferred\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promise\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FourDCollection.html":{"url":"injectables/FourDCollection.html","title":"injectable - FourDCollection","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FourDCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDCollection.ts\n        \n\n            \n                Description\n            \n            \n                This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                currentRecord\n                            \n                            \n                                    Public\n                                filterOptions\n                            \n                            \n                                    Private\n                                fourD\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                models\n                            \n                            \n                                    Public\n                                orderBy\n                            \n                            \n                                    Public\n                                queryString\n                            \n                            \n                                    Public\n                                totalRecordCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bulkDelete\n                            \n                            \n                                    Public\n                                bulkUpdate\n                            \n                            \n                                    Public\n                                getColumnListJSON\n                            \n                            \n                                    Public\n                                getRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bulkDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkDelete(query: FourDQuery, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:166\n                \n            \n\n\n            \n                \n                    Delete a selection of records based on a supplied query+filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FourDQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional, FourDQuery to further filter records to he retrieved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns a Promise for the database operation, whose result is the 3 of records deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bulkUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:195\n                \n            \n\n\n            \n                \n                    Update a selection of records on a FourDCollection\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns a Promise for the database operation, blank means all records have been updated\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnListJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnListJSON(columns: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:54\n                \n            \n\n\n            \n                \n                    prepares the JSON field description to send to 4D, listing the columns to retrieve\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a JSON string listing the fields/columns to retrieve for each record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecords(query: FourDQuery, columns: Array, startRec: number, numOfRecords: number, filter: string, orderby: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:103\n                \n            \n\n\n            \n                \n                    Retrieves a list of records using a query string \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FourDQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n\n                                    \n                                \n                                \n                                    startRec\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        the starting record number to retrieve, used for paging.\n\n                                    \n                                \n                                \n                                    numOfRecords\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        -1\n                                    \n\n                                    \n                                        the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional, FourDQuery to further filter records to he retrieved\n\n                                    \n                                \n                                \n                                    orderby\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional order By clause to retrieve records in a set order.  in the format:    >table.field : to sort records by table.field in ascending order    \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:29\n                            \n                        \n\n                \n                    \n                        the default list of field/column names to be populated on each Collection record data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRecord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:32\n                            \n                        \n\n                \n                    \n                        holds current record from the current selection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:26\n                            \n                        \n\n                \n                    \n                        default filter to be applied on all queries \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fourD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n                \n                    \n                        injected FourDInterface service \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:18\n                            \n                        \n\n                \n                    \n                        the model this collection is based on \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:20\n                            \n                        \n\n                \n                    \n                        array of models in the collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:22\n                            \n                        \n\n                \n                    \n                        default order by string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDQuery\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:24\n                            \n                        \n\n                \n                    \n                        default query string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalRecordCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:34\n                            \n                        \n\n                \n                    \n                        holds the total # of records found on the latest query \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/js44D/JSFourDCollection.ts:235\n                                \n                            \n                    \n                        \n                                returns the length of the Collection, or the # of records loaded in\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDModel } from './JSFourDModel';\n\n/**\n * This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n */\n@Injectable()\nexport class FourDCollection {\n\n    //\n    // FourDCollection properties\n    //\n    /** the model this collection is based on */\n    public model: any;\n    /** array of models in the collection */\n    public models: Array = [];\n    /** default order by string */\n    public orderBy: string;\n    /** default query string */\n    public queryString: FourDQuery = null;\n    /** default filter to be applied on all queries */\n    public filterOptions: string;\n\n    /** the default list of field/column names to be populated on each Collection record data */\n    public columns: Array = [];\n\n    /** holds current record from the current selection */\n    public currentRecord: FourDModel;\n    /** holds the total # of records found on the latest query */\n    public totalRecordCount = 0;\n\n    /** injected FourDInterface service */\n    private fourD: FourDInterface;\n\n    //\n    // constructor: initialize collection properties\n    //\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n    /**\n     * prepares the JSON field description to send to 4D, listing the columns to retrieve\n     * \n     *  @param columns a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n     * \n     *  @returns a JSON string listing the fields/columns to retrieve for each record\n     */\n    public getColumnListJSON(columns: Array): string {\n        if (!columns) { columns = this.columns; }\n        const colList: Array = [];\n        const modelDef = (this.model);\n        let theModel: FourDModel = (new modelDef());\n        let fld: any;\n        for (const col of columns) {\n            if (typeof (col) === 'string') {\n                if (col.indexOf('.') > 0) { // is this a longname field?\n                    colList.push({ name: col.substr(col.indexOf('.') + 1), field: col });\n                } else { // nope, so let's see if we have it in our datamodel\n                    fld = theModel.getFieldProperties(col);\n                    if (fld) { // field in our datamodel, use its properties\n                        if (fld.formula) {\n                            colList.push({ name: fld.name, formula: fld.formula });\n                        } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                    }\n                }\n            } else if (col.field) {\n                theModel = (new modelDef());\n                fld = theModel.getFieldProperties(col.field);\n                if (fld) {\n                    if (fld.formula) {\n                        colList.push({ name: fld.name, formula: fld.formula });\n                    } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                }\n            } else {\n                if (col.formula) {\n                    colList.push({ name: col.name, formula: col.formula });\n                } else if (col.name && col.longname) { colList.push({ name: col.name, field: col.longname }); }\n            }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Retrieves a list of records using a query string \n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *  \n     * @returns returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n     */\n    public getRecords(query: FourDQuery = null, columns: Array = null, startRec: number = 0, numOfRecords: number = -1, filter: string = null, orderby: string = null): Promise> {\n        if (!query) {\n            query = this.queryString;\n        }\n        if (columns) {\n            this.columns = columns;\n        }\n        if (!filter || filter === '') {\n            filter = this.filterOptions;\n        }\n        if (!orderby || orderby === '') {\n            orderby = this.orderBy;\n        }\n\n        const body: any = { Username: FourDInterface.currentUser };\n        const modelDef = (this.model);\n        let newModel: FourDModel = (new modelDef());\n        body.TableName = newModel.tableName;\n        body.StartRec = startRec;\n        body.NumRecs = numOfRecords;\n\n        body.QueryString = JSON.stringify(query);\n        body.Columns = Base64.encode(Utf8.utf8encode((columns) ? this.getColumnListJSON(columns) : this.getColumnListJSON(newModel.getColumnList())));\n\n        if (filter) { body.FilterOptions = filter; }\n        if (orderby) { body.OrderBy = orderby; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetRecords', body)\n                .subscribe(resultJSON => {\n                    this.totalRecordCount = 0;\n                    this.models = [];\n                    if (resultJSON && resultJSON['selected'] && resultJSON['records']) {\n                        this.totalRecordCount = parseInt(resultJSON['selected']);\n                        const recList: Array = resultJSON['records'];\n                        recList.forEach(record => {\n                            newModel = (new modelDef());\n                            newModel.populateModelData(record);\n                            newModel.clearRecordDirtyFlag();\n                            this.models.push(newModel);\n                        });\n                    }\n\n                    resolve(this.models);\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n\n    /**\n     * Delete a selection of records based on a supplied query+filter\n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *\n     * @returns returns a Promise for the database operation, whose result is the 3 of records deleted\n     */\n    public bulkDelete(query: FourDQuery, filter: string = null): Promise {\n        const modelDef = (this.model);\n        const newModel: FourDModel = (new modelDef());\n        let body: any = { TableName: newModel.tableName };\n        body.QueryString = JSON.stringify(query);\n        if (filter) { body.FilterOptions = filter; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_BulkDelete', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON && resultJSON.valid) {\n                        resolve(resultJSON.deleted);\n                    } else reject(resultJSON.message)\n\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n    /**\n    * Update a selection of records on a FourDCollection\n    *\n    * @returns returns a Promise for the database operation, blank means all records have been updated\n    */\n    public bulkUpdate(): Promise {\n        let recordList = [];\n        //\n        // build list of records to update, with the modified fields data\n        //\n        for (const record of (this.models as Array)) {\n            if (record.recordIsDirty()) {\n                recordList.push({ table: record.tableName, recnum: record.recordNumber, fields: Base64.encode(Utf8.utf8encode(record.recordToJSON('update', false)))});\n            }\n        }\n\n        if (recordList.length > 0) { // do we have any record to update?\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_BulkUpdate', { recordList: Base64.encode(Utf8.utf8encode(JSON.stringify(recordList)))})\n                    .subscribe(resultJSON => {\n                        if (resultJSON && resultJSON.valid) {\n                            resolve('');\n                        } else reject(resultJSON.message)\n\n                    },\n                        error => {\n                            console.log('error:' + error);\n                            reject(error);\n                        });\n            });\n        \n        } else {\n            return new Promise((resolve, reject) => {\n                resolve('No records have been modified!');\n            });\n        }\n\n    }\n\n\n    /**\n     * returns the length of the Collection, or the # of records loaded in\n     */\n    public get length(): number {\n        return this.models.length;\n    }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FourDDateToString.html":{"url":"pipes/FourDDateToString.html","title":"pipe - FourDDateToString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FourDDateToString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/FourDDateToString.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fourDDateToString\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/FourDDateToString.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/*\n * Convert a 4D Date string into Locale Date String \n * Usage:\n *   value | fourDDateToLocaleString \n * \n*/\n@Pipe({name: 'fourDDateToString'})\nexport class FourDDateToString implements PipeTransform {\n    transform(value): string {\n        if (value) {\n            if (typeof (value) === 'string' && value !== '') {\n                const date = new Date(value.replace(/-/g, '\\/'));\n                return date.toLocaleDateString();\n            } else return value.toLocaleDateString();\n        } else return ''; // handle case where date field is null/undefined\n      }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDDropDown.html":{"url":"components/FourDDropDown.html","title":"component - FourDDropDown","body":"\n                   \n\n\n\n\n\n  Components\n  FourDDropDown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDDropDown.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-dropdown\n            \n\n\n            \n                styles\n                .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n            \n\n            \n                template\n                \n    {{item}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isItemSelected\n                            \n                            \n                                    Private\n                                loadListFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listName\n                            \n                            \n                                listOptions\n                            \n                            \n                                selectedValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listOptions\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(item: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadListFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadListFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-dropdown',\n    styles: [`.fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            `],\n    template: `\n        \n            {{item}}\n        \n       `\n})\n\n@Injectable()\nexport class FourDDropDown implements AfterViewInit {\n    @Input() public listName: string;\n    @Input() public selectedValue: string;\n    @Input() public listOptions: Array = [];\n\n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadListFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(user => {\n                this.loadListFrom4D();\n            })\n        }\n    }\n\n    isItemSelected(item: string): string {\n        return (item === this.selectedValue) ? 'selected' : '';\n    }\n\n    private loadListFrom4D() {\n        if (this.listName) {\n            this.fourD.get4DList(this.listName)\n                .then((values) => {\n                    this.listOptions = ['', ...values];\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n    \n            .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{item}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDDropDown'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FourDModule.html":{"url":"modules/FourDModule.html","title":"module - FourDModule","body":"\n                   \n\n\n\n\n    Modules\n    FourDModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fourD.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FourDCollection\n                        \n                        \n                            FourDInterface\n                        \n                        \n                            FourDModel\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDInterface } from './js44D/JSFourDInterface';\nimport { FourDModel } from './js44D/JSFourDModel';\nimport { FourDCollection } from './js44D/JSFourDCollection';\n\n@NgModule({\n      imports: [HttpClientModule],\n      providers: [HttpClient, FourDInterface, FourDModel, FourDCollection],\n      exports: [HttpClientModule]\n})\nexport class FourDModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FourDQuery.html":{"url":"classes/FourDQuery.html","title":"class - FourDQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FourDQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                Describes the properties of a 4D Query String  - see RESTApi documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                custom\n                            \n                            \n                                    Optional\n                                intersection\n                            \n                            \n                                    Optional\n                                join\n                            \n                            \n                                    Optional\n                                joinFK\n                            \n                            \n                                    Optional\n                                joinPK\n                            \n                            \n                                    Optional\n                                joinTable\n                            \n                            \n                                    Optional\n                                query\n                            \n                            \n                                    Optional\n                                sql\n                            \n                            \n                                    Optional\n                                union\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:685\n                            \n                        \n\n                \n                    \n                        Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            intersection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:683\n                            \n                        \n\n                \n                    \n                        An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            join\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:687\n                            \n                        \n\n                \n                    \n                        Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinFK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:693\n                            \n                        \n\n                \n                    \n                        A join query property. The main table foreign key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinPK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:691\n                            \n                        \n\n                \n                    \n                        A join query property. The join table primary key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:689\n                            \n                        \n\n                \n                    \n                        A join query property. This is the join table, a table name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:677\n                            \n                        \n\n                \n                    \n                        Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:679\n                            \n                        \n\n                \n                    \n                        Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            union\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:681\n                            \n                        \n\n                \n                    \n                        An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDRegistryInput.html":{"url":"components/FourDRegistryInput.html","title":"component - FourDRegistryInput","body":"\n                   \n\n\n\n\n\n  Components\n  FourDRegistryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDRegistryInput.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-registry-input\n            \n\n\n\n            \n                template\n                \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanValue\n                            \n                            \n                                    Private\n                                originalValue\n                            \n                            \n                                    Public\n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadValueFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                defaultValue\n                            \n                            \n                                inputType\n                            \n                            \n                                parameterValue\n                            \n                            \n                                selectorValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        className\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parameterValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectorValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadValueFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadValueFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            originalValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            textValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-registry-input',\n    template: `\n        \n            \n            \n        \n       `\n})\n\n@Injectable()\nexport class FourDRegistryInput implements AfterViewInit {\n\n    @Input() public className: string;\n    @Input() public parameterValue: string;\n    @Input() public selectorValue: string;\n    @Input() public defaultValue: string;\n    @Input() public inputType: string;\n    \n    public textValue: string = '';\n    public booleanValue: boolean = false;\n    private originalValue: string = '';\n    \n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadValueFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(() => {\n                this.loadValueFrom4D();\n            })\n        }\n    }\n\n    public valueChanged() {\n        if (this.inputType === 'checkbox') {\n            this.textValue = (this.booleanValue)?'Y':'N';\n        }\n        if (this.originalValue != this.textValue) {\n            this.fourD.setRegistryValue(this.className, this.parameterValue, this.textValue, this.selectorValue)\n                .then (v => {this.originalValue = this.textValue;});\n        }\n    }\n\n    private loadValueFrom4D() {\n        if (this.className && this.className != '' && this.parameterValue && this.parameterValue != '') {\n            this.fourD.getRegistryValue(this.className, this.parameterValue, this.defaultValue, this.selectorValue)\n                .then((value) => {\n                    this.originalValue = this.textValue = value;\n                    this.booleanValue = (value.toUpperCase() == \"Y\");\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDRegistryInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModal.html":{"url":"classes/ICustomModal.html","title":"class - ICustomModal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModal.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ICustomModal { }\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModalComponent.html":{"url":"classes/ICustomModalComponent.html","title":"class - ICustomModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModalComponent.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                beforeClose\n                            \n                            \n                                    Optional\n                                beforeDismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeClose\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeClose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:18\n                \n            \n\n\n            \n                \n                    Invoked before a modal is closed, return true to cancel closing.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeDismiss\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:13\n                \n            \n\n\n            \n                \n                    Invoked before a modal is dismissed, return true to cancel dismissal.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * A Type used as a binding key for dialog window Components\n */\n\nexport class ICustomModalComponent {\n    dialog: ModalDialogInstance;\n\n    /**\n     * Invoked before a modal is dismissed, return true to cancel dismissal.\n     */\n    beforeDismiss?(): boolean;\n\n    /**\n     * Invoked before a modal is closed, return true to cancel closing.\n     */\n    beforeClose?(): boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldDescription.html":{"url":"interfaces/IFieldDescription.html","title":"interface - IFieldDescription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFieldDescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDModel.ts\n        \n\n            \n                Description\n            \n            \n                This is the description for each field in a Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        formula\n                                \n                                \n                                        indexed\n                                \n                                \n                                        isrelated\n                                \n                                \n                                        joinFK\n                                \n                                \n                                        joinPK\n                                \n                                \n                                        length\n                                \n                                \n                                        list\n                                \n                                \n                                        longname\n                                \n                                \n                                        name\n                                \n                                \n                                        readonly\n                                \n                                \n                                        relatesTo\n                                \n                                \n                                        required\n                                \n                                \n                                        subTable\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    not used \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formula\n                                    \n                                \n                                \n                                    \n                                        formula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a calculated value, this is a 4D expresstion that returns the field contents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexed\n                                    \n                                \n                                \n                                    \n                                        indexed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates that the field is indexed on 4D side \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isrelated\n                                    \n                                \n                                \n                                    \n                                        isrelated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field comes from a related table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinFK\n                                    \n                                \n                                \n                                    \n                                        joinFK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the foreign key field in the main table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinPK\n                                    \n                                \n                                \n                                    \n                                        joinPK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the primary key field in the related many table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if an alpha field, the field length as defined in the 4D Structure \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the choice list associated to the field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longname\n                                    \n                                \n                                \n                                    \n                                        longname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field dot long name, in the format 'table.field', applicable if a database field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field name, must be unique in the Data Model \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field is read only, and can't me modified \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatesTo\n                                    \n                                \n                                \n                                    \n                                        relatesTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a foreign key that relates to a one table, this is the related one field name in dot long format \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is a required field, cannot be empty or null \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTable\n                                    \n                                \n                                \n                                    \n                                        subTable:         FourDModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FourDModel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable (related many table), this is the FourDModel that represents records in that table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is unique \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDCollection } from './JSFourDCollection';\n\n/**\n * This is the description for each field in a Data Model\n */\nexport interface IFieldDescription {\n    /** the field name, must be unique in the Data Model */\n    name: string;\n    /** the field dot long name, in the format 'table.field', applicable if a database field */\n    longname: string;\n    /** the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture */\n    type: string;\n    /** if field is a calculated value, this is a 4D expresstion that returns the field contents */\n    formula: string;\n    /** if field is a subtable (related many table), this is the FourDModel that represents records in that table */\n    subTable: FourDModel;\n    /** not used */\n    className: string;\n    /** if field is a subtable, this is the foreign key field in the main table */\n    joinFK: string;\n    /** if field is a subtable, this is the primary key field in the related many table */\n    joinPK: string;\n    /** indicates field comes from a related table */\n    isrelated: boolean;\n    /** if field is a foreign key that relates to a one table, this is the related one field name in dot long format */\n    relatesTo: string;\n    /** indicates field is read only, and can't me modified */\n    readonly: boolean;\n    /** the choice list associated to the field */\n    list: string;\n    /** field is a required field, cannot be empty or null */\n    required: boolean;\n    /** indicates that the field is indexed on 4D side */\n    indexed: boolean;\n    /** field is unique */\n    unique: boolean;\n    /** if an alpha field, the field length as defined in the 4D Structure */\n    length: number;\n}\n\n/**\n * Individual 4D Datamodel that replicates a 4D Table's structure and provides a CRUD API to 4D data\n */\n@Injectable()\nexport class FourDModel {\n    /** 4D's Table name */\n    public tableName = '';\n    /** 4D's table number */\n    public tableNumber = 0;\n    /** Table's primary key field name */\n    public primaryKey_: string;\n\n    /** record number field/attribute name, usually '_recnum' */\n    public idAttribute = '_recnum';\n\n    /** Table definition, array describing all fields in the Data Model and how they map to the 4D Structure */\n    public fields: Array = [];\n\n    /** callback method to be executed on 4D side before a Save operation */\n    public fourdSaveCallbackMethod_: string;\n    /** callback method to be executed on 4D side before a Delete operation */\n    public fourdDeleteCallbackMethod_: string;\n\n    // injected FourDInterface service\n    public fourD: FourDInterface;\n\n    // -----------------------\n    // Private variables\n    // -----------------------\n    // current record number\n    private _recnum = -3;\n    // keeps all attributes for the current model\n    private _attributes: Object = {};\n    // keep a list of modified fields, to optimize Updates, only modified data is set to 4D\n    private _modified: Object = {};\n\n\n    /** \n     * constructor: initialize model properties\n    */\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n\n    /**\n     * Get a field value\n     */\n    get(field: string): any {\n        return this._attributes[field];\n    }\n\n    /**\n     * Set a field value, updates field modified flag\n     */\n    set(field: string, value: any) {\n        if (this.getFieldProperties(field)) {\n            if (this.getFieldDescription(field).type === 'Date') {\n                if (typeof (value) === 'string' && value !== '') {\n                    value = new Date(value.replace(/-/g, '\\/'));\n                }\n            } else if (this.getFieldDescription(field).type === 'Time') {\n                if (typeof (value) === 'string' && value !== '') {\n                    const hh = +value.substr(0,2);\n                    const mm = +value.substr(3,2);\n                    const ss = +value.substr(6,2);\n                    value = new Date(0,0,0,hh,mm,ss);\n                }\n            }\n            if (this._attributes.hasOwnProperty(field)) {\n                // we are updating an attribute\n                if (this._attributes[field] !== value) {\n                    // make sure value is indeed changing...\n                    this._attributes[field] = value;\n                    this._modified[field] = true; // mark field as modified\n                }\n            } else {\n                // setting a new attribute\n                this._attributes[field] = value;\n                this._modified[field] = true; // mark field as modified\n            }\n        } else {\n            this._attributes[field] = value;\n        }\n    }\n\n    /**\n     * Returns the description for a given field\n     * \n     * @param fieldName the field name to get properties for\n     * \n     * @returns the field name properties, an IFieldDescription instance\n     * \n     */\n    getFieldProperties(fieldName): IFieldDescription {\n        let ret: IFieldDescription = null;\n        for (const col of this.fields) {\n            if (col.name === fieldName) { ret = col; }\n        };\n        return ret;\n    }\n\n\n    /**\n     * Clears up all record fields\n     */\n    clearRecord() {\n        for (const field of this.fields) {\n            switch (field.type) {\n                case 'date':\n                case 'Date':\n                    this[field.name] = null;\n                    break;\n\n                case 'time':\n                case 'Time':\n                    this[field.name] = null;\n                    break;\n\n                case 'boolean':\n                    this[field.name] = false;\n                    break;\n\n                case 'string':\n                case 'text':\n                    this[field.name] = '';\n                    break;\n\n                case 'number':\n                    this[field.name] = 0;\n                    break;\n\n                case 'json':\n                    this[field.name] = {};\n                    break;\n\n                case 'blob':\n                case 'picture':\n                    this[field.name] = null;\n                    break;\n\n                default:\n                    this[field.name] = '';\n                    break;\n            }\n        };\n\n    }\n\n    /**\n     * Serializes record data into its JSON representation as used in 4D\n     *\n     * @param mode can be 'insert' or 'update', if mode is 'update' the JSON string will contain only fields that have been modified\n     * @param noAudit 'no audit' flag to be sent to 4D, if 'true' record audit log will be disabled \n     * \n     * @returns record contents as JSON string\n     *\n     */\n    recordToJSON(mode: string, noAudit: boolean): string {\n        const recordData: Object = { table: this.tableName, recnum: this.recordNumber };\n        // set callback methods\n        if (this.fourdSaveCallbackMethod_) {\n            recordData['saveCallback'] = this.fourdSaveCallbackMethod_; // set save callback method if set\n        }\n\n        recordData['noAudit'] = noAudit;    // disable audit log for this record\n\n        if ((mode === 'update') && this.hasOwnProperty('TimeStamp')) {\n            recordData['timeStamp'] = this['TimeStamp'];\n        } // if updating, add current record's timestamp attribute\n\n        recordData['fields'] = {}; // initialize fields propriety\n        for (const field of this.fields) {\n            const fieldName: string = field.name;\n            if (!this.isCalculatedField(field) &&\n                !this.isSubtable(field) &&\n                !this.isRelatedField(field) &&\n                (!this.isReadOnly(field) || (mode === 'insert')) &&\t\t\t// May/15/09 send all non-read only fields, empty or not\n                (this.isModifiedField(fieldName) || (mode === 'insert'))) { \t// Nov 18/09 send ONLY fields that have indeed been modified\n                let value = '';\n                if (((this[fieldName] !== null) && (this[fieldName] !== undefined)) || (field.type === 'boolean')) {\n                    // send back only fields that do have some value and that belong to the table\n                    // ignore calculated or related fields\n                    switch (field.type) {\n                        case 'Date':\n                        case 'date':\n                            if (typeof(this[fieldName]) === 'string') {\n                                recordData['fields'][field.longname] = this[fieldName]; \n                            } else {\n                                const dateValue: Date = this[fieldName];\n                                value = dateValue.getFullYear().toString();\n                                if (dateValue.getMonth() '; // if blob, wrap data inside a cdata\n                             }\n                             */\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n\n                        default:\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n                    }\n                }\n\n\n            }\n        };\n\n        return JSON.stringify(recordData);\n\n    }\n\n\n    /**\n     * Retrieve a record from 4D and populates the Data Model.\n     *\n     * @param recordNumber the record # to retrieve (optional, it defaults to the currentRecordNumber property)\n     * @param recordID primary key value for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     *    if specified the record is retrieved by querying on its primary key field\n     * @param query query string for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     * \n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     *\n     */\n    public getRecord(recordNumber: number = null, recordID: string = null, query: FourDQuery = null): Promise {\n        if (query) {\n            // if we have a query, use it...\n        } else if (recordID && FourDInterface.fourdAPIVersion = 0 || this.recordNumber >= 0 || (recordID && FourDInterface.fourdAPIVersion >= '1.18.06.17a' && this.primaryKey_)) {\n            // if we have a record number, use it directly then\n            if (recordNumber >= 0) { this.recordNumber = recordNumber; }\n\n            // build request body with record number to retrieve\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            if (recordID) {\n                body.RecordID = recordID; // if querying record using record ID...             \n            } else {\n                body.RecordNum = this.recordNumber;\n            }\n            body.VariablesList = Base64.encode(Utf8.utf8encode(this.getColumnListJSON()));\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_LoadData', body)\n                    .subscribe(resultJSON => {\n                        this.clearRecord();\n                        this.populateModelData(resultJSON);\n                        this.clearRecordDirtyFlag();\n                        resolve(this);\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n        } else { \n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n\n        }\n\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        const me = this;\n\n        // first we send to query to 4D to get all records that match the query criteria\n        // then if at lest 1 record is returned by 4D, we use it's record number to refresh to complete record contents\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, [this.primaryKey_])\n                .then((reclist) => {\n                    if (records.models.length > 0) {\n                        me.recordNumber = records.models[0].recordNumber; // set the record number and refresh it\n                        me.refresh().then((rec) => { rec.clearRecordDirtyFlag(); resolve(me); }).catch((error) => { reject(error); });\n                    } else { reject('recordNotFound'); }\n                })\n                .catch((error) => { reject(error); });\n        });\n\n\n    }\n\n    /**\n     * Refresh current record, grab a fresh copy from 4D\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public refresh(): Promise {\n        if (this.recordNumber >= 0) {\n            return this.getRecord(this.recordNumber);\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n\n    }\n\n\n    /**\n     * Insert a new record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance. the primary key property is set after the record is inserted\n     *\n     */\n    public insertRecord(): Promise {\n        const body: any = { Username: FourDInterface.currentUser };\n        body.TableName = this.tableName;\n        body.RecordNum = this.recordNumber;\n        if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n        body.Action = 'add';\n        body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('add', false)));\n\n        return new Promise((resolve, reject) => {\n            const me = this;\n            this.fourD.call4DRESTMethod('REST_PostData', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.returnCode === 'OK') {\n                        // insert record went OK, retrieve calculated return code & record ID\n                        me.recordNumber = resultJSON['_recnum'];\n                        if (me.primaryKey_ && me.primaryKey_ !== '') { me[me.primaryKey_] = resultJSON['recordID']; }\n                        me.clearRecordDirtyFlag(); // clean up modified fields\n                        resolve(me);\n                    } else { reject(resultJSON.returnCode); }\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error.text());\n                    });\n        });\n\n\n    }\n\n    /**\n     * Update record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public updateRecord(): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n            body.Action = 'update';\n            body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('update', false)));\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // update record went OK\n                            me.clearRecordDirtyFlag(); // clean up modified fields\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n    }\n\n    /**\n     * Delete record from the database\n     *\n     * @param cascade true|false indicates if 4D should perform a cascade delete (optional, default=false)\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public deleteRecord(cascade: boolean = false): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdDeleteCallbackMethod_) { body.CallBackMethod = this.fourdDeleteCallbackMethod_; }\n            body.Action = 'delete';\n            if (cascade) { body.cascadeDelete = cascade; }\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // delete record went OK\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n        }\n\n    }\n\n    /**\n     * Populates model with attributes/properties from a json Object\n     *\n     *  @param recordData json object whose properties will be used to populate the Data Model\n     */\n    public populateModelData(recordData: Object) {\n        if (recordData.hasOwnProperty('_recnum')) { this.recordNumber = recordData['_recnum']; }\n        for (const field in recordData) {\n            if (field !== '_recnum' && this.getFieldProperties(field)) {\n                switch (this.getFieldProperties(field).type ) {\n                    case 'json':\n                        this[field] = (recordData[field] && recordData[field] != '')?JSON.parse(recordData[field]):{}; \n                        break;\n                \n                    default:\n                        this[field] = recordData[field];\n                        break;\n                }\n            }\n        }\n\n    }\n\n    public extractModelData(): Object {\n        let data = { _recnum: this._recnum };\n        for (const field of this.fields) {\n            data[field.name] = this[field.name];\n        }\n\n        return data;\n    }\n\n    /**\n     * Retrieves a list of records using a query string\n     *\n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *\n     *\n     * @returns returns a Promise for the database operation, whose result is a FourDCollection with the query results\n     */\n    public getRecords(query: FourDQuery = null,\n        columns: Array = null,\n        startRec: number = 0, numOfRecords: number = -1,\n        filter: string = null,\n        orderby: string = null): Promise {\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, (columns) ? columns : this.getColumnList(), startRec, numOfRecords, filter, orderby)\n                .then((reclist) => { resolve(records); })\n                .catch((error) => { reject(error); });\n        });\n\n    }\n\n    /**\n     * Retrieves a set of variables or 4D execute formula values\n     * \n     * @param values an Array of objects with the following format: {formula: 'a 4d formula', value:'the resulting value returned by 4D'}\n     * @param method the name of a 4D method to be called before processing the formulas\n     *\n     * @returns returns a Promise for the database operation, whose result is the values Array populated by 4D\n     */\n    public getValuesFrom4D(values: Array, method: string = ''): Promise> {\n        const body: any = { VariablesList: Base64.encode(Utf8.utf8encode(JSON.stringify(values))) };\n        if (method && method != '') {\n            body.CallbackMethod = method;\n        }\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetValues', body)\n                .subscribe(result => {\n                    resolve(result);\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error);\n                    });\n        });\n\n    }\n    /**\n     * Get the current record's record number\n     * \n     *  @returns current record number (4D's record number, equivalent to ROWID)\n     *\n     */\n    public get recordNumber(): number {\n        return this._recnum;\n    }\n    public set recordNumber(v: number) { this._recnum = v; }\n\n    /**\n     * Checks to see if a record is currently loaded\n     *\n     * @returns true if a record is loaded into this FourDModel instance\n     *\n     */\n    public isRecordLoaded(): boolean {\n        return (this.recordNumber >= 0);\n    }\n\n\n    /**\n     * Clears record modified flag.\n     * \n     * This can be used when one changes a record programmatically, but does not want to set the record modified flag.\n     * For example on record initialization.\n     *\n     */\n    public clearRecordDirtyFlag() {\n        this._modified = {};\t\t\t\t\t// clear modified fields list\n    }\n\n\n    /**\n     * Check if current record has been modified.\n     *\n     * @returns true indicates that record contents have been modified.\n     *\n     */\n    public recordIsDirty(): boolean {\n        for (const field of this.fields) {\n            if (this._modified.hasOwnProperty(field.name)) { return true; }\n        }\n        return false;\n    }\n\n\n    /**\n     * Prepares the record's JSON field description to send to 4D\n     * \n     * @returns JSON string representing all fields in the Data Model\n     */\n    public getColumnListJSON(): string {\n        const colList: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (col.formula) {\n                colList.push({ name: col.name, formula: col.formula });\n            } else if (col.subTable) {\n                const subFields: Array = [];\n                for (const sub of col.subTable.fields) {\n                    if (sub.formula) { // add support for formulas in subfields\n                        subFields.push({ name: sub.name, formula: sub.formula });\n                    } else {\n                        subFields.push({ name: sub.name, field: sub.longname });\n                    }\n                };\n                colList.push({\n                    name: col.name,\n                    subTable: col.subTable.tableName,\n                    joinFK: col.joinFK,\n                    joinPK: col.joinPK,\n                    subFields: subFields\n                });\n\n            } else if (col.longname) { colList.push({ name: col.name, field: col.longname }); }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Gets a list of fields in the Data Model\n     * \n     * @param includeSubTables if 'true', includes fields in subtables defined in the Data Model\n     * \n     * @returns an array with all fields defined for this data model\n     */\n    public getColumnList(includeSubTables: boolean = false): Array {\n        const cols: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (!this.isSubtable(col) || includeSubTables) {\n                if (col.formula) {\n                    cols.push(col);\n                } else { cols.push(col.name); }\n            }\n        };\n        return cols;\n    }\n\n    /**\n     * Returns a field's longname, given its field name\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field dot longname, as 'table.field'\n     */\n    public getLongname(fieldName: string): string {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field.longname; }\n        }\n\n        // not found, assume table.field\n        return this.tableName + '.' + fieldName;\n    }\n\n    // -----------------------\n    // Private methods\n    // -----------------------\n\n    /**\n     * Returns a field's data model description\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field's iFieldDescription\n     */\n    private getFieldDescription(fieldName: string): IFieldDescription {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field; }\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks to see if a field is from a related table\n     *\n     * @param field field description for the Class definition\n     * @return true if field is on a related table\n     *\n     */\n    private isRelatedField(field: IFieldDescription): boolean {\n        return field.isrelated;\n    }\n\n    /**\n     * Checks to see if a field contents have been modified\n     *\n     * @param field field/property name\n     * @returns true if field has been modified\n     *\n     */\n    private isModifiedField(field: string): boolean {\n        return this._modified.hasOwnProperty(field);\n    }\n\n    /**\n     * Checks to see if a field is a calculated field\n     *\n     * @param field field description from the Data Model\n     * \n     * @returns true if field is formula, a calculated field\n     *\n     */\n    private isCalculatedField(field: IFieldDescription): boolean {\n        return (field.formula !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is a related many subtable\n     *\n     * @param field field description from the Data Model\n     * @returna true if field is a related many subtable\n     *\n     */\n    private isSubtable(field: IFieldDescription): boolean {\n        return (field.subTable !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is read only\n     *\n     * @param field field description from the Data Model\n     * @returns true if field is read only\n     *\n     */\n    private isReadOnly(field: IFieldDescription): boolean {\n        return field.readonly;\n    }\n\n\n\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JS44DModule.html":{"url":"modules/JS44DModule.html","title":"module - JS44DModule","body":"\n                   \n\n\n\n\n    Modules\n    JS44DModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_imports\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_JS44DModule_providers\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nFourDModule\n\nFourDModule\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/js44D.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FourDInterface\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FourDModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDModule } from './fourD.module';\nimport { FourDInterface } from './js44D/JSFourDInterface';\n\nimport { QueryBand, CustomButtonBarDirective, QueryBandDirective } from './containers/queryBand';\nimport { AdvancedQueryComponent } from './containers/advancedQuery';\nimport { RecordList } from './containers/recordList';\nimport { RecordEditWindow } from './containers/recordEditWindow';\nimport { Tabs, Tab } from './containers/tabs';\nimport { WebAppContainer } from './containers/webAppContainer';\nimport { FourDDropDown } from './controls/fourDDropDown';\nimport { QuickFindInput } from './controls/quickFindInput';\nimport { DataGrid } from './dataGrid/dataGrid';\nimport { LoginCmp } from './login/login';\nimport { ListSelectorDialog } from './dialogs/listSelectorDialog';\n\nimport { Base64ImageRef } from './pipes/Base64ImageRef.pipe';\nimport { FourDDateToString } from './pipes/FourDDateToString.pipe';\nimport { FourDRegistryInput } from './controls/fourDRegistryInput';\n\n\n@NgModule({\n      imports: [FormsModule, CommonModule, HttpClientModule, FourDModule],\n      declarations: [ \n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      providers: [HttpClient, FourDInterface],\n      exports: [\n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      entryComponents: [LoginCmp, AdvancedQueryComponent, ListSelectorDialog]\n})\nexport class JS44DModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSelectorDialog.html":{"url":"components/ListSelectorDialog.html","title":"component - ListSelectorDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ListSelectorDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/listSelectorDialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                list-selector\n            \n\n\n\n            \n                template\n                \n    \n        {{item}}\n    \n    \n        {{message}}\n        {{buttonText}}\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelection\n                            \n                            \n                                ok\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                itemsList\n                            \n                            \n                                message\n                            \n                            \n                                tipsList\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                                \n                                    width\n                                \n                                \n                                    title\n                                \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, modal: Modal)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : 'Select'\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tipsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelection\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelection(ev)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(list: string[], tips?: string[], message?: string, buttonLabel?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:64\n                \n            \n\n\n            \n                \n                    Show Me - show the list selector dialog and return a Promise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tips\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    buttonLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n\n                \n                    \n                        setheight(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n\n                \n                    \n                        settitle(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, OnInit, Input } from '@angular/core';\n\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\n@Component({\n    selector: 'list-selector',\n    template: `\n        \n            \n                {{item}}\n            \n            \n                {{message}}\n                {{buttonText}}\n            \n        \n   `,\n    providers: [Modal]\n})\n\nexport class ListSelectorDialog implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    };\n\n    @Input() public itemsList: string[] = [];\n    @Input() public tipsList: string[] = [];\n    @Input() public buttonText = 'Select';\n    @Input() public message = '';\n\n    public set height(v) { this.config.height = v };\n    public set width(v) { this.config.width = v };\n    public set title(v) { this.config.title = v };\n\n\n    public set modelContentData(v) {\n        this.itemsList = v.list;\n        this.tipsList = v.tips;\n        if (v.buttonLabel) { this.buttonText = v.buttonLabel; }\n        if (v.message) { this.message = v.message; }\n    }\n\n    private config: ModalConfig;\n\n    private selectedIndex = -1;\n\n\n    constructor(public dialog: ModalDialogInstance, private modal: Modal) {\n        this.config = ListSelectorDialog.dialogConfig;\n    }\n\n    /**\n     * Show Me - show the list selector dialog and return a Promise\n     */\n    public show(list: string[], tips?: string[], message?: string, buttonLabel?: string): Promise {\n        if (!tips) { tips = list; }\n\n        return this.modal.open(ListSelectorDialog, { list: list, tips: tips, message: message, buttonLabel: buttonLabel }, this.config);\n    }\n\n    changeSelection(ev) {\n        this.selectedIndex = ev.target.selectedIndex;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(this.selectedIndex);\n    }\n\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item}}                {{message}}        {{buttonText}}    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSelectorDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginCmp.html":{"url":"components/LoginCmp.html","title":"component - LoginCmp","body":"\n                   \n\n\n\n\n\n  Components\n  LoginCmp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/login/login.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                log-in\n            \n\n\n            \n                styles\n                \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n            \n\n            \n                template\n                    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fourDVersion\n                            \n                            \n                                password\n                            \n                            \n                                showError\n                            \n                            \n                                username\n                            \n                            \n                                webAppVersion\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fourDVersion\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        webAppVersion\n                    \n                \n                \n                    \n                        Default value : '1.18.02.16a'\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/login/login.ts:62\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\nimport { FourDInterface, MD5 } from '../js44D/JSFourDInterface';\n\n\n@Component({\n    selector: 'log-in',\n    template: `\n    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n    `,\n    styles: [`\n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    `]\n})\nexport class LoginCmp implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    };\n\n    @Input() public username = '';\n    @Input() public password = '';\n    @Input() public showError = false;\n    @Input() public fourDVersion = '';\n    @Input() public webAppVersion = '1.18.02.16a';\n\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            if (parms.hasOwnProperty('version')) {\n                this.webAppVersion = parms['version'];\n            }\n        }\n    }\n\n    constructor(public dialog: ModalDialogInstance, private fourD: FourDInterface) {\n        this.fourD.call4DRESTMethod('REST_GetApplicationVersion', {}, { responseType: 'text' })\n            .subscribe((v) => {\n                this.fourDVersion = v;\n            });\n    }\n\n    login() {\n        // event.preventDefault();\n        const md5pwd: string = MD5.md5(this.password);\n        this.fourD.signIn(this.username, md5pwd.toUpperCase())\n            .then((authentication) => {\n                if (FourDInterface.authentication) {\n                    //  console.log('authenticated');\n\n                    this.showError = false;\n                    if (this.dialog) { this.dialog.close('loggedin'); }\n                } else {\n                    console.log('oops');\n                    this.showError = true;\n                }\n            })\n            .catch((e) => {\n                //console.log(e);\n                this.showError = true;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Welcome, Please Login                    User Name                                        Password                            Login        Sorry, the username and/or password was incorrect    4D: {{fourDVersion}}, web: {{webAppVersion}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginCmp'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MD5.html":{"url":"classes/MD5.html","title":"class - MD5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MD5\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                MD5 has calculation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hex_chr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add32\n                            \n                            \n                                    Static\n                                cmn\n                            \n                            \n                                    Static\n                                ff\n                            \n                            \n                                    Static\n                                gg\n                            \n                            \n                                    Static\n                                hex\n                            \n                            \n                                    Static\n                                hh\n                            \n                            \n                                    Static\n                                ii\n                            \n                            \n                                    Static\n                                md5\n                            \n                            \n                                    Static\n                                md51\n                            \n                            \n                                    Static\n                                md5blk\n                            \n                            \n                                    Static\n                                md5cycle\n                            \n                            \n                                    Static\n                                rhex\n                            \n                            \n                                    Static\n                                str2rstr_utf8\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hex_chr\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : '0123456789abcdef'.split('')\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:456\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            add32\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add32(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:627\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            cmn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cmn(q, a, b, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:536\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    q\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ff\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ff(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:541\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            gg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gg(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:545\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hex(x)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:612\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hh(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:549\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ii\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ii(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:553\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:617\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md51\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md51(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:557\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5blk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5blk(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:592\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5cycle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5cycle(x, k)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:458\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            rhex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rhex(n)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:603\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2rstr_utf8\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2rstr_utf8(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:636\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Modal.html":{"url":"injectables/Modal.html","title":"injectable - Modal","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Modal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/providers/Modal.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostViewRef\n                            \n                            \n                                    Static\n                                openDialogList\n                            \n                            \n                                    Public\n                                theDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openInside\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ViewContainerRef, defaultConfig: ModalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultConfig\n                                                  \n                                                        \n                                                                        ModalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog(event, theDialogInstance: ModalDialogInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    theDialogInstance\n                                    \n                                                ModalDialogInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(componentType: any, parameters?: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:43\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDialog(component: any, parameters: any, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:144\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openInside\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openInside(componentType: Type, viewRef: ViewContainerRef, parameters: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:63\n                \n            \n\n\n            \n                \n                    Opens a modal window inside an existing component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    viewRef\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to block using the modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hostViewRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            openDialogList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Type,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    Injectable,\n    Optional\n} from '@angular/core';\n\n\nimport { ModalConfig } from '../models/ModalConfig';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n\nlet _config: ModalConfig;\n\n// @dynamic\n@Injectable()\nexport class Modal {\n\n    public static hostViewRef: ViewContainerRef;\n    public static openDialogList = [];\n\n    public theDialog: any;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ViewContainerRef,\n        @Optional() defaultConfig: ModalConfig) {\n        // The Modal class should be an application wide service (i.e: singleton).\n        // This will run once in most applications...\n        // If the user provides a ModalConfig instance to the DI,\n        // the custom config will be the default one.\n        _config = (defaultConfig) ? ModalConfig.makeValid(defaultConfig) : new ModalConfig();\n    }\n\n    /**\n     * Opens a modal window blocking the whole screen.\n     * @param componentType The angular Component to render as modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public open(componentType: any, parameters?: any,\n        config?: ModalConfig, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n        // TODO: appRef.injector.get(APP_COMPONENT) Doesn't work.\n        // When it does replace with the hack below.\n        // let viewRef = this.appRef.element.nativeElement.location;\n        // let viewRef: viewRef = this.appRef['_rootComponents'][0].location;\n\n        return this.openInside(componentType, (Modal.hostViewRef) ? Modal.hostViewRef : this.appRef, parameters, config, allowMultiple, dialogID);\n    }\n\n    /**\n     * Opens a modal window inside an existing component.\n     * @param componentType The angular Component to render as modal.\n     * @param viewRef The element to block using the modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public openInside(componentType: Type, viewRef: ViewContainerRef,\n        parameters: any,\n        config?: ModalConfig,\n        allowMultiple: boolean = false,\n        dialogID: string = ''): Promise {\n\n        if (!allowMultiple) {\n            for (let index = 0; index  { this.closeDialog(event, dialogInstance); }\n        }).data('kendoWindow');\n        if (config.selfCentered) {\n            this.theDialog.center().open();\n        } else { this.theDialog.open(); }\n\n        dialogInstance.contentRef = dialogComponentRef;\n        dialogInstance.kendoDialog = this.theDialog;\n\n        // trick to avoid angular2 error \"Expression has changed after it was checked\"\n        dialogComponentRef.changeDetectorRef.detectChanges(); // need this to avoid NG2 error/warning\n\n        // if multiples not allowed, save this instance\n        if (!allowMultiple) {\n            const id = (dialogID && dialogID !== '') ? dialogID : componentType['name'];\n            Modal.openDialogList.push({ component: id, dialog: dialogInstance });\n        }\n\n        return dialogInstance.result;\n\n    }\n\n    public closeDialog(event, theDialogInstance:ModalDialogInstance) {\n        // console.log(event, theDialog);\n        for (let index = 0; index \n     */\n    public openDialog(component: any, parameters: any, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n\n        return this.open(component, parameters, component.dialogConfig, allowMultiple, dialogID);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalConfig.html":{"url":"injectables/ModalConfig.html","title":"injectable - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalConfig.ts\n        \n\n            \n                Description\n            \n            \n                A configuration definition object.\nInstruction for how to show a modal.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                customStyle\n                            \n                            \n                                height\n                            \n                            \n                                isBlocking\n                            \n                            \n                                isDraggable\n                            \n                            \n                                isModal\n                            \n                            \n                                isResizable\n                            \n                            \n                                keyboard\n                            \n                            \n                                minHeight\n                            \n                            \n                                minWidth\n                            \n                            \n                                position\n                            \n                            \n                                selfCentered\n                            \n                            \n                                size\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                makeValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalConfig.ts:86\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeValid(config: ModalConfig, defaultConfig?: ModalConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalConfig.ts:67\n                \n            \n\n\n            \n                \n                    Makes a ModalConfig instance valid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    defaultConfig\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A Default config to use as master, optional.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModalConfig\n\n                    \n                    \n                        ModalConfig The same config instance sent.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Close']\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:24\n                            \n                        \n\n                \n                    \n                        Width of the modal.\nused only if size is 'custom'.\nNOTE: No validation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:31\n                            \n                        \n\n                \n                    \n                        Describes if the modal is blocking modal.\nA Blocking modal is not closable by clicking outside of the modal window.\nDefaults to false.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDraggable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResizable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:39\n                            \n                        \n\n                \n                    \n                        Keyboard value/s that close the modal.\nAccepts either a single numeric value or an array of numeric values.\nA modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\nDefaults to 27, set null implicitly to disable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 100, left: 100 }\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selfCentered\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:17\n                            \n                        \n\n                \n                    \n                        Size of the modal.\n'lg', 'sm' or 'custom'.\nNOTE: No validation.\nDefault to 'lg'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nlet _defaultConfig: ModalConfig;\n\n\n/**\n * A configuration definition object.\n * Instruction for how to show a modal.\n */\n@Injectable()\nexport class ModalConfig {\n    /**\n     * Size of the modal.\n     * 'lg', 'sm' or 'custom'.\n     * NOTE: No validation.\n     * Default to 'lg'\n     */\n    size: string;\n\n    /**\n     * Width of the modal.\n     * used only if size is 'custom'.\n     * NOTE: No validation.\n     */\n    customStyle: string;\n\n    /**\n     * Describes if the modal is blocking modal.\n     * A Blocking modal is not closable by clicking outside of the modal window.\n     * Defaults to false.\n     */\n    isBlocking: boolean;\n\n    /**\n     * Keyboard value/s that close the modal.\n     * Accepts either a single numeric value or an array of numeric values.\n     * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n     * Defaults to 27, set `null` implicitly to disable.\n     */\n    keyboard: Array | number;\n\n    width: number = null;\n    minWidth = 50;\n\n    height: number = null;\n    minHeight = 50;\n\n    position = { top: 100, left: 100 };\n\n    selfCentered = true;\n\n    isModal = true;\n\n    isDraggable = true;\n\n    isResizable = true;\n\n    title = '';\n\n    actions: Array = ['Close'];\n\n    /**\n      * Makes a ModalConfig instance valid.\n      * @param config\n      * @param defaultConfig A Default config to use as master, optional.\n      * @returns ModalConfig The same config instance sent.\n      */\n    static makeValid(config: ModalConfig, defaultConfig?: ModalConfig) {\n        defaultConfig = (defaultConfig) ? defaultConfig : _defaultConfig;\n\n        if (!config.size) { config.size = defaultConfig.size; }\n\n        if (config.isBlocking !== false) { config.isBlocking = true; }\n\n        if (config.keyboard !== null) {\n            if (Array.isArray(>config.keyboard)) {\n                config.keyboard = (>config.keyboard).length === 0\n                    ? defaultConfig.keyboard : config.keyboard;\n            } else if (!isNaN(config.keyboard)) {\n                config.keyboard = [config.keyboard];\n            } else {\n                config.keyboard = defaultConfig.keyboard;\n            }\n        }\n\n        return config;\n    }\n\n    constructor() {\n        this.size = 'ls';\n        this.isBlocking = true;\n        this.keyboard = [27];\n    }\n\n\n}\n\n_defaultConfig = new ModalConfig();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalDialogInstance.html":{"url":"injectables/ModalDialogInstance.html","title":"injectable - ModalDialogInstance","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalDialogInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n            \n                Description\n            \n            \n                API to an open modal window.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _backdropRef\n                            \n                            \n                                    Private\n                                _bootstrapRef\n                            \n                            \n                                    Private\n                                _resultDefered\n                            \n                            \n                                contentRef\n                            \n                            \n                                    Public\n                                inElement\n                            \n                            \n                                kendoDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismiss\n                            \n                            \n                                    Private\n                                dispose\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    backdropRef\n                                \n                                \n                                    bootstrapRef\n                                \n                                \n                                    result\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(result: any)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:64\n                \n            \n\n\n            \n                \n                    Close the modal with a return value, i.e: result.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:82\n                \n            \n\n\n            \n                \n                    Close the modal without a return value, i.e: cancelled.\nThis call is automatically invoked when a user either:\n\nPresses an exit keyboard key (if configured).\nClicks outside of the modal window (if configured).\nUsually, dismiss represent a Cancel button or a X button.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:56\n                \n            \n\n\n            \n                \n                    set the dialog title\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _backdropRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bootstrapRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resultDefered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:28\n                            \n                        \n\n                \n                    \n                        States if the modal is inside a specific element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kendoDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        backdropRef\n                    \n                \n\n\n                \n                    \n                        setbackdropRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bootstrapRef\n                    \n                \n\n\n                \n                    \n                        setbootstrapRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n\n                \n                    \n                        getresult()\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:49\n                                \n                            \n                    \n                        \n                                A Promise that is resolved on a close event and rejected on a dismiss event.\n\n\n                                \n                                \n                                \n                                    Returns :     Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Modal\n                        \n                        \n                            ModalDialogInstance\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\n\nimport { ModalDialogInstance } from './angular2-modal/models/ModalDialogInstance';\nimport { Modal } from './angular2-modal/providers/Modal';\nimport { OKOnlyModal } from './angular2-modal/commonModals/okOnlyModal';\nimport { YesNoModal } from './angular2-modal/commonModals/yesNoModal';\nimport { ICustomModal } from './angular2-modal/models/ICustomModal';\n\n@NgModule({\n      declarations: [\n            OKOnlyModal, YesNoModal\n      ],\n      exports: [\n            OKOnlyModal, YesNoModal\n      ],\n      entryComponents: [OKOnlyModal, YesNoModal],\n      providers: [Modal, ModalDialogInstance, ICustomModal]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OKOnlyContent.html":{"url":"classes/OKOnlyContent.html","title":"class - OKOnlyContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OKOnlyContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/okOnlyModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                okText\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, okText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        okText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            okText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OKOnlyModal.html":{"url":"components/OKOnlyModal.html","title":"component - OKOnlyModal","body":"\n                   \n\n\n\n\n\n  Components\n  OKOnlyModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/okOnlyModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OKOnlyContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.okText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'OKOnlyModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryBand.html":{"url":"components/QueryBand.html","title":"component - QueryBand","body":"\n                   \n\n\n\n\n\n  Components\n  QueryBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/queryBand.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                query-band\n            \n\n\n            \n                styles\n                \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n            \n\n            \n                template\n                \n    \n        \n        \n        \n        \n            \n                Select Highlighted\n                \n                Reuse a Saved Search\n                Restore a Saved Record Set\n                Combine Searches -->\n                \n                Save Current Search\n                Save Record Set\n                \n                Manage Saved Searches\n                Manage Saved Sets\n            \n        \n         -->\n        \n        \n    \n\n    \n        \n        Add\n        Edit\n        Delete\n    \n\n\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dropDownIsOpen\n                            \n                            \n                                    Public\n                                openStateIcon\n                            \n                            \n                                    Public\n                                queryBandIsOpen\n                            \n                            \n                                theQueryBand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doAddRecord\n                            \n                            \n                                    Public\n                                doClear\n                            \n                            \n                                    Public\n                                doDeleteRecord\n                            \n                            \n                                    Public\n                                doEditRecord\n                            \n                            \n                                    Public\n                                doExportGrid\n                            \n                            \n                                    Public\n                                doManageSets\n                            \n                            \n                                    Public\n                                doQBE\n                            \n                            \n                                    Public\n                                doQFF\n                            \n                            \n                                    Public\n                                doRefresh\n                            \n                            \n                                    Public\n                                doSort\n                            \n                            \n                                    Public\n                                doWehaveAQuery\n                            \n                            \n                                    Public\n                                enableButton\n                            \n                            \n                                    Public\n                                switchState\n                            \n                            \n                                    Public\n                                toggleDropDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cascadeDeleteRecord\n                            \n                            \n                                enableAddRecord\n                            \n                            \n                                enableButtonBar\n                            \n                            \n                                enableCombiSearch\n                            \n                            \n                                enableDeleteRecord\n                            \n                            \n                                enableEditRecord\n                            \n                            \n                                enableExportGrid\n                            \n                            \n                                enableQBE\n                            \n                            \n                                enableQFF\n                            \n                            \n                                enableSETS\n                            \n                            \n                                enableSort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryAddRecord\n                            \n                            \n                                queryDeleteRecord\n                            \n                            \n                                queryEditRecord\n                            \n                            \n                                queryExportGrid\n                            \n                            \n                                queryFromFile\n                            \n                            \n                                queryFromQBE\n                            \n                            \n                                queryManageSets\n                            \n                            \n                                queryRefresh\n                            \n                            \n                                querySortGrid\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cascadeDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:149\n                            \n                        \n                \n                    \n                        Cascade Delete record if Delete is enabled, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:134\n                            \n                        \n                \n                    \n                        Enable Add record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableButtonBar\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:129\n                            \n                        \n                \n                    \n                        Enable Record Edit Button bar, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableCombiSearch\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:114\n                            \n                        \n                \n                    \n                        enable Combine Searches buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:144\n                            \n                        \n                \n                    \n                        Enable Delete record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditRecord\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:139\n                            \n                        \n                \n                    \n                        Enable Edit record button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableExportGrid\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:124\n                            \n                        \n                \n                    \n                        enable Export To Excel button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQBE\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:99\n                            \n                        \n                \n                    \n                        enable QBE button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQFF\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:104\n                            \n                        \n                \n                    \n                        enable QFF (query from file) button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSETS\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:109\n                            \n                        \n                \n                    \n                        enable Save/Load Searches/Set buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSort\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:119\n                            \n                        \n                \n                    \n                        enable Multicolumn Sort button, default is false\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        queryAddRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryDeleteRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:167\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryEditRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryExportGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromFile\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:155\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromQBE\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryManageSets\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:160\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryRefresh\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:156\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        querySortGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:157\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doAddRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doAddRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doClear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doClear()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doDeleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doDeleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doEditRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doEditRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doExportGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doExportGrid()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQBE\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQBE()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQFF\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQFF()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doRefresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doRefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doSort()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doWehaveAQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doWehaveAQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableButton(btn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    btn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            switchState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    switchState()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleDropDown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDown()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropDownIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:176\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openStateIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'glyphicon-triangle-right'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryBandIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theQueryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBandDirective, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n    \n            \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Select Highlighted                                Reuse a Saved Search                Restore a Saved Record Set                Combine Searches -->                                Save Current Search                Save Record Set                                Manage Saved Searches                Manage Saved Sets                             -->                                        Add        Edit        Delete        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryBand'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBandDirective.html":{"url":"directives/QueryBandDirective.html","title":"directive - QueryBandDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBandDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        queryband\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                theCustomQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theCustomQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('customQueryBand', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:10\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickFindInput.html":{"url":"components/QuickFindInput.html","title":"component - QuickFindInput","body":"\n                   \n\n\n\n\n\n  Components\n  QuickFindInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/quickFindInput.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                quickfind-input\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                runQuickFinder\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                quickFind\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        quickFind\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runQuickFinder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { Component, EventEmitter, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n\n\n\n@Component({\n    selector: 'quickfind-input',\n    template: ``\n})\n\nexport class QuickFindInput {\n\n    @Input() public quickFind = new FormControl();\n    @Input() public value = '';\n    public runQuickFinder: EventEmitter = new EventEmitter();\n\n    constructor() {\n        this.quickFind.valueChanges.pipe(distinctUntilChanged(),debounceTime(1500),).subscribe(query => {\n            this.runQuickFinder.emit(query);\n        });\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QuickFindInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordEditWindow.html":{"url":"components/RecordEditWindow.html","title":"component - RecordEditWindow","body":"\n                   \n\n\n\n\n\n  Components\n  RecordEditWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordEditWindow.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-edit-window\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                saveRecord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentRecord\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentRecord\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveRecord\n                        \n                        \n                    \n                \n            \n            \n                \nsaveRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordEditWindow.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordEditWindow.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FourDModel } from '../js44D/JSFourDModel';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\n\n@Component({\n    selector: 'record-edit-window',\n    template: ''\n})\n\nexport class RecordEditWindow implements ICustomModalComponent {\n\n    @Input() public currentRecord: any; // the Record Edit Window FourDModel\n\n\n    public dialog: ModalDialogInstance;\n\n\n    public set modelContentData(v: ICustomModal) {\n        this.currentRecord = v;\n    }\n\n    saveRecord() {\n        if (this.currentRecord.isRecordLoaded()) {\n            this.currentRecord.updateRecord()\n                .then(() => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        } else {\n            this.currentRecord.insertRecord()\n                .then((recnum) => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        };\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordEditWindow'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordList.html":{"url":"components/RecordList.html","title":"component - RecordList","body":"\n                   \n\n\n\n\n\n  Components\n  RecordList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordList.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                HttpClient\n                                FourDInterface\n                                ListSelectorDialog\n                                Modal\n                \n            \n\n\n            \n                selector\n                record-list\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editWindowConfig\n                            \n                            \n                                    Private\n                                _previousAdvancedQuery\n                            \n                            \n                                    Private\n                                _previousQuery\n                            \n                            \n                                queryBand\n                            \n                            \n                                theGrid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearQuery\n                            \n                            \n                                    Public\n                                deleteRecord\n                            \n                            \n                                    Private\n                                doManageSets\n                            \n                            \n                                    Private\n                                editWindowHandler\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                refreshGrid\n                            \n                            \n                                    Private\n                                restoreSet\n                            \n                            \n                                    Private\n                                showAdvancedQuery\n                            \n                            \n                                    Public\n                                showEditWindow\n                            \n                            \n                                    Public\n                                windowResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dialogInstance\n                            \n                            \n                                editWindow\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedRecords\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ElementRef, viewRef: ViewContainerRef, selectList: ListSelectorDialog)\n                    \n                \n                        \n                            \n                                Defined in src/containers/recordList.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectList\n                                                  \n                                                        \n                                                                        ListSelectorDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dialogInstance\n                    \n                \n                \n                    \n                        Type :         ModalDialogInstance\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:25\n                            \n                        \n                \n                    \n                        this is the associated record list dialog, if set we use it to handle window resize\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editWindow\n                    \n                \n                \n                    \n                        Type :         ICustomModalComponent\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:30\n                            \n                        \n                \n                    \n                        this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n\n                    \n                \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:134\n                \n            \n\n\n            \n                \n                    Handle browser window resize and resize grid\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:115\n                \n            \n\n\n            \n                \n                    Clear all previous queries\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:179\n                \n            \n\n\n            \n                \n                    Delete Selected Record(s)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:216\n                \n            \n\n\n            \n                \n                    Handle Manage Sets dropdown menu and act upon user selected action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editWindowHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editWindowHandler(result: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:192\n                \n            \n\n\n            \n                \n                    private method to deal with edit window close\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:71\n                \n            \n\n\n            \n                \n                    AFter our view gets initialized, subscribe to various events on the Query band and the Grid\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshGrid(query?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:125\n                \n            \n\n\n            \n                \n                    Refresh teh Grid, run query on 4D side and get records to display\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : the query string to send to 4D to select records to display on the grid\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            restoreSet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSet(records: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    records\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showAdvancedQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAdvancedQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:199\n                \n            \n\n\n            \n                \n                    deal with advanced Query dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showEditWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showEditWindow(mode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:149\n                \n            \n\n\n            \n                \n                    Show record edit window, to either edit or add a new record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            windowResized\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    windowResized(event)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:142\n                \n            \n\n\n            \n                \n                    Intercept Dialog Window resize event and resize the Grid to fit the entire window\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editWindowConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:57\n                            \n                        \n\n                \n                    \n                        Save Edit Window Configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousAdvancedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryBand\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBand, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:35\n                            \n                        \n\n                \n                    \n                        get the associated Query band and Datagrid object instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theGrid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataGrid\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(DataGrid, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedRecords\n                    \n                \n\n                \n                    \n                        getselectedRecords()\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordList.ts:41\n                                \n                            \n                    \n                        \n                                return the currently selected records from the grid\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, AfterContentInit, Input, HostListener } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\nimport { QueryBand } from './queryBand';\nimport { AdvancedQueryComponent } from './advancedQuery';\nimport { DataGrid } from '../dataGrid/dataGrid';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { ListSelectorDialog } from '../dialogs/listSelectorDialog';\n\n@Component({\n    selector: 'record-list',\n    template: '',\n    providers: [HttpClient, FourDInterface, ListSelectorDialog, Modal]\n})\n\nexport class RecordList implements AfterContentInit {\n\n    /**\n     * this is the associated record list dialog, if set we use it to handle window resize\n     */\n    @Input() public dialogInstance: ModalDialogInstance = null;\n\n    /**\n     * this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n     */\n    @Input() public editWindow: ICustomModalComponent = null;\n\n    /**\n     * get the associated Query band and Datagrid object instances\n     */\n    @ContentChild(QueryBand, {static: false}) queryBand: QueryBand;\n    @ContentChild(DataGrid, {static: false}) theGrid: DataGrid;\n\n    /**\n     * return the currently selected records from the grid\n     */\n    public get selectedRecords():Array {\n        let selection = [];\n        if (this.theGrid && this.theGrid.getDataProvider()) {\n            const gridRows = this.theGrid.getDataProvider().models;\n            const selectedRows = this.theGrid.selectedRows();\n            for (let index = 0; index  { this.refreshGrid(query); });\n            // if user hits Advanced Query button, call advanced query method\n            if (this.queryBand.enableQBE) {\n                this.queryBand.queryFromQBE.subscribe((query: Object) => { this.showAdvancedQuery(); });\n            }\n            // if user hits Set Management button, call corresponding method method\n            if (this.queryBand.enableSETS) {\n                this.queryBand.queryManageSets.subscribe((action: string) => { this.doManageSets(action); });\n            }\n            // if user hits Export to Excel, call grid's excel export method\n            this.queryBand.queryExportGrid.subscribe(() => { if (this.theGrid) { this.theGrid.exportGridToExcel(); } });\n\n            if (this.editWindow) {\n                this.queryBand.queryAddRecord.subscribe(() => { this.showEditWindow('add'); });\n                this.queryBand.queryEditRecord.subscribe(() => { this.showEditWindow('edit'); });\n            }\n\n            this.queryBand.queryDeleteRecord.subscribe(() => { this.deleteRecord(); });\n\n        }\n\n        // if we have a grid and an associated edit record form, subscribe to the record select event\n        if (this.theGrid && this.editWindow) {\n            this.theGrid.recordSelected.subscribe((record: any) => { this.showEditWindow('edit'); });\n        }\n\n        if (this.editWindow && this.editWindow['dialogConfig']) {\n            this._editWindowConfig = this.editWindow['dialogConfig'];\n        }\n\n        if (this.dialogInstance) {\n            //            console.log(this.dialogInstance)\n            const dialog: any = $(this.dialogInstance.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.resizing._draggable.userEvents.bind('release', (event) => { this.windowResized(event) });\n        }\n    }\n\n    /**\n     * Clear all previous queries\n     */\n    public clearQuery() {\n        this._previousAdvancedQuery = null;\n        this._previousQuery = null;\n    }\n\n\n    /**\n     * Refresh teh Grid, run query on 4D side and get records to display\n     * @param query: the query string to send to 4D to select records to display on the grid\n     */\n    public refreshGrid(query?: Object) {\n        if (!query) { query = this._previousQuery; } // if no query given, try previous\n        if (query && this.theGrid) { this.theGrid.loadData(query); }\n        this._previousQuery = query; // save last queryDeleteRecord\n    }\n\n    /**\n     * Handle browser window resize and resize grid\n     */\n    @HostListener('window:resize') onResize() {\n        this.windowResized(null);\n    }\n\n    /**\n     * Intercept Dialog Window resize event and resize the Grid to fit the entire window\n     * @param event \n     */\n    public windowResized(event) {\n        this.theGrid.resize(); // refresh datagrid to adjust it to the window size\n    }\n\n    /**\n     * Show record edit window, to either edit or add a new record\n     */\n    public showEditWindow(mode: string) {\n        // if editing a record, and we do have a record selected and an edit dialog does exist\n        if (this.theGrid && this.editWindow && mode === 'edit' && this.theGrid.currentRecord) {\n            if (this.theGrid.optimizeGridLoading) { // if we are optimizing the grid, then we need to refresh selected record\n                kendo.ui.progress($(this.elementRef.nativeElement), true); // show loading progress icon\n                this.theGrid.currentRecord.refresh().then(() => { // refresh current record\n                    kendo.ui.progress($(this.elementRef.nativeElement), false); // clear loading progress icon\n                    this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                        .then(result => { this.editWindowHandler(result); }); // open edit dialog\n                });\n            } else {\n                // if not optimizing the grid loading, then we have a complete record loaded already\n                this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                    .then(result => { this.editWindowHandler(result); }); // open edit dialog\n            }\n        }\n\n        if (this.theGrid && this.editWindow && mode === 'add') {\n            // if we are adding a new record\n            const modelDef = (this.theGrid.model);\n            const newModel = (new modelDef());\n            // show edit dialog to insert new record\n            this.modal.openInside(this.editWindow, this.viewRef, newModel, this._editWindowConfig, true)\n                .then(result => { this.editWindowHandler(result); }); // open edit dialog\n        }\n    }\n\n    /** \n     * Delete Selected Record(s)\n     */\n    public deleteRecord() {\n        if (this.theGrid && this.theGrid.currentRecord) {\n            if (confirm((this.queryBand.cascadeDeleteRecord) ? 'Really delete selected record and all its associated data records?' : 'Really delete selected record?')) {\n                this.theGrid.currentRecord.deleteRecord(this.queryBand.cascadeDeleteRecord)\n                    .then((message) => { alert('Record Deleted'); this.theGrid.refresh(); })\n                    .catch((reason) => { alert(reason); });\n            }\n        }\n    }\n\n    /**\n     * private method to deal with edit window close\n     */\n    private editWindowHandler(result: string) {\n        if (result === 'recordSaved') { this.theGrid.refresh(); }\n    }\n\n    /**\n     * deal with advanced Query dialog\n     */\n    private showAdvancedQuery() {\n        const advancedQuery = AdvancedQueryComponent;\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        this.modal.openInside(AdvancedQueryComponent, this.viewRef, { previousQuery: this._previousAdvancedQuery, model: (newModel.tableName !== '') ? newModel : (this.theGrid.model).prototype }, advancedQuery['dialogConfig'])\n            .then((result: any) => {\n                if (result.query.length > 0) {\n                    this._previousAdvancedQuery = result.queryFields;\n                    this.refreshGrid({ query: result.query }); // open edit dialog\n                }\n            });\n\n    }\n\n    /**\n     * Handle Manage Sets dropdown menu and act upon user selected action\n     */\n    private doManageSets(action: string) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pk = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        let gridRows = this.theGrid.getDataProvider().models;\n        let savedSearches: Array;\n        let savedSets: Array;\n        let selectedRecords = [];\n\n        switch (action) {\n            case 'selectHighlited':\n                if (pk && pk !== '') {\n                    const selectedRows = this.theGrid.selectedRows();\n                    selectedRecords = [];\n                    for (let index = 0; index  {\n                    if (searchName !== '') {\n                        savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                        savedSearches.push({ name: searchName, search: this._previousQuery });\n                        localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                    }\n                }, function () {\n                    // cancelled...\n                })\n                break;\n\n            case 'saveSet':\n                if (pk && pk !== '' && gridRows.length > 0) {\n                    kendo.prompt('Please, enter a name for this Record Set:', '').then((setName) => {\n                        if (setName !== '') {\n                            savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n\n                            gridRows = this.theGrid.getDataProvider().models;\n                            selectedRecords = [];\n                            for (let row = 0; row  {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Select Saved Search';\n                    this.selectList.show(searchList)\n                        .then(result => {\n                            const query = savedSearches[result].search;\n                            this.refreshGrid(query);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'restoreSet':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                let setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Select Saved Set';\n                    this.selectList.show(setList)\n                        .then(result => {\n                            const set = savedSets[result].set;\n                            this.restoreSet(set);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'combineSearches':\n\n                break;\n\n            case 'manageSearches':\n                savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                searchList = [];\n                savedSearches.forEach(element => {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Delete Saved Search';\n                    this.selectList.show(searchList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSearches.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                        }); // open list selector dialog\n                }\n\n                break;\n\n            case 'manageSets':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Delete Saved Set';\n                    this.selectList.show(setList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSets.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSets', JSON.stringify(savedSets));\n                        }); // open list selector dialog\n                }\n                break;\n        }\n    }\n\n    private restoreSet(records: Array) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pkField = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        if (pkField && pkField !== '' && tableName && tableName !== '') {\n            const queryItems = [];\n            records.forEach(id => {\n                queryItems.push(tableName + '.' + pkField + ';=;' + id + ';OR');\n            });\n            this.refreshGrid({ query: queryItems });\n        }\n\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordList'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab.html":{"url":"components/Tab.html","title":"component - Tab","body":"\n                   \n\n\n\n\n\n  Components\n  Tab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tab\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tabs: Tabs)\n                    \n                \n                        \n                            \n                                Defined in src/containers/tabs.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabs\n                                                  \n                                                        \n                                                                        Tabs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:51\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tab'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tabs.html":{"url":"components/Tabs.html","title":"component - Tabs","body":"\n                   \n\n\n\n\n\n  Components\n  Tabs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabs\n            \n\n\n\n            \n                template\n                \n  \n    {{tab.title}}\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTab\n                            \n                            \n                                selectTab\n                            \n                            \n                                selectThisTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTab\n                        \n                        \n                    \n                \n            \n            \n                \naddTab(tab: Tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                Tab\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTab\n                        \n                        \n                    \n                \n            \n            \n                \nselectTab(event, tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectThisTab\n                        \n                        \n                    \n                \n            \n            \n                \nselectThisTab(tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tab[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/tabs.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{tab.title}}  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tabs'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utf8.html":{"url":"classes/Utf8.html","title":"class - Utf8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utf8\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/utf8.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                byteArray\n                            \n                            \n                                    Private\n                                    Static\n                                byteCount\n                            \n                            \n                                    Private\n                                    Static\n                                byteIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                checkScalarValue\n                            \n                            \n                                    Private\n                                    Static\n                                createByte\n                            \n                            \n                                    Private\n                                    Static\n                                decodeSymbol\n                            \n                            \n                                    Private\n                                    Static\n                                encodeCodePoint\n                            \n                            \n                                    Private\n                                    Static\n                                readContinuationByte\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2decode\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2encode\n                            \n                            \n                                    Static\n                                utf8decode\n                            \n                            \n                                    Static\n                                utf8encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteArray\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:181\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteCount\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteIndex\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:183\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            checkScalarValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScalarValue(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createByte(codePoint, shift)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shift\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            decodeSymbol\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeSymbol()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            encodeCodePoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeCodePoint(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            readContinuationByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readContinuationByte()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2decode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2encode(array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8decode(byteString)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    byteString\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8encode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utf8 {\n\n\n\t// Taken from https://mths.be/punycode\n\tprivate static ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter = 0xD800 && value  0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += String.fromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tprivate static checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint > shift) & 0x3F) | 0x80);\n\t}\n\n\tprivate static encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn String.fromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 12);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += String.fromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tpublic static utf8encode(string) {\n\t\tvar codePoints = Utf8.ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index = Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tprivate static decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (Utf8.byteIndex > Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (Utf8.byteIndex == Utf8.byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) = 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) = 0x0800) {\n\t\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tbyte4 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) = 0x010000 && codePoint \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebAppContainer.html":{"url":"components/WebAppContainer.html","title":"component - WebAppContainer","body":"\n                   \n\n\n\n\n\n  Components\n  WebAppContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/webAppContainer.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                web-application\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                            \n                                    Private\n                                urlSearchParms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                showLoginDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userIsLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                userHasLoggedIn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ViewContainerRef, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userIsLoggedIn\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        userHasLoggedIn\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nshowLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Modal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlSearchParms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation, ViewContainerRef, EventEmitter, AfterContentInit, Input, Output } from '@angular/core';\n\nimport { LoginCmp } from '../login/login';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'web-application',\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    providers: [Modal]\n})\n\n\nexport class WebAppContainer implements AfterContentInit {\n\n    @Input() public userIsLoggedIn = false;\n\n    @Output() public userHasLoggedIn: EventEmitter = new EventEmitter();\n\n    private urlSearchParms: Object = {};\n\n    constructor(public modal: Modal, private elementRef: ViewContainerRef, private fourD: FourDInterface/*, private win:WindowService*/) {\n        const win = window;\n        if (win && win.location && win.location.search) {\n            const url = win.location.search.substr(1); // get incoming url and parse search params\n            url.split('&').forEach(element => {\n                const item = element.split('=');\n                if (item.length === 2) {\n                    this.urlSearchParms[item[0]] = item[1];\n                } else {\n                    this.urlSearchParms[element] = true;\n                }\n            });\n        }\n    }\n\n    showLoginDialog() {\n        this.modal.openInside(LoginCmp, this.elementRef, null, LoginCmp.dialogConfig)\n            .then((result) => {\n                this.userIsLoggedIn = true;\n                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n            });\n\n\n    }\n\n    ngAfterContentInit() {\n        if (!FourDInterface.authentication) {\n            if (this.urlSearchParms.hasOwnProperty('key')) {\n                try {\n                    const key = JSON.parse(atob(this.urlSearchParms['key']));\n                    this.fourD.signIn(key.username, key.password)\n                        .then((authentication) => {\n                            if (FourDInterface.authentication) {\n                                this.userIsLoggedIn = true;\n                                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n                            }\n                        })\n                        .catch(e => { this.showLoginDialog(); });\n                } catch (error) {\n                    this.showLoginDialog();\n                }\n            } else {\n                // no predefined user, login...\n                this.showLoginDialog();\n            }\n        } else {\n            this.userIsLoggedIn = true;\n            this.userHasLoggedIn.emit(FourDInterface.currentUser);\n        }\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'WebAppContainer'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/YesNoModal.html":{"url":"components/YesNoModal.html","title":"component - YesNoModal","body":"\n                   \n\n\n\n\n\n  Components\n  YesNoModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/yesNoModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         YesNoModalContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.yesText}}            {{context.noText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'YesNoModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/YesNoModalContent.html":{"url":"classes/YesNoModalContent.html","title":"class - YesNoModalContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  YesNoModalContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/yesNoModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                hideNo\n                            \n                            \n                                    Public\n                                noText\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                yesText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, hideNo: boolean, yesText: string, noText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hideNo\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideNo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NO'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YES'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            component\n            OKOnlyModal\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            class\n            OKOnlyContent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            component\n            YesNoModal\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            class\n            YesNoModalContent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModal.ts\n            \n            class\n            ICustomModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModalComponent.ts\n            \n            class\n            ICustomModalComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            injectable\n            ModalConfig\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            variable\n            _defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            class\n            Deferred\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            injectable\n            ModalDialogInstance\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            injectable\n            Modal\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            variable\n            _config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/advancedQuery.ts\n            \n            component\n            AdvancedQueryComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            component\n            QueryBand\n            \n                30 %\n                (12/40)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            CustomButtonBarDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            QueryBandDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/containers/recordEditWindow.ts\n            \n            component\n            RecordEditWindow\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/recordList.ts\n            \n            component\n            RecordList\n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tab\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tabs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tab\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tabs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/webAppContainer.ts\n            \n            component\n            WebAppContainer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            component\n            FourDDropDown\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            injectable\n            FourDDropDown\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            component\n            FourDRegistryInput\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            injectable\n            FourDRegistryInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/quickFindInput.ts\n            \n            component\n            QuickFindInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dataGrid/dataGrid.ts\n            \n            component\n            DataGrid\n            \n                54 %\n                (28/51)\n            \n        \n        \n            \n                \n                src/dialogs/listSelectorDialog.ts\n            \n            component\n            ListSelectorDialog\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDCollection.ts\n            \n            injectable\n            FourDCollection\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            FourDQuery\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            MD5\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            injectable\n            FourDInterface\n            \n                96 %\n                (26/27)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            calculateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            convertObjectToURL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            injectable\n            FourDModel\n            \n                87 %\n                (34/39)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            interface\n            IFieldDescription\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/js44D/base64.ts\n            \n            class\n            Base64\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/js44D/utf8.ts\n            \n            class\n            Utf8\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/login/login.ts\n            \n            component\n            LoginCmp\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/pipes/Base64ImageRef.pipe.ts\n            \n            pipe\n            Base64ImageRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/FourDDateToString.pipe.ts\n            \n            pipe\n            FourDDateToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            __karma__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            jquery : >=3.2.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJS44D Library\nPascal's 4D RESTApi companion Angular Typescript library.\n\n\n\n\n\n\nThis library includes a series of Angular services, components and UI widgets, that interface to a 4D Database backend via 4D RESTApi component. The 4D RESTApi Component must be installed in the 4D Database, and Web Serving must be enabled.\nDetailed documentation for each service/component in this library can be found on the wiki here. Following is a quick run down of the library contents.\nThere is a step by step procedure to get started with the 4D RESTApi component and this library at this wiki page. That page will instruct you on how to get going on the 4D and Angular sides.\nInstallation\nInstall js44d library using npm, as:\nnpm install js44d --saveUsage\nThe library can be divided into three sets of components: 4D Service classes, UI widgets and a Modal Dialog Service class. The 4D Service Classes provide the interface to a 4D backend. The UI widgets are not essential, but do provide some useful UI Components that use the Services Classes. The Modal Dialog provides funcionality to open multiple floating Dialog windows, similar to Windows MDI funcionality.\nEach of the three sets are declared in a separate NgModule: FourDModule, JS44DModule and ModalModule.\nYou reference the 4D Interface Service Classes as:\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';They need to be included in your main NgModule declaration, by importing the FourDModule.\nAs for UI components/widgets and the Modal dialog service, you reference/import them as:\nimport { ..widget.. } from 'js44d';You need to import the modules in your NgModule declaration, where you use them, as in:\n...\nimport { FourDModule, JS44DModule, ModalModule } from 'js44d';\n...\n@NgModule({\n  imports: [\n    ...,\n    FourDModule, JS44DModule, ModalModule\n  ]\n  ],\n  exports: [FourDModule, JS44DModule, ModalModule],\nIf you plan on using any of the UI widgets, then you need to grab a copy of the assets folder contents and drop all that in your own assets directory. You need to also add the following line to your styles.scss file:\n@import './assets/main';And you can edit src/assets/main.scss at will, to add you own styles or modify the existing styles that are used by JS44D UI Widgets.\nA quick note, the UI components/widgets are WEB ONLY, they do not work under Nativescript, so for {N} you can only use the 4D Service Classes. For NativeScript your module declaration should look something like this:\n...\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';\n...\n\n@NgModule({\n    ...\n    providers: [\n        ...,\n        FourDInterface, FourDModel, FourDCollection\n    ],\n...4D Interface Service Classes\nThe library provides a set of service classes for accessing a 4D Database backend that has the 4D RESTApi Component installed.\nFourDInterface\nThis is the base service class that implements most of the calls to 4D RESTApi.\nThe two key functions made available by this class are:\n\ncall4DRESTMethod: a wrapper function to enable calling any 4D RESTApi entry point; it automatically adds a Session Key and a hash tokens to each HTTP POST request sent to 4D, which are required by the 4D RESTApi Component; this function is used by all other services and components to send requests to 4D.\nsignin: a function that will send a REST_Authenticate sign in request to 4D and process 4D's response.\n\nThis class also provides some static variables:\n\ncurrentUser: the name of the currectly signed in user\nauthentication: the authentication response object, returned by the REST_Authenticate call (see)\nsessionKey: the current session token, that must be present in all requests to 4D\netc..\n\nFourDModel\nThis is a service class that provides CRUD functionality, acting as a Data Model base class. It provides the ability to retrieve, create, update or delete records from any 4D table.\nThis class builds upon the Data Model functionality, as described in the Data Model wiki page. \nAll 4D table's Data Models extend the FourDModel class, describing each of the table's fields and providing getter/setter for each field.\nInstances of the FourDModel class, and its extensions, represent a record in the database. This service provides basic CRUD functions to access those records:\n\ngetRecord: retrieves a single record from the database\ninsertRecord: adds a new record to the database\nupdateRecord: updates a record in the database\ndeleteRecord: deletes a record from the database\n\nAdditional functions are described in the FourDModel wiki page.\nFourDCollection\nA service class that represents a collection of 4D records. It is basically an Array of FourDModel derived instances.\nThis class provides a function to retrieve a set of records from a 4D Database:\n\ngetRecords: will take a Query String and send a REST_GetRecords request to 4D to retrieve a collection of 4D records. Record data comes as an Array of Data Model (FourDModel) instances.\n\nUI Widgets\nThe following UI widgets and components, which also interact with a 4D backend, are available for use in Angular apps. Detailed documentation for each widget is found on the wiki pages.\nLogin Component\nA basic Login dialog that takes a user name and password. It calls FourDInterface signin function, that sends a REST_Authenticate request to 4D to authenticate the given user.\n\nDatagrid Component\nThis Component provides Data Grid functionality, to display and interact with a list of records from a 4D Database.\n\nThe component is based on a KendoUI Grid widget, and displays contents of FourDModel instances, from a FourDCollection. \nQuery Band Component\nA query widget that provides functionality for querying a 4D Database, built upon a FourDModel.\n\nIt allows for a user defined query form, advanced query functionality and the ability to save and reuse queries.\nRecord List Component\nThis widget builds upon the QueryBand and DataGrid components. It associates a QueryBand to a DataGrid, so the results of a query are displayed on the associated DataGrid.\n\nAdditionally the widget provides a button bar with functionality to add/edit/delete records. It also allows for user defined custom buttons added to the button bar.\nWeb App Container Component\nThis is a Web App wrapper component, that ensures that the application component runs authenticated. If upon app initialization, it is not yet authenticated to a 4D backend, this component will display a Login dialog to get user credentials and authenticate the user.\n4D List DropDown Control\nThis is an HTML select drop down whose items are obtained directly from a 4D Choice List. One of the parameters to this widget is the choice list name.\nExample:\n  Additional Widgets/Services\nSome additional widgets/services are also part of the library, but those do not interact with 4D backends and do not depend on the 4D RESTApi.\nMDI Dialog Service\nA set of service classes that provide functionality to show multiple floating dialog windows, which can be modal or not.\n\nList Selector Dialog\nA component that presents a dialog with a list of items for user selection.\n\nTab Component\nA simple horizontal tab component, that provides functionality to allow user to tab among multiple forms.\n\nContributors\n\n\n\n\n\n\n\n\nJulio Carneiro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Julio Carneiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FourDModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JS44DModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __karma__   (src/.../test.ts)\n                        \n                        \n                            _config   (src/.../Modal.ts)\n                        \n                        \n                            _defaultConfig   (src/.../ModalConfig.ts)\n                        \n                        \n                            calculateHash   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            convertObjectToURL   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            __karma__\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/providers/Modal.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/models/ModalConfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/js44D/JSFourDInterface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateHash\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n}\n                        \n                    \n\n                \n                    \n                        Calculates hash code from URL string or POST form data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertObjectToURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n}\n                        \n                    \n\n                \n                    \n                        convert object to encoded url string\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

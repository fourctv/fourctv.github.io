var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdvancedQueryComponent.html",[0,0.195,1,0.859]],["body/components/AdvancedQueryComponent.html",[0,0.23,1,1.142,2,0.825,3,0.121,4,0.121,5,3.007,6,0.53,7,0.684,8,0.086,9,1.789,10,0.998,11,1.483,12,3.011,13,0.53,14,1.348,15,1.497,16,1.391,17,0.026,18,2.469,19,5.212,20,6.863,21,4.028,22,4.028,23,4.028,24,5.212,25,6.483,26,3.506,27,4.028,28,4.028,29,3.887,30,4.028,31,2.469,32,3.194,33,1.837,34,2.718,35,3.896,36,4.028,37,4.028,38,4.028,39,5.212,40,4.028,41,4.899,42,4.899,43,6.687,44,2.049,45,5.212,46,4.419,47,5.212,48,5.212,49,3.896,50,4.028,51,5.212,52,4.028,53,4.028,54,1.071,55,2.709,56,3.506,57,4.32,58,5.212,59,2.096,60,4.028,61,4.028,62,2.709,63,4.028,64,4.028,65,3.011,66,4.028,67,4.028,68,0.534,69,4.028,70,5.212,71,4.028,72,4.028,73,4.028,74,3.415,75,4.028,76,3.415,77,4.028,78,4.028,79,4.028,80,4.028,81,4.028,82,6.11,83,6.687,84,6.687,85,6.11,86,4.028,87,4.028,88,3.896,89,4.028,90,4.028,91,4.028,92,2.709,93,2.709,94,4.028,95,2.709,96,4.028,97,2.469,98,4.028,99,3.415,100,4.028,101,0.825,102,3.282,103,4.028,104,4.173,105,2.559,106,5.008,107,2.19,108,4.257,109,4.419,110,3.415,111,4.028,112,4.028,113,0.511,114,1.488,115,3.282,116,0.656,117,1.382,118,1.305,119,3.011,120,3.282,121,3.282,122,0.591,123,4.544,124,2.783,125,4.544,126,4.544,127,3.011,128,3.282,129,3.282,130,1.29,131,4.028,132,4.028,133,3.282,134,3.282,135,1.379,136,1.848,137,0.466,138,1.578,139,1.225,140,1.217,141,0.601,142,2.11,143,0.767,144,0.749,145,0.581,146,0.656,147,1.15,148,0.876,149,0.868,150,2.11,151,1.29,152,2.11,153,2.268,154,3.282,155,2.785,156,0.611,157,3.011,158,4.028,159,4.028,160,4.028,161,4.028,162,2.11,163,2.11,164,2.11,165,0.876,166,1.458,167,3.282,168,5.779,169,2.11,170,2.11,171,2.11,172,2.11,173,3.282,174,2.11,175,1.29,176,3.282,177,2.11,178,2.11,179,2.11,180,1.812,181,1.848,182,2.208,183,2.208,184,1.488,185,2.208,186,0.774,187,2.208,188,2.208,189,1.208,190,5.212,191,2.378,192,2.11,193,1.848,194,2.11,195,2.11,196,1.578,197,2.11,198,1.019,199,0.388,200,1.098,201,1.293,202,1.15,203,0.196,204,2.195,205,1.188,206,0.829,207,1.419,208,1.293,209,1.419,210,1.019,211,0.121,212,0.046,213,2.11,214,2.11,215,4.028,216,2.11,217,3.282,218,4.028,219,2.11,220,1.673,221,4.028,222,4.028,223,4.923,224,4.923,225,2.11,226,3.282,227,2.11,228,0.436,229,2.11,230,1.789,231,1.098,232,1.297,233,2.783,234,2.11,235,2.11,236,4.544,237,2.11,238,2.11,239,2.454,240,2.11,241,2.11,242,2.11,243,2.11,244,2.11,245,2.11,246,2.11,247,3.282,248,4.028,249,2.11,250,1.098,251,0.436,252,1.789,253,3.282,254,2.11,255,2.11,256,1.789,257,3.282,258,2.11,259,2.11,260,1.188,261,1.293,262,2.11,263,2.11,264,0.53,265,0.937,266,0.879,267,0.497,268,1.297,269,0.684,270,4.923,271,0.684,272,0.53,273,0.684,274,0.53,275,0.684,276,0.53,277,0.602,278,1.063,279,0.53,280,0.684,281,0.53,282,0.642,283,0.684,284,0.497,285,0.473,286,0.684,287,0.678,288,0.684,289,0.53,290,0.684,291,0.53,292,0.678,293,0.565,294,0.684,295,0.497,296,0.684,297,0.497,298,0.684,299,0.53,300,0.684,301,0.53,302,0.565,303,0.684,304,0.497,305,0.53,306,0.565,307,0.466,308,0.684,309,0.466,310,0.684,311,0.007,312,0.011,313,0.007]],["title/classes/Base64.html",[212,0.074,314,1.652]],["body/classes/Base64.html",[3,0.214,4,0.214,8,0.227,17,0.026,33,1.592,44,2.192,49,2.8,59,3.091,65,4.441,68,0.383,113,0.774,114,1.902,116,0.662,118,2.246,122,0.895,141,0.589,143,0.774,144,0.609,145,0.347,146,0.662,148,0.925,149,0.857,156,0.728,165,0.774,202,1.814,211,0.214,212,0.081,220,2.053,228,0.774,251,1.027,265,1.419,268,1.979,311,0.013,312,0.017,313,0.013,314,2.694,315,1.472,316,3.176,317,3.217,318,5.577,319,5.577,320,2.902,321,5.577,322,5.577,323,2.496,324,5.387,325,4.169,326,4.97,327,2.782,328,4.97,329,3.715,330,4.213,331,4.97,332,4.97,333,5.577,334,4.97,335,4.213,336,4.97,337,3.746,338,4.213,339,3.746,340,4.97,341,3.046,342,3.746,343,4.97,344,3.746,345,4.97,346,3.746,347,4.97,348,3.746,349,3.746,350,3.746,351,4.97,352,4.97,353,4.97,354,4.97,355,4.97,356,4.213,357,4.97,358,4.97,359,4.97,360,3.746,361,3.746,362,3.746,363,2.295,364,3.746,365,3.746,366,3.746,367,4.97,368,3.746,369,4.158,370,5.941,371,3.752,372,3.746,373,3.746,374,4.97,375,4.97,376,3.746,377,3.746,378,3.746,379,4.97,380,3.746,381,3.746,382,3.746,383,3.343,384,4.97,385,3.746,386,4.97,387,2.192,388,3.046,389,4.97,390,3.746,391,2.109,392,3.746,393,1.685,394,3.746,395,3.746,396,2.8,397,3.176,398,3.746,399,3.746,400,3.176,401,3.746,402,3.746,403,3.343,404,3.746,405,3.746,406,2.519,407,2.8,408,2.519,409,2.8,410,3.176,411,3.746,412,3.746,413,2.519,414,4.158,415,5.577,416,2.519,417,3.746,418,2.8,419,5.577]],["title/pipes/Base64ImageRef.html",[420,2.095,421,2.095]],["body/pipes/Base64ImageRef.html",[3,0.288,4,0.288,8,0.206,10,1.534,13,1.268,17,0.025,122,0.909,141,0.468,143,0.933,144,0.735,145,0.593,146,0.799,148,0.933,149,0.923,156,0.778,165,0.786,199,0.446,203,0.468,211,0.288,212,0.109,228,1.042,311,0.018,312,0.021,313,0.018,314,2.438,420,3.093,421,4.141,422,3.772,423,4.278,424,4.278,425,5.082,426,6.396,427,5.047,428,6.396,429,6.396,430,5.082,431,5.995,432,5.047,433,3.772,434,2.841,435,6.396,436,3.394,437,3.093,438,4.278,439,3.772,440,4.278,441,5.047,442,2.626,443,5.047]],["title/directives/CustomButtonBarDirective.html",[267,0.806,307,0.755]],["body/directives/CustomButtonBarDirective.html",[0,0.254,3,0.182,4,0.182,5,1.656,6,0.8,8,0.181,13,0.8,14,1.147,16,1.309,17,0.026,26,2.141,29,2.992,31,1.951,32,3.142,33,0.909,34,1.538,55,2.141,56,2.992,59,2.315,62,4.331,95,2.141,97,3.402,101,0.8,116,0.939,118,1.441,148,1.026,156,0.499,184,1.862,186,1.599,191,1.538,199,0.237,200,2.668,202,1.899,203,0.295,211,0.334,212,0.111,228,1.347,232,0.909,250,2.668,251,1.33,267,1.208,287,1.059,292,1.283,293,1.487,306,0.853,307,0.982,309,0.703,311,0.011,312,0.016,313,0.011,323,1.337,387,2.563,393,2.852,436,2.992,442,1.656,444,2.141,445,3.325,446,3.106,447,1.951,448,2.505,449,2.332,450,3.709,451,2.379,452,2.379,453,1.792,454,2.379,455,2.141,456,3.734,457,2.726,458,2.379,459,1.048,460,3.325,461,3.833,462,2.001,463,1.432,464,2.992,465,2.315,466,2.889,467,2.379,468,2.141,469,2.379,470,2.379,471,3.325,472,2.379,473,3.325,474,2.379,475,2.379,476,2.379,477,2.379,478,2.379,479,2.379,480,3.394,481,3.449,482,2.379,483,2.379,484,4.387,485,3.325,486,2.379,487,3.325,488,2.379,489,2.379,490,2.379,491,2.726,492,2.379,493,2.379,494,2.379,495,2.726,496,2.379,497,2.141,498,2.379,499,2.379,500,2.379,501,2.379,502,2.379,503,2.141,504,2.141,505,2.379,506,2.992,507,2.726,508,2.379,509,2.379,510,2.379,511,2.379,512,2.379,513,2.379,514,2.379,515,2.379,516,2.379,517,2.141,518,2.379,519,1.656,520,2.379,521,3.833,522,3.833,523,3.325,524,2.379,525,2.379,526,2.379,527,2.379,528,2.379,529,3.833,530,2.379,531,2.379,532,2.379,533,1.951,534,2.379,535,2.379,536,2.379,537,2.379,538,2.379,539,2.379,540,3.833,541,2.379,542,2.379,543,2.379,544,2.379,545,2.379,546,2.379,547,2.379,548,2.379,549,2.379,550,3.833,551,2.379,552,2.141,553,2.379,554,2.379,555,2.379,556,2.379,557,2.379,558,2.379,559,2.379,560,3.325,561,2.379,562,2.315,563,3.325,564,2.379,565,1.432,566,2.726,567,2.477,568,1.251,569,1.432,570,3.325,571,2.379,572,2.379,573,2.379,574,2.379,575,2.379,576,2.379,577,2.379,578,2.379,579,2.379,580,2.379,581,2.379,582,2.379,583,1.031,584,3.325]],["title/classes/Deferred.html",[212,0.074,585,2.3]],["body/classes/Deferred.html",[3,0.24,4,0.24,8,0.171,17,0.026,68,0.43,113,0.834,114,1.772,116,0.559,117,1.887,137,1.37,140,1.125,141,0.576,145,0.547,149,0.925,156,0.472,165,0.654,166,1.434,175,2.104,184,1.528,189,1.546,199,0.312,203,0.389,211,0.24,212,0.116,228,1.324,232,1.682,251,1.106,266,1.125,285,0.925,311,0.021,312,0.019,313,0.015,315,1.65,323,2.249,403,2.825,459,1.389,480,2.786,565,1.889,583,1.36,585,3.964,586,2.36,587,3.139,588,2.997,589,3.336,590,3.803,591,5.354,592,4.199,593,4.199,594,5.557,595,1.434,596,2.825,597,3.56,598,2.825,599,3.56,600,2.364,601,3.56,602,3.56,603,2.573,604,2.573,605,1.848,606,3.56,607,3.56,608,3.56,609,2.364,610,3.56,611,3.56,612,3.56,613,3.56,614,3.56,615,3.56,616,3.56,617,3.56,618,4.539,619,3.56,620,4.539,621,3.56,622,3.964,623,3.56,624,4.996,625,3.56,626,3.56,627,3.56,628,4.996,629,3.56,630,4.002,631,3.56,632,1.65,633,4.539,634,3.56,635,4.539,636,4.539,637,4.539,638,3.56,639,3.139,640,3.139,641,3.139,642,3.139,643,1.889,644,3.56,645,3.56,646,3.139,647,1.764,648,4.539,649,3.56,650,3.139,651,3.139,652,2.573,653,2.825,654,4.539,655,3.56,656,3.56,657,3.56,658,3.56,659,3.56]],["title/injectables/FourDCollection.html",[595,0.916,660,1.779]],["body/injectables/FourDCollection.html",[3,0.123,4,0.123,8,0.088,16,1.344,17,0.026,33,1.565,54,1.425,68,0.22,107,1.93,108,2.243,113,0.774,114,1.165,116,0.927,122,0.6,135,1.401,137,1.014,139,1.598,141,0.603,143,0.635,144,0.728,145,0.569,146,0.775,147,1.165,148,1.013,149,0.758,151,2.645,155,3.471,156,0.758,165,1.013,186,0.508,193,3.503,199,0.37,203,0.2,211,0.123,212,0.088,220,1.83,228,1.132,232,1.753,251,1.201,260,1.213,261,2.501,292,1.3,295,0.786,311,0.017,312,0.012,313,0.008,314,1.611,317,2.735,320,1.121,327,2.365,363,2.816,369,3.343,434,1.878,449,1.401,459,0.786,463,2.067,466,1.736,495,2.501,568,0.847,588,2.763,589,2.391,590,1.32,595,0.893,600,2.587,632,2.473,660,2.586,661,1.32,662,1.826,663,1.703,664,2.493,665,5.477,666,3.335,667,2.243,668,2.827,669,2.827,670,3.335,671,3.872,672,2.87,673,3.471,674,5.637,675,3.46,676,4.081,677,3.343,678,4.647,679,5.206,680,3.05,681,4.081,682,2.827,683,3.895,684,2.827,685,2.827,686,4.595,687,3.335,688,3.335,689,3.637,690,4.451,691,2.154,692,3.929,693,2.493,694,2.493,695,3.09,696,3.895,697,3.09,698,3.81,699,3.535,700,2.816,701,2.827,702,2.154,703,2.816,704,2.493,705,3.335,706,2.827,707,3.335,708,2.154,709,2.827,710,4.456,711,1.878,712,4.595,713,3.987,714,4.595,715,4.595,716,3.221,717,3.335,718,2.827,719,4.213,720,4.213,721,2.154,722,2.493,723,1.878,724,2.827,725,2.827,726,2.827,727,2.827,728,2.493,729,2.827,730,2.827,731,2.243,732,3.911,733,2.243,734,2.243,735,3.09,736,2.827,737,2.948,738,2.044,739,2.154,740,1.953,741,2.243,742,2.154,743,2.827,744,2.154,745,3.434,746,2.154,747,2.493,748,2.044,749,2.827,750,1.878,751,2.154,752,2.154,753,2.154,754,2.154,755,2.154,756,3.335,757,2.493,758,3.335,759,2.154,760,2.154,761,2.493,762,1.736,763,1.826,764,2.154,765,1.826,766,1.449,767,1.826,768,1.449,769,3.026,770,3.335,771,1.826,772,4.802,773,4.081,774,2.827,775,4.97,776,3.46,777,1.61,778,2.154,779,1.826,780,4.647,781,2.154,782,2.154,783,2.154,784,1.32,785,2.827,786,2.154,787,4.595,788,4.595,789,3.46,790,4.595,791,2.154,792,2.154,793,2.827,794,3.46,795,2.827,796,1.826,797,1.826,798,1.826,799,1.826,800,2.154,801,2.154,802,2.154,803,2.22,804,1.32,805,1.449,806,3.46,807,1.826,808,2.827,809,2.154,810,2.154,811,3.335,812,2.493,813,2.154,814,2.154,815,2.154,816,2.154,817,2.493,818,2.154,819,2.154,820,3.335,821,3.335,822,3.05,823,2.154,824,3.335,825,2.154,826,2.154,827,2.154,828,2.154,829,2.154,830,2.154,831,2.154,832,2.298,833,2.745,834,2.154,835,2.493,836,2.154,837,2.493,838,1.826,839,2.243,840,2.154,841,2.154,842,2.154,843,1.826,844,2.154,845,2.154,846,2.154,847,2.154,848,2.154,849,2.154,850,2.154,851,2.827,852,2.154,853,2.154]],["title/pipes/FourDDateToString.html",[420,2.095,854,2.095]],["body/pipes/FourDDateToString.html",[3,0.29,4,0.29,8,0.207,10,1.543,13,1.275,17,0.025,122,0.914,141,0.471,143,0.79,144,0.737,146,0.676,149,0.976,155,3.11,156,0.76,165,0.79,199,0.378,203,0.471,211,0.29,212,0.11,228,1.324,232,1.448,251,1.048,311,0.018,312,0.021,313,0.018,341,3.11,393,2.283,420,3.11,422,3.793,424,4.302,425,5.099,430,5.099,434,2.857,438,4.302,440,4.302,672,2.451,777,3.793,854,4.062,855,4.302,856,5.075,857,4.459,858,5.075,859,5.075,860,4.302,861,5.075,862,5.075,863,3.413,864,5.075]],["title/components/FourDDropDown.html",[0,0.195,274,0.859]],["body/components/FourDDropDown.html",[0,0.327,1,0.995,2,1.296,3,0.226,4,0.226,5,2.982,6,0.995,7,1.283,8,0.161,10,1.567,12,4.284,13,0.995,14,1.459,15,1.204,16,0.818,17,0.025,32,3.512,34,2.769,54,0.933,59,2.982,68,0.405,74,4.859,76,4.859,97,3.512,99,4.859,101,1.296,105,3.544,114,1.636,116,0.763,122,0.928,124,4.37,127,4.538,130,2.026,137,0.874,138,2.96,139,1.846,141,0.609,143,0.803,144,0.771,145,0.584,146,0.687,147,1.842,148,0.617,149,0.571,151,2.026,156,0.756,165,0.892,166,1.381,181,3.227,191,2.769,199,0.383,202,1.733,203,0.367,210,1.913,211,0.226,212,0.086,228,0.818,231,2.061,264,0.995,265,1.471,266,1.381,267,0.933,268,1.733,269,1.283,271,1.283,272,0.995,273,1.283,274,1.652,275,1.283,276,0.995,277,1.13,278,1.67,279,0.995,280,1.283,281,0.995,282,1.204,283,1.283,284,0.933,285,0.744,286,1.283,287,1.065,288,1.283,289,0.995,290,1.283,291,0.995,292,1.065,293,1.061,294,1.283,295,0.933,296,1.283,297,0.933,298,1.283,299,0.995,300,1.283,301,0.995,302,1.061,303,1.283,304,0.933,305,0.995,306,1.061,307,0.874,308,1.283,309,0.874,310,1.283,311,0.014,312,0.018,313,0.014,442,2.061,595,1.381,598,2.663,632,1.556,832,2.229,865,3.357,866,3.853,867,6.98,868,5.731,869,6.071,870,4.284,871,5.731,872,5.731,873,5.155,874,3.96,875,3.96,876,5.155,877,3.96,878,3.96,879,3.96,880,2.902,881,2.96,882,5.155,883,3.96,884,3.96,885,3.96,886,3.96,887,3.96,888,3.96,889,2.427,890,2.663]],["title/modules/FourDModule.html",[891,1.652,892,1.925]],["body/modules/FourDModule.html",[3,0.291,4,0.291,8,0.208,17,0.025,139,2.088,199,0.504,203,0.472,210,2.46,211,0.291,212,0.11,264,1.28,311,0.018,312,0.021,313,0.018,569,2.291,660,3.574,737,3.574,891,2.46,892,3.978,893,2.65,894,2.867,895,3.425,896,2.46,897,3.101,898,3.693,899,4.316,900,4.316,901,4.054,902,3.12,903,5.091,904,3.12,905,4.054,906,3.693,907,5.442,908,3.12,909,4.316,910,5.091,911,3.806]],["title/classes/FourDQuery.html",[212,0.074,689,1.925]],["body/classes/FourDQuery.html",[3,0.093,4,0.093,6,1.167,8,0.066,14,1.126,16,1.377,17,0.026,18,2.4,33,1.118,44,1.331,54,1.285,68,0.166,92,1.792,93,1.093,105,1.5,107,1.816,113,0.763,114,1.118,116,0.852,118,2.032,139,0.494,141,0.506,144,0.668,145,0.506,146,0.852,148,0.253,149,0.923,151,2.483,153,1.5,156,0.766,157,1.992,165,0.951,175,0.639,186,0.383,198,0.785,199,0.322,203,0.151,211,0.224,212,0.106,220,0.598,228,1.329,231,0.846,232,1.705,239,2.531,251,1.198,260,1.906,261,2.4,277,1.725,292,0.55,302,0.714,305,0.409,311,0.014,312,0.009,313,0.015,314,1.287,315,0.639,317,2.663,320,2.906,323,1.422,327,2.384,341,0.996,363,0.996,371,1.093,383,1.093,387,0.639,388,2.075,391,1.5,393,0.731,407,4.174,408,3.297,409,3.96,413,1.093,414,3.122,416,1.792,434,0.915,437,3.341,439,2.927,446,1.523,448,0.915,449,1.422,459,1.248,462,0.731,463,2.089,465,1.762,507,0.996,562,2.551,565,1.523,567,1.287,568,1.331,569,0.731,588,2.611,589,2.757,590,1.633,595,0.714,596,3.442,600,2.983,603,0.996,609,0.915,632,1.539,643,2.513,647,2.226,653,4.066,663,0.527,671,1.5,672,3.321,673,2.845,680,1.215,689,3.144,690,2.907,693,1.215,694,1.215,695,1.093,697,1.093,698,1.093,699,3.122,700,1.633,703,1.633,704,1.992,711,0.915,713,2.4,716,2.648,723,0.915,731,1.093,732,1.093,733,1.792,734,2.907,735,1.792,738,1.633,740,1.047,741,1.792,745,1.215,747,1.992,748,2.4,750,0.915,762,1.387,766,1.792,768,1.792,769,3.365,784,1.633,803,2.98,804,1.633,805,1.792,812,1.215,817,1.215,822,1.992,832,2.76,833,3.297,835,1.992,837,1.215,839,1.093,857,3.756,863,1.093,870,3.825,880,1.5,889,2.845,906,2.4,908,0.996,912,1.093,913,1.992,914,1.992,915,1.093,916,4.156,917,5.356,918,3.23,919,3.23,920,2.87,921,4.156,922,4.156,923,1.625,924,3.32,925,1.992,926,2.927,927,1.633,928,1.633,929,2.259,930,1.625,931,2.634,932,2.634,933,3.32,934,1.625,935,3.32,936,2.259,937,3.32,938,2.259,939,2.259,940,1.992,941,2.259,942,1.625,943,3.47,944,1.992,945,3.32,946,1.625,947,1.992,948,1.625,949,1.625,950,2.634,951,1.992,952,2.259,953,1.633,954,2.259,955,1.625,956,2.277,957,1.625,958,1.378,959,3.664,960,1.378,961,1.215,962,1.378,963,1.215,964,1.378,965,2.634,966,1.093,967,1.992,968,1.215,969,1.215,970,1.215,971,1.215,972,1.215,973,1.215,974,1.093,975,1.093,976,1.378,977,1.215,978,1.792,979,1.792,980,1.093,981,1.992,982,1.215,983,1.215,984,1.215,985,1.215,986,1.378,987,2.927,988,0.846,989,1.215,990,1.378,991,1.378,992,3.23,993,1.378,994,1.378,995,2.927,996,1.378,997,1.215,998,2.87,999,1.215,1000,1.378,1001,2.634,1002,1.378,1003,1.378,1004,1.378,1005,1.378,1006,1.093,1007,1.378,1008,1.992,1009,1.378,1010,1.378,1011,1.378,1012,2.259,1013,1.378,1014,1.378,1015,1.378,1016,1.215,1017,1.215,1018,1.378,1019,1.215,1020,1.378,1021,1.215,1022,1.215,1023,1.215,1024,1.093,1025,1.378,1026,1.378,1027,1.378,1028,1.378,1029,1.378,1030,1.215,1031,1.378,1032,2.259,1033,3.664,1034,3.664,1035,3.23,1036,3.664,1037,3.664,1038,1.378,1039,1.378,1040,2.259,1041,1.378,1042,1.378,1043,1.378,1044,1.378,1045,1.378,1046,1.215,1047,3.122,1048,1.093,1049,2.259,1050,2.259,1051,0.996,1052,3.47,1053,1.378,1054,1.378,1055,1.378,1056,3.936,1057,1.215,1058,1.378,1059,2.927,1060,1.215,1061,1.093,1062,2.259,1063,1.378,1064,1.378,1065,1.378,1066,1.378,1067,1.378,1068,1.378,1069,2.259,1070,2.259,1071,1.378,1072,1.378,1073,1.378,1074,1.378,1075,2.259,1076,1.378,1077,2.259,1078,3.32,1079,2.259,1080,2.259,1081,2.259,1082,1.378,1083,2.259,1084,1.378,1085,1.215,1086,2.259,1087,2.259,1088,1.215,1089,1.378,1090,1.378,1091,1.378,1092,1.378,1093,1.378,1094,1.215,1095,3.32,1096,0.996,1097,1.378,1098,1.378,1099,1.378,1100,2.259,1101,1.215,1102,1.093,1103,1.215,1104,2.259,1105,1.378,1106,1.378,1107,1.378,1108,1.378,1109,1.378,1110,1.378,1111,1.378,1112,1.378,1113,1.378,1114,1.378,1115,3.47,1116,1.992,1117,1.378,1118,1.378,1119,1.378,1120,1.378,1121,2.277,1122,2.907,1123,1.378,1124,2.259,1125,1.378,1126,1.378,1127,3.32,1128,1.378,1129,1.378,1130,1.378,1131,2.259,1132,1.378,1133,1.378,1134,2.531,1135,2.277,1136,2.927,1137,1.378,1138,1.378,1139,1.378,1140,1.093,1141,1.378,1142,2.259,1143,1.215,1144,1.378,1145,1.378,1146,1.378,1147,1.378,1148,3.664,1149,4.156,1150,2.87,1151,4.156,1152,1.378,1153,1.378,1154,2.259,1155,1.378,1156,1.378,1157,1.378,1158,1.378,1159,1.215,1160,1.378,1161,1.378,1162,1.378,1163,1.378,1164,1.378,1165,1.378,1166,1.378,1167,1.215,1168,2.87,1169,2.87,1170,4.156,1171,2.87,1172,1.378,1173,1.378,1174,1.378,1175,1.378,1176,1.378,1177,1.378,1178,1.215,1179,1.378,1180,1.378,1181,1.992,1182,2.259,1183,1.378,1184,1.378,1185,1.378,1186,1.378,1187,1.378,1188,4.622,1189,1.378,1190,2.259,1191,1.378,1192,1.378,1193,1.378,1194,1.378,1195,1.378,1196,1.378,1197,1.215,1198,1.378,1199,0.915,1200,1.378,1201,1.378,1202,1.378,1203,1.378,1204,1.378,1205,2.87,1206,3.664,1207,1.378,1208,1.378,1209,1.378,1210,2.259,1211,1.992,1212,2.531,1213,1.378,1214,1.378,1215,1.215,1216,1.215,1217,1.378,1218,1.215]],["title/components/FourDRegistryInput.html",[0,0.195,276,0.859]],["body/components/FourDRegistryInput.html",[0,0.322,1,0.962,2,1.267,3,0.219,4,0.219,6,0.962,7,1.24,8,0.156,10,1.533,12,4.214,13,0.962,14,1.454,15,1.164,16,0.791,17,0.025,54,0.902,68,0.392,101,1.267,113,0.785,114,1.825,116,0.922,122,0.908,127,4.478,130,1.981,137,0.845,138,2.861,139,1.822,141,0.635,143,0.596,144,0.734,145,0.621,146,0.51,147,1.825,148,0.878,149,0.864,156,0.777,165,0.878,166,1.51,186,1.188,198,1.849,199,0.375,202,1.888,203,0.355,210,1.849,211,0.219,212,0.083,264,0.962,265,1.439,266,1.35,267,0.902,268,1.71,269,1.24,271,1.24,272,0.962,273,1.24,274,0.962,275,1.24,276,1.506,277,1.609,278,1.633,279,0.962,280,1.24,281,0.962,282,1.164,283,1.24,284,0.902,285,0.727,286,1.24,287,1.041,288,1.24,289,0.962,290,1.24,291,0.962,292,1.041,293,1.025,294,1.24,295,0.902,296,1.24,297,0.902,298,1.24,299,0.962,300,1.24,301,0.962,302,1.025,303,1.24,304,0.902,305,0.962,306,1.025,307,0.845,308,1.24,309,0.845,310,1.24,311,0.013,312,0.018,313,0.013,442,1.992,583,1.633,595,1.35,598,2.574,632,1.504,832,2.155,880,2.838,881,2.861,890,2.574,1159,4.214,1219,3.245,1220,5.637,1221,5.637,1222,5.637,1223,5.991,1224,5.991,1225,4.779,1226,5.637,1227,5.637,1228,5.637,1229,5.041,1230,3.827,1231,3.827,1232,3.827,1233,3.827,1234,3.827,1235,3.827,1236,3.827,1237,3.827,1238,3.827,1239,3.827,1240,5.041,1241,3.827,1242,3.827,1243,3.827,1244,6.226,1245,3.827,1246,5.637,1247,3.827,1248,5.991,1249,5.041,1250,5.041,1251,3.827,1252,3.827,1253,3.827,1254,3.827,1255,3.827,1256,3.827]],["title/classes/ICustomModal.html",[206,1.344,212,0.074]],["body/classes/ICustomModal.html",[2,1.383,3,0.314,4,0.314,8,0.224,17,0.024,117,1.673,145,0.51,206,2.478,211,0.314,212,0.119,311,0.019,312,0.022,313,0.019,315,2.162,327,2.475,586,2.025,605,1.899,647,2.311,663,1.782,1257,4.664,1258,4.664]],["title/classes/ICustomModalComponent.html",[11,1.259,212,0.074]],["body/classes/ICustomModalComponent.html",[2,1.488,3,0.282,4,0.282,8,0.202,11,2.18,17,0.025,68,0.506,113,0.922,117,2.043,122,1.066,140,1.698,141,0.588,145,0.588,146,0.875,165,0.922,184,1.876,199,0.368,211,0.282,212,0.107,228,1.357,285,0.948,311,0.017,312,0.021,313,0.017,315,1.943,327,2.664,583,2.129,586,2.42,605,2.044,642,4.912,647,2.488,652,4.027,663,1.601,975,4.42,1258,5.02,1259,4.191,1260,6.572,1261,6.572,1262,4.943,1263,4.943,1264,5.02,1265,5.921,1266,4.943,1267,5.921,1268,5.921,1269,2.783]],["title/interfaces/IFieldDescription.html",[988,1.779,1270,2.556]],["body/interfaces/IFieldDescription.html",[3,0.075,4,0.075,8,0.054,16,1.147,17,0.026,18,1.367,33,1.484,49,0.982,54,1.225,68,0.135,92,3.664,104,1.114,106,1.892,107,1.221,108,4.071,109,2.905,110,2.465,113,0.65,114,1.484,116,0.83,122,0.402,137,0.493,139,1.042,141,0.318,144,0.764,145,0.566,146,0.556,147,0.375,148,0.534,149,0.873,151,2.182,153,1.256,155,4.31,156,0.765,165,1.001,184,1.522,186,0.983,193,3.586,198,0.635,199,0.286,203,0.122,211,0.127,212,0.048,220,1.07,228,1.338,230,2.465,232,1.873,250,1.513,251,1.199,260,0.74,261,2.1,282,0.678,292,1.386,311,0.016,312,0.008,313,0.008,314,1.078,317,1.997,320,3.091,327,2.002,329,0.982,341,0.805,369,2.806,393,2.498,400,1.114,406,0.884,410,1.114,449,0.552,459,1.33,462,1.004,463,2.34,466,1.997,495,1.367,503,2.305,519,1.161,533,1.782,562,2.539,566,0.805,568,1.143,583,2.063,588,2.498,589,2.706,595,0.598,600,2.928,603,0.805,609,0.74,632,2.219,647,2.122,650,0.982,660,2.171,663,1.636,664,1.668,667,0.884,669,1.114,671,3.002,672,3.046,673,3.267,674,3.537,677,3.952,679,2.465,684,1.114,689,2.161,690,2.305,695,0.884,696,1.114,697,0.884,698,1.956,699,3.282,700,2.869,703,2.557,709,1.114,710,4.52,711,2.161,713,3.267,716,1.367,718,1.114,719,2.465,720,2.465,722,1.668,723,1.256,724,1.114,725,1.114,726,1.114,727,1.114,728,0.982,729,1.114,730,1.114,731,1.501,732,2.305,733,0.884,734,2.806,735,2.806,736,1.114,737,2.774,738,1.367,740,2.378,743,1.114,749,1.114,750,0.74,757,0.982,761,1.668,762,1.161,763,1.114,765,1.892,766,0.884,767,1.114,768,0.884,769,3.222,771,1.114,774,2.905,776,2.905,777,1.668,779,3.537,780,2.465,784,2.557,785,1.114,789,4.282,793,2.465,794,2.905,795,1.892,796,1.114,797,1.114,798,1.114,799,1.114,803,2.512,804,2.1,805,2.305,807,2.905,832,2.161,833,2.992,838,1.114,839,3.952,843,1.114,851,2.465,857,3.148,860,1.114,881,2.173,889,2.352,918,2.869,919,2.869,925,0.982,926,0.982,927,2.726,928,0.805,943,2.562,944,2.562,947,3.119,953,0.805,956,2.305,965,0.884,975,1.956,988,0.684,997,0.982,1006,1.956,1017,1.668,1024,3.148,1035,0.982,1047,0.884,1048,2.806,1051,2.352,1101,1.668,1102,1.956,1115,2.869,1121,0.884,1122,1.501,1135,0.884,1167,0.982,1178,0.982,1181,2.869,1225,2.905,1270,3.887,1271,1.314,1272,1.114,1273,4.172,1274,3.427,1275,3.427,1276,3.427,1277,5.448,1278,4.681,1279,4.172,1280,2.231,1281,3.537,1282,1.892,1283,4.172,1284,2.231,1285,3.427,1286,1.501,1287,3.838,1288,3.427,1289,2.231,1290,3.254,1291,2.231,1292,2.907,1293,1.367,1294,1.314,1295,1.314,1296,1.314,1297,1.892,1298,1.114,1299,2.465,1300,1.314,1301,1.314,1302,1.314,1303,3.838,1304,1.314,1305,1.256,1306,1.114,1307,1.314,1308,3.427,1309,2.231,1310,1.314,1311,1.314,1312,1.314,1313,1.314,1314,1.314,1315,1.892,1316,1.314,1317,1.314,1318,3.838,1319,3.427,1320,1.314,1321,2.231,1322,2.231,1323,1.114,1324,1.314,1325,1.314,1326,1.314,1327,1.314,1328,1.314,1329,1.314,1330,1.314,1331,2.231,1332,2.907,1333,2.231,1334,1.314,1335,2.231,1336,2.231,1337,1.314,1338,1.668,1339,4.681,1340,1.314,1341,4.879,1342,2.231,1343,1.314,1344,2.907,1345,4.879,1346,4.52,1347,1.314,1348,1.314,1349,3.254,1350,3.254,1351,2.907,1352,2.907,1353,1.314,1354,1.314,1355,2.907,1356,4.172,1357,5.331,1358,4.172,1359,1.314,1360,1.314,1361,1.114,1362,1.314,1363,1.314,1364,1.314,1365,2.907,1366,1.314,1367,1.314,1368,1.314,1369,1.314,1370,1.314,1371,1.314,1372,1.314,1373,1.314,1374,1.314,1375,1.314,1376,1.314,1377,1.314,1378,4.172,1379,1.314,1380,1.314,1381,1.314,1382,1.314,1383,2.907,1384,1.314,1385,1.314,1386,1.314,1387,1.314,1388,1.314,1389,2.231,1390,3.427,1391,2.907,1392,4.172,1393,2.907,1394,1.892,1395,1.314,1396,1.314,1397,2.231,1398,1.114,1399,1.314,1400,3.427,1401,1.314,1402,1.314,1403,1.314,1404,1.314,1405,1.314,1406,1.314,1407,1.314,1408,3.427,1409,2.231,1410,2.231,1411,1.114,1412,1.314,1413,1.314,1414,1.314,1415,2.905,1416,1.114,1417,2.231,1418,2.231,1419,1.314,1420,2.231,1421,1.314,1422,1.314,1423,1.314,1424,3.427,1425,2.907,1426,1.314,1427,1.114,1428,1.314,1429,0.982,1430,1.314,1431,1.314,1432,1.114,1433,3.427,1434,2.907,1435,2.231,1436,1.314,1437,2.907,1438,2.907,1439,2.557,1440,2.907,1441,1.314,1442,2.231,1443,1.314,1444,1.314,1445,2.231,1446,2.907,1447,1.314,1448,1.114,1449,1.314,1450,1.314,1451,1.314,1452,1.314,1453,2.231,1454,1.314,1455,1.314,1456,1.314,1457,1.314,1458,1.314,1459,1.314,1460,2.231,1461,2.907,1462,1.314,1463,1.314,1464,2.907,1465,1.314,1466,1.314,1467,1.314,1468,1.314,1469,1.314,1470,1.314,1471,1.314,1472,2.231,1473,1.314,1474,1.314,1475,1.314,1476,1.314,1477,1.314,1478,1.314,1479,1.314,1480,1.314,1481,1.314,1482,4.172,1483,1.114,1484,1.314,1485,1.314,1486,1.314,1487,1.114,1488,1.114,1489,1.314,1490,1.314,1491,1.314,1492,1.314,1493,1.314,1494,0.805,1495,1.314,1496,3.427,1497,1.314,1498,1.314,1499,2.231,1500,1.114,1501,2.231,1502,2.231,1503,1.314,1504,1.314,1505,1.314,1506,1.314,1507,2.231,1508,1.114,1509,1.314,1510,1.314,1511,2.231,1512,1.314,1513,1.314,1514,1.314,1515,2.907,1516,1.314,1517,1.314,1518,1.314,1519,1.314,1520,1.314,1521,1.314,1522,1.314,1523,1.314,1524,1.314,1525,1.314,1526,1.314,1527,1.314,1528,1.314,1529,1.314,1530,1.314]],["title/modules/JS44DModule.html",[891,1.652,1531,2.095]],["body/modules/JS44DModule.html",[1,1.728,3,0.207,4,0.207,8,0.148,17,0.025,139,1.914,199,0.522,203,0.336,210,1.751,211,0.207,212,0.078,264,0.911,272,1.708,274,1.708,276,1.708,279,1.728,281,1.728,287,1.404,289,1.708,291,1.708,295,1.601,297,1.601,299,1.708,301,1.708,307,1.5,309,1.5,311,0.013,312,0.017,313,0.013,421,4.164,569,1.631,854,4.164,891,1.751,892,3.544,893,1.886,894,2.041,895,3.69,896,1.751,897,2.65,898,3.362,901,3.27,902,2.221,904,2.221,905,3.27,906,2.979,907,4.122,908,2.221,911,3.634,1531,4.446,1532,3.072,1533,3.072,1534,3.624,1535,3.072,1536,3.624,1537,3.624,1538,4.122,1539,4.862,1540,4.862,1541,3.072,1542,4.862,1543,3.624,1544,3.624,1545,3.624,1546,3.624,1547,3.624,1548,3.624,1549,3.624,1550,3.624,1551,3.624,1552,3.624,1553,3.072,1554,3.072,1555,3.072,1556,3.624,1557,3.624,1558,3.624]],["title/components/ListSelectorDialog.html",[0,0.195,279,0.859]],["body/components/ListSelectorDialog.html",[0,0.3,1,0.839,2,1.155,3,0.191,4,0.191,6,0.839,7,1.081,8,0.136,10,1.397,11,1.936,13,0.839,14,1.449,15,1.014,16,0.689,17,0.025,34,2.737,54,1.533,68,0.341,101,1.155,105,2.96,113,0.716,114,1.696,116,0.905,117,1.867,118,1.703,119,3.93,122,0.827,130,1.806,135,1.931,136,2.588,137,0.736,140,1.592,141,0.633,143,0.998,144,0.815,145,0.57,146,0.854,147,1.312,148,0.956,149,0.886,156,0.771,165,0.98,166,1.645,175,1.311,180,2.365,181,2.588,182,3.091,183,3.091,184,1.83,185,3.091,187,3.091,188,3.091,189,2.086,191,2.737,196,2.494,198,3.04,199,0.442,200,1.736,201,3.222,202,1.696,203,0.309,204,2.737,205,1.878,208,2.044,209,2.244,211,0.191,212,0.072,220,1.692,228,1.086,264,0.839,265,1.312,266,1.231,267,0.786,268,1.617,269,1.081,271,1.081,272,0.839,273,1.081,274,0.839,275,1.081,276,0.839,277,0.952,278,1.489,279,1.424,280,1.081,281,0.839,282,1.014,283,1.081,284,0.786,285,0.959,286,1.081,287,0.949,288,1.081,289,0.839,290,1.081,291,0.839,292,0.949,293,0.894,294,1.081,295,0.786,296,1.081,297,0.786,298,1.081,299,0.839,300,1.081,301,0.839,302,0.894,303,1.081,304,0.786,305,0.839,306,0.894,307,0.736,308,1.081,309,0.736,310,1.081,311,0.012,312,0.016,313,0.012,324,5.637,338,2.828,447,2.044,453,3.19,459,1.335,588,2.549,897,2.22,1439,2.816,1559,2.828,1560,6.141,1561,4.457,1562,4.596,1563,4.131,1564,5.257,1565,5.257,1566,1.878,1567,3.435,1568,4.596,1569,3.336,1570,3.336,1571,3.336,1572,3.336,1573,4.596,1574,3.336,1575,3.336,1576,3.435,1577,3.336,1578,4.596,1579,6.292,1580,5.941,1581,3.336,1582,2.96,1583,3.336,1584,4.596,1585,4.596,1586,3.336,1587,3.336,1588,3.336,1589,3.336,1590,3.336,1591,3.336,1592,3.336,1593,3.336,1594,3.336,1595,2.244,1596,3.336,1597,3.336,1598,3.336,1599,3.336,1600,3.336,1601,3.336,1602,2.828,1603,3.336,1604,3.336,1605,3.336,1606,3.336,1607,4.596,1608,3.336,1609,4.596,1610,2.494,1611,3.336,1612,3.336,1613,2.828,1614,3.336,1615,3.336,1616,3.336,1617,2.494,1618,3.336]],["title/components/LoginCmp.html",[0,0.195,281,0.859]],["body/components/LoginCmp.html",[0,0.305,1,0.866,2,1.181,3,0.197,4,0.197,5,2.782,6,0.866,7,1.116,8,0.14,10,1.428,11,1.968,13,0.866,14,1.438,15,1.047,16,0.711,17,0.025,34,2.903,46,5.257,54,0.812,57,3.996,59,3.227,68,0.353,88,3.996,101,1.181,113,0.731,114,0.983,116,0.873,117,1.746,118,1.732,119,3.996,122,0.846,130,1.846,135,1.973,136,2.645,137,0.76,139,1.746,140,1.61,141,0.614,143,0.731,144,0.792,145,0.496,146,0.626,147,1.715,148,0.966,149,0.894,156,0.387,165,0.731,166,1.258,180,2.405,181,2.645,182,3.159,183,3.159,184,1.844,185,3.159,186,1.416,187,3.159,188,3.159,189,1.729,191,2.903,198,1.664,199,0.461,202,1.77,203,0.319,204,2.774,205,1.939,206,1.846,207,2.317,208,2.111,209,2.317,210,1.664,211,0.197,212,0.074,232,0.983,264,0.866,265,1.341,266,1.258,267,0.812,268,1.639,269,1.116,271,1.116,272,0.866,273,1.116,274,0.866,275,1.116,276,0.866,277,0.983,278,1.522,279,0.866,280,1.116,281,1.443,282,1.625,283,1.116,284,0.812,285,0.678,286,1.116,287,0.97,288,1.116,289,0.866,290,1.116,291,0.866,292,0.97,293,0.923,294,1.116,295,0.812,296,1.116,297,0.812,298,1.116,299,0.866,300,1.116,301,0.866,302,1.538,303,1.116,304,0.812,305,0.866,306,0.923,307,0.76,308,1.116,309,0.76,310,1.116,311,0.012,312,0.016,313,0.012,459,0.812,643,2.405,672,2.582,804,3.8,880,1.939,1001,4.406,1016,2.575,1096,2.111,1134,2.575,1135,2.317,1566,1.939,1610,2.575,1619,2.92,1620,5.128,1621,5.345,1622,6.201,1623,5.345,1624,6.201,1625,5.345,1626,6.201,1627,5.345,1628,5.345,1629,5.345,1630,4.532,1631,5.345,1632,6.201,1633,6.201,1634,5.345,1635,3.444,1636,3.444,1637,3.444,1638,3.444,1639,3.444,1640,4.697,1641,3.444,1642,3.444,1643,3.444,1644,4.697,1645,4.697,1646,3.444,1647,2.575,1648,3.444,1649,2.878,1650,2.111,1651,3.444,1652,3.444,1653,3.444,1654,3.444,1655,3.444,1656,2.575,1657,3.444,1658,3.444,1659,3.444,1660,3.444,1661,2.92,1662,3.444,1663,5.345,1664,2.111,1665,3.444,1666,3.444,1667,3.444,1668,3.444]],["title/classes/MD5.html",[212,0.074,1096,2.095]],["body/classes/MD5.html",[3,0.091,4,0.091,6,1.155,8,0.065,14,1.118,16,1.269,17,0.026,18,2.045,33,1.104,44,1.312,54,1.276,68,0.163,92,1.071,93,1.071,105,1.475,107,1.796,113,0.666,114,1.104,116,0.849,118,2.223,122,0.472,139,0.484,141,0.551,143,0.898,144,0.771,145,0.243,146,0.818,148,0.408,149,0.894,151,2.267,153,1.475,156,0.757,157,1.191,165,1.025,166,0.427,175,0.626,186,0.375,193,2.588,198,0.769,199,0.318,202,0.455,203,0.148,211,0.221,212,0.105,220,0.586,228,1.324,231,0.829,232,1.696,239,2.495,251,1.192,260,1.879,261,2.37,277,1.717,292,0.541,302,0.702,305,0.4,311,0.013,312,0.009,313,0.012,314,1.266,315,0.626,317,2.642,320,2.392,323,1.402,327,2.069,341,0.976,363,0.976,371,1.071,383,1.071,387,0.626,388,2.045,391,1.475,393,0.717,407,4.765,408,3.997,409,4.546,413,1.071,414,3.092,416,1.762,434,0.897,437,3.318,439,2.891,446,1.502,448,0.897,449,0.669,459,1.145,462,0.717,463,2.069,465,1.363,507,0.976,562,2.013,565,1.502,567,1.266,568,1.312,569,0.717,588,2.596,589,2.737,590,1.606,595,0.702,596,4.131,600,2.961,603,0.976,609,0.897,632,1.52,643,2.497,647,2.041,653,4.395,663,0.516,671,1.475,672,3.288,673,2.817,680,1.191,689,2.736,690,2.875,693,1.191,694,1.191,695,1.071,697,1.071,698,1.071,699,3.092,700,1.606,703,1.606,704,1.959,711,0.897,713,2.37,716,2.045,723,0.897,731,1.071,732,1.071,733,1.071,734,2.601,735,1.071,738,1.606,740,1.03,741,1.071,745,1.191,747,1.191,748,1.606,750,0.897,762,1.363,766,1.762,768,1.762,769,3.354,784,0.976,803,2.967,804,1.606,805,1.762,812,1.191,817,1.191,822,1.959,832,2.736,833,3.268,835,1.959,837,1.191,839,1.071,857,3.732,863,1.071,870,3.794,880,1.475,889,2.817,906,2.37,908,0.976,912,1.071,913,1.191,914,1.191,916,2.83,917,4.59,918,1.959,919,1.959,920,1.35,921,2.83,922,2.83,924,2.221,925,1.191,926,1.959,927,0.976,928,0.976,929,1.35,931,1.762,932,1.762,933,2.221,935,2.221,936,1.35,937,2.221,938,1.35,939,1.35,940,1.191,941,1.35,943,2.495,944,1.191,945,2.221,947,1.191,950,2.245,951,1.191,952,1.35,953,0.976,954,1.35,956,1.762,958,1.35,959,3.624,960,1.35,961,1.191,962,1.35,963,1.191,964,1.35,965,2.601,966,1.071,967,1.959,968,1.191,969,1.191,970,1.191,971,1.191,972,1.191,973,1.191,974,1.071,975,1.071,976,1.35,977,1.191,978,1.762,979,1.762,980,1.071,981,1.959,982,1.191,983,1.191,984,1.191,985,1.191,986,1.35,987,2.891,988,0.829,989,1.191,990,1.35,991,1.35,992,3.195,993,1.35,994,1.35,995,2.891,996,1.35,997,1.191,998,2.83,999,1.191,1000,1.35,1001,2.601,1002,1.35,1003,1.35,1004,1.35,1005,1.35,1006,1.071,1007,1.35,1008,1.959,1009,1.35,1010,1.35,1011,1.35,1012,2.221,1013,1.35,1014,1.35,1015,1.35,1016,1.191,1017,1.191,1018,1.35,1019,1.191,1020,1.35,1021,1.191,1022,1.191,1023,1.191,1024,1.071,1025,1.35,1026,1.35,1027,1.35,1028,1.35,1029,1.35,1030,1.191,1031,1.35,1032,2.221,1033,3.624,1034,3.624,1035,3.195,1036,3.624,1037,3.624,1038,1.35,1039,1.35,1040,2.221,1041,1.35,1042,1.35,1043,1.35,1044,1.35,1045,1.35,1046,1.191,1047,3.092,1048,1.071,1049,2.221,1050,2.221,1051,0.976,1052,3.436,1053,1.35,1054,1.35,1055,1.35,1056,3.897,1057,1.191,1058,1.35,1059,2.891,1060,1.191,1061,1.071,1062,2.221,1063,1.35,1064,1.35,1065,1.35,1066,1.35,1067,1.35,1068,1.35,1069,2.221,1070,2.221,1071,1.35,1072,1.35,1073,1.35,1074,1.35,1075,2.221,1076,1.35,1077,2.221,1078,3.279,1079,2.221,1080,2.221,1081,2.221,1082,1.35,1083,2.221,1084,1.35,1085,1.191,1086,2.221,1087,2.221,1088,1.191,1089,1.35,1090,1.35,1091,1.35,1092,1.35,1093,1.35,1094,1.191,1095,3.279,1096,2.62,1097,1.35,1098,1.35,1099,1.35,1100,2.221,1101,1.191,1102,1.071,1103,1.191,1104,2.221,1105,1.35,1106,1.35,1107,1.35,1108,1.35,1109,1.35,1110,1.35,1111,1.35,1112,1.35,1113,1.35,1114,1.35,1115,3.436,1116,1.959,1117,1.35,1118,1.35,1119,1.35,1120,1.35,1121,2.245,1122,2.875,1123,1.35,1124,2.221,1125,1.35,1126,1.35,1127,3.279,1128,1.35,1129,1.35,1130,1.35,1131,2.221,1132,1.35,1133,1.35,1134,2.495,1135,2.245,1136,2.891,1137,1.35,1138,1.35,1139,1.35,1140,1.071,1141,1.35,1142,2.221,1143,1.191,1144,1.35,1145,1.35,1146,1.35,1147,1.35,1148,3.624,1149,4.119,1150,2.83,1151,4.119,1152,1.35,1153,1.35,1154,2.221,1155,1.35,1156,1.35,1157,1.35,1158,1.35,1159,1.191,1160,1.35,1161,1.35,1162,1.35,1163,1.35,1164,1.35,1165,1.35,1166,1.35,1167,1.191,1168,2.83,1169,2.83,1170,4.119,1171,2.83,1172,1.35,1173,1.35,1174,1.35,1175,1.35,1176,1.35,1177,1.35,1178,1.191,1179,1.35,1180,1.35,1181,1.959,1182,2.221,1183,1.35,1184,1.35,1185,1.35,1186,1.35,1187,1.35,1188,5.405,1189,2.221,1190,2.221,1191,2.221,1192,2.221,1193,1.35,1194,2.221,1195,1.35,1196,2.221,1197,1.959,1198,1.35,1199,0.897,1200,1.35,1201,1.35,1202,1.35,1203,1.35,1204,1.35,1205,2.83,1206,3.632,1207,1.35,1208,1.35,1209,1.35,1210,2.221,1211,1.959,1212,2.495,1213,1.35,1214,2.221,1215,1.191,1216,1.191,1217,1.35,1218,1.191,1323,2.221,1669,1.593,1670,2.62,1671,2.62,1672,2.62,1673,2.62,1674,2.62,1675,2.62,1676,2.62,1677,2.62,1678,2.62,1679,2.62,1680,2.62,1681,2.62,1682,1.593,1683,1.593,1684,1.593,1685,1.593,1686,1.593,1687,1.593,1688,1.593,1689,1.593,1690,1.593,1691,1.593,1692,1.593,1693,1.593,1694,1.593,1695,1.593,1696,1.593,1697,1.593,1698,1.593,1699,1.593,1700,2.62,1701,1.593,1702,1.593,1703,1.593,1704,1.593,1705,1.593]],["title/injectables/Modal.html",[285,0.493,595,0.916]],["body/injectables/Modal.html",[0,0.361,3,0.18,4,0.18,8,0.129,17,0.025,31,2.71,33,1.262,68,0.596,107,2.324,113,0.689,114,0.901,116,0.912,117,2.071,118,1.955,122,0.796,137,0.697,140,1.368,141,0.587,143,1.086,144,0.714,145,0.616,146,0.826,148,0.907,149,0.798,153,2.49,156,0.722,165,0.94,166,0.846,175,1.241,180,3.012,186,1.422,199,0.38,201,3.938,203,0.293,204,1.525,211,0.18,212,0.096,228,1.054,232,0.901,251,0.652,266,1.185,285,0.991,311,0.011,312,0.015,313,0.011,317,1.643,391,1.777,442,1.643,449,1.326,462,1.42,583,2.082,586,2.366,588,2.961,595,1.185,604,2.71,605,2.01,609,2.49,630,2.36,643,1.42,661,1.935,663,1.654,667,2.123,723,2.49,728,3.816,750,1.777,769,3.425,904,3.39,927,3.798,931,4.379,989,2.36,1019,4.353,1024,3.917,1051,1.935,1088,3.306,1269,1.777,1567,4.633,1582,2.874,1706,2.36,1707,5.105,1708,5.105,1709,5.531,1710,4.422,1711,4.422,1712,4.422,1713,3.157,1714,6.036,1715,5.105,1716,4.689,1717,4.422,1718,4.422,1719,4.422,1720,3.157,1721,4.422,1722,5.52,1723,6.778,1724,6.813,1725,3.157,1726,5.823,1727,4.328,1728,5.105,1729,5.531,1730,5.531,1731,5.823,1732,4.135,1733,4.937,1734,6.036,1735,5.823,1736,4.937,1737,4.937,1738,5.823,1739,4.422,1740,3.157,1741,4.422,1742,3.157,1743,3.749,1744,3.157,1745,3.157,1746,3.157,1747,3.306,1748,2.36,1749,3.157,1750,3.157,1751,2.36,1752,3.157,1753,3.157,1754,3.157,1755,3.157,1756,3.157,1757,3.157,1758,3.157,1759,2.676,1760,3.157,1761,3.157,1762,3.157,1763,3.157,1764,3.157,1765,3.157,1766,4.422,1767,3.157,1768,3.157,1769,3.749,1770,3.157,1771,3.157,1772,3.157,1773,3.157,1774,3.157,1775,3.157,1776,3.157,1777,3.157,1778,3.157,1779,3.157,1780,3.157,1781,3.157,1782,3.157,1783,3.157,1784,3.157,1785,3.157,1786,3.157,1787,3.157,1788,3.157,1789,3.157,1790,3.157,1791,3.157,1792,3.157]],["title/injectables/ModalConfig.html",[180,1.539,595,0.916]],["body/injectables/ModalConfig.html",[3,0.196,4,0.196,8,0.14,17,0.025,33,0.977,34,2.897,35,4.281,57,3.497,65,3.983,68,0.35,88,3.497,107,2.239,113,0.728,118,1.726,122,0.842,137,1.176,141,0.641,143,0.533,144,0.42,145,0.624,146,0.71,148,1.067,149,0.978,151,2.433,156,0.673,165,0.728,180,3.084,181,3.567,182,3.146,183,3.584,184,1.889,185,3.584,186,1.256,187,3.584,188,3.584,189,1.962,191,2.574,193,3.632,199,0.255,203,0.318,211,0.196,212,0.074,228,0.707,251,0.707,285,1.001,311,0.019,312,0.016,313,0.012,325,4.281,327,2.105,403,3.146,449,2.406,459,1.102,568,1.838,583,1.515,586,2.554,588,2.105,589,2.434,595,1.253,605,1.615,622,3.852,632,2.49,646,4.736,661,2.098,663,1.515,769,2.434,889,2.867,913,3.497,927,3.51,928,2.867,1006,3.852,1140,3.146,1264,3.966,1305,2.634,1361,3.966,1563,3.146,1582,1.928,1716,5.371,1722,5.371,1727,4.855,1732,3.497,1733,3.966,1793,2.559,1794,4.678,1795,5.329,1796,5.329,1797,5.329,1798,5.329,1799,5.329,1800,4.678,1801,3.424,1802,4.678,1803,3.424,1804,4.678,1805,4.678,1806,4.678,1807,3.424,1808,3.424,1809,5.727,1810,3.424,1811,3.424,1812,4.678,1813,4.678,1814,3.424,1815,3.424,1816,3.424,1817,3.424,1818,4.678,1819,4.678,1820,5.727,1821,4.678,1822,4.678,1823,5.329,1824,4.678,1825,4.855,1826,3.424,1827,3.424,1828,3.424,1829,3.424,1830,3.424,1831,5.727,1832,3.424,1833,3.424,1834,3.983,1835,4.678,1836,3.424,1837,4.678,1838,6.19,1839,3.424,1840,3.424,1841,4.678,1842,3.424,1843,3.424,1844,3.424,1845,3.424,1846,3.424]],["title/injectables/ModalDialogInstance.html",[140,0.916,595,0.916]],["body/injectables/ModalDialogInstance.html",[3,0.206,4,0.206,8,0.147,17,0.025,68,0.369,113,0.754,114,1.938,116,0.729,117,1.856,122,0.872,135,2.035,137,1.291,140,1.298,141,0.637,143,0.911,144,0.717,145,0.605,146,0.779,148,0.561,149,0.964,156,0.614,165,1.016,166,1.749,175,2.299,184,1.383,189,2.014,199,0.268,203,0.334,211,0.206,212,0.105,228,1.326,232,1.562,251,1,266,1.298,285,0.964,311,0.022,312,0.017,313,0.013,403,3.258,459,1.378,480,3.044,565,2.179,583,1.569,585,3.258,586,2.54,587,2.694,588,2.828,589,2.847,590,2.968,594,5.606,595,1.298,596,2.424,597,3.056,598,2.424,599,3.056,600,2.029,601,3.056,602,3.056,603,2.968,604,2.968,605,2.019,606,4.638,607,4.638,608,4.106,609,2.727,610,4.106,611,4.638,612,4.638,613,4.638,614,4.638,615,3.056,616,3.056,617,3.056,618,4.106,619,3.056,620,4.106,621,4.106,622,4.39,623,4.106,624,5.534,625,3.056,626,3.056,627,4.106,628,4.638,629,3.056,630,4.373,631,4.106,632,1.904,633,4.106,634,3.056,635,4.106,636,4.106,637,4.106,638,3.056,639,3.621,640,3.621,641,3.621,642,3.621,643,2.179,644,4.106,645,4.106,646,3.621,647,2.035,648,4.959,649,4.106,650,3.621,651,3.621,652,2.968,653,3.258,654,4.106,655,3.056,656,4.959,657,3.056,658,3.056,659,3.056,661,2.209,663,1.168,1847,4.844,1848,4.844,1849,4.844,1850,4.844,1851,3.604,1852,3.604,1853,3.604,1854,3.604,1855,3.604,1856,3.604,1857,3.604,1858,3.604,1859,3.604,1860,3.604,1861,3.604,1862,3.604,1863,3.604,1864,3.604,1865,3.604]],["title/modules/ModalModule.html",[891,1.652,1866,2.095]],["body/modules/ModalModule.html",[3,0.277,4,0.277,8,0.198,17,0.025,140,1.819,199,0.505,203,0.45,204,3.229,205,2.73,206,2.3,207,3.261,211,0.277,212,0.105,264,1.219,284,1.677,285,0.98,304,1.677,311,0.017,312,0.02,313,0.017,569,2.182,891,2.342,893,2.523,894,2.73,895,4.229,896,2.342,897,3.037,898,3.853,901,3.937,902,2.971,904,2.971,905,3.937,1538,4.962,1595,3.261,1866,4.361,1867,4.111,1868,4.111,1869,4.111,1870,4.111,1871,4.849,1872,4.849,1873,4.849]],["title/classes/OKOnlyContent.html",[212,0.074,1874,2.3]],["body/classes/OKOnlyContent.html",[0,0.322,3,0.261,4,0.261,8,0.186,10,1.388,11,2.077,14,0.943,17,0.025,44,2.217,68,0.467,101,1.147,113,0.878,116,0.926,117,1.715,137,1.245,140,1.64,141,0.593,143,0.711,144,0.559,145,0.593,146,0.608,148,0.953,149,0.883,156,0.788,189,2.464,199,0.476,203,0.423,206,2.217,211,0.322,212,0.122,284,1.075,285,0.814,305,1.147,311,0.016,312,0.02,313,0.016,315,1.794,459,1.075,586,2.419,605,1.575,663,1.478,740,2.217,803,3.277,896,2.205,1199,2.569,1269,2.569,1293,2.797,1305,3.176,1439,3.752,1494,2.797,1566,2.569,1649,3.457,1650,2.797,1664,2.797,1874,4.118,1875,3.411,1876,5.571,1877,3.869,1878,4.564,1879,4.301,1880,4.301,1881,4.564,1882,4.564,1883,4.564,1884,3.07,1885,3.07,1886,3.07,1887,3.07,1888,3.07,1889,3.07,1890,3.869,1891,2.569,1892,3.07,1893,3.07]],["title/components/OKOnlyModal.html",[0,0.195,284,0.806]],["body/components/OKOnlyModal.html",[0,0.334,1,1.041,2,1.334,3,0.237,4,0.237,6,1.041,7,1.342,8,0.169,10,1.614,11,2.156,13,1.041,14,1.465,15,1.26,16,0.856,17,0.025,44,2.427,54,0.976,68,0.424,101,1.334,113,0.826,116,0.823,117,1.941,122,0.956,135,2.23,136,2.988,137,1.172,140,1.75,141,0.592,143,0.826,144,0.782,145,0.543,146,0.707,147,1.515,156,0.658,165,0.826,166,1.422,189,1.954,199,0.459,203,0.384,206,2.086,211,0.303,212,0.115,264,1.041,265,1.515,266,1.422,267,0.976,268,1.763,269,1.342,271,1.342,272,1.041,273,1.342,274,1.041,275,1.342,276,1.041,277,1.182,278,1.719,279,1.041,280,1.342,281,1.041,282,1.26,283,1.342,284,1.455,285,0.942,286,1.342,287,1.096,288,1.342,289,1.041,290,1.342,291,1.041,292,1.096,293,1.11,294,1.342,295,0.976,296,1.342,297,0.976,298,1.342,299,1.041,300,1.342,301,1.041,302,1.11,303,1.342,304,0.976,305,1.472,306,1.11,307,0.914,308,1.342,309,0.914,310,1.342,311,0.014,312,0.018,313,0.014,459,0.976,586,2.405,605,1.832,663,1.342,740,1.628,803,2.564,896,2.564,1199,2.988,1269,2.332,1293,3.252,1305,2.332,1439,3.912,1494,3.252,1566,2.988,1647,3.096,1649,3.589,1650,2.538,1664,2.538,1874,3.939,1875,3.096,1876,3.512,1879,3.57,1880,3.57,1884,2.786,1885,2.786,1886,3.57,1887,3.57,1888,3.939,1889,3.939,1890,4.964,1891,3.297,1892,2.786,1893,2.786,1894,4.142,1895,4.142,1896,4.142,1897,4.142,1898,4.142]],["title/components/QueryBand.html",[0,0.195,287,0.706]],["body/components/QueryBand.html",[0,0.232,1,0.537,2,0.833,3,0.122,4,0.122,5,2.112,6,0.833,7,0.692,8,0.166,13,0.537,14,1.365,15,0.649,16,1.322,17,0.025,26,2.73,29,3.523,31,2.487,32,3.554,33,0.61,34,1.961,54,0.503,55,2.73,56,2.73,59,2.726,62,4.059,68,0.219,95,2.73,97,3.755,101,0.833,113,0.516,116,0.946,118,1.315,122,0.597,130,1.302,137,0.472,141,0.644,143,0.632,144,0.642,145,0.582,146,0.541,147,0.946,148,1.076,149,0.906,156,0.614,165,0.978,166,1.642,184,1.877,186,1.604,191,1.961,199,0.159,200,2.726,202,1.749,203,0.198,211,0.299,212,0.088,228,1.224,232,0.61,250,2.726,251,1.198,264,0.537,265,0.946,266,0.888,267,1.078,268,1.306,269,0.692,271,0.692,272,0.537,273,0.692,274,0.537,275,0.692,276,0.537,277,0.61,278,1.073,279,0.537,280,0.692,281,0.537,282,0.649,283,0.692,284,0.503,285,0.478,286,0.692,287,1.129,288,0.692,289,0.537,290,0.692,291,0.537,292,1.342,293,1.554,294,0.692,295,0.503,296,0.692,297,0.503,298,0.692,299,0.537,300,0.692,301,0.537,302,0.572,303,0.692,304,0.503,305,0.537,306,0.572,307,0.731,308,0.692,309,0.731,310,0.692,311,0.007,312,0.012,313,0.007,323,0.897,387,2.329,393,2.541,436,2.73,442,1.112,444,1.437,445,1.597,446,3.054,447,1.309,448,2.285,449,2.437,450,3.755,451,1.597,452,1.597,453,2.285,454,3.034,455,2.73,456,4.122,457,3.21,458,3.034,459,1.234,460,3.701,461,4.222,462,2.357,463,1.826,464,3.523,465,2.38,466,3.018,467,3.034,468,2.73,469,3.034,470,3.034,471,3.916,472,3.034,473,3.916,474,3.034,475,3.034,476,3.034,477,3.034,478,3.034,479,3.034,480,3.422,481,3.523,482,3.034,483,3.034,484,4.423,485,3.034,486,3.034,487,3.034,488,3.034,489,2.477,490,2.477,491,2.803,492,3.034,493,3.034,494,2.477,495,2.487,496,3.034,497,2.229,498,3.034,499,3.034,500,3.034,501,3.034,502,3.034,503,2.229,504,2.229,505,3.034,506,2.229,507,2.03,508,3.034,509,3.034,510,3.034,511,3.034,512,3.034,513,3.034,514,1.597,515,3.034,516,3.034,517,2.73,518,1.597,519,1.112,520,3.034,521,3.419,522,3.419,523,3.034,524,3.034,525,3.034,526,2.477,527,3.034,528,3.419,529,3.034,530,1.597,531,1.597,532,2.477,533,1.309,534,2.477,535,1.597,536,1.597,537,1.597,538,1.597,539,1.597,540,3.034,541,1.597,542,1.597,543,1.597,544,1.597,545,3.419,546,1.597,547,3.419,548,1.597,549,3.419,550,3.034,551,1.597,552,2.229,553,1.597,554,3.419,555,1.597,556,1.597,557,3.419,558,1.597,559,3.419,560,2.477,561,1.597,562,1.724,563,2.477,564,1.597,565,0.961,566,2.03,567,1.961,568,0.839,569,0.961,570,2.477,571,1.597,572,1.597,573,1.597,574,3.419,575,1.597,576,3.419,577,1.597,578,3.419,579,1.597,580,3.419,581,1.597,582,3.419,583,1.073,584,2.477,1899,2.809,1900,3.313,1901,2.229,1902,2.136,1903,3.313,1904,2.136,1905,2.136,1906,2.136,1907,2.136,1908,2.136,1909,2.136,1910,2.136,1911,2.136,1912,2.136,1913,2.136,1914,2.136,1915,2.136,1916,2.136,1917,2.136,1918,2.136,1919,2.136,1920,2.136,1921,2.136,1922,2.136,1923,2.136,1924,2.136,1925,2.136,1926,2.136,1927,2.136,1928,2.136,1929,2.136,1930,1.597,1931,2.136,1932,2.136,1933,2.136,1934,2.136,1935,2.136,1936,2.136,1937,2.136,1938,2.136,1939,2.136,1940,2.136,1941,2.136,1942,1.597]],["title/directives/QueryBandDirective.html",[267,0.806,309,0.755]],["body/directives/QueryBandDirective.html",[0,0.252,3,0.179,4,0.179,5,1.635,6,0.79,8,0.18,13,0.79,14,1.14,16,1.326,17,0.026,26,2.113,29,2.965,31,1.925,32,3.12,33,0.897,34,1.518,55,2.113,56,2.965,59,2.294,62,4.318,68,0.322,95,2.113,97,3.383,101,0.79,113,0.686,116,0.938,118,1.649,141,0.291,145,0.291,148,1.024,156,0.495,184,1.857,186,1.604,191,1.518,199,0.234,200,2.65,202,1.894,203,0.291,211,0.332,212,0.11,228,1.344,232,0.897,250,2.65,251,1.326,267,1.2,287,1.14,292,1.278,293,1.479,306,0.842,307,0.694,309,0.973,311,0.011,312,0.015,313,0.011,323,1.32,387,2.556,393,2.842,436,3.425,442,1.635,444,2.113,445,2.348,446,3.101,447,1.925,448,2.867,449,2.442,450,3.793,451,3.295,452,3.806,453,1.769,454,2.348,455,2.113,456,3.713,457,2.701,458,2.348,459,1.039,460,3.295,461,3.806,462,1.983,463,1.414,464,2.965,465,2.294,466,2.872,467,2.348,468,2.113,469,2.348,470,2.348,471,3.295,472,2.348,473,3.295,474,2.348,475,2.348,476,2.348,477,2.348,478,2.348,479,2.348,480,3.385,481,3.425,482,2.348,483,2.348,484,4.375,485,3.295,486,2.348,487,3.295,488,2.348,489,2.348,490,2.348,491,2.701,492,2.348,493,2.348,494,2.348,495,2.701,496,2.348,497,2.113,498,2.348,499,2.348,500,2.348,501,2.348,502,2.348,503,2.113,504,2.113,505,2.348,506,2.965,507,2.701,508,2.348,509,2.348,510,2.348,511,2.348,512,2.348,513,2.348,514,2.348,515,2.348,516,2.348,517,2.113,518,2.348,519,1.635,520,2.348,521,3.806,522,3.806,523,3.295,524,2.348,525,2.348,526,2.348,527,2.348,528,2.348,529,3.806,530,2.348,531,2.348,532,2.348,533,1.925,534,2.348,535,2.348,536,2.348,537,2.348,538,2.348,539,2.348,540,3.806,541,2.348,542,2.348,543,2.348,544,2.348,545,2.348,546,2.348,547,2.348,548,2.348,549,2.348,550,3.806,551,2.348,552,2.113,553,2.348,554,2.348,555,2.348,556,2.348,557,2.348,558,2.348,559,2.348,560,3.295,561,2.348,562,2.294,563,3.295,564,2.348,565,1.414,566,2.701,567,2.46,568,1.235,569,1.414,570,3.295,571,2.348,572,2.348,573,2.348,574,2.348,575,2.348,576,2.348,577,2.348,578,2.348,579,2.348,580,2.348,581,2.348,582,2.348,583,1.018,584,3.295,1942,2.348,1943,3.142]],["title/components/QuickFindInput.html",[0,0.195,289,0.859]],["body/components/QuickFindInput.html",[0,0.351,1,1.16,2,1.427,3,0.264,4,0.264,6,1.16,7,1.495,8,0.188,13,1.16,14,1.478,15,1.403,16,0.953,17,0.025,54,1.087,68,0.472,101,1.427,116,0.756,130,2.232,137,1.358,141,0.571,144,0.754,145,0.527,147,1.621,148,0.718,149,0.666,199,0.458,202,1.832,203,0.428,211,0.264,212,0.1,251,1.271,264,1.16,265,1.621,266,1.521,267,1.087,268,1.832,269,1.495,271,1.495,272,1.16,273,1.495,274,1.16,275,1.495,276,1.16,277,1.317,278,1.84,279,1.16,280,1.495,281,1.16,282,1.403,283,1.495,284,1.087,285,0.819,286,1.495,287,1.173,288,1.495,289,1.614,290,2.174,291,1.16,292,1.173,293,1.236,294,1.495,295,1.087,296,1.495,297,1.087,298,1.495,299,1.16,300,1.495,301,1.16,302,1.236,303,1.495,304,1.087,305,1.16,306,1.236,307,1.019,308,1.495,309,1.019,310,1.495,311,0.016,312,0.02,313,0.016,387,2.232,446,2.889,1541,3.912,1901,3.82,1944,3.912,1945,6.152,1946,5.679,1947,6.42,1948,4.614,1949,4.614,1950,4.614,1951,4.614,1952,4.614,1953,4.614]],["title/components/RecordEditWindow.html",[0,0.195,291,0.859]],["body/components/RecordEditWindow.html",[0,0.342,1,1.092,2,1.374,3,0.248,4,0.248,6,1.092,7,1.407,8,0.177,10,1.663,11,2.204,13,1.092,14,1.471,15,1.32,16,0.897,17,0.025,54,1.023,68,0.444,101,1.092,113,0.852,116,0.863,117,1.82,122,0.985,130,2.149,135,2.298,136,3.079,140,1.604,141,0.583,143,0.676,144,0.77,145,0.507,146,0.578,147,1.561,165,0.852,166,1.465,196,3.246,198,2.642,199,0.482,202,1.561,203,0.403,204,2.892,205,2.445,206,2.149,207,2.921,208,2.661,211,0.248,212,0.094,264,1.092,265,1.561,266,1.465,267,1.023,268,1.793,269,1.407,271,1.407,272,1.092,273,1.407,274,1.092,275,1.407,276,1.092,277,1.24,278,1.772,279,1.092,280,1.407,281,1.092,282,1.32,283,1.407,284,1.023,285,0.789,286,1.407,287,1.13,288,1.407,289,1.092,290,1.407,291,1.579,292,1.338,293,1.683,294,1.407,295,1.023,296,1.407,297,1.023,298,1.407,299,1.092,300,1.407,301,1.092,302,1.163,303,1.407,304,1.023,305,1.092,306,1.163,307,0.959,308,1.407,309,0.959,310,1.407,311,0.015,312,0.019,313,0.015,459,1.023,605,2.067,675,5.075,737,2.846,890,3.678,909,3.682,1602,3.682,1954,3.682,1955,6.283,1956,4.343,1957,4.343,1958,4.343,1959,4.343,1960,4.343,1961,4.343,1962,4.343,1963,5.469,1964,4.636,1965,4.343,1966,4.343]],["title/components/RecordList.html",[0,0.195,295,0.806]],["body/components/RecordList.html",[0,0.217,1,0.955,2,0.769,3,0.11,4,0.11,6,0.485,7,0.625,8,0.079,10,0.93,11,1.399,13,0.485,14,1.358,15,1.434,16,1.351,17,0.026,33,1.604,54,1.324,68,0.483,101,0.769,107,2.209,113,0.476,114,1.846,116,0.85,117,1.954,118,1.401,122,0.551,130,1.202,135,1.285,137,0.426,139,1.156,140,1.018,141,0.6,143,0.819,144,0.732,145,0.562,146,0.7,147,0.873,148,0.476,149,0.441,151,1.972,153,1.086,156,0.671,165,0.914,166,1.542,175,1.972,180,1.376,181,1.086,184,1.235,186,1.111,199,0.437,200,2.454,201,2.329,202,1.085,203,0.179,204,2.09,205,1.086,208,1.182,209,1.297,210,0.932,211,0.217,212,0.042,220,1.126,228,0.632,231,2.995,232,1.846,233,2.593,250,1.978,251,1.127,256,1.635,260,2.435,264,0.485,265,0.873,266,0.819,267,0.455,268,1.235,269,0.625,271,0.625,272,1.322,273,0.625,274,0.485,275,0.625,276,0.485,277,0.551,278,0.991,279,1.261,280,0.625,281,0.485,282,0.587,283,0.625,284,0.455,285,0.787,286,0.625,287,1.16,288,0.625,289,0.485,290,0.625,291,0.485,292,1.364,293,1.709,294,0.625,295,1.019,296,0.625,297,0.455,298,0.625,299,0.485,300,0.625,301,0.485,302,0.517,303,0.625,304,0.455,305,0.485,306,0.517,307,0.426,308,0.625,309,0.426,310,0.625,311,0.013,312,0.011,313,0.007,323,0.81,391,1.086,393,2.258,433,2.286,447,1.182,450,2.329,453,2.655,456,2.909,457,2.329,459,1.324,462,1.376,463,0.868,464,2.057,465,1.592,466,2.839,468,2.057,480,1.592,491,1.874,497,2.057,506,1.297,517,1.297,533,1.182,552,2.057,562,2.611,565,1.71,566,2.329,567,0.932,568,1.202,604,3.527,605,2.12,622,2.057,632,2.144,640,1.442,643,2.122,663,0.625,671,3.071,672,2.09,677,1.297,692,1.442,701,3.222,711,1.722,740,0.758,748,1.874,761,1.442,769,1.592,772,4.624,806,4.254,808,4.458,863,3.375,866,2.286,890,1.297,897,1.478,906,2.329,908,1.182,932,2.057,950,2.057,956,2.057,961,1.442,1059,2.286,1060,2.286,1061,2.057,1103,2.841,1121,1.297,1286,3.669,1338,1.442,1346,4.254,1349,3.222,1350,1.635,1415,3.998,1416,1.635,1483,2.593,1553,1.635,1555,1.635,1563,2.909,1567,2.286,1582,1.086,1595,1.297,1613,3.667,1732,1.442,1751,2.286,1769,3.222,1899,2.593,1930,3.233,1942,2.286,1964,1.635,1967,1.635,1968,3.222,1969,3.059,1970,3.059,1971,3.059,1972,3.801,1973,4.325,1974,3.667,1975,3.059,1976,3.222,1977,3.059,1978,3.801,1979,4.325,1980,3.059,1981,3.059,1982,3.801,1983,3.059,1984,3.801,1985,4.716,1986,1.635,1987,3.059,1988,3.059,1989,1.929,1990,5.755,1991,1.929,1992,3.059,1993,3.059,1994,4.325,1995,3.059,1996,3.059,1997,1.929,1998,5.207,1999,1.929,2000,1.929,2001,3.059,2002,1.929,2003,3.059,2004,3.059,2005,1.929,2006,3.667,2007,1.929,2008,1.929,2009,1.929,2010,3.059,2011,1.929,2012,3.059,2013,3.667,2014,3.059,2015,1.929,2016,1.929,2017,3.059,2018,1.929,2019,3.059,2020,1.929,2021,3.059,2022,3.059,2023,3.059,2024,1.929,2025,1.929,2026,3.059,2027,1.929,2028,3.059,2029,1.929,2030,1.929,2031,1.929,2032,1.929,2033,3.059,2034,1.929,2035,5.259,2036,1.929,2037,3.801,2038,3.801,2039,3.059,2040,3.059,2041,3.059,2042,3.801,2043,1.929,2044,1.929,2045,1.929,2046,1.929,2047,1.929,2048,1.929,2049,1.929,2050,1.929,2051,1.929,2052,1.929,2053,1.929,2054,4.716,2055,1.929,2056,1.929,2057,1.929,2058,3.059,2059,1.929,2060,1.929,2061,1.929,2062,3.059,2063,4.325,2064,1.929,2065,1.929,2066,1.929,2067,1.929,2068,1.929,2069,3.801,2070,4.325,2071,1.635,2072,1.929,2073,1.929,2074,1.929,2075,1.929,2076,1.929,2077,1.929,2078,1.929,2079,1.929,2080,4.325,2081,1.929,2082,3.059,2083,3.059,2084,3.801,2085,3.059,2086,1.929,2087,3.801,2088,5.259,2089,3.801,2090,1.929,2091,1.929,2092,4.325,2093,1.929,2094,3.059,2095,1.929,2096,1.929,2097,1.929,2098,3.059,2099,1.929,2100,1.929,2101,1.929,2102,1.929,2103,1.929,2104,1.635,2105,1.929,2106,1.929,2107,3.059,2108,1.929,2109,3.059,2110,4.716,2111,3.059,2112,3.059,2113,3.801,2114,4.325,2115,3.801,2116,3.059,2117,1.929,2118,3.059,2119,4.716,2120,4.325,2121,1.929,2122,3.801,2123,3.059,2124,1.929,2125,1.929,2126,1.929,2127,1.929,2128,1.929,2129,1.929,2130,4.325,2131,3.059,2132,3.059,2133,4.325,2134,3.059,2135,1.929,2136,3.059,2137,3.059,2138,3.059,2139,3.059,2140,1.929,2141,1.929,2142,1.929,2143,1.929,2144,1.929,2145,3.059,2146,1.929,2147,1.929,2148,1.929,2149,1.929,2150,4.325,2151,1.929,2152,1.929]],["title/components/Tab.html",[0,0.195,297,0.806]],["body/components/Tab.html",[0,0.343,1,1.101,2,1.382,3,0.25,4,0.25,6,1.101,7,1.419,8,0.179,13,1.101,14,1.472,15,1.332,16,0.905,17,0.025,33,1.569,54,1.032,68,0.615,101,1.382,116,0.865,130,2.161,137,0.967,141,0.557,143,0.682,144,0.772,145,0.557,146,0.583,147,1.569,148,0.682,149,0.632,156,0.617,184,1.569,186,1.416,189,2.213,199,0.326,202,1.715,203,0.406,211,0.314,212,0.119,220,1.613,231,2.279,251,0.905,264,1.101,265,1.569,266,1.473,267,1.032,268,1.799,269,1.419,271,1.419,272,1.101,273,1.419,274,1.101,275,1.419,276,1.101,277,1.25,278,1.781,279,1.101,280,1.419,281,1.101,282,1.332,283,1.419,284,1.032,285,0.793,286,1.419,287,1.136,288,1.419,289,1.101,290,1.419,291,1.101,292,1.136,293,1.173,294,1.419,295,1.032,296,1.419,297,1.602,298,1.419,299,1.709,300,1.419,301,1.101,302,1.173,303,1.419,304,1.032,305,1.101,306,1.173,307,0.967,308,1.419,309,0.967,310,1.419,311,0.015,312,0.019,313,0.015,387,2.161,446,2.704,583,1.781,595,1.61,1656,3.274,2153,3.274,2154,5.095,2155,4.661,2156,5.498,2157,4.38,2158,3.713,2159,3.713,2160,3.713,2161,3.713,2162,3.713,2163,3.713,2164,3.713,2165,4.661,2166,3.713,2167,3.713,2168,3.713,2169,3.713,2170,3.713,2171,3.713]],["title/components/Tabs.html",[0,0.195,299,0.859]],["body/components/Tabs.html",[0,0.336,1,1.05,2,1.341,3,0.239,4,0.239,6,1.05,7,1.353,8,0.17,13,1.05,14,1.466,15,1.27,16,0.863,17,0.025,33,1.523,54,0.984,68,0.602,101,1.341,113,0.831,116,0.919,122,0.961,135,2.241,141,0.607,143,0.915,144,0.802,145,0.545,146,0.783,147,1.523,148,0.65,149,0.602,156,0.469,165,0.915,166,1.575,175,1.641,184,1.523,186,1.257,189,1.538,199,0.311,202,1.678,203,0.387,211,0.305,212,0.115,220,1.538,231,2.173,251,0.863,264,1.05,265,1.523,266,1.429,267,0.984,268,1.768,269,1.353,271,1.353,272,1.05,273,1.353,274,1.05,275,1.353,276,1.05,277,1.192,278,1.728,279,1.05,280,1.353,281,1.05,282,1.27,283,1.353,284,0.984,285,0.77,286,1.353,287,1.102,288,1.353,289,1.05,290,1.353,291,1.05,292,1.102,293,1.119,294,1.353,295,0.984,296,1.353,297,1.635,298,1.353,299,1.723,300,1.353,301,1.05,302,1.119,303,1.353,304,0.984,305,1.05,306,1.119,307,0.922,308,1.353,309,0.922,310,1.353,311,0.015,312,0.019,313,0.015,387,2.097,446,2.787,583,1.353,595,1.575,1561,4.523,1656,3.122,1901,3.588,2153,3.122,2154,3.541,2155,3.541,2158,4.983,2159,4.983,2160,4.523,2161,3.541,2162,4.523,2163,3.541,2164,3.541,2165,4.523,2166,3.541,2167,4.523,2168,3.541,2169,3.541,2170,3.541,2171,3.541,2172,5.335,2173,5.335,2174,5.335,2175,4.176,2176,4.176,2177,4.176,2178,4.176,2179,4.176,2180,4.176,2181,4.176]],["title/classes/Utf8.html",[212,0.074,762,1.779]],["body/classes/Utf8.html",[3,0.19,4,0.19,8,0.135,17,0.026,33,1.75,44,1.8,68,0.607,113,0.713,114,2.005,116,0.442,118,2.295,122,0.825,141,0.621,143,0.978,144,0.77,146,0.837,149,0.855,151,1.305,156,0.666,165,1.012,166,0.889,186,0.782,193,1.869,211,0.19,212,0.072,220,1.93,228,1.323,268,1.966,311,0.012,312,0.016,313,0.012,315,1.305,335,5.028,369,3.08,371,3.08,387,2.222,388,3.213,396,2.481,397,2.814,406,3.08,413,2.233,414,3.527,416,3.08,418,2.481,762,2.383,1102,2.233,1206,4.433,1212,3.423,1215,3.423,1216,3.423,1290,2.814,1411,2.814,2182,2.814,2183,4.58,2184,4.58,2185,4.58,2186,4.58,2187,4.58,2188,5.653,2189,4.58,2190,5.243,2191,4.58,2192,4.58,2193,4.58,2194,4.58,2195,3.319,2196,3.319,2197,3.319,2198,4.58,2199,3.319,2200,6.887,2201,3.319,2202,5.243,2203,3.319,2204,3.319,2205,4.58,2206,3.319,2207,3.319,2208,4.58,2209,3.319,2210,3.319,2211,3.319,2212,3.319,2213,3.319,2214,4.58,2215,4.58,2216,3.319,2217,3.319,2218,3.319,2219,4.58,2220,3.319,2221,3.319,2222,5.243,2223,3.319,2224,3.319,2225,4.58,2226,4.58,2227,3.319,2228,3.319,2229,6.826,2230,6.403,2231,3.319,2232,6.499,2233,3.319,2234,5.243,2235,5.243,2236,3.319,2237,4.58,2238,5.243,2239,5.243,2240,3.319,2241,5.243,2242,3.319,2243,3.319,2244,3.319,2245,3.319,2246,5.243,2247,5.931,2248,5.243,2249,4.58,2250,4.58,2251,5.653,2252,3.319,2253,3.319,2254,5.931,2255,6.577,2256,5.653,2257,5.243,2258,4.58,2259,3.319,2260,6.132,2261,3.319,2262,3.319,2263,3.319,2264,3.319,2265,3.319]],["title/components/WebAppContainer.html",[0,0.195,301,0.859]],["body/components/WebAppContainer.html",[0,0.324,1,0.972,2,1.275,3,0.221,4,0.221,6,0.972,7,1.252,8,0.158,10,1.543,13,0.972,14,1.455,15,1.175,16,0.799,17,0.025,44,1.519,54,0.911,68,0.396,101,1.275,105,2.177,113,0.79,114,1.83,116,0.801,122,0.914,130,1.994,137,0.853,139,1.829,141,0.606,143,0.602,144,0.737,145,0.558,146,0.515,147,1.783,148,0.79,149,0.732,165,0.79,166,1.359,184,1.717,186,1.196,199,0.447,200,2.948,201,3.686,202,1.448,203,0.359,204,1.868,210,1.868,211,0.221,212,0.084,232,1.717,251,0.799,264,0.972,265,1.448,266,1.359,267,0.911,268,1.717,269,1.252,271,1.252,272,0.972,273,1.252,274,0.972,275,1.252,276,0.972,277,1.103,278,1.644,279,0.972,280,1.252,281,1.275,282,1.175,283,1.252,284,0.911,285,0.995,286,1.252,287,1.048,288,1.252,289,0.972,290,1.252,291,0.972,292,1.048,293,1.036,294,1.252,295,0.911,296,1.252,297,0.911,298,1.252,299,0.972,300,1.252,301,1.512,302,1.518,303,1.252,304,0.911,305,0.972,306,1.036,307,0.853,308,1.252,309,0.853,310,1.252,311,0.013,312,0.018,313,0.013,317,2.012,387,1.994,437,3.11,446,2.706,457,2.369,605,1.335,632,1.519,643,1.739,647,1.624,880,2.857,897,2.451,1554,3.277,1595,2.6,1610,2.89,1620,2.89,1661,3.277,1748,3.793,1901,3.413,1968,4.803,1976,5.099,1986,3.277,2071,3.277,2104,3.277,2266,3.277,2267,5.075,2268,5.075,2269,5.665,2270,6.015,2271,5.665,2272,5.665,2273,5.075,2274,3.866,2275,3.866,2276,3.866,2277,3.866,2278,3.866,2279,3.866,2280,3.866,2281,5.075,2282,3.866,2283,3.866,2284,3.866,2285,3.866,2286,3.866,2287,3.866,2288,3.866,2289,3.866,2290,3.866,2291,3.866,2292,3.866,2293,3.866,2294,3.866,2295,3.866,2296,3.866,2297,5.665,2298,5.665,2299,3.866,2300,3.866,2301,3.866,2302,3.866,2303,3.866,2304,5.665,2305,3.866,2306,3.866]],["title/components/YesNoModal.html",[0,0.195,304,0.806]],["body/components/YesNoModal.html",[0,0.33,1,1.009,2,1.307,3,0.229,4,0.229,6,1.009,7,1.301,8,0.164,10,1.582,11,2.124,13,1.009,14,1.46,15,1.221,16,0.829,17,0.025,44,2.399,54,0.946,68,0.411,101,1.307,113,0.81,116,0.863,117,1.922,122,0.937,135,2.185,136,2.929,137,1.148,140,1.735,141,0.601,143,0.898,144,0.794,145,0.535,146,0.769,147,1.485,156,0.685,165,0.898,166,1.546,175,1.578,186,0.946,189,1.915,199,0.454,203,0.372,206,2.044,211,0.297,212,0.112,264,1.009,265,1.485,266,1.393,267,0.946,268,1.742,269,1.301,271,1.301,272,1.009,273,1.301,274,1.009,275,1.301,276,1.009,277,1.146,278,1.685,279,1.009,280,1.301,281,1.009,282,1.221,283,1.301,284,0.946,285,0.934,286,1.301,287,1.074,288,1.301,289,1.009,290,1.301,291,1.009,292,1.074,293,1.076,294,1.301,295,0.946,296,1.301,297,0.946,298,1.301,299,1.009,300,1.301,301,1.009,302,1.076,303,1.301,304,1.438,305,1.45,306,1.076,307,0.886,308,1.301,309,0.886,310,1.301,311,0.014,312,0.018,313,0.014,459,0.946,583,1.301,586,2.427,605,1.796,652,3.74,663,1.301,740,1.578,803,2.513,896,2.513,974,2.701,1199,2.929,1269,2.261,1293,3.188,1305,2.261,1439,3.188,1494,3.188,1566,2.929,1576,3.888,1582,2.261,1617,3.001,1647,3.001,1649,3.536,1650,2.461,1664,2.461,1879,3.499,1880,3.499,1884,2.701,1885,2.701,1886,3.499,1887,3.499,1888,3.881,1889,3.881,1891,3.249,1892,2.701,1893,2.701,2307,3.001,2308,4.891,2309,4.891,2310,4.015,2311,4.015,2312,4.015,2313,3.881,2314,4.015,2315,4.015,2316,4.015,2317,3.404,2318,3.404,2319,3.404,2320,3.404]],["title/classes/YesNoModalContent.html",[212,0.074,2313,2.3]],["body/classes/YesNoModalContent.html",[0,0.312,3,0.247,4,0.247,8,0.177,10,1.317,11,2.01,14,0.894,17,0.025,44,2.145,68,0.443,101,1.088,113,0.85,116,0.942,117,1.66,137,1.205,140,1.602,141,0.613,143,0.674,144,0.531,145,0.613,146,0.577,148,1.008,149,0.933,156,0.794,186,1.286,189,2.432,199,0.467,203,0.402,206,2.145,211,0.312,212,0.118,285,0.787,304,1.02,305,1.088,311,0.015,312,0.019,313,0.015,315,1.702,459,1.02,583,2.033,586,2.469,605,1.495,652,2.654,663,1.403,740,2.145,803,3.24,896,2.092,974,2.913,1199,2.438,1269,2.438,1293,2.654,1305,3.074,1494,2.654,1566,2.438,1576,3.237,1582,3.074,1617,3.237,1649,3.345,1650,2.654,1664,2.654,1877,3.671,1879,4.222,1880,4.222,1884,2.913,1885,2.913,1886,2.913,1887,2.913,1888,2.913,1889,2.913,1891,2.438,1892,2.913,1893,2.913,2307,3.237,2308,3.671,2309,3.671,2313,4.021,2317,5.486,2318,5.486,2319,5.486,2320,3.671,2321,4.33,2322,4.33,2323,4.33,2324,4.33,2325,4.33,2326,4.33]],["title/coverage.html",[2327,3.962]],["body/coverage.html",[0,0.401,1,1.037,8,0.168,9,3.499,11,1.52,17,0.025,33,2.04,35,4.767,139,1.255,140,1.106,145,0.383,180,1.857,206,1.622,212,0.147,251,0.853,267,1.248,272,1.037,274,1.331,276,1.331,279,1.037,281,1.037,284,0.973,285,0.595,287,0.853,289,1.037,291,1.037,295,0.973,297,1.248,299,1.331,301,1.037,304,0.973,307,0.911,309,0.911,311,0.014,312,0.018,313,0.014,314,1.994,316,3.499,320,2.148,388,2.529,420,3.245,421,2.529,423,3.499,444,3.932,585,2.776,586,2.55,587,3.958,595,1.833,660,2.148,662,3.499,689,2.324,737,2.148,762,2.148,854,2.529,855,3.499,865,4.489,912,4.289,915,2.776,966,2.776,980,2.776,988,2.148,1096,2.529,1211,3.085,1219,4.489,1257,3.499,1259,3.499,1270,3.085,1272,4.489,1559,3.499,1619,3.499,1706,3.958,1747,3.085,1793,3.958,1825,3.499,1834,3.085,1874,2.776,1875,3.958,1891,2.324,1944,3.499,1954,3.499,1967,3.499,2153,4.61,2182,3.499,2266,3.499,2307,3.958,2313,2.776,2327,3.499,2328,4.127,2329,4.127,2330,5.295,2331,5.295,2332,4.127,2333,4.127,2334,4.127,2335,4.127,2336,5.846,2337,4.127,2338,4.127,2339,5.295,2340,4.127,2341,6.635,2342,6.72,2343,5.846,2344,4.127,2345,4.127,2346,4.127,2347,4.127,2348,4.127,2349,4.127,2350,4.127,2351,5.846,2352,4.127,2353,4.127,2354,4.127,2355,4.127,2356,5.846,2357,5.295,2358,4.127,2359,4.127,2360,4.127,2361,4.127,2362,4.127,2363,4.127,2364,4.127,2365,4.127,2366,4.127,2367,4.127,2368,4.127,2369,4.127,2370,4.127,2371,4.127,2372,4.127,2373,4.956,2374,3.499,2375,3.499,2376,4.127]],["title/dependencies.html",[894,2.317,2377,2.852]],["body/dependencies.html",[17,0.023,311,0.02,312,0.022,313,0.02,894,3.584,2378,5.596,2379,5.596,2380,5.596]],["title/index.html",[68,0.292,2381,2.418,2382,2.132]],["body/index.html",[0,0.389,2,1.486,5,2.2,8,0.121,10,0.901,14,0.612,15,0.901,16,1.285,17,0.024,18,1.816,41,3.585,42,3.585,54,1.434,107,1.245,108,1.993,117,1.953,118,0.96,139,1.729,141,0.392,143,0.461,144,0.604,151,1.662,155,1.816,156,0.333,199,0.44,212,0.141,250,2.2,251,0.612,252,2.512,265,0.846,272,1.351,285,0.776,287,0.873,292,1.285,293,0.794,297,1.162,302,1.441,311,0.01,312,0.015,313,0.015,315,2.445,320,1.542,323,2.614,325,2.215,327,1.903,329,3.161,330,3.585,356,3.585,363,1.816,391,3.028,396,2.215,448,1.668,449,1.245,450,1.816,453,1.668,455,1.993,459,1.267,462,1.333,463,1.333,465,2.2,466,2.2,480,2.2,481,2.844,484,1.993,491,1.816,504,1.993,519,1.542,565,1.333,567,1.431,568,2.113,604,1.816,641,2.215,643,2.849,647,1.776,651,2.215,660,2.959,664,2.215,665,4.18,667,4.373,668,5.275,671,3.566,672,3.438,673,3.984,677,3.617,678,2.512,682,2.512,683,2.512,685,2.512,692,2.215,700,1.816,703,2.591,706,2.512,711,3.329,713,3.022,716,3.623,722,2.215,723,2.381,737,3.383,738,1.816,740,2.392,741,1.993,748,1.816,750,3.756,757,3.161,784,1.816,866,2.215,891,1.431,892,3.201,893,1.542,897,1.431,898,1.816,904,3.295,905,3.825,911,2.215,914,4.734,915,2.844,928,1.816,931,3.316,932,3.617,940,2.215,950,2.844,951,2.215,953,3.022,963,3.686,978,1.993,979,1.993,987,4.25,988,2.798,992,3.161,995,3.161,999,2.215,1001,1.993,1008,3.686,1021,2.215,1022,3.161,1023,2.215,1030,2.215,1046,2.215,1047,4.093,1048,1.993,1051,1.816,1052,2.215,1057,3.686,1061,3.617,1085,2.215,1094,2.215,1116,2.215,1122,2.844,1136,3.161,1140,1.993,1143,2.215,1197,2.215,1218,4.42,1281,4.18,1282,2.512,1286,1.993,1297,3.585,1298,3.585,1299,2.512,1306,2.512,1315,2.512,1338,3.686,1394,2.512,1398,2.512,1427,2.512,1429,2.215,1432,2.512,1448,2.512,1487,2.512,1488,2.512,1508,2.512,1531,3.295,1563,1.993,1620,3.686,1736,2.512,1737,2.512,1743,2.512,1748,2.215,1751,2.215,1759,2.512,1866,3.295,1974,2.512,1998,3.585,2013,3.585,2382,2.215,2383,6.424,2384,2.963,2385,2.963,2386,2.963,2387,2.963,2388,4.931,2389,6.424,2390,6.086,2391,2.963,2392,4.228,2393,2.963,2394,4.228,2395,2.963,2396,5.686,2397,4.228,2398,4.228,2399,2.963,2400,5.377,2401,2.963,2402,2.963,2403,2.963,2404,2.963,2405,4.228,2406,4.228,2407,2.963,2408,2.963,2409,4.228,2410,4.931,2411,2.963,2412,2.963,2413,4.228,2414,4.228,2415,4.931,2416,4.228,2417,2.963,2418,2.963,2419,2.963,2420,2.963,2421,2.512,2422,4.931,2423,2.963,2424,4.228,2425,2.963,2426,6.086,2427,2.963,2428,2.963,2429,4.228,2430,2.963,2431,2.963,2432,2.963,2433,2.963,2434,2.963,2435,2.512,2436,4.228,2437,2.963,2438,2.963,2439,2.963,2440,4.228,2441,4.228,2442,2.963,2443,4.228,2444,2.963,2445,4.228,2446,2.963,2447,4.228,2448,2.963,2449,4.228,2450,4.931,2451,2.963,2452,2.963,2453,2.963,2454,2.963,2455,2.963,2456,2.963,2457,2.963,2458,2.963,2459,4.228,2460,2.963,2461,4.228,2462,2.963,2463,2.963,2464,2.963,2465,2.963,2466,4.228,2467,2.963,2468,2.963,2469,2.963,2470,2.963,2471,2.963,2472,2.963,2473,2.963,2474,2.963,2475,4.931,2476,2.963,2477,2.963,2478,2.963,2479,2.963,2480,4.228,2481,2.963,2482,2.963,2483,2.963,2484,4.228,2485,2.963,2486,2.963,2487,2.963,2488,2.963,2489,2.963,2490,2.963,2491,2.963,2492,4.228,2493,2.963,2494,2.963,2495,4.228,2496,2.963,2497,2.963,2498,2.963,2499,2.963,2500,2.963,2501,2.963,2502,2.963,2503,2.963,2504,2.512,2505,2.512]],["title/license.html",[2381,2.418,2382,2.132,2506,2.418]],["body/license.html",[17,0.021,93,3.402,175,1.988,311,0.018,312,0.021,313,0.018,408,3.402,568,2.359,639,4.785,902,3.099,915,3.402,953,3.099,1286,3.402,1429,4.487,1630,4.288,1930,3.781,2006,4.288,2421,4.288,2435,4.288,2504,4.288,2505,4.288,2506,4.288,2507,5.058,2508,6.402,2509,5.058,2510,6.003,2511,5.058,2512,5.058,2513,5.058,2514,5.058,2515,5.058,2516,5.058,2517,7.024,2518,5.058,2519,5.058,2520,6.003,2521,5.058,2522,5.058,2523,5.058,2524,5.058,2525,5.058,2526,5.058,2527,5.058,2528,6.003,2529,5.058,2530,5.058,2531,5.058,2532,5.058,2533,5.058,2534,6.003,2535,6.003,2536,5.058,2537,5.058,2538,5.058,2539,5.058,2540,5.058,2541,5.058,2542,5.058,2543,5.058,2544,5.058,2545,5.058,2546,5.058,2547,5.058,2548,5.058,2549,5.058,2550,5.058,2551,5.058,2552,5.058,2553,5.058,2554,5.058,2555,5.058,2556,5.058,2557,5.058,2558,5.058,2559,5.058,2560,5.058,2561,5.058,2562,5.058]],["title/modules.html",[893,2.432]],["body/modules.html",[17,0.022,311,0.019,312,0.022,313,0.019,433,4.964,892,3.112,893,2.877,1500,5.629,1531,3.388,1866,3.388,2563,6.64,2564,6.64]],["title/overview.html",[2565,3.962]],["body/overview.html",[1,1.664,2,1.028,17,0.025,44,2.069,139,1.869,140,1.559,220,1.506,264,1.028,272,1.664,274,1.664,276,1.664,279,1.664,281,1.664,284,1.56,285,0.84,287,1.368,289,1.664,291,1.664,295,1.56,297,1.56,299,1.664,301,1.664,304,1.56,306,1.096,307,1.462,309,1.462,311,0.014,312,0.018,313,0.014,315,1.608,406,2.751,418,3.058,421,4.058,422,3.058,569,1.841,660,3.029,661,2.507,737,3.029,854,4.058,891,1.976,892,3.815,893,2.129,894,2.303,895,2.751,896,1.976,897,1.976,898,2.507,899,3.468,900,3.468,901,3.541,902,2.507,988,2.129,1531,4.461,1532,3.468,1533,3.468,1535,3.468,1866,4.24,1867,3.468,1868,3.468,1869,3.468,1870,3.468,2565,3.468,2566,4.091,2567,4.091]],["title/miscellaneous/variables.html",[519,2.141,2568,2.418]],["body/miscellaneous/variables.html",[17,0.025,68,0.5,107,2.052,145,0.607,148,0.982,149,1.001,151,1.92,156,0.66,180,2.646,184,1.394,228,1.214,232,1.8,311,0.017,312,0.02,313,0.017,323,2.47,383,3.286,434,2.75,437,3.603,519,2.542,567,2.36,586,2.165,647,2.47,740,1.92,912,3.286,965,3.286,966,3.955,967,4.395,968,3.652,969,3.652,970,3.652,971,3.652,972,3.652,973,3.652,977,3.652,978,3.286,979,3.286,980,3.955,981,4.395,982,3.652,983,3.652,984,3.652,985,3.652,1706,3.652,1747,4.395,1793,3.652,1834,4.395,1891,3.31,2373,4.141,2374,4.985,2375,4.985,2568,4.141,2569,6.308,2570,4.885,2571,4.885,2572,5.88,2573,4.885,2574,4.885]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":33,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["0.2s",{"_index":83,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["0/1",{"_index":2342,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["00000000",{"_index":1175,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["0123456789abcdef'.split",{"_index":1682,"title":{},"body":{"classes/MD5.html":{}}}],["0x010000",{"_index":2265,"title":{},"body":{"classes/Utf8.html":{}}}],["0x07",{"_index":1216,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x0800",{"_index":2263,"title":{},"body":{"classes/Utf8.html":{}}}],["0x0f",{"_index":1212,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x10000",{"_index":2224,"title":{},"body":{"classes/Utf8.html":{}}}],["0x1f",{"_index":1215,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3f",{"_index":414,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3ff",{"_index":2226,"title":{},"body":{"classes/Utf8.html":{}}}],["0x80",{"_index":1206,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0xc0",{"_index":2235,"title":{},"body":{"classes/Utf8.html":{}}}],["0xd800",{"_index":2222,"title":{},"body":{"classes/Utf8.html":{}}}],["0xdc00",{"_index":2227,"title":{},"body":{"classes/Utf8.html":{}}}],["0xe0",{"_index":2238,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf0",{"_index":2241,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf8",{"_index":2264,"title":{},"body":{"classes/Utf8.html":{}}}],["0xff",{"_index":2250,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffe00000",{"_index":2240,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff",{"_index":2223,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff0000",{"_index":2236,"title":{},"body":{"classes/Utf8.html":{}}}],["0xfffff800",{"_index":2233,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffffff80",{"_index":2228,"title":{},"body":{"classes/Utf8.html":{}}}],["1",{"_index":220,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["1.18.02.16a",{"_index":1640,"title":{},"body":{"components/LoginCmp.html":{}}}],["1.18.06.17a",{"_index":1396,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["1/1",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":418,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["10).replace",{"_index":1174,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["10/10",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":35,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/ModalConfig.html":{},"coverage.html":{}}}],["1063",{"_index":1644,"title":{},"body":{"components/LoginCmp.html":{}}}],["1070px",{"_index":1621,"title":{},"body":{"components/LoginCmp.html":{}}}],["10px",{"_index":58,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["12",{"_index":416,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["12/40",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2566,"title":{},"body":{"overview.html":{}}}],["15/16",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":30,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["16",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["1732584193",{"_index":1200,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["1732584194",{"_index":1202,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["18",{"_index":413,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["18/09",{"_index":1377,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["181px",{"_index":90,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["1px",{"_index":74,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["2",{"_index":44,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["20",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1626,"title":{},"body":{"components/LoginCmp.html":{}}}],["2017",{"_index":2509,"title":{},"body":{"license.html":{}}}],["24px",{"_index":471,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["25px",{"_index":89,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["27",{"_index":1823,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["27/28",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["271733878",{"_index":1203,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["271733879",{"_index":1201,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["2px",{"_index":477,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["3",{"_index":406,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["3.2.1",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["30/53",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1187,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["33",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["34/39",{"_index":2369,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":253,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["350",{"_index":1585,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["3px",{"_index":75,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["4",{"_index":371,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["400",{"_index":1584,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["41",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["4c",{"_index":1138,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4d",{"_index":672,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["4d's",{"_index":1299,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["4daction",{"_index":1082,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4daction/rest_proxyhttpget",{"_index":1093,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["5/12",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1825,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{}}}],["55",{"_index":1207,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["56",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["570",{"_index":190,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["5px",{"_index":29,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["6",{"_index":388,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["6/18",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["630",{"_index":221,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["64",{"_index":1204,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["667",{"_index":1645,"title":{},"body":{"components/LoginCmp.html":{}}}],["670px",{"_index":1625,"title":{},"body":{"components/LoginCmp.html":{}}}],["70",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1211,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["87",{"_index":2368,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2567,"title":{},"body":{"overview.html":{}}}],["9/]/.test(input",{"_index":378,"title":{},"body":{"classes/Base64.html":{}}}],["93",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2366,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":69,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["__karma__",{"_index":2374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_attributes",{"_index":1313,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_backdropref",{"_index":613,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_bootstrapref",{"_index":612,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_config",{"_index":1747,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_defaultconfig",{"_index":1834,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_editwindowconfig",{"_index":1969,"title":{},"body":{"components/RecordList.html":{}}}],["_fourdurl",{"_index":1004,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_listcache",{"_index":1038,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_modified",{"_index":1316,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_previousadvancedquery",{"_index":1970,"title":{},"body":{"components/RecordList.html":{}}}],["_previousquery",{"_index":1971,"title":{},"body":{"components/RecordList.html":{}}}],["_recnum",{"_index":1303,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_registrycache",{"_index":1039,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_resultdefered",{"_index":614,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_savedsearches",{"_index":2120,"title":{},"body":{"components/RecordList.html":{}}}],["_savedsets",{"_index":2130,"title":{},"body":{"components/RecordList.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":343,"title":{},"body":{"classes/Base64.html":{}}}],["ability",{"_index":2459,"title":{},"body":{"index.html":{}}}],["above",{"_index":93,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["absolute",{"_index":66,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["acceptheader",{"_index":1069,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["acceptheader:string",{"_index":1064,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["accepts",{"_index":1819,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["access",{"_index":448,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["accessing",{"_index":2439,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":135,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{}}}],["act",{"_index":1060,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["acting",{"_index":2458,"title":{},"body":{"index.html":{}}}],["action",{"_index":1930,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{},"license.html":{}}}],["actions",{"_index":1795,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["active",{"_index":2154,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["actual_component",{"_index":310,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["add",{"_index":250,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["add/edit",{"_index":1996,"title":{},"body":{"components/RecordList.html":{}}}],["add/edit/delete",{"_index":2488,"title":{},"body":{"index.html":{}}}],["add32",{"_index":1671,"title":{},"body":{"classes/MD5.html":{}}}],["add32(a",{"_index":1684,"title":{},"body":{"classes/MD5.html":{}}}],["added",{"_index":1046,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["adding",{"_index":2091,"title":{},"body":{"components/RecordList.html":{}}}],["additional",{"_index":1057,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["additionally",{"_index":2487,"title":{},"body":{"index.html":{}}}],["adds",{"_index":2447,"title":{},"body":{"index.html":{}}}],["addtab",{"_index":2172,"title":{},"body":{"components/Tabs.html":{}}}],["addtab(tab",{"_index":2167,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["adjust",{"_index":2077,"title":{},"body":{"components/RecordList.html":{}}}],["advanced",{"_index":15,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["advancedquery",{"_index":2033,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquery['dialogconfig",{"_index":2103,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquerycomponent",{"_index":1,"title":{"components/AdvancedQueryComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["aftercontentinit",{"_index":1968,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["afterviewinit",{"_index":12,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["alert('record",{"_index":2097,"title":{},"body":{"components/RecordList.html":{}}}],["alert(reason",{"_index":1964,"title":{},"body":{"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["algorithm",{"_index":362,"title":{},"body":{"classes/Base64.html":{}}}],["allow",{"_index":2501,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1734,"title":{},"body":{"injectables/Modal.html":{}}}],["allowmultiple",{"_index":1723,"title":{},"body":{"injectables/Modal.html":{}}}],["allows",{"_index":2484,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":1284,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["already",{"_index":2090,"title":{},"body":{"components/RecordList.html":{}}}],["and/or",{"_index":1630,"title":{},"body":{"components/LoginCmp.html":{},"license.html":{}}}],["angular",{"_index":904,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["angular/common",{"_index":1543,"title":{},"body":{"modules/JS44DModule.html":{}}}],["angular/common/http",{"_index":908,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["angular/core",{"_index":203,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["angular/forms",{"_index":1541,"title":{},"body":{"modules/JS44DModule.html":{},"components/QuickFindInput.html":{}}}],["angular/platform",{"_index":432,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["angular2",{"_index":204,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["angular5",{"_index":1044,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["answer",{"_index":1886,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["anyway",{"_index":401,"title":{},"body":{"classes/Base64.html":{}}}],["api",{"_index":603,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["app",{"_index":1008,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["appear",{"_index":50,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["applicable",{"_index":1289,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["application",{"_index":1748,"title":{},"body":{"injectables/Modal.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["application'},{'name",{"_index":303,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["application/x",{"_index":1066,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["applications",{"_index":1753,"title":{},"body":{"injectables/Modal.html":{}}}],["applied",{"_index":747,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["appref",{"_index":1715,"title":{},"body":{"injectables/Modal.html":{}}}],["appref.injector.get(app_component",{"_index":1757,"title":{},"body":{"injectables/Modal.html":{}}}],["apps",{"_index":2476,"title":{},"body":{"index.html":{}}}],["argument",{"_index":954,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["arising",{"_index":2560,"title":{},"body":{"license.html":{}}}],["array",{"_index":151,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(>config.keyboard",{"_index":1839,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["ascending",{"_index":736,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["ascii",{"_index":374,"title":{},"body":{"classes/Base64.html":{}}}],["assets",{"_index":2429,"title":{},"body":{"index.html":{}}}],["assets/main';and",{"_index":2433,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1286,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["associates",{"_index":2485,"title":{},"body":{"index.html":{}}}],["assume",{"_index":1517,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["astral",{"_index":394,"title":{},"body":{"classes/Base64.html":{}}}],["atk’s",{"_index":364,"title":{},"body":{"classes/Base64.html":{}}}],["atob",{"_index":355,"title":{},"body":{"classes/Base64.html":{}}}],["atob`/`btoa",{"_index":332,"title":{},"body":{"classes/Base64.html":{}}}],["attribute",{"_index":1332,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["attributes",{"_index":997,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["attributes/properties",{"_index":1455,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["audit",{"_index":1352,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["authenticate",{"_index":2480,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":2492,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":992,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["authors",{"_index":2550,"title":{},"body":{"license.html":{}}}],["auto",{"_index":22,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["automatically",{"_index":641,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["available",{"_index":2443,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":1088,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["b",{"_index":407,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["back",{"_index":1379,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["backdropref",{"_index":1848,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["backdropref(value",{"_index":617,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["backend",{"_index":987,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["backends",{"_index":2497,"title":{},"body":{"index.html":{}}}],["background",{"_index":1622,"title":{},"body":{"components/LoginCmp.html":{}}}],["background:#ddd",{"_index":71,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#f8f8f8",{"_index":37,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#fff",{"_index":40,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["band",{"_index":450,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["band'},{'name",{"_index":288,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["bar",{"_index":481,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["base",{"_index":2440,"title":{},"body":{"index.html":{}}}],["base64",{"_index":314,"title":{"classes/Base64.html":{}},"body":{"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["base64.encode(utf8.utf8encode((columns",{"_index":814,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify",{"_index":1132,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(recordlist",{"_index":848,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(values",{"_index":1475,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(pwd",{"_index":1106,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(record.recordtojson('update",{"_index":845,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(this.getcolumnlistjson",{"_index":1402,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('add",{"_index":1436,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('update",{"_index":1449,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(url",{"_index":1092,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(user",{"_index":1105,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.error",{"_index":379,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat((buffer",{"_index":419,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat(buffer",{"_index":415,"title":{},"body":{"classes/Base64.html":{}}}],["base64imageref",{"_index":421,"title":{"pipes/Base64ImageRef.html":{}},"body":{"pipes/Base64ImageRef.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":363,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["basic",{"_index":2466,"title":{},"body":{"index.html":{}}}],["basically",{"_index":2469,"title":{},"body":{"index.html":{}}}],["before",{"_index":975,"title":{},"body":{"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["beforeclose",{"_index":1260,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["beforedismiss",{"_index":1261,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["being",{"_index":47,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["belong",{"_index":1380,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["below",{"_index":1762,"title":{},"body":{"injectables/Modal.html":{}}}],["between",{"_index":935,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["binding",{"_index":1258,"title":{},"body":{"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{}}}],["bitcounter",{"_index":384,"title":{},"body":{"classes/Base64.html":{}}}],["bitstorage",{"_index":385,"title":{},"body":{"classes/Base64.html":{}}}],["blank",{"_index":704,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["blob",{"_index":109,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["block",{"_index":31,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["blocking",{"_index":1727,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["body",{"_index":803,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["body.action",{"_index":1434,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.callbackmethod",{"_index":1433,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.cascadedelete",{"_index":1454,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.columns",{"_index":813,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.filteroptions",{"_index":817,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.hash",{"_index":1079,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.numrecs",{"_index":810,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.orderby",{"_index":818,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.querystring",{"_index":811,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.recorddata",{"_index":1435,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordid",{"_index":1399,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordnum",{"_index":1400,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.registryvalue",{"_index":1161,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.sessionkey",{"_index":1077,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.startrec",{"_index":809,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.tablename",{"_index":807,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["body.variableslist",{"_index":1401,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["boolean",{"_index":583,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["booleanvalue",{"_index":1220,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["bootstrap",{"_index":896,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["bootstrapref",{"_index":1849,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["bootstrapref(value",{"_index":619,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["border",{"_index":97,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["border:0",{"_index":96,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["bottom",{"_index":531,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:10px",{"_index":475,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:1px",{"_index":98,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["box",{"_index":72,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["break",{"_index":1346,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["browse",{"_index":2564,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":433,"title":{},"body":{"pipes/Base64ImageRef.html":{},"components/RecordList.html":{},"modules.html":{}}}],["btn",{"_index":534,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["btoa",{"_index":389,"title":{},"body":{"classes/Base64.html":{}}}],["buffer",{"_index":386,"title":{},"body":{"classes/Base64.html":{}}}],["build",{"_index":838,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["builds",{"_index":2461,"title":{},"body":{"index.html":{}}}],["built",{"_index":2483,"title":{},"body":{"index.html":{}}}],["bulkdelete",{"_index":682,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["bulkdelete(query",{"_index":688,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["bulkupdate",{"_index":683,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["button",{"_index":480,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttonlabel",{"_index":1580,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["buttons",{"_index":491,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttontext",{"_index":1560,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["byte",{"_index":2229,"title":{},"body":{"classes/Utf8.html":{}}}],["byte1",{"_index":2255,"title":{},"body":{"classes/Utf8.html":{}}}],["byte2",{"_index":2256,"title":{},"body":{"classes/Utf8.html":{}}}],["byte3",{"_index":2257,"title":{},"body":{"classes/Utf8.html":{}}}],["byte4",{"_index":2258,"title":{},"body":{"classes/Utf8.html":{}}}],["bytearray",{"_index":2183,"title":{},"body":{"classes/Utf8.html":{}}}],["bytecount",{"_index":2184,"title":{},"body":{"classes/Utf8.html":{}}}],["byteindex",{"_index":2185,"title":{},"body":{"classes/Utf8.html":{}}}],["bytes",{"_index":2259,"title":{},"body":{"classes/Utf8.html":{}}}],["bytestring",{"_index":2214,"title":{},"body":{"classes/Utf8.html":{}}}],["c",{"_index":408,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["c9c9c9",{"_index":100,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cache",{"_index":1166,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cached",{"_index":1034,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculated",{"_index":1279,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["calculatehash",{"_index":980,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatehash(body",{"_index":1080,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculates",{"_index":977,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["calculation",{"_index":1669,"title":{},"body":{"classes/MD5.html":{}}}],["call",{"_index":565,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["call4drestmethod",{"_index":2444,"title":{},"body":{"index.html":{}}}],["call4drestmethod(fourdmethod",{"_index":1063,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["callback",{"_index":1308,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["called",{"_index":925,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["caller",{"_index":1058,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calling",{"_index":2446,"title":{},"body":{"index.html":{}}}],["calls",{"_index":2441,"title":{},"body":{"index.html":{}}}],["can't",{"_index":106,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["can\\'t",{"_index":270,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cancel",{"_index":652,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["cancelled",{"_index":640,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["carneiro",{"_index":2505,"title":{},"body":{"index.html":{},"license.html":{}}}],["cascade",{"_index":503,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["cascadedeleterecord",{"_index":505,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["case",{"_index":393,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["catch",{"_index":2305,"title":{},"body":{"components/WebAppContainer.html":{}}}],["catch((e",{"_index":1667,"title":{},"body":{"components/LoginCmp.html":{}}}],["catch((error",{"_index":1425,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["catch((reason",{"_index":890,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["catch(e",{"_index":2303,"title":{},"body":{"components/WebAppContainer.html":{}}}],["ccc",{"_index":76,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["cdata",{"_index":1387,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["change",{"_index":2159,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["changed",{"_index":1780,"title":{},"body":{"injectables/Modal.html":{}}}],["changes",{"_index":1167,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["changeselection",{"_index":1562,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changeselection(ev",{"_index":1573,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changing",{"_index":1334,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["character",{"_index":351,"title":{},"body":{"classes/Base64.html":{}}}],["characters",{"_index":375,"title":{},"body":{"classes/Base64.html":{}}}],["charge",{"_index":2514,"title":{},"body":{"license.html":{}}}],["check",{"_index":1491,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkbox",{"_index":1243,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["checked",{"_index":1781,"title":{},"body":{"injectables/Modal.html":{}}}],["checks",{"_index":1482,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkscalarvalue",{"_index":2186,"title":{},"body":{"classes/Utf8.html":{}}}],["checkscalarvalue(codepoint",{"_index":2198,"title":{},"body":{"classes/Utf8.html":{}}}],["choice",{"_index":1122,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["chromium",{"_index":334,"title":{},"body":{"classes/Base64.html":{}}}],["claim",{"_index":2553,"title":{},"body":{"license.html":{}}}],["class",{"_index":212,"title":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["class/parameter",{"_index":1152,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["classes",{"_index":315,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"overview.html":{}}}],["classname",{"_index":1225,"title":{},"body":{"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["clause",{"_index":733,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clean",{"_index":1101,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clear",{"_index":566,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["clear:both",{"_index":94,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["clearform",{"_index":561,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["clearquery",{"_index":1973,"title":{},"body":{"components/RecordList.html":{}}}],["clearrecord",{"_index":1343,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clearrecorddirtyflag",{"_index":1489,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clears",{"_index":1342,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clicking",{"_index":1813,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["clicks",{"_index":649,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["cliking",{"_index":1993,"title":{},"body":{"components/RecordList.html":{}}}],["closable",{"_index":1812,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["close",{"_index":622,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["close(result",{"_index":631,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["closed",{"_index":1264,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/ModalConfig.html":{}}}],["closedialog",{"_index":1710,"title":{},"body":{"injectables/Modal.html":{}}}],["closedialog(event",{"_index":1718,"title":{},"body":{"injectables/Modal.html":{}}}],["closing",{"_index":1265,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["cluster_fourdmodule",{"_index":899,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_fourdmodule_providers",{"_index":900,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_js44dmodule",{"_index":1532,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_declarations",{"_index":1533,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_exports",{"_index":1535,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_imports",{"_index":1534,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_js44dmodule_providers",{"_index":1536,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_modalmodule",{"_index":1867,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1868,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1869,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_providers",{"_index":1870,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cmn",{"_index":1672,"title":{},"body":{"classes/MD5.html":{}}}],["cmn(q",{"_index":1686,"title":{},"body":{"classes/MD5.html":{}}}],["code",{"_index":965,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["codepoint",{"_index":2200,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints",{"_index":2243,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints.length",{"_index":2245,"title":{},"body":{"classes/Utf8.html":{}}}],["col",{"_index":776,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.field",{"_index":791,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.formula",{"_index":793,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.indexof",{"_index":778,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.joinfk",{"_index":1505,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.joinpk",{"_index":1506,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.longname",{"_index":795,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.name",{"_index":794,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.substr(col.indexof",{"_index":781,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.subtable",{"_index":1495,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.fields",{"_index":1498,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.tablename",{"_index":1504,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["collection",{"_index":665,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["collist",{"_index":771,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["collist.push",{"_index":780,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["color",{"_index":469,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["color:#282828",{"_index":38,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cols",{"_index":1511,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col",{"_index":1513,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col.name",{"_index":1514,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["column",{"_index":724,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["columns",{"_index":674,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["combine",{"_index":460,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["combined",{"_index":933,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["combinesearches",{"_index":2142,"title":{},"body":{"components/RecordList.html":{}}}],["comes",{"_index":1282,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["commonmodule",{"_index":1542,"title":{},"body":{"modules/JS44DModule.html":{}}}],["companion",{"_index":2385,"title":{},"body":{"index.html":{}}}],["comparator",{"_index":157,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["comparatorlist",{"_index":131,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["compatible",{"_index":354,"title":{},"body":{"classes/Base64.html":{}}}],["complete",{"_index":1416,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["completion",{"_index":1062,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["component",{"_index":0,"title":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["component.dialogconfig",{"_index":1792,"title":{},"body":{"injectables/Modal.html":{}}}],["component_template",{"_index":269,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["componentfactoryresolver",{"_index":1714,"title":{},"body":{"injectables/Modal.html":{}}}],["componentref",{"_index":594,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{},"overview.html":{}}}],["components/widgets",{"_index":2424,"title":{},"body":{"index.html":{}}}],["componenttype",{"_index":1729,"title":{},"body":{"injectables/Modal.html":{}}}],["componenttype['name",{"_index":1786,"title":{},"body":{"injectables/Modal.html":{}}}],["conditions",{"_index":2533,"title":{},"body":{"license.html":{}}}],["config",{"_index":1722,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["config.isblocking",{"_index":1837,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard",{"_index":1838,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard).length",{"_index":1840,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.selfcentered",{"_index":1771,"title":{},"body":{"injectables/Modal.html":{}}}],["config.size",{"_index":1835,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["configuration",{"_index":1732,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["configured",{"_index":648,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["confirm((this.queryband.cascadedeleterecord",{"_index":2093,"title":{},"body":{"components/RecordList.html":{}}}],["connection",{"_index":2561,"title":{},"body":{"license.html":{}}}],["connector",{"_index":158,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["console.log('authenticated",{"_index":1662,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log('error",{"_index":832,"title":{},"body":{"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["console.log('hash",{"_index":984,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["console.log('oops",{"_index":1666,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(e",{"_index":1668,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(event",{"_index":1790,"title":{},"body":{"injectables/Modal.html":{}}}],["console.log(this.dialoginstance",{"_index":2065,"title":{},"body":{"components/RecordList.html":{}}}],["const",{"_index":232,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(@inject(httpclient",{"_index":1041,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["constructor(componentfactoryresolver",{"_index":1713,"title":{},"body":{"injectables/Modal.html":{}}}],["constructor(dialog",{"_index":1566,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(elementref",{"_index":1902,"title":{},"body":{"components/QueryBand.html":{}}}],["constructor(fourd",{"_index":138,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["constructor(modal",{"_index":1986,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["constructor(private",{"_index":442,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["constructor(public",{"_index":1610,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["constructor(tabs",{"_index":2155,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["constructor(title",{"_index":1877,"title":{},"body":{"classes/OKOnlyContent.html":{},"classes/YesNoModalContent.html":{}}}],["contain",{"_index":400,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["container",{"_index":2489,"title":{},"body":{"index.html":{}}}],["containers/advancedquery",{"_index":1546,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/queryband",{"_index":1545,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordeditwindow",{"_index":1548,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordlist",{"_index":1547,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/tabs",{"_index":1549,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/webappcontainer",{"_index":1550,"title":{},"body":{"modules/JS44DModule.html":{}}}],["contains",{"_index":402,"title":{},"body":{"classes/Base64.html":{}}}],["content",{"_index":305,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["content'},{'name",{"_index":286,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["contentchild",{"_index":447,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["contentchild('customqueryband",{"_index":451,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentchild(datagrid",{"_index":2028,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(queryband",{"_index":2026,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(querybanddirective",{"_index":526,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentheaders",{"_index":1065,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentheaders['accept",{"_index":1070,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentref",{"_index":606,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["contents",{"_index":1281,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["context",{"_index":1891,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.body",{"_index":1889,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.notext",{"_index":2309,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.oktext",{"_index":1890,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["context.title",{"_index":1888,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.yestext",{"_index":2308,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["continuation",{"_index":2254,"title":{},"body":{"classes/Utf8.html":{}}}],["continuationbyte",{"_index":2248,"title":{},"body":{"classes/Utf8.html":{}}}],["contract",{"_index":2557,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2503,"title":{},"body":{"index.html":{}}}],["control",{"_index":1737,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["controls/fourddropdown",{"_index":1551,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/fourdregistryinput",{"_index":1558,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/quickfindinput",{"_index":1552,"title":{},"body":{"modules/JS44DModule.html":{}}}],["convert",{"_index":434,"title":{},"body":{"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["converted",{"_index":1054,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["convertobjecttourl",{"_index":966,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertobjecttourl(body",{"_index":1083,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["converts",{"_index":1168,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["copies",{"_index":2528,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1429,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{},"license.html":{}}}],["copyright",{"_index":2508,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":382,"title":{},"body":{"classes/Base64.html":{}}}],["corresponding",{"_index":2047,"title":{},"body":{"components/RecordList.html":{}}}],["corresponds",{"_index":924,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cors",{"_index":1089,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["count",{"_index":1116,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["counter",{"_index":2219,"title":{},"body":{"classes/Utf8.html":{}}}],["coverage",{"_index":2327,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crap",{"_index":1072,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["create",{"_index":2460,"title":{},"body":{"index.html":{}}}],["createbyte",{"_index":2187,"title":{},"body":{"classes/Utf8.html":{}}}],["createbyte(codepoint",{"_index":2201,"title":{},"body":{"classes/Utf8.html":{}}}],["credentials",{"_index":2493,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1412,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["crud",{"_index":1298,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["css3",{"_index":77,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currectly",{"_index":2455,"title":{},"body":{"index.html":{}}}],["current",{"_index":463,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["currently",{"_index":1483,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["currentrecord",{"_index":675,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordEditWindow.html":{}}}],["currentrecordnumber",{"_index":1391,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["currenttable",{"_index":115,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currentuser",{"_index":999,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["currentuserid",{"_index":1000,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["currentuserpassword",{"_index":1002,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["custom",{"_index":449,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["custombuttonbar",{"_index":445,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["custombuttonbar'},{'name",{"_index":308,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["custombuttonbardirective",{"_index":307,"title":{"directives/CustomButtonBarDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["custome",{"_index":564,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["customstyle",{"_index":1796,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["d",{"_index":409,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["damages",{"_index":2554,"title":{},"body":{"license.html":{}}}],["data",{"_index":740,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data('kendowindow",{"_index":1770,"title":{},"body":{"injectables/Modal.html":{}}}],["data[field.name",{"_index":1465,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["database",{"_index":673,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["datagrid",{"_index":272,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["datagrid'},{'name",{"_index":273,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["datagrid/datagrid",{"_index":1553,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["datamodel",{"_index":785,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["date",{"_index":857,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["date')?element.value.replace",{"_index":241,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["date(0,0,0,hh,mm,ss",{"_index":1329,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["date(datevalue",{"_index":1180,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["date(value.replace",{"_index":860,"title":{},"body":{"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["date.tolocaledatestring",{"_index":861,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["dateto4dformat(thedate",{"_index":1172,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datetodomformat(thedate",{"_index":1177,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datevalue",{"_index":1178,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["datevalue.getfullyear().tostring",{"_index":1384,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["datevalue.getmonth",{"_index":1385,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dbl",{"_index":1992,"title":{},"body":{"components/RecordList.html":{}}}],["deal",{"_index":2006,"title":{},"body":{"components/RecordList.html":{},"license.html":{}}}],["dealings",{"_index":2562,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1949,"title":{},"body":{"components/QuickFindInput.html":{}}}],["declaration",{"_index":2422,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":895,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}],["declare",{"_index":976,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["declared",{"_index":2417,"title":{},"body":{"index.html":{}}}],["decode",{"_index":321,"title":{},"body":{"classes/Base64.html":{}}}],["decode(input",{"_index":345,"title":{},"body":{"classes/Base64.html":{}}}],["decoded",{"_index":381,"title":{},"body":{"classes/Base64.html":{}}}],["decodesymbol",{"_index":2188,"title":{},"body":{"classes/Utf8.html":{}}}],["decoding",{"_index":361,"title":{},"body":{"classes/Base64.html":{}}}],["decorators",{"_index":1942,"title":{},"body":{"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["default",{"_index":148,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["default=false",{"_index":1451,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["defaultconfig",{"_index":1716,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["defaultconfig.keyboard",{"_index":1841,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaultconfig.size",{"_index":1836,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaults",{"_index":1006,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["defaultvalue",{"_index":1159,"title":{},"body":{"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/MD5.html":{}}}],["deferred",{"_index":585,"title":{"classes/Deferred.html":{}},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["defined",{"_index":141,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["defines",{"_index":695,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["definition",{"_index":1305,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["del",{"_index":543,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["delete",{"_index":466,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["deleted",{"_index":701,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["deleterecord",{"_index":1974,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["deleterecord(cascade",{"_index":1452,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["deletes",{"_index":2468,"title":{},"body":{"index.html":{}}}],["depend",{"_index":2498,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":894,"title":{"dependencies.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":2470,"title":{},"body":{"index.html":{}}}],["descending",{"_index":799,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["described",{"_index":356,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["describes",{"_index":913,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["describing",{"_index":1306,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["description",{"_index":663,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["designed",{"_index":352,"title":{},"body":{"classes/Base64.html":{}}}],["detailed",{"_index":2394,"title":{},"body":{"index.html":{}}}],["determine",{"_index":929,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["determining",{"_index":1117,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["development",{"_index":1010,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["di",{"_index":1754,"title":{},"body":{"injectables/Modal.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["dialog.close",{"_index":637,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialog.resizing._draggable.userevents.bind('release",{"_index":2067,"title":{},"body":{"components/RecordList.html":{}}}],["dialog.title(title",{"_index":629,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialogcomponentref",{"_index":1775,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogcomponentref.changedetectorref.detectchanges",{"_index":1782,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogconfig",{"_index":119,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{}}}],["dialogid",{"_index":1724,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance",{"_index":1769,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["dialoginstance.contentref",{"_index":1774,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.kendodialog",{"_index":1776,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.result",{"_index":1788,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogs/listselectordialog",{"_index":1555,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["digest",{"_index":1097,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["directive",{"_index":267,"title":{"directives/CustomButtonBarDirective.html":{},"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{}}}],["directives",{"_index":306,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["directly",{"_index":1398,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["directory",{"_index":2431,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1361,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{}}}],["disabled",{"_index":1353,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dismiss",{"_index":624,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dismissal",{"_index":1268,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["dismissed",{"_index":1267,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["display",{"_index":2013,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["display:inline",{"_index":26,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["display:none",{"_index":472,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["displayed",{"_index":2486,"title":{},"body":{"index.html":{}}}],["displays",{"_index":2482,"title":{},"body":{"index.html":{}}}],["dispose",{"_index":656,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["distinctuntilchanged",{"_index":1950,"title":{},"body":{"components/QuickFindInput.html":{}}}],["distribute",{"_index":2525,"title":{},"body":{"license.html":{}}}],["divided",{"_index":2408,"title":{},"body":{"index.html":{}}}],["doaddrecord",{"_index":576,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doclear",{"_index":559,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["documentation",{"_index":915,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation](https://github.com/fourctv/fourdrestapi/wiki/the",{"_index":1217,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dodeleterecord",{"_index":580,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doeditrecord",{"_index":578,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doesn't",{"_index":1758,"title":{},"body":{"injectables/Modal.html":{}}}],["doexportgrid",{"_index":574,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["domanagesets",{"_index":1899,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{}}}],["domanagesets(action",{"_index":552,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["domsanitizer",{"_index":431,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["doqbe",{"_index":545,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doqff",{"_index":547,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doquery",{"_index":123,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["dorefresh",{"_index":554,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dosort",{"_index":557,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dot",{"_index":1287,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dowehaveaquery",{"_index":582,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["down",{"_index":42,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["drop",{"_index":41,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["dropdown",{"_index":866,"title":{},"body":{"components/FourDDropDown.html":{},"components/RecordList.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":275,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["dropdownisopen",{"_index":525,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["during",{"_index":1009,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dynamic",{"_index":989,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["each",{"_index":716,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["edit",{"_index":293,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["editing",{"_index":2078,"title":{},"body":{"components/RecordList.html":{}}}],["editwindow",{"_index":1982,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler",{"_index":1975,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler(result",{"_index":2004,"title":{},"body":{"components/RecordList.html":{}}}],["effect",{"_index":80,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element",{"_index":266,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["element.comparator",{"_index":236,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.connector",{"_index":244,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field",{"_index":238,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field.name",{"_index":235,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.split",{"_index":2289,"title":{},"body":{"components/WebAppContainer.html":{}}}],["elementref",{"_index":200,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["embedded",{"_index":436,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["emitted",{"_index":507,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["empty",{"_index":1292,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["enable",{"_index":484,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enableaddrecord",{"_index":500,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebutton",{"_index":1900,"title":{},"body":{"components/QueryBand.html":{}}}],["enablebutton(btn",{"_index":532,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebuttonbar",{"_index":499,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablecombisearch",{"_index":493,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enabled",{"_index":504,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enabledeleterecord",{"_index":502,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableeditrecord",{"_index":501,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableexportgrid",{"_index":498,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqbe",{"_index":486,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqff",{"_index":488,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesets",{"_index":492,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesort",{"_index":496,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["encapsulation",{"_index":2267,"title":{},"body":{"components/WebAppContainer.html":{}}}],["encode",{"_index":322,"title":{},"body":{"classes/Base64.html":{}}}],["encode(input",{"_index":347,"title":{},"body":{"classes/Base64.html":{}}}],["encodecodepoint",{"_index":2189,"title":{},"body":{"classes/Utf8.html":{}}}],["encodecodepoint(codepoint",{"_index":2205,"title":{},"body":{"classes/Utf8.html":{}}}],["encoded",{"_index":383,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(obj[p",{"_index":972,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2252,"title":{},"body":{"classes/Utf8.html":{}}}],["ensures",{"_index":2490,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2127,"title":{},"body":{"components/RecordList.html":{}}}],["entire",{"_index":2023,"title":{},"body":{"components/RecordList.html":{}}}],["entries",{"_index":1033,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["entry",{"_index":1052,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["entrycomponents",{"_index":1538,"title":{},"body":{"modules/JS44DModule.html":{},"modules/ModalModule.html":{}}}],["equivalent",{"_index":1479,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["error",{"_index":317,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/WebAppContainer.html":{}}}],["error('invalid",{"_index":2247,"title":{},"body":{"classes/Utf8.html":{}}}],["error/warning",{"_index":1784,"title":{},"body":{"injectables/Modal.html":{}}}],["essential",{"_index":2411,"title":{},"body":{"index.html":{}}}],["establish",{"_index":945,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["establishes",{"_index":938,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["etc",{"_index":2457,"title":{},"body":{"index.html":{}}}],["ev",{"_index":1575,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["ev.target.selectedindex",{"_index":1616,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["event",{"_index":175,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"license.html":{}}}],["event.preventdefault",{"_index":1656,"title":{},"body":{"components/LoginCmp.html":{},"components/Tab.html":{},"components/Tabs.html":{}}}],["event.stoppropagation",{"_index":1617,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["event.target.selectedindex",{"_index":225,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["event.target.textcontent",{"_index":258,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["eventemitter",{"_index":446,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{}}}],["events",{"_index":506,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["example",{"_index":1487,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["excel",{"_index":497,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["excellent",{"_index":365,"title":{},"body":{"classes/Base64.html":{}}}],["execute",{"_index":1468,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["executed",{"_index":1309,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["exist",{"_index":2079,"title":{},"body":{"components/RecordList.html":{}}}],["existing",{"_index":1743,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["exists",{"_index":563,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["exit",{"_index":645,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["export",{"_index":211,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["exports",{"_index":898,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":2541,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1779,"title":{},"body":{"injectables/Modal.html":{}}}],["expresstion",{"_index":1280,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["extend",{"_index":2462,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":2465,"title":{},"body":{"index.html":{}}}],["extra",{"_index":2221,"title":{},"body":{"classes/Utf8.html":{}}}],["extractmodeldata",{"_index":1463,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["false",{"_index":186,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["fetching",{"_index":670,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["ff",{"_index":1673,"title":{},"body":{"classes/MD5.html":{}}}],["ff(a",{"_index":1189,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["field",{"_index":155,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["field's",{"_index":1515,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.formula",{"_index":1525,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.isrelated",{"_index":1520,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.longname",{"_index":104,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.name",{"_index":230,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.readonly",{"_index":1530,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.related",{"_index":213,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["field.subtable",{"_index":1528,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.type",{"_index":1344,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/attribute",{"_index":1302,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/column",{"_index":714,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["field/property",{"_index":1521,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fieldlist",{"_index":132,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["fieldname",{"_index":1339,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fields",{"_index":108,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fields/columns",{"_index":717,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2518,"title":{},"body":{"license.html":{}}}],["filter",{"_index":690,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["filtered",{"_index":1137,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["filteroptions",{"_index":676,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["first",{"_index":1411,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["fit",{"_index":2022,"title":{},"body":{"components/RecordList.html":{}}}],["fitness",{"_index":2546,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1319,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fld",{"_index":775,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.formula",{"_index":787,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.longname",{"_index":790,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.name",{"_index":788,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["float:left",{"_index":24,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["floating",{"_index":2414,"title":{},"body":{"index.html":{}}}],["folder",{"_index":2430,"title":{},"body":{"index.html":{}}}],["following",{"_index":953,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":868,"title":{},"body":{"components/FourDDropDown.html":{}}}],["foreign",{"_index":944,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["form",{"_index":567,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":734,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["formatted",{"_index":1171,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["formcontrol",{"_index":1947,"title":{},"body":{"components/QuickFindInput.html":{}}}],["formdata",{"_index":981,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata.hasownproperty(key",{"_index":982,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata[key",{"_index":983,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["forms",{"_index":2502,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":1539,"title":{},"body":{"modules/JS44DModule.html":{}}}],["formula",{"_index":789,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["formulas",{"_index":1472,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["found",{"_index":757,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fourd",{"_index":147,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["fourd.module",{"_index":1544,"title":{},"body":{"modules/JS44DModule.html":{}}}],["fourdapiversion",{"_index":1020,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdcollection",{"_index":660,"title":{"injectables/FourDCollection.html":{}},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourddatetolocalestring",{"_index":859,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["fourddatetostring",{"_index":854,"title":{"pipes/FourDDateToString.html":{}},"body":{"pipes/FourDDateToString.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["fourddeletecallbackmethod_",{"_index":1311,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourddropdown",{"_index":274,"title":{"components/FourDDropDown.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdinterface",{"_index":139,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdinterface._fourdurl",{"_index":1012,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._listcache[listname",{"_index":1124,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache",{"_index":1154,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache.push(body",{"_index":1162,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.authentication",{"_index":880,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["fourdinterface.currentuser",{"_index":805,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserid",{"_index":1104,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserpassword",{"_index":1100,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.fourdapiversion",{"_index":1017,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance",{"_index":768,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance.call4drestmethod('rest_getapiversion",{"_index":1014,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.sessionkey",{"_index":1078,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.emit(fourdinterface.currentuser",{"_index":1112,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.subscribe",{"_index":1241,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["fourdinterface.userhassignedin.subscribe(user",{"_index":883,"title":{},"body":{"components/FourDDropDown.html":{}}}],["fourdmethod",{"_index":1050,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdmodel",{"_index":737,"title":{},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"components/RecordEditWindow.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdmodels",{"_index":666,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fourdmodule",{"_index":892,"title":{"modules/FourDModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fourdquery",{"_index":689,"title":{"classes/FourDQuery.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["fourdregistryinput",{"_index":276,"title":{"components/FourDRegistryInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdrest",{"_index":1018,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdrestapi",{"_index":1049,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdsavecallbackmethod_",{"_index":1310,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourdurl",{"_index":1013,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdurl():string",{"_index":1011,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdversion",{"_index":1632,"title":{},"body":{"components/LoginCmp.html":{}}}],["free",{"_index":2513,"title":{},"body":{"license.html":{}}}],["fresh",{"_index":1428,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fully",{"_index":353,"title":{},"body":{"classes/Base64.html":{}}}],["funcionality",{"_index":2413,"title":{},"body":{"index.html":{}}}],["function",{"_index":323,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":668,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["functions",{"_index":963,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["furnished",{"_index":2531,"title":{},"body":{"license.html":{}}}],["further",{"_index":697,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["g",{"_index":341,"title":{},"body":{"classes/Base64.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["g,''):element.value",{"_index":242,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["generic",{"_index":1043,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["get(field",{"_index":1317,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["get4dlist(listname",{"_index":1123,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getcolumnlist(includesubtables",{"_index":1510,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson",{"_index":684,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson(columns",{"_index":707,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getfielddescription(fieldname",{"_index":1518,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfieldproperties(fieldname",{"_index":1340,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfiltered4dlist(listname",{"_index":1145,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getlength",{"_index":759,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getlongname(fieldname",{"_index":1516,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecord",{"_index":2467,"title":{},"body":{"index.html":{}}}],["getrecord(recordnumber",{"_index":1395,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecordcount",{"_index":2452,"title":{},"body":{"index.html":{}}}],["getrecordcount(tablename:string",{"_index":1118,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getrecords",{"_index":685,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["getrecords(query",{"_index":718,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getregistryvalue(theclass",{"_index":1153,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getresult",{"_index":1864,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["gets",{"_index":1121,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["getselectedindex",{"_index":2180,"title":{},"body":{"components/Tabs.html":{}}}],["getselectedrecords",{"_index":2030,"title":{},"body":{"components/RecordList.html":{}}}],["getter/setter",{"_index":2464,"title":{},"body":{"index.html":{}}}],["getting",{"_index":2381,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvaluesfrom4d(values",{"_index":1473,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["gg",{"_index":1674,"title":{},"body":{"classes/MD5.html":{}}}],["gg(a",{"_index":1191,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["given",{"_index":1338,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["global",{"_index":990,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["glyphicon",{"_index":521,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["going",{"_index":2402,"title":{},"body":{"index.html":{}}}],["grab",{"_index":1427,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["granted",{"_index":2512,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1998,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["grid's",{"_index":2051,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows",{"_index":2037,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows.length",{"_index":2125,"title":{},"body":{"components/RecordList.html":{}}}],["groove",{"_index":478,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["gt;table.field",{"_index":797,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["h5",{"_index":27,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["h5:hover",{"_index":36,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["hack",{"_index":1761,"title":{},"body":{"injectables/Modal.html":{}}}],["handle",{"_index":863,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["handled",{"_index":411,"title":{},"body":{"classes/Base64.html":{}}}],["hash",{"_index":978,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1076,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["height",{"_index":191,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["height(v",{"_index":1596,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["height:40px",{"_index":474,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hello",{"_index":1879,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["here",{"_index":396,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"index.html":{}}}],["hereby",{"_index":2511,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1675,"title":{},"body":{"classes/MD5.html":{}}}],["hex(x",{"_index":1214,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hex_chr",{"_index":1670,"title":{},"body":{"classes/MD5.html":{}}}],["hh",{"_index":1323,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["hh(a",{"_index":1192,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hh:mm:ss",{"_index":1182,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hidden",{"_index":62,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hideno",{"_index":2317,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["hierarchical",{"_index":1142,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hierarchy",{"_index":1144,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["highlighted",{"_index":454,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hits",{"_index":2042,"title":{},"body":{"components/RecordList.html":{}}}],["hitting",{"_index":1995,"title":{},"body":{"components/RecordList.html":{}}}],["holders",{"_index":2551,"title":{},"body":{"license.html":{}}}],["holds",{"_index":745,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["horizontal",{"_index":2500,"title":{},"body":{"index.html":{}}}],["hostlistener",{"_index":2032,"title":{},"body":{"components/RecordList.html":{}}}],["hostlistener('window:resize",{"_index":2073,"title":{},"body":{"components/RecordList.html":{}}}],["hostlisteners",{"_index":1983,"title":{},"body":{"components/RecordList.html":{}}}],["hostviewref",{"_index":1707,"title":{},"body":{"injectables/Modal.html":{}}}],["hover",{"_index":51,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["html",{"_index":265,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["http",{"_index":1021,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["http://localhost:8080",{"_index":1005,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["http://whatwg.org/c#alphanumeric",{"_index":373,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/common",{"_index":349,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/webappapis.html#dom",{"_index":358,"title":{},"body":{"classes/Base64.html":{}}}],["httpclient",{"_index":906,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["httpclient:httpclient",{"_index":1042,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpclientmodule",{"_index":907,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{}}}],["httpheaders",{"_index":958,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpheaders(contentheaders",{"_index":1075,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["https://gist.github.com/atk/1020396",{"_index":366,"title":{},"body":{"classes/Base64.html":{}}}],["https://mths.be/punycode",{"_index":2218,"title":{},"body":{"classes/Utf8.html":{}}}],["i.e",{"_index":630,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["icon",{"_index":468,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["icustommodal",{"_index":206,"title":{"classes/ICustomModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModal.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["icustommodalcomponent",{"_index":11,"title":{"classes/ICustomModalComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["id",{"_index":153,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{}}}],["idattribute",{"_index":1304,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["identification",{"_index":1735,"title":{},"body":{"injectables/Modal.html":{}}}],["identifier",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["ifielddescription",{"_index":1270,"title":{"interfaces/IFieldDescription.html":{}},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["ignore",{"_index":1381,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["ii",{"_index":1676,"title":{},"body":{"classes/MD5.html":{}}}],["ii(a",{"_index":1194,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["image",{"_index":435,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["imagetype",{"_index":426,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["immediately",{"_index":2145,"title":{},"body":{"components/RecordList.html":{}}}],["implementation",{"_index":333,"title":{},"body":{"classes/Base64.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["implicitly",{"_index":1824,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["implied",{"_index":2542,"title":{},"body":{"license.html":{}}}],["import",{"_index":199,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["important",{"_index":46,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{}}}],["importing",{"_index":2423,"title":{},"body":{"index.html":{}}}],["imports",{"_index":911,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{}}}],["in'},{'name",{"_index":283,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["include",{"_index":2261,"title":{},"body":{"classes/Utf8.html":{}}}],["included",{"_index":2421,"title":{},"body":{"index.html":{},"license.html":{}}}],["includes",{"_index":1508,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["includesubtables",{"_index":1507,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["including",{"_index":2520,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2285,"title":{},"body":{"components/WebAppContainer.html":{}}}],["incorrect",{"_index":1631,"title":{},"body":{"components/LoginCmp.html":{}}}],["indeed",{"_index":1333,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["index",{"_index":68,"title":{"index.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1273,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["indicates",{"_index":1024,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["individual",{"_index":1295,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["inelement",{"_index":611,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["informed",{"_index":725,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["inherit",{"_index":867,"title":{},"body":{"components/FourDDropDown.html":{}}}],["initialization",{"_index":1488,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["initialize",{"_index":765,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["initialized",{"_index":2009,"title":{},"body":{"components/RecordList.html":{}}}],["initiator",{"_index":1007,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["inject",{"_index":766,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["injectable",{"_index":595,"title":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["injectables",{"_index":661,"title":{},"body":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"overview.html":{}}}],["injected",{"_index":749,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["input",{"_index":202,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{}}}],["input'},{'name",{"_index":278,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["input.charcodeat(position",{"_index":417,"title":{},"body":{"classes/Base64.html":{}}}],["input.length",{"_index":370,"title":{},"body":{"classes/Base64.html":{}}}],["input.replace",{"_index":372,"title":{},"body":{"classes/Base64.html":{}}}],["inputs",{"_index":130,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{}}}],["inputtype",{"_index":1226,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["insert",{"_index":1350,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["inserted",{"_index":1431,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["insertrecord",{"_index":1432,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["inside",{"_index":609,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["install",{"_index":2405,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2404,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2392,"title":{},"body":{"index.html":{}}}],["instance",{"_index":927,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["instances",{"_index":932,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["instead",{"_index":727,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["instruct",{"_index":2401,"title":{},"body":{"index.html":{}}}],["instruction",{"_index":1794,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["interact",{"_index":2475,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":2021,"title":{},"body":{"components/RecordList.html":{}}}],["interface",{"_index":988,"title":{"interfaces/IFieldDescription.html":{}},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaceinstance:fourdinterface",{"_index":991,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["interfaces",{"_index":1271,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["internal",{"_index":518,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["intersection",{"_index":916,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["invalid",{"_index":380,"title":{},"body":{"classes/Base64.html":{}}}],["invalidcharactererror",{"_index":318,"title":{},"body":{"classes/Base64.html":{}}}],["invoked",{"_index":642,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{}}}],["isblocking",{"_index":188,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["iscalculatedfield(field",{"_index":1524,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isdraggable",{"_index":1797,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isitemselected",{"_index":124,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["isitemselected(field",{"_index":167,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["isitemselected(item",{"_index":876,"title":{},"body":{"components/FourDDropDown.html":{}}}],["ismodal",{"_index":187,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["ismodifiedfield(field",{"_index":1522,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isnan(config.keyboard",{"_index":1842,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isnan(thedate",{"_index":1184,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isnan(thedate))?thedate.tojson().substr(0",{"_index":1173,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isreadonly(field",{"_index":1529,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrecordloaded",{"_index":1484,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelated",{"_index":1274,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelatedfield(field",{"_index":1519,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isresizable",{"_index":185,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["issubtable(field",{"_index":1527,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["issues",{"_index":1090,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["it's",{"_index":1414,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["item",{"_index":105,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["item.class",{"_index":1155,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.length",{"_index":2290,"title":{},"body":{"components/WebAppContainer.html":{}}}],["item.parameter",{"_index":1156,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.selector",{"_index":1157,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item[1",{"_index":2292,"title":{},"body":{"components/WebAppContainer.html":{}}}],["items",{"_index":950,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["itemslist",{"_index":1564,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["it’s",{"_index":2253,"title":{},"body":{"classes/Utf8.html":{}}}],["j",{"_index":1210,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["join",{"_index":917,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["joinfk",{"_index":918,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["joinpk",{"_index":919,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["jointable",{"_index":920,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["jpeg",{"_index":428,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["jquery",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["js44d",{"_index":1218,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["js44d';they",{"_index":2420,"title":{},"body":{"index.html":{}}}],["js44d';you",{"_index":2427,"title":{},"body":{"index.html":{}}}],["js44d/jsfourdcollection",{"_index":910,"title":{},"body":{"modules/FourDModule.html":{}}}],["js44d/jsfourdinterface",{"_index":210,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["js44d/jsfourdmodel",{"_index":909,"title":{},"body":{"modules/FourDModule.html":{},"components/RecordEditWindow.html":{}}}],["js44dmodule",{"_index":1531,"title":{"modules/JS44DModule.html":{}},"body":{"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsfourdcollection",{"_index":1294,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["jsfourdinterface",{"_index":763,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["jsfourdmodel",{"_index":764,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json",{"_index":710,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.parse(atob(this.urlsearchparms['key",{"_index":2300,"title":{},"body":{"components/WebAppContainer.html":{}}}],["json.parse(localstorage.getitem(tablename",{"_index":2119,"title":{},"body":{"components/RecordList.html":{}}}],["json.parse(recorddata[field",{"_index":1462,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(collist",{"_index":796,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.stringify(error",{"_index":1115,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["json.stringify(query",{"_index":812,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["json.stringify(recorddata",{"_index":1388,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(savedsearches",{"_index":2123,"title":{},"body":{"components/RecordList.html":{}}}],["json.stringify(savedsets",{"_index":2149,"title":{},"body":{"components/RecordList.html":{}}}],["julio",{"_index":2504,"title":{},"body":{"index.html":{},"license.html":{}}}],["k",{"_index":1700,"title":{},"body":{"classes/MD5.html":{}}}],["keep",{"_index":1314,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["keeps",{"_index":1312,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["kendo.prompt('please",{"_index":2126,"title":{},"body":{"components/RecordList.html":{}}}],["kendo.ui.progress($(this.elementref.nativeelement",{"_index":2083,"title":{},"body":{"components/RecordList.html":{}}}],["kendodialog",{"_index":607,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["kendoui",{"_index":2481,"title":{},"body":{"index.html":{}}}],["key",{"_index":647,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.password",{"_index":2302,"title":{},"body":{"components/WebAppContainer.html":{}}}],["keyboard",{"_index":646,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["kind",{"_index":2540,"title":{},"body":{"license.html":{}}}],["last",{"_index":256,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["latest",{"_index":758,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["latin1",{"_index":404,"title":{},"body":{"classes/Base64.html":{}}}],["left",{"_index":57,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["left:5px",{"_index":476,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["legend",{"_index":264,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["length",{"_index":369,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["less",{"_index":112,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lesslines",{"_index":125,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lest",{"_index":1413,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["let's",{"_index":783,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["level",{"_index":1141,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["lg",{"_index":1831,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["li",{"_index":25,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["li:hover",{"_index":39,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["liability",{"_index":2555,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2552,"title":{},"body":{"license.html":{}}}],["library",{"_index":2383,"title":{},"body":{"index.html":{}}}],["license",{"_index":2506,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2521,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2543,"title":{},"body":{"license.html":{}}}],["line",{"_index":252,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["linear",{"_index":84,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lines",{"_index":952,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["links",{"_index":939,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["list",{"_index":54,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["list'},{'name",{"_index":296,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["listed",{"_index":726,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["listing",{"_index":712,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["listitems",{"_index":1131,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listname",{"_index":870,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listoffields",{"_index":160,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["listoptions",{"_index":871,"title":{},"body":{"components/FourDDropDown.html":{}}}],["lists",{"_index":1032,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listselectordialog",{"_index":279,"title":{"components/ListSelectorDialog.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["listselectordialog.dialogconfig",{"_index":1614,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listselectordialog.dialogconfig.height",{"_index":1597,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listselectordialog.dialogconfig.title",{"_index":1601,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listselectordialog.dialogconfig.width",{"_index":1599,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listvalues",{"_index":1127,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["loaded",{"_index":761,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["loading",{"_index":2084,"title":{},"body":{"components/RecordList.html":{}}}],["loadlistfrom4d",{"_index":869,"title":{},"body":{"components/FourDDropDown.html":{}}}],["loadvaluefrom4d",{"_index":1223,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["locale",{"_index":858,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["localstorage.setitem(tablename",{"_index":2122,"title":{},"body":{"components/RecordList.html":{}}}],["log",{"_index":282,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["logged",{"_index":998,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["login",{"_index":1620,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["login/login",{"_index":1554,"title":{},"body":{"modules/JS44DModule.html":{},"components/WebAppContainer.html":{}}}],["logincmp",{"_index":281,"title":{"components/LoginCmp.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["logincmp.dialogconfig",{"_index":2296,"title":{},"body":{"components/WebAppContainer.html":{}}}],["long",{"_index":1288,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["longname",{"_index":779,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["look",{"_index":2437,"title":{},"body":{"index.html":{}}}],["loop",{"_index":412,"title":{},"body":{"classes/Base64.html":{}}}],["ls",{"_index":1844,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["lt;table.field",{"_index":798,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["made",{"_index":2442,"title":{},"body":{"index.html":{}}}],["main",{"_index":18,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["make",{"_index":49,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["makes",{"_index":1804,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid",{"_index":1800,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid(config",{"_index":1802,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["manage",{"_index":464,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["management",{"_index":2046,"title":{},"body":{"components/RecordList.html":{}}}],["managesearches",{"_index":2143,"title":{},"body":{"components/RecordList.html":{}}}],["managesets",{"_index":2147,"title":{},"body":{"components/RecordList.html":{}}}],["many",{"_index":1283,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["map",{"_index":1307,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["margin",{"_index":32,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["margin:0px",{"_index":21,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["mark",{"_index":1336,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["master",{"_index":1806,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["match",{"_index":329,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["matched",{"_index":398,"title":{},"body":{"classes/Base64.html":{}}}],["matching",{"_index":312,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["may/15/09",{"_index":1373,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["md5",{"_index":1096,"title":{"classes/MD5.html":{}},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["md5(s",{"_index":1694,"title":{},"body":{"classes/MD5.html":{}}}],["md5.cmn((b",{"_index":1190,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(b",{"_index":1193,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(c",{"_index":1195,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.hex_chr[(n",{"_index":1213,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.md5(this.password",{"_index":1658,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5.md5(value",{"_index":985,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["md5.md5cycle(state",{"_index":1208,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md51",{"_index":1677,"title":{},"body":{"classes/MD5.html":{}}}],["md51(s",{"_index":1196,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5blk",{"_index":1678,"title":{},"body":{"classes/MD5.html":{}}}],["md5blk(s",{"_index":1697,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle",{"_index":1679,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle(x",{"_index":1699,"title":{},"body":{"classes/MD5.html":{}}}],["md5pwd",{"_index":1657,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5pwd.touppercase",{"_index":1660,"title":{},"body":{"components/LoginCmp.html":{}}}],["mdi",{"_index":2416,"title":{},"body":{"index.html":{}}}],["me.clearrecorddirtyflag",{"_index":1445,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.primarykey_",{"_index":1442,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.recordnumber",{"_index":1420,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.refresh().then((rec",{"_index":1422,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me[me.primarykey_",{"_index":1443,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["means",{"_index":705,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["menu",{"_index":2003,"title":{},"body":{"components/RecordList.html":{}}}],["merchantability",{"_index":2545,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2523,"title":{},"body":{"license.html":{}}}],["message",{"_index":324,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["messages",{"_index":326,"title":{},"body":{"classes/Base64.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["method",{"_index":562,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["methods",{"_index":122,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["microsyntaxes.html#space",{"_index":350,"title":{},"body":{"classes/Base64.html":{}}}],["minheight",{"_index":1798,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["minwidth",{"_index":1799,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["miscellaneous",{"_index":2568,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":2507,"title":{},"body":{"license.html":{}}}],["mm",{"_index":1325,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["modal",{"_index":285,"title":{"injectables/Modal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["modal.hostviewref",{"_index":1766,"title":{},"body":{"injectables/Modal.html":{}}}],["modal.opendialoglist.push",{"_index":1787,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/commonmodals/okonlymodal",{"_index":1872,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/okonlymodal.ts",{"_index":1875,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["modal/commonmodals/okonlymodal.ts:10",{"_index":1878,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:12",{"_index":1883,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:13",{"_index":1881,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:14",{"_index":1882,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:33",{"_index":1897,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:34",{"_index":1896,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:36",{"_index":1898,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:40",{"_index":1894,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:45",{"_index":1895,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/yesnomodal",{"_index":1873,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/yesnomodal.ts",{"_index":2307,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["modal/commonmodals/yesnomodal.ts:11",{"_index":2321,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:13",{"_index":2325,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:14",{"_index":2322,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:15",{"_index":2323,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:16",{"_index":2326,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:17",{"_index":2324,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:37",{"_index":2315,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:38",{"_index":2314,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:40",{"_index":2316,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:44",{"_index":2310,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:50",{"_index":2312,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:55",{"_index":2311,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/models/icustommodal",{"_index":207,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{}}}],["modal/models/icustommodal.ts",{"_index":1257,"title":{},"body":{"classes/ICustomModal.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent",{"_index":208,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/icustommodalcomponent.ts",{"_index":1259,"title":{},"body":{"classes/ICustomModalComponent.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent.ts:13",{"_index":1266,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:18",{"_index":1263,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:8",{"_index":1262,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/modalconfig",{"_index":209,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{}}}],["modal/models/modalconfig.ts",{"_index":1793,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/models/modalconfig.ts:17",{"_index":1830,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:24",{"_index":1808,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:31",{"_index":1811,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:39",{"_index":1817,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:41",{"_index":1833,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:42",{"_index":1827,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:44",{"_index":1810,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:45",{"_index":1826,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:47",{"_index":1828,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:49",{"_index":1829,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:51",{"_index":1815,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:53",{"_index":1814,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:55",{"_index":1816,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:57",{"_index":1832,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:59",{"_index":1807,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:67",{"_index":1803,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:86",{"_index":1801,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modaldialoginstance",{"_index":205,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/modaldialoginstance.ts",{"_index":587,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["modal/models/modaldialoginstance.ts:22",{"_index":1857,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:24",{"_index":1859,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:28",{"_index":1858,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:30",{"_index":1856,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:31",{"_index":1855,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:32",{"_index":1850,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:38",{"_index":1861,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:41",{"_index":1863,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:49",{"_index":1865,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:56",{"_index":1854,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:6",{"_index":592,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:64",{"_index":1851,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:7",{"_index":593,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:8",{"_index":591,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:82",{"_index":1852,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:91",{"_index":1853,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/providers/modal",{"_index":1595,"title":{},"body":{"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["modal/providers/modal.ts",{"_index":1706,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/providers/modal.ts:121",{"_index":1720,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:143",{"_index":1740,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:20",{"_index":1744,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:21",{"_index":1745,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:23",{"_index":1717,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:43",{"_index":1725,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:63",{"_index":1742,"title":{},"body":{"injectables/Modal.html":{}}}],["modalconfig",{"_index":180,"title":{"injectables/ModalConfig.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalconfig.makevalid(defaultconfig",{"_index":1755,"title":{},"body":{"injectables/Modal.html":{}}}],["modaldialoginstance",{"_index":140,"title":{"injectables/ModalDialogInstance.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmodule",{"_index":1866,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mode",{"_index":1349,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["model",{"_index":677,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["modelcontentdata",{"_index":136,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{}}}],["modelcontentdata(parms",{"_index":1650,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modelcontentdata(v",{"_index":1602,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["modeldef",{"_index":772,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["models",{"_index":678,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["models/icustommodal",{"_index":1884,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/icustommodalcomponent",{"_index":1885,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/modalconfig",{"_index":1746,"title":{},"body":{"injectables/Modal.html":{}}}],["models/modaldialoginstance",{"_index":1269,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modified",{"_index":839,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["modify",{"_index":2435,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":891,"title":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":893,"title":{"modules.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":111,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["morelines",{"_index":126,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["moz",{"_index":86,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["multicolumn",{"_index":494,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["multiple",{"_index":931,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["multiples",{"_index":1785,"title":{},"body":{"injectables/Modal.html":{}}}],["n",{"_index":1197,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["name",{"_index":144,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["names",{"_index":715,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["native",{"_index":331,"title":{},"body":{"classes/Base64.html":{}}}],["nativescript",{"_index":2436,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":19,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["need",{"_index":391,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["new",{"_index":251,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{}}}],["newmodel",{"_index":806,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["newmodel.clearrecorddirtyflag",{"_index":829,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.populatemodeldata(record",{"_index":828,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.primarykey_",{"_index":2111,"title":{},"body":{"components/RecordList.html":{}}}],["newmodel.tablename",{"_index":808,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["next",{"_index":60,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ng2",{"_index":1783,"title":{},"body":{"injectables/Modal.html":{}}}],["ngaftercontentinit",{"_index":1976,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["ngafterviewinit",{"_index":127,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["ngmodule",{"_index":905,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["noaudit",{"_index":1351,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["non",{"_index":1374,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["none",{"_index":56,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["none')?'block':'none",{"_index":551,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["noninfringement",{"_index":2549,"title":{},"body":{"license.html":{}}}],["nope",{"_index":782,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["note",{"_index":325,"title":{},"body":{"classes/Base64.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["notext",{"_index":2319,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["notice",{"_index":2534,"title":{},"body":{"license.html":{}}}],["notification",{"_index":1822,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["nov",{"_index":1376,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["now",{"_index":1111,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["npm",{"_index":2406,"title":{},"body":{"index.html":{}}}],["null",{"_index":632,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["null/undefined",{"_index":864,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["number",{"_index":193,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"classes/Utf8.html":{}}}],["numeric",{"_index":1820,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["numofrecords",{"_index":720,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["o",{"_index":87,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["obj",{"_index":967,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["obj.hasownproperty(p",{"_index":970,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":107,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1469,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["observable",{"_index":959,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["obtain",{"_index":2454,"title":{},"body":{"index.html":{}}}],["obtained",{"_index":2494,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":2516,"title":{},"body":{"license.html":{}}}],["occurrences",{"_index":1738,"title":{},"body":{"injectables/Modal.html":{}}}],["ok",{"_index":1439,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["ok($event",{"_index":1576,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["okonlycontent",{"_index":1874,"title":{"classes/OKOnlyContent.html":{}},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["okonlymodal",{"_index":284,"title":{"components/OKOnlyModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["oktext",{"_index":1876,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["once",{"_index":1752,"title":{},"body":{"injectables/Modal.html":{}}}],["one",{"_index":1051,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["ones",{"_index":48,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["oninit",{"_index":1594,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["onresize",{"_index":2074,"title":{},"body":{"components/RecordList.html":{}}}],["opacity:0",{"_index":64,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["opacity:1",{"_index":53,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["open",{"_index":604,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"index.html":{}}}],["open(componenttype",{"_index":1721,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog",{"_index":1711,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog(component",{"_index":1739,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialoglist",{"_index":1708,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside",{"_index":1712,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside(componenttype",{"_index":1741,"title":{},"body":{"injectables/Modal.html":{}}}],["opens",{"_index":1726,"title":{},"body":{"injectables/Modal.html":{}}}],["openstateicon",{"_index":520,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["operation",{"_index":699,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimize",{"_index":1035,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimized",{"_index":360,"title":{},"body":{"classes/Base64.html":{}}}],["optimizing",{"_index":2082,"title":{},"body":{"components/RecordList.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["options",{"_index":1056,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["options.headers",{"_index":1074,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["order",{"_index":732,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["orderby",{"_index":679,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["originalvalue",{"_index":1221,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["otherwise",{"_index":2559,"title":{},"body":{"license.html":{}}}],["out",{"_index":902,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":387,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["outputs",{"_index":1901,"title":{},"body":{"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{}}}],["outside",{"_index":403,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["overview",{"_index":2565,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":969,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2377,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":59,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["padding:5px",{"_index":28,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["page",{"_index":2400,"title":{},"body":{"index.html":{}}}],["pages",{"_index":2477,"title":{},"body":{"index.html":{}}}],["paging",{"_index":730,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["param",{"_index":769,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["parameter",{"_index":439,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["parameters",{"_index":143,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["parametervalue",{"_index":1227,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["params",{"_index":2287,"title":{},"body":{"components/WebAppContainer.html":{}}}],["parms",{"_index":1649,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["parms.hasownproperty('version",{"_index":1651,"title":{},"body":{"components/LoginCmp.html":{}}}],["parms['version",{"_index":1653,"title":{},"body":{"components/LoginCmp.html":{}}}],["parse",{"_index":2286,"title":{},"body":{"components/WebAppContainer.html":{}}}],["parseint(resultjson['selected",{"_index":825,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["part",{"_index":2496,"title":{},"body":{"index.html":{}}}],["particular",{"_index":2547,"title":{},"body":{"license.html":{}}}],["pascal's",{"_index":2384,"title":{},"body":{"index.html":{}}}],["passed",{"_index":1731,"title":{},"body":{"injectables/Modal.html":{}}}],["password",{"_index":1001,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"index.html":{}}}],["payload",{"_index":1045,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["peer",{"_index":2378,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":926,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["permission",{"_index":2510,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2529,"title":{},"body":{"license.html":{}}}],["person",{"_index":2515,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2530,"title":{},"body":{"license.html":{}}}],["picture",{"_index":110,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["pipe",{"_index":420,"title":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["pipe({name",{"_index":440,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pipes",{"_index":422,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"overview.html":{}}}],["pipes/base64imageref.pipe",{"_index":1556,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipes/fourddatetostring.pipe",{"_index":1557,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipetransform",{"_index":430,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pk",{"_index":2110,"title":{},"body":{"components/RecordList.html":{}}}],["pkfield",{"_index":2150,"title":{},"body":{"components/RecordList.html":{}}}],["plan",{"_index":2428,"title":{},"body":{"index.html":{}}}],["please",{"_index":1628,"title":{},"body":{"components/LoginCmp.html":{}}}],["point",{"_index":1085,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["points",{"_index":1053,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["populate",{"_index":669,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populated",{"_index":743,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populatemodeldata(recorddata",{"_index":1456,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["populates",{"_index":1389,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["portions",{"_index":2537,"title":{},"body":{"license.html":{}}}],["position",{"_index":65,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/ModalConfig.html":{}}}],["position:absolute",{"_index":482,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["position:relative",{"_index":23,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["possible",{"_index":1293,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["post",{"_index":979,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["predefined",{"_index":2306,"title":{},"body":{"components/WebAppContainer.html":{}}}],["prepares",{"_index":709,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["present",{"_index":2456,"title":{},"body":{"index.html":{}}}],["presents",{"_index":2499,"title":{},"body":{"index.html":{}}}],["presses",{"_index":644,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["previous",{"_index":1103,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["previousquery",{"_index":2101,"title":{},"body":{"components/RecordList.html":{}}}],["primary",{"_index":947,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["primarykey_",{"_index":1301,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["private",{"_index":114,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["privileges",{"_index":996,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["procedure",{"_index":2399,"title":{},"body":{"index.html":{}}}],["process",{"_index":2451,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1471,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["programmatically",{"_index":1485,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["progress",{"_index":2085,"title":{},"body":{"components/RecordList.html":{}}}],["promise",{"_index":588,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise((resolve",{"_index":600,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["promiselike",{"_index":597,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promisewrapper.completer",{"_index":616,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise|any|*|promise",{"_index":625,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["properties",{"_index":113,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["property",{"_index":943,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["propriety",{"_index":1368,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["provide",{"_index":2410,"title":{},"body":{"index.html":{}}}],["provided",{"_index":2538,"title":{},"body":{"license.html":{}}}],["providers",{"_index":897,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":667,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"index.html":{}}}],["providing",{"_index":2463,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":1086,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["proxyurlthru4d(url",{"_index":1091,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["public",{"_index":116,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["publish",{"_index":2524,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2548,"title":{},"body":{"license.html":{}}}],["pwd",{"_index":1095,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["q",{"_index":1688,"title":{},"body":{"classes/MD5.html":{}}}],["qbe",{"_index":485,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["qff",{"_index":487,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queries",{"_index":748,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["query",{"_index":16,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["query'},{'name",{"_index":271,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["query+filter",{"_index":694,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["query0",{"_index":154,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryaddrecord",{"_index":515,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryband",{"_index":287,"title":{"components/QueryBand.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["queryband's",{"_index":514,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querybanddirective",{"_index":309,"title":{"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["querybandisopen",{"_index":524,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querydeleterecord",{"_index":517,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["queryeditrecord",{"_index":516,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryexportgrid",{"_index":512,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfield",{"_index":168,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.field",{"_index":226,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields",{"_index":262,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields[event.target.selectedindex",{"_index":227,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.name",{"_index":229,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.querytable",{"_index":257,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfieldlist",{"_index":133,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfields",{"_index":246,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfromfile",{"_index":509,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfromqbe",{"_index":508,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryid",{"_index":247,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querying",{"_index":1394,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["queryitems",{"_index":233,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["queryitems.push(tablename",{"_index":2152,"title":{},"body":{"components/RecordList.html":{}}}],["queryitems.push(thefield.longname",{"_index":243,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querymanagesets",{"_index":513,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryrefresh",{"_index":510,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querysortgrid",{"_index":511,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querystring",{"_index":680,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["querytable",{"_index":159,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["quick",{"_index":2397,"title":{},"body":{"index.html":{}}}],["quickfind",{"_index":290,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["quickfinder",{"_index":467,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["quickfindinput",{"_index":289,"title":{"components/QuickFindInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["radius",{"_index":479,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["range",{"_index":405,"title":{},"body":{"classes/Base64.html":{}}}],["raquo",{"_index":102,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["reactiveformsmodule",{"_index":1540,"title":{},"body":{"modules/JS44DModule.html":{}}}],["read",{"_index":1290,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["readcontinuationbyte",{"_index":2190,"title":{},"body":{"classes/Utf8.html":{}}}],["readonly",{"_index":1275,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["really",{"_index":2094,"title":{},"body":{"components/RecordList.html":{}}}],["reason",{"_index":598,"title":{},"body":{"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/ModalDialogInstance.html":{}}}],["rec.clearrecorddirtyflag",{"_index":1423,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["received",{"_index":993,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reclist",{"_index":826,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["reclist.foreach(record",{"_index":827,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recnum",{"_index":843,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["record",{"_index":292,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["record's",{"_index":1365,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["record(s",{"_index":2001,"title":{},"body":{"components/RecordList.html":{}}}],["record.recordisdirty",{"_index":840,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["record.recordnumber",{"_index":844,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["record.tablename",{"_index":842,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recorddata",{"_index":1355,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata.hasownproperty('_recnum",{"_index":1457,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['_recnum",{"_index":1458,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields",{"_index":1367,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields'][field.longname",{"_index":1383,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['noaudit",{"_index":1360,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['savecallback",{"_index":1359,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['timestamp",{"_index":1363,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata[field",{"_index":1461,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordeditwindow",{"_index":291,"title":{"components/RecordEditWindow.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordid",{"_index":1392,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordisdirty",{"_index":1492,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordlist",{"_index":295,"title":{"components/RecordList.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordlist.length",{"_index":846,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recordlist.push",{"_index":841,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recordnumber",{"_index":1390,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordnumber(v",{"_index":1481,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records",{"_index":671,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["records.foreach(id",{"_index":2151,"title":{},"body":{"components/RecordList.html":{}}}],["records.getrecords(query",{"_index":1417,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.model",{"_index":1410,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models.length",{"_index":1419,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models[0].recordnumber",{"_index":1421,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordsaved",{"_index":2099,"title":{},"body":{"components/RecordList.html":{}}}],["recordtojson(mode",{"_index":1354,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reference",{"_index":2419,"title":{},"body":{"index.html":{}}}],["reference/import",{"_index":2425,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1415,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["refreshgrid",{"_index":1977,"title":{},"body":{"components/RecordList.html":{}}}],["refreshgrid(query",{"_index":2010,"title":{},"body":{"components/RecordList.html":{}}}],["regex_space_characters",{"_index":319,"title":{},"body":{"classes/Base64.html":{}}}],["registry",{"_index":277,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reject",{"_index":589,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["reject('invalid",{"_index":1114,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reject('no",{"_index":1408,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject('recordnotfound",{"_index":1426,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(error",{"_index":833,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["reject(error.text",{"_index":1447,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(resultjson.message",{"_index":837,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reject(resultjson.returncode",{"_index":1446,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["rejected",{"_index":623,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["related",{"_index":92,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["relatedonetables",{"_index":134,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relatedtable",{"_index":103,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relates",{"_index":1291,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["relatesto",{"_index":1276,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["remove",{"_index":255,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["render",{"_index":1730,"title":{},"body":{"injectables/Modal.html":{}}}],["repeat",{"_index":1624,"title":{},"body":{"components/LoginCmp.html":{}}}],["replace",{"_index":1760,"title":{},"body":{"injectables/Modal.html":{}}}],["replace(base64.regex_space_characters",{"_index":368,"title":{},"body":{"classes/Base64.html":{}}}],["replicates",{"_index":1296,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["represent",{"_index":651,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["representation",{"_index":1348,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["representing",{"_index":1494,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["represents",{"_index":664,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["request",{"_index":1047,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["requests",{"_index":1022,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["require",{"_index":2375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1048,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["reset",{"_index":569,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"modules/ModalModule.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"overview.html":{}}}],["resize",{"_index":1990,"title":{},"body":{"components/RecordList.html":{}}}],["resolve",{"_index":590,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["resolve('no",{"_index":849,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolve(body.registryvalue",{"_index":1163,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface._listcache[listname",{"_index":1125,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface.authentication",{"_index":1113,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(item.registryvalue",{"_index":1158,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(listvalues",{"_index":1129,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(me",{"_index":1424,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(records",{"_index":1467,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(result",{"_index":1478,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(resultjson.deleted",{"_index":836,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolve(resultjson.selected",{"_index":1120,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(resultjson.values",{"_index":1147,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(this",{"_index":1407,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(this.models",{"_index":831,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolved",{"_index":621,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["response",{"_index":1136,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["responsetype",{"_index":1134,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["responsetype:'text",{"_index":1015,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rest_authenticate",{"_index":2450,"title":{},"body":{"index.html":{}}}],["rest_bulkdelete",{"_index":2473,"title":{},"body":{"index.html":{}}}],["rest_bulkupdate",{"_index":2474,"title":{},"body":{"index.html":{}}}],["rest_countrecords",{"_index":2453,"title":{},"body":{"index.html":{}}}],["rest_getrecords",{"_index":2472,"title":{},"body":{"index.html":{}}}],["rest_proxyhttpget",{"_index":1084,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["restapi",{"_index":914,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["restore",{"_index":458,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["restoreset",{"_index":1978,"title":{},"body":{"components/RecordList.html":{}}}],["restoreset(records",{"_index":2014,"title":{},"body":{"components/RecordList.html":{}}}],["restriction",{"_index":2519,"title":{},"body":{"license.html":{}}}],["result",{"_index":311,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.query",{"_index":2108,"title":{},"body":{"components/RecordList.html":{}}}],["result.query.length",{"_index":2105,"title":{},"body":{"components/RecordList.html":{}}}],["result.queryfields",{"_index":2106,"title":{},"body":{"components/RecordList.html":{}}}],["resulting",{"_index":731,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["resultjson",{"_index":822,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.fieldlist",{"_index":263,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["resultjson.returncode",{"_index":1438,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson.session",{"_index":1108,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.key",{"_index":1110,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.options._userid",{"_index":1109,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.valid",{"_index":835,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.values",{"_index":1128,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson['recordid",{"_index":1444,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['recordnum",{"_index":1441,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['records",{"_index":824,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resultjson['selected",{"_index":823,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["results",{"_index":313,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":851,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["ret.push(element.extractmodeldata",{"_index":853,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["retrieve",{"_index":713,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["retrieved",{"_index":698,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["retrieves",{"_index":722,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["retrieving",{"_index":696,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["return",{"_index":228,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"miscellaneous/variables.html":{}}}],["returna",{"_index":1526,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["returned",{"_index":738,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["returns",{"_index":165,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reuse",{"_index":455,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["rhex",{"_index":1680,"title":{},"body":{"classes/MD5.html":{}}}],["rhex(n",{"_index":1702,"title":{},"body":{"classes/MD5.html":{}}}],["right",{"_index":523,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["right:20px",{"_index":483,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["rights",{"_index":2522,"title":{},"body":{"license.html":{}}}],["row",{"_index":1994,"title":{},"body":{"components/RecordList.html":{}}}],["rowid",{"_index":1480,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["run",{"_index":1751,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["running",{"_index":1025,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runninginsideworkspace",{"_index":1028,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runquickfinder",{"_index":1945,"title":{},"body":{"components/QuickFindInput.html":{}}}],["runs",{"_index":2491,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":960,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rxjs/operators",{"_index":1951,"title":{},"body":{"components/QuickFindInput.html":{}}}],["s",{"_index":1188,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.charcodeat(i",{"_index":1205,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.length",{"_index":1198,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["saferesourceurl",{"_index":429,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["same",{"_index":1733,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["sanitizer",{"_index":443,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["save",{"_index":462,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["save/load",{"_index":489,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["saved",{"_index":456,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["savedsearches",{"_index":2113,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.foreach(element",{"_index":2144,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.push",{"_index":2121,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.splice(result",{"_index":2146,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches[result].search",{"_index":2135,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets",{"_index":2114,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.foreach(element",{"_index":2136,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.splice(result",{"_index":2148,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets[result].set",{"_index":2140,"title":{},"body":{"components/RecordList.html":{}}}],["saverecord",{"_index":1955,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["saveset",{"_index":2124,"title":{},"body":{"components/RecordList.html":{}}}],["saveusage",{"_index":2407,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1728,"title":{},"body":{"injectables/Modal.html":{}}}],["search",{"_index":457,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["searches",{"_index":461,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searches/set",{"_index":490,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searchlist",{"_index":2116,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.length",{"_index":2132,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.push(element.name",{"_index":2131,"title":{},"body":{"components/RecordList.html":{}}}],["searchname",{"_index":2118,"title":{},"body":{"components/RecordList.html":{}}}],["see",{"_index":784,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["select",{"_index":453,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["selected",{"_index":231,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{}}}],["selectedindex",{"_index":1561,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/Tabs.html":{}}}],["selectedindex():number",{"_index":2170,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selectedrecords",{"_index":1985,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrecords():array",{"_index":2034,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrows",{"_index":2039,"title":{},"body":{"components/RecordList.html":{}}}],["selectedvalue",{"_index":872,"title":{},"body":{"components/FourDDropDown.html":{}}}],["selectfield",{"_index":128,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selectfield(event",{"_index":173,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selecthighlited",{"_index":2117,"title":{},"body":{"components/RecordList.html":{}}}],["selection",{"_index":692,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{},"index.html":{}}}],["selectlist",{"_index":1987,"title":{},"body":{"components/RecordList.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["selector'},{'name",{"_index":280,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["selectorvalue",{"_index":1228,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["selecttab",{"_index":2173,"title":{},"body":{"components/Tabs.html":{}}}],["selecttab(event",{"_index":2160,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selectthistab",{"_index":2174,"title":{},"body":{"components/Tabs.html":{}}}],["selectthistab(tab",{"_index":2162,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selfcentered",{"_index":183,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["sell",{"_index":2527,"title":{},"body":{"license.html":{}}}],["send",{"_index":711,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["sends",{"_index":2479,"title":{},"body":{"index.html":{}}}],["sent",{"_index":928,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["separate",{"_index":2418,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":2230,"title":{},"body":{"classes/Utf8.html":{}}}],["serializes",{"_index":1347,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["series",{"_index":2387,"title":{},"body":{"index.html":{}}}],["server",{"_index":1003,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["service",{"_index":750,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["service/component",{"_index":2395,"title":{},"body":{"index.html":{}}}],["services",{"_index":2388,"title":{},"body":{"index.html":{}}}],["serving",{"_index":2393,"title":{},"body":{"index.html":{}}}],["session",{"_index":995,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sessionkey",{"_index":1023,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["set",{"_index":459,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["set(field",{"_index":1320,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["setbackdropref(value",{"_index":1860,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setbootstrapref(value",{"_index":1862,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setheight(v",{"_index":1587,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setlist",{"_index":2115,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.length",{"_index":2138,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.push(element.name",{"_index":2137,"title":{},"body":{"components/RecordList.html":{}}}],["setmodelcontentdata(parms",{"_index":1647,"title":{},"body":{"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["setmodelcontentdata(v",{"_index":196,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["setname",{"_index":2129,"title":{},"body":{"components/RecordList.html":{}}}],["setregistryvalue(theclass",{"_index":1164,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["sets",{"_index":465,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["setting",{"_index":1337,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["settitle",{"_index":1847,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["settitle(title",{"_index":627,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["settitle(v",{"_index":1591,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setwidth(v",{"_index":1589,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["shadow:1px",{"_index":73,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["shall",{"_index":2535,"title":{},"body":{"license.html":{}}}],["shift",{"_index":2202,"title":{},"body":{"classes/Utf8.html":{}}}],["show",{"_index":1563,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"index.html":{}}}],["show(list",{"_index":1578,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["showadvancedquery",{"_index":1979,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow",{"_index":1980,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow(mode",{"_index":2017,"title":{},"body":{"components/RecordList.html":{}}}],["showerror",{"_index":1634,"title":{},"body":{"components/LoginCmp.html":{}}}],["showlogindialog",{"_index":2270,"title":{},"body":{"components/WebAppContainer.html":{}}}],["showrelatedtable",{"_index":129,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["showrelatedtable(event",{"_index":176,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["side",{"_index":956,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["sides",{"_index":2403,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1094,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sign's",{"_index":994,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["signed",{"_index":1030,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["signin",{"_index":2449,"title":{},"body":{"index.html":{}}}],["signin(user",{"_index":1099,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["similar",{"_index":951,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["simple",{"_index":741,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["single",{"_index":1140,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["singleton",{"_index":1750,"title":{},"body":{"injectables/Modal.html":{}}}],["size",{"_index":181,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["sm",{"_index":182,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["smooth",{"_index":79,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["software",{"_index":2517,"title":{},"body":{"license.html":{}}}],["solid",{"_index":99,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["something",{"_index":2438,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1629,"title":{},"body":{"components/LoginCmp.html":{}}}],["sort",{"_index":495,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["spec\\.ts",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":392,"title":{},"body":{"classes/Base64.html":{}}}],["specific",{"_index":610,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["specified",{"_index":1393,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sql",{"_index":921,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["src/.../jsfourdinterface.ts",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modal.ts",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modalconfig.ts",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/angular2",{"_index":586,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/main.scss",{"_index":2434,"title":{},"body":{"index.html":{}}}],["src/containers/advancedquery.ts",{"_index":9,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"coverage.html":{}}}],["src/containers/advancedquery.ts:152",{"_index":192,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:162",{"_index":152,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:163",{"_index":150,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:164",{"_index":162,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:165",{"_index":163,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:167",{"_index":178,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:168",{"_index":194,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:169",{"_index":195,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:171",{"_index":197,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:190",{"_index":142,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:192",{"_index":179,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:195",{"_index":172,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:202",{"_index":174,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:210",{"_index":169,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:214",{"_index":164,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:227",{"_index":171,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:235",{"_index":170,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:242",{"_index":177,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/queryband.ts",{"_index":444,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"coverage.html":{}}}],["src/containers/queryband.ts:10",{"_index":1943,"title":{},"body":{"directives/QueryBandDirective.html":{}}}],["src/containers/queryband.ts:104",{"_index":1912,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:109",{"_index":1913,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:114",{"_index":1907,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:119",{"_index":1914,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:124",{"_index":1910,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:129",{"_index":1906,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:134",{"_index":1905,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:139",{"_index":1909,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:144",{"_index":1908,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:149",{"_index":1904,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:154",{"_index":1920,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:155",{"_index":1919,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:156",{"_index":1922,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:157",{"_index":1923,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:158",{"_index":1918,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:160",{"_index":1921,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:165",{"_index":1915,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:166",{"_index":1917,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:167",{"_index":1916,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:172",{"_index":1940,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:174",{"_index":1941,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:176",{"_index":1939,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:181",{"_index":1903,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:187",{"_index":1937,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:192",{"_index":1936,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:222",{"_index":1931,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:226",{"_index":1932,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:230",{"_index":1938,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:234",{"_index":1929,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:239",{"_index":1933,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:243",{"_index":1934,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:247",{"_index":1925,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:257",{"_index":1928,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:261",{"_index":1924,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:265",{"_index":1927,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:269",{"_index":1926,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:273",{"_index":1935,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:99",{"_index":1911,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/recordeditwindow.ts",{"_index":1954,"title":{},"body":{"components/RecordEditWindow.html":{},"coverage.html":{}}}],["src/containers/recordeditwindow.ts:15",{"_index":1956,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:18",{"_index":1958,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:21",{"_index":1959,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:25",{"_index":1957,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordlist.ts",{"_index":1967,"title":{},"body":{"components/RecordList.html":{},"coverage.html":{}}}],["src/containers/recordlist.ts:115",{"_index":1999,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:125",{"_index":2011,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:134",{"_index":1997,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:142",{"_index":2020,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:149",{"_index":2018,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:179",{"_index":2000,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:192",{"_index":2005,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:199",{"_index":2016,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:216",{"_index":2002,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:25",{"_index":1989,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:30",{"_index":1991,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:346",{"_index":2015,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:35",{"_index":2027,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:36",{"_index":2029,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:41",{"_index":2031,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:57",{"_index":2024,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:59",{"_index":2025,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:60",{"_index":1988,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:71",{"_index":2007,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/tabs.ts",{"_index":2153,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["src/containers/tabs.ts:18",{"_index":2175,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:20",{"_index":2179,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:22",{"_index":2177,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:29",{"_index":2178,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:37",{"_index":2176,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:44",{"_index":2181,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:63",{"_index":2157,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/tabs.ts:64",{"_index":2156,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/webappcontainer.ts",{"_index":2266,"title":{},"body":{"components/WebAppContainer.html":{},"coverage.html":{}}}],["src/containers/webappcontainer.ts:17",{"_index":2274,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:19",{"_index":2275,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:21",{"_index":2273,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:23",{"_index":2278,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:38",{"_index":2277,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:48",{"_index":2276,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/controls/fourddropdown.ts",{"_index":865,"title":{},"body":{"components/FourDDropDown.html":{},"coverage.html":{}}}],["src/controls/fourddropdown.ts:26",{"_index":874,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:27",{"_index":875,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:28",{"_index":873,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:32",{"_index":879,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:42",{"_index":877,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:46",{"_index":878,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourdregistryinput.ts",{"_index":1219,"title":{},"body":{"components/FourDRegistryInput.html":{},"coverage.html":{}}}],["src/controls/fourdregistryinput.ts:19",{"_index":1230,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:20",{"_index":1233,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:21",{"_index":1234,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:22",{"_index":1231,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:23",{"_index":1232,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:25",{"_index":1239,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:26",{"_index":1238,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:27",{"_index":1229,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:31",{"_index":1236,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:41",{"_index":1237,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:51",{"_index":1235,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/quickfindinput.ts",{"_index":1944,"title":{},"body":{"components/QuickFindInput.html":{},"coverage.html":{}}}],["src/controls/quickfindinput.ts:16",{"_index":1948,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:18",{"_index":1946,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/datagrid/datagrid.ts",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["src/dialogs/listselectordialog.ts",{"_index":1559,"title":{},"body":{"components/ListSelectorDialog.html":{},"coverage.html":{}}}],["src/dialogs/listselectordialog.ts:25",{"_index":1586,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:35",{"_index":1570,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:36",{"_index":1572,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:37",{"_index":1569,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:38",{"_index":1571,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:40",{"_index":1588,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:41",{"_index":1590,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:42",{"_index":1592,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:45",{"_index":1593,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:53",{"_index":1568,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:56",{"_index":1583,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:63",{"_index":1581,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:69",{"_index":1574,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:73",{"_index":1577,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/fourd.module.ts",{"_index":903,"title":{},"body":{"modules/FourDModule.html":{}}}],["src/js44d.module.ts",{"_index":1537,"title":{},"body":{"modules/JS44DModule.html":{}}}],["src/js44d/base64.ts",{"_index":316,"title":{},"body":{"classes/Base64.html":{},"coverage.html":{}}}],["src/js44d/base64.ts:12",{"_index":337,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:18",{"_index":344,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:20",{"_index":342,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:26",{"_index":346,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:64",{"_index":348,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:8",{"_index":339,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/jsfourdcollection.ts",{"_index":662,"title":{},"body":{"injectables/FourDCollection.html":{},"coverage.html":{}}}],["src/js44d/jsfourdcollection.ts:103",{"_index":721,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:166",{"_index":691,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:18",{"_index":751,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:195",{"_index":702,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:20",{"_index":752,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:22",{"_index":753,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:235",{"_index":760,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:24",{"_index":754,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:242",{"_index":739,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:26",{"_index":746,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:29",{"_index":742,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:32",{"_index":744,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:34",{"_index":755,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:37",{"_index":687,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:54",{"_index":708,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdinterface.ts",{"_index":912,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/js44d/jsfourdinterface.ts:487",{"_index":1683,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:489",{"_index":1701,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:567",{"_index":1687,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:572",{"_index":1689,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:576",{"_index":1690,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:580",{"_index":1692,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:584",{"_index":1693,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:588",{"_index":1696,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:623",{"_index":1698,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:634",{"_index":1703,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:643",{"_index":1691,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:648",{"_index":1695,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:658",{"_index":1685,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:667",{"_index":1705,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:708",{"_index":949,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:710",{"_index":955,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:712",{"_index":957,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:714",{"_index":930,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:716",{"_index":923,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:718",{"_index":934,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:720",{"_index":948,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:722",{"_index":946,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:724",{"_index":942,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdmodel.ts",{"_index":1272,"title":{},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts",{"_index":2182,"title":{},"body":{"classes/Utf8.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts:102",{"_index":2207,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:118",{"_index":2204,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:181",{"_index":2195,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:182",{"_index":2196,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:183",{"_index":2197,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:185",{"_index":2213,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:34",{"_index":2211,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:51",{"_index":2199,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:61",{"_index":2203,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:65",{"_index":2206,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:7",{"_index":2209,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:87",{"_index":2216,"title":{},"body":{"classes/Utf8.html":{}}}],["src/login/login.ts",{"_index":1619,"title":{},"body":{"components/LoginCmp.html":{},"coverage.html":{}}}],["src/login/login.ts:45",{"_index":1646,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:55",{"_index":1639,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:56",{"_index":1637,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:57",{"_index":1638,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:58",{"_index":1636,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:59",{"_index":1641,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:62",{"_index":1648,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:68",{"_index":1635,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:70",{"_index":1643,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:77",{"_index":1642,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/modal.module.ts",{"_index":1871,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/pipes/base64imageref.pipe.ts",{"_index":423,"title":{},"body":{"pipes/Base64ImageRef.html":{},"coverage.html":{}}}],["src/pipes/base64imageref.pipe.ts:13",{"_index":427,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["src/pipes/fourddatetostring.pipe.ts",{"_index":855,"title":{},"body":{"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["src/pipes/fourddatetostring.pipe.ts:11",{"_index":856,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["src/test.ts",{"_index":2373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":1327,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["standalone",{"_index":1026,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["standard",{"_index":357,"title":{},"body":{"classes/Base64.html":{}}}],["started",{"_index":2382,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":729,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["startrec",{"_index":719,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["state",{"_index":1199,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["statements",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":608,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["static",{"_index":118,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{}}}],["stay",{"_index":61,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["step",{"_index":2398,"title":{},"body":{"index.html":{}}}],["str",{"_index":968,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.join",{"_index":973,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.push(encodeuricomponent(p",{"_index":971,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str2rstr_utf8",{"_index":1681,"title":{},"body":{"classes/MD5.html":{}}}],["str2rstr_utf8(input",{"_index":1704,"title":{},"body":{"classes/MD5.html":{}}}],["string",{"_index":156,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string(input",{"_index":367,"title":{},"body":{"classes/Base64.html":{}}}],["string.fromcharcode(((codepoint",{"_index":2234,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode((codepoint",{"_index":2242,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(codepoint",{"_index":2231,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(value",{"_index":2225,"title":{},"body":{"classes/Utf8.html":{}}}],["string.length",{"_index":2220,"title":{},"body":{"classes/Utf8.html":{}}}],["stroke",{"_index":1821,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["strong",{"_index":91,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["structure",{"_index":1285,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["style",{"_index":55,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["styles.scss",{"_index":2432,"title":{},"body":{"index.html":{}}}],["sub",{"_index":1497,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.formula",{"_index":1499,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.longname",{"_index":1503,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.name",{"_index":1502,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields",{"_index":1496,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields.push",{"_index":1501,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subject",{"_index":2532,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2526,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1059,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["subscribe((v",{"_index":1016,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["subscribe(result",{"_index":1477,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subscribe(resultjson",{"_index":261,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["subscribed",{"_index":1098,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["substantial",{"_index":2536,"title":{},"body":{"license.html":{}}}],["subtable",{"_index":1277,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subtables",{"_index":1509,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["successfully",{"_index":1029,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["supplied",{"_index":693,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["support",{"_index":1500,"title":{},"body":{"interfaces/IFieldDescription.html":{},"modules.html":{}}}],["supposed",{"_index":399,"title":{},"body":{"classes/Base64.html":{}}}],["sure",{"_index":410,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["surrogates",{"_index":397,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["svg",{"_index":2563,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":533,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["switchstate",{"_index":528,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["symbol",{"_index":2232,"title":{},"body":{"classes/Utf8.html":{}}}],["symbols",{"_index":395,"title":{},"body":{"classes/Base64.html":{}}}],["t",{"_index":596,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["t\\n\\f\\r",{"_index":340,"title":{},"body":{"classes/Base64.html":{}}}],["tab",{"_index":297,"title":{"components/Tab.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["tab'},{'name",{"_index":298,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tab.active",{"_index":2165,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tab.title",{"_index":2158,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tabitem.active",{"_index":2164,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["table",{"_index":320,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{}}}],["table's",{"_index":1297,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["table.field",{"_index":735,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["tabled",{"_index":936,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablename",{"_index":260,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["tablenumber",{"_index":1300,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["tables",{"_index":941,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":299,"title":{"components/Tabs.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["tabs'},{'name",{"_index":300,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tabs.addtab(this",{"_index":2171,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tail",{"_index":1209,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["take",{"_index":2471,"title":{},"body":{"index.html":{}}}],["taken",{"_index":2217,"title":{},"body":{"classes/Utf8.html":{}}}],["takes",{"_index":2478,"title":{},"body":{"index.html":{}}}],["teh",{"_index":2012,"title":{},"body":{"components/RecordList.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["terms",{"_index":937,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["text",{"_index":1135,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8",{"_index":1071,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["textvalue",{"_index":1222,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["theclass",{"_index":1148,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thecustomquery",{"_index":452,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thedate",{"_index":1170,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.gethours",{"_index":1186,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.substr(0,4)+'/'+thedate.substr(4,2)+'/'+thedate.substr(6,2",{"_index":1179,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedefaultvalue",{"_index":1150,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedialog",{"_index":1709,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance",{"_index":1719,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance:modaldialoginstance",{"_index":1789,"title":{},"body":{"injectables/Modal.html":{}}}],["thefield",{"_index":237,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["thefield.type",{"_index":240,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["theform",{"_index":570,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform.length",{"_index":572,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform[0].reset",{"_index":573,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thegrid",{"_index":1972,"title":{},"body":{"components/RecordList.html":{}}}],["themodel",{"_index":774,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["themodel.getfieldproperties(col",{"_index":786,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["themodel.getfieldproperties(col.field",{"_index":792,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["then((authentication",{"_index":1661,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["then((message",{"_index":2096,"title":{},"body":{"components/RecordList.html":{}}}],["then((reclist",{"_index":1418,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["then((recnum",{"_index":1966,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["then((result",{"_index":2104,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["then((setname",{"_index":2128,"title":{},"body":{"components/RecordList.html":{}}}],["then((value",{"_index":1253,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["then((values",{"_index":887,"title":{},"body":{"components/FourDDropDown.html":{}}}],["then(result",{"_index":2088,"title":{},"body":{"components/RecordList.html":{}}}],["theparameter",{"_index":1149,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thequeryband",{"_index":527,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theselector",{"_index":1151,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thetime:string",{"_index":1185,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thevalue",{"_index":239,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this._attributes.hasownproperty(field",{"_index":1330,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._attributes[field",{"_index":1318,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._backdropref",{"_index":618,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._backdropref.destroy",{"_index":658,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref",{"_index":620,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref.destroy",{"_index":657,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._editwindowconfig",{"_index":2063,"title":{},"body":{"components/RecordList.html":{}}}],["this._modified",{"_index":1490,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field",{"_index":1523,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field.name",{"_index":1493,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified[field",{"_index":1335,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._previousadvancedquery",{"_index":2069,"title":{},"body":{"components/RecordList.html":{}}}],["this._previousquery",{"_index":2070,"title":{},"body":{"components/RecordList.html":{}}}],["this._recnum",{"_index":1464,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._resultdefered",{"_index":615,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.promise",{"_index":626,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.reject",{"_index":655,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.resolve(result",{"_index":638,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.appref",{"_index":1767,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref.element.nativeelement.location",{"_index":1763,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref['_rootcomponents'][0].location",{"_index":1764,"title":{},"body":{"injectables/Modal.html":{}}}],["this.booleanvalue",{"_index":1254,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.booleanvalue)?'y':'n",{"_index":1245,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.buttontext",{"_index":1608,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.call4drestmethod('rest_authenticate",{"_index":1107,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_countrecords",{"_index":1119,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_get4dlist",{"_index":1126,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getfiltered4dlist",{"_index":1146,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getregistryvalue",{"_index":1160,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_setregistryvalue",{"_index":1165,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_update4dlist",{"_index":1133,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.change.emit",{"_index":2166,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.classname",{"_index":1250,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.clearrecord",{"_index":1404,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.clearrecorddirtyflag",{"_index":1406,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.closedialog(event",{"_index":1768,"title":{},"body":{"injectables/Modal.html":{}}}],["this.columns",{"_index":770,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.constructor.valueof",{"_index":1409,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.contentref",{"_index":633,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.destroy",{"_index":659,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance",{"_index":634,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforeclose",{"_index":635,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforedismiss",{"_index":654,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.location.nativeelement).data('kendowindow",{"_index":628,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.context",{"_index":1892,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.currentrecord",{"_index":1960,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.insertrecord",{"_index":1965,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.isrecordloaded",{"_index":1961,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.updaterecord",{"_index":1962,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currenttable",{"_index":215,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.defaultvalue",{"_index":1252,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.deleterecord",{"_index":2060,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialog",{"_index":1664,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close",{"_index":245,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialog.close('loggedin",{"_index":1665,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.dialog.close('recordsaved",{"_index":1963,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.dialog.close(false",{"_index":2320,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close(this.selectedindex",{"_index":1618,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.dialog.close(true",{"_index":1893,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.kendodialog.setoptions",{"_index":222,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialoginstance",{"_index":2064,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialoginstance.contentref.location.nativeelement).data('kendowindow",{"_index":2066,"title":{},"body":{"components/RecordList.html":{}}}],["this.dispose",{"_index":636,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.domanagesets(action",{"_index":2050,"title":{},"body":{"components/RecordList.html":{}}}],["this.dropdownisopen",{"_index":550,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.editwindow",{"_index":2054,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindow['dialogconfig",{"_index":2062,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindowhandler(result",{"_index":2089,"title":{},"body":{"components/RecordList.html":{}}}],["this.elementref",{"_index":2295,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.elementref.nativeelement.getelementsbytagname('form",{"_index":571,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableaddrecord",{"_index":541,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablebuttonbar",{"_index":540,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enabledeleterecord",{"_index":544,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableeditrecord",{"_index":542,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableexportgrid",{"_index":539,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqbe",{"_index":535,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqff",{"_index":536,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesets",{"_index":537,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesort",{"_index":538,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.fieldlist",{"_index":161,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fieldlist.push(field",{"_index":214,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fields",{"_index":1341,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.filteroptions",{"_index":801,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd",{"_index":767,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_bulkdelete",{"_index":834,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_bulkupdate",{"_index":847,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getapplicationversion",{"_index":1654,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourd.call4drestmethod('rest_getfieldsintable",{"_index":259,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fourd.call4drestmethod('rest_getrecords",{"_index":819,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getvalues",{"_index":1476,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_loaddata",{"_index":1403,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_postdata",{"_index":1437,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.get4dlist(this.listname",{"_index":886,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.fourd.getregistryvalue(this.classname",{"_index":1251,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.setregistryvalue(this.classname",{"_index":1247,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.signin(key.username",{"_index":2301,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.fourd.signin(this.username",{"_index":1659,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourddeletecallbackmethod_",{"_index":1453,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdsavecallbackmethod_",{"_index":1358,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdversion",{"_index":1655,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.getcolumnlist",{"_index":1466,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getcolumnlistjson(columns",{"_index":815,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getcolumnlistjson(newmodel.getcolumnlist",{"_index":816,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getfielddescription(field).type",{"_index":1322,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field",{"_index":1321,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field).type",{"_index":1459,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getrecord(this.recordnumber",{"_index":1430,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.hasownproperty('timestamp",{"_index":1362,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.httpclient.post(fourdinterface.fourdurl",{"_index":1081,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.inputtype",{"_index":1242,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.invalidcharactererror(message",{"_index":336,"title":{},"body":{"classes/Base64.html":{}}}],["this.isblocking",{"_index":1845,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.iscalculatedfield(field",{"_index":1369,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.ismodifiedfield(fieldname",{"_index":1375,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isreadonly(field",{"_index":1372,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isrelatedfield(field",{"_index":1371,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(col",{"_index":1512,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(field",{"_index":1370,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.itemslist",{"_index":1603,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.keyboard",{"_index":1846,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.listname",{"_index":885,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.listoptions",{"_index":888,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadlistfrom4d",{"_index":882,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadvaluefrom4d",{"_index":1240,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.message",{"_index":338,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["this.modal.openinside(advancedquerycomponent",{"_index":2100,"title":{},"body":{"components/RecordList.html":{}}}],["this.modal.openinside(listselectordialog",{"_index":1612,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.modal.openinside(logincmp",{"_index":2294,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.modal.openinside(this.editwindow",{"_index":2087,"title":{},"body":{"components/RecordList.html":{}}}],["this.model",{"_index":773,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models",{"_index":821,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.foreach((element:fourdmodel",{"_index":852,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.length",{"_index":850,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.push(newmodel",{"_index":830,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.open(component",{"_index":1791,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openinside(componenttype",{"_index":1765,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openstateicon",{"_index":530,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.orderby",{"_index":802,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.originalvalue",{"_index":1246,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.parametervalue",{"_index":1248,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.populatemodeldata(resultjson",{"_index":1405,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.primarykey_",{"_index":1397,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.promise",{"_index":599,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.queryaddrecord.emit(null",{"_index":577,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryband.enableqbe",{"_index":2043,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.enablesets",{"_index":2048,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryaddrecord.subscribe",{"_index":2055,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querydeleterecord.subscribe",{"_index":2059,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryeditrecord.subscribe",{"_index":2057,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryexportgrid.subscribe",{"_index":2052,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryfromqbe.subscribe((query",{"_index":2044,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querymanagesets.subscribe((action",{"_index":2049,"title":{},"body":{"components/RecordList.html":{}}}],["this.querybandisopen",{"_index":529,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querydeleterecord.emit(null",{"_index":581,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryeditrecord.emit(null",{"_index":579,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryexportgrid.emit(null",{"_index":575,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfieldlist",{"_index":218,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.foreach(element",{"_index":234,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.length",{"_index":248,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.pop",{"_index":254,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.push",{"_index":249,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfromfile.emit(null",{"_index":548,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfromqbe.emit",{"_index":546,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querymanagesets.emit(action",{"_index":553,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryrefresh.emit(this.thequeryband.thecustomquery.currentquery",{"_index":556,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querysortgrid.emit(null",{"_index":558,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querystring",{"_index":800,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.quickfind.valuechanges.pipe(distinctuntilchanged(),debouncetime(1500)).subscribe(query",{"_index":1952,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.recordnumber",{"_index":1357,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.refreshgrid",{"_index":2107,"title":{},"body":{"components/RecordList.html":{}}}],["this.refreshgrid(query",{"_index":2041,"title":{},"body":{"components/RecordList.html":{}}}],["this.reject",{"_index":602,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.relatedonetables",{"_index":219,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.resolve",{"_index":601,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.restoreset(set",{"_index":2141,"title":{},"body":{"components/RecordList.html":{}}}],["this.runquickfinder.emit(query",{"_index":1953,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('data:image/'+imagetype+';base64,'+value",{"_index":441,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["this.selectedindex",{"_index":1615,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.selectedvalue",{"_index":884,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.selectlist.show(searchlist",{"_index":2134,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.show(setlist",{"_index":2139,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.title",{"_index":2133,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectorvalue",{"_index":1249,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.selectthistab(tab",{"_index":2161,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.showadvancedquery",{"_index":2045,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('add",{"_index":2056,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('edit",{"_index":2058,"title":{},"body":{"components/RecordList.html":{}}}],["this.showerror",{"_index":1663,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.showlogindialog",{"_index":2304,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.size",{"_index":1843,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.tablename",{"_index":1356,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.tabs.foreach((tabitem",{"_index":2163,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.length",{"_index":2168,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.push(tab",{"_index":2169,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.textvalue",{"_index":1244,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.thedialog",{"_index":1777,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.center().open",{"_index":1772,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.open",{"_index":1773,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thegrid",{"_index":2035,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord",{"_index":2080,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.deleterecord(this.queryband.cascadedeleterecord",{"_index":2095,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.refresh().then",{"_index":2086,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.exportgridtoexcel",{"_index":2053,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider",{"_index":2036,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider().models",{"_index":2038,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.loaddata(query",{"_index":2072,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model",{"_index":2092,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype",{"_index":2102,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.primarykey_",{"_index":2112,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.tablename",{"_index":2109,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.optimizegridloading",{"_index":2081,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.recordselected.subscribe((record",{"_index":2061,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.refresh",{"_index":2098,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.resize",{"_index":2076,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.selectedrows",{"_index":2040,"title":{},"body":{"components/RecordList.html":{}}}],["this.thequeryband.thecustomquery",{"_index":555,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.clearqueryform",{"_index":560,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.currentquery",{"_index":584,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.tipslist",{"_index":1605,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.totalrecordcount",{"_index":820,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.urlsearchparms.hasownproperty('key",{"_index":2299,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[element",{"_index":2293,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[item[0",{"_index":2291,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userhasloggedin.emit(fourdinterface.currentuser",{"_index":2298,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userisloggedin",{"_index":2297,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.viewref",{"_index":1613,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/RecordList.html":{}}}],["this.webappversion",{"_index":1652,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.windowheight",{"_index":223,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.windowresized(event",{"_index":2068,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowresized(null",{"_index":2075,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowwidth",{"_index":224,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this['timestamp",{"_index":1364,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field",{"_index":1460,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field.name",{"_index":1345,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[fieldname",{"_index":1378,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["those",{"_index":330,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["three",{"_index":2409,"title":{},"body":{"index.html":{}}}],["throughout",{"_index":328,"title":{},"body":{"classes/Base64.html":{}}}],["throw",{"_index":335,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["thru",{"_index":1087,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["time",{"_index":1181,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["timestamp",{"_index":1366,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["timeto4dformat(thedate",{"_index":1183,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tips",{"_index":1579,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["tipslist",{"_index":1565,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["title",{"_index":189,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["title(v",{"_index":1600,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["to/from",{"_index":1037,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["toarray",{"_index":686,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["todo",{"_index":1756,"title":{},"body":{"injectables/Modal.html":{}}}],["toggledropdown",{"_index":549,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["token",{"_index":1736,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["tokens",{"_index":2448,"title":{},"body":{"index.html":{}}}],["top",{"_index":88,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["top:5px",{"_index":473,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tort",{"_index":2558,"title":{},"body":{"license.html":{}}}],["total",{"_index":756,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["totalrecordcount",{"_index":681,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["traffic",{"_index":1036,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["transform",{"_index":424,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transform(value",{"_index":425,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transition:opacity",{"_index":82,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transitions",{"_index":78,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transparent",{"_index":470,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["triangle",{"_index":522,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["trick",{"_index":1778,"title":{},"body":{"injectables/Modal.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":1887,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["true|false",{"_index":1450,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["try",{"_index":2071,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["tslint",{"_index":986,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tslint:disable",{"_index":974,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["tv",{"_index":1139,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["two",{"_index":940,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["type",{"_index":145,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":777,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["typeof(this[fieldname",{"_index":1382,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["typescript",{"_index":2386,"title":{},"body":{"index.html":{}}}],["ucs2decode",{"_index":2191,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2decode(string",{"_index":2208,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode",{"_index":2192,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode(array",{"_index":2210,"title":{},"body":{"classes/Utf8.html":{}}}],["ui",{"_index":2389,"title":{},"body":{"index.html":{}}}],["ul",{"_index":43,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ul#navigation",{"_index":20,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["undefined",{"_index":881,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["under",{"_index":1143,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["union",{"_index":922,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["unique",{"_index":1278,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["unpaired",{"_index":2262,"title":{},"body":{"classes/Utf8.html":{}}}],["up",{"_index":1102,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["update",{"_index":703,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["update4dlist(listname",{"_index":1130,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["updated",{"_index":706,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["updaterecord",{"_index":1448,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updates",{"_index":1315,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updating",{"_index":1331,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["upon",{"_index":1061,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["url",{"_index":437,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["url(\"/assets/login_splash.png",{"_index":1623,"title":{},"body":{"components/LoginCmp.html":{}}}],["url.split('&').foreach(element",{"_index":2288,"title":{},"body":{"components/WebAppContainer.html":{}}}],["urlencoded",{"_index":1068,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparams",{"_index":1055,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparms",{"_index":2269,"title":{},"body":{"components/WebAppContainer.html":{}}}],["usage",{"_index":438,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["use",{"_index":568,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["useb",{"_index":964,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["used",{"_index":327,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["useful",{"_index":2412,"title":{},"body":{"index.html":{}}}],["user",{"_index":643,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["userhasloggedin",{"_index":2272,"title":{},"body":{"components/WebAppContainer.html":{}}}],["userhassignedin",{"_index":1031,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["userisloggedin",{"_index":2271,"title":{},"body":{"components/WebAppContainer.html":{}}}],["username",{"_index":804,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["using",{"_index":723,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["usually",{"_index":650,"title":{},"body":{"classes/Deferred.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{}}}],["utf8",{"_index":762,"title":{"classes/Utf8.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["utf8.bytearray[utf8.byteindex",{"_index":2249,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.bytecount",{"_index":2246,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.byteindex",{"_index":2251,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.checkscalarvalue(codepoint",{"_index":2237,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.createbyte(codepoint",{"_index":2239,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.readcontinuationbyte",{"_index":2260,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.ucs2decode(string",{"_index":2244,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode",{"_index":2193,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode(bytestring",{"_index":2212,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode",{"_index":2194,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode(string",{"_index":2215,"title":{},"body":{"classes/Utf8.html":{}}}],["utility",{"_index":962,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["v",{"_index":198,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordEditWindow.html":{}}}],["v.buttonlabel",{"_index":1607,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.list",{"_index":1604,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.message",{"_index":1609,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.model.tablename",{"_index":216,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.previousquery",{"_index":217,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.tips",{"_index":1606,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v15",{"_index":1073,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["valid",{"_index":1805,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["validation",{"_index":1809,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value",{"_index":149,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["value.substr(0,2",{"_index":1324,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(3,2",{"_index":1326,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(6,2",{"_index":1328,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.tolocaledatestring",{"_index":862,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["value.touppercase",{"_index":1255,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["value/s",{"_index":1818,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value:'the",{"_index":1470,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["valuechanged",{"_index":1224,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["values",{"_index":889,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["var",{"_index":268,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["variable",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":519,"title":{"miscellaneous/variables.html":{}},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variableslist",{"_index":1474,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["various",{"_index":961,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["version",{"_index":1019,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["very",{"_index":45,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["via",{"_index":2391,"title":{},"body":{"index.html":{}}}],["view",{"_index":2008,"title":{},"body":{"components/RecordList.html":{}}}],["viewcontainerref",{"_index":201,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["viewencapsulation",{"_index":2279,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewencapsulation.none",{"_index":2268,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewref",{"_index":1567,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"components/RecordList.html":{}}}],["viewref:viewcontainerref",{"_index":1611,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["visibility",{"_index":85,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:hidden",{"_index":63,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:visible",{"_index":52,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["void",{"_index":166,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["want",{"_index":1486,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["warranties",{"_index":2544,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2539,"title":{},"body":{"license.html":{}}}],["we'll",{"_index":1040,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["web",{"_index":302,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["webappcontainer",{"_index":301,"title":{"components/WebAppContainer.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["webappversion",{"_index":1633,"title":{},"body":{"components/LoginCmp.html":{}}}],["webkit",{"_index":81,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["welcome",{"_index":1627,"title":{},"body":{"components/LoginCmp.html":{}}}],["went",{"_index":1440,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["whether",{"_index":2556,"title":{},"body":{"license.html":{}}}],["whole",{"_index":728,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["whose",{"_index":700,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["wide",{"_index":1749,"title":{},"body":{"injectables/Modal.html":{}}}],["widget",{"_index":2426,"title":{},"body":{"index.html":{}}}],["widgets",{"_index":2390,"title":{},"body":{"index.html":{}}}],["widgets/services",{"_index":2495,"title":{},"body":{"index.html":{}}}],["width",{"_index":34,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width(v",{"_index":1598,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["width:100",{"_index":95,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width:180px",{"_index":70,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["wiki",{"_index":2396,"title":{},"body":{"index.html":{}}}],["win",{"_index":2281,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location",{"_index":2282,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search",{"_index":2283,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search.substr(1",{"_index":2284,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win:windowservice",{"_index":2280,"title":{},"body":{"components/WebAppContainer.html":{}}}],["window",{"_index":605,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["window'},{'name",{"_index":294,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["window:resize",{"_index":1984,"title":{},"body":{"components/RecordList.html":{}}}],["windowbase64",{"_index":359,"title":{},"body":{"classes/Base64.html":{}}}],["windowheight",{"_index":120,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["windowresized",{"_index":1981,"title":{},"body":{"components/RecordList.html":{}}}],["windowresized(event",{"_index":2019,"title":{},"body":{"components/RecordList.html":{}}}],["windows",{"_index":2415,"title":{},"body":{"index.html":{}}}],["windowwidth",{"_index":121,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["without",{"_index":639,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"license.html":{}}}],["work",{"_index":1759,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["workspace",{"_index":1027,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["world",{"_index":1880,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["wrap",{"_index":1386,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["wrapper",{"_index":2445,"title":{},"body":{"index.html":{}}}],["www",{"_index":1067,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["x",{"_index":653,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["xff]/.test(input",{"_index":390,"title":{},"body":{"classes/Base64.html":{}}}],["y",{"_index":1256,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["yes",{"_index":1582,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["yesnomodal",{"_index":304,"title":{"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["yesnomodalcontent",{"_index":2313,"title":{"classes/YesNoModalContent.html":{}},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["yestext",{"_index":2318,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["ymd",{"_index":1176,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["yyyymmdd",{"_index":1169,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["z",{"_index":67,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["z0",{"_index":377,"title":{},"body":{"classes/Base64.html":{}}}],["za",{"_index":376,"title":{},"body":{"classes/Base64.html":{}}}],["zoom",{"_index":901,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdvancedQueryComponent.html":{"url":"components/AdvancedQueryComponent.html","title":"component - AdvancedQueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdvancedQueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/advancedQuery.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                advanced-query\n            \n\n\n            \n                styles\n                \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n            \n\n            \n                template\n                    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n            \n        \n        \n            \n                {{item}}\n            \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n            \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTable\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                windowHeight\n                            \n                            \n                                    Private\n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doQuery\n                            \n                            \n                                isItemSelected\n                            \n                            \n                                lessLines\n                            \n                            \n                                moreLines\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectField\n                            \n                            \n                                showRelatedTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparatorList\n                            \n                            \n                                fieldList\n                            \n                            \n                                queryFieldList\n                            \n                            \n                                relatedOneTables\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface, dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/containers/advancedQuery.ts:190\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparatorList\n                    \n                \n                \n                    \n                        Default value : ['=', '!=', '>', '>=', '\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:163\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldList\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:162\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFieldList\n                    \n                \n                \n                    \n                        Default value : [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }]\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:164\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relatedOneTables\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:165\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doQuery\n                        \n                        \n                    \n                \n            \n            \n                \ndoQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(field: any, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lessLines\n                        \n                        \n                    \n                \n            \n            \n                \nlessLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moreLines\n                        \n                        \n                    \n                \n            \n            \n                \nmoreLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectField\n                        \n                        \n                    \n                \n            \n            \n                \nselectField(event, queryField)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRelatedTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowRelatedTable(event, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:152\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 570\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:169\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/advancedQuery.ts:171\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, ViewContainerRef, AfterViewInit, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'advanced-query',\n    template: `\n    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n                   \n        \n        \n            \n                {{item}}\n                   \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n                   \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n    `,\n    styles: [`\n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    `]\n})\n\nexport class AdvancedQueryComponent implements ICustomModalComponent, AfterViewInit {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    };\n\n    @Input() public fieldList: Array = [];\n    @Input() public comparatorList = ['=', '!=', '>', '>=', ' {\n            if (!field.related && field.longname && field.longname !== '') { this.fieldList.push(field) }\n        });\n        this.currentTable = v.model.tableName;\n        if (v.previousQuery) {\n            this.queryFieldList = v.previousQuery;\n        } else {\n            this.queryFieldList = [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }];\n        }\n        this.relatedOneTables = [this.currentTable];\n        for (let index = 0; index  1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    selectField(event, queryField) {\n        if (event.target.selectedIndex > 0) {\n            queryField.field = queryField.listOfFields[event.target.selectedIndex - 1];\n        } else {\n            queryField.field = { type: 'string', name: '' };\n        }\n    }\n\n    isItemSelected(field: any, queryField: any): string {\n        return (queryField.name === field.name) ? 'selected' : '';\n    }\n\n    doQuery() {\n        const queryItems = [];\n        this.queryFieldList.forEach(element => {\n            if (element.field.name !== '' && element.comparator !== '') {\n                const theField: any = element.field;\n                if (element.comparator === '!=') { element.comparator = '#'; }\n                const theValue = (theField.type === 'Date')?element.value.replace(/-/g,''):element.value;\n                queryItems.push(theField.longname + ';' + element.comparator + ';' + theValue + ';' + element.connector);\n            }\n        });\n        this.dialog.close({ query: queryItems, queryFields: this.queryFieldList });\n    }\n\n    moreLines() {\n        const queryID = 'query' + this.queryFieldList.length;\n        this.queryFieldList.push({ id: queryID, field: { type: 'string', name: '' }, comparator: '=', value: '', connector: ' And', queryTable: this.currentTable, listOfFields: this.fieldList }); // add a new query line\n        this.windowHeight += 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    lessLines() {\n        this.queryFieldList.pop(); // remove last item\n        this.windowHeight -= 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    showRelatedTable(event, queryField: any) {\n        queryField.queryTable = event.target.textContent;\n        this.fourD.call4DRESTMethod('REST_GetFieldsInTable', { TableName: queryField.queryTable })\n            .subscribe(resultJSON => {\n                queryField.listOfFields = resultJSON.fieldList;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                »                                                    {{relatedTable}}                                                                                                                                    {{field.longname}}                                                        {{item}}                                                                                                                                        Can\\'t query on Object fields            Can\\'t query on Object fields            Can\\'t query on Blob fields            Can\\'t query on Blob fields            Can\\'t query on Picture fields                                                And                Or                                                 More...            Less...                Query    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'AdvancedQueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base64.html":{"url":"classes/Base64.html","title":"class - Base64","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base64\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/base64.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                error\n                            \n                            \n                                InvalidCharacterError\n                            \n                            \n                                    Private\n                                    Static\n                                REGEX_SPACE_CHARACTERS\n                            \n                            \n                                    Private\n                                    Static\n                                TABLE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decode\n                            \n                            \n                                    Static\n                                encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InvalidCharacterError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\tthis.message = message;\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            REGEX_SPACE_CHARACTERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[\\t\\n\\f\\r ]/g\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            TABLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Base64 {\n\n\n\t/*--------------------------------------------------------------------------*/\n\n\tInvalidCharacterError = function (message) {\n\t\tthis.message = message;\n\t};\n\n\tprivate static error = function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t};\n\n\tprivate static TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tprivate static REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tpublic static decode(input): string {\n\t\tinput = String(input)\n\t\t\t.replace(Base64.REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\tBase64.error(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position > (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tpublic static encode(input): string {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\tBase64.error(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position > 18 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) > 10) +\n\t\t\t\tBase64.TABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt((buffer > 2) +\n\t\t\t\tBase64.TABLE.charAt((buffer \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Base64ImageRef.html":{"url":"pipes/Base64ImageRef.html","title":"pipe - Base64ImageRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Base64ImageRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/Base64ImageRef.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        base64ImageRef\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, imageType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/Base64ImageRef.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    imageType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'jpeg'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n/*\n * Convert a Base64 Image string into an embedded Image URL \n * Usage:\n *   value | base64ImageRef {:type}\n * Parameters:\n *   optional image type parameter, default is \"jpeg\"\n*/\n@Pipe({name: 'base64ImageRef'})\nexport class Base64ImageRef implements PipeTransform {\n  transform(value: string, imageType: string = 'jpeg'): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('data:image/'+imageType+';base64,'+value);\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CustomButtonBarDirective.html":{"url":"directives/CustomButtonBarDirective.html","title":"directive - CustomButtonBarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CustomButtonBarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        custombuttonbar\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deferred.html":{"url":"classes/Deferred.html","title":"class - Deferred","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deferred\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promise\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FourDCollection.html":{"url":"injectables/FourDCollection.html","title":"injectable - FourDCollection","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FourDCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDCollection.ts\n        \n\n            \n                Description\n            \n            \n                This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                currentRecord\n                            \n                            \n                                    Public\n                                filterOptions\n                            \n                            \n                                    Private\n                                fourD\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                models\n                            \n                            \n                                    Public\n                                orderBy\n                            \n                            \n                                    Public\n                                queryString\n                            \n                            \n                                    Public\n                                totalRecordCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bulkDelete\n                            \n                            \n                                    Public\n                                bulkUpdate\n                            \n                            \n                                    Public\n                                getColumnListJSON\n                            \n                            \n                                    Public\n                                getRecords\n                            \n                            \n                                    Public\n                                toArray\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bulkDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkDelete(query: FourDQuery, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:166\n                \n            \n\n\n            \n                \n                    Delete a selection of records based on a supplied query+filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FourDQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional, FourDQuery to further filter records to he retrieved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns a Promise for the database operation, whose result is the # of records deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bulkUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:195\n                \n            \n\n\n            \n                \n                    Update a selection of records on a FourDCollection\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns a Promise for the database operation, blank means all records have been updated\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnListJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnListJSON(columns: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:54\n                \n            \n\n\n            \n                \n                    prepares the JSON field description to send to 4D, listing the columns to retrieve\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a JSON string listing the fields/columns to retrieve for each record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecords(query: FourDQuery, columns: Array, startRec: number, numOfRecords: number, filter: string, orderby: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:103\n                \n            \n\n\n            \n                \n                    Retrieves a list of records using a query string \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FourDQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n\n                                    \n                                \n                                \n                                    startRec\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        the starting record number to retrieve, used for paging.\n\n                                    \n                                \n                                \n                                    numOfRecords\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        -1\n                                    \n\n                                    \n                                        the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional, FourDQuery to further filter records to he retrieved\n\n                                    \n                                \n                                \n                                    orderby\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional order By clause to retrieve records in a set order.  in the format:    >table.field : to sort records by table.field in ascending order    \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toArray()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:242\n                \n            \n\n\n            \n                \n                    Convert Collection Data Models into a 'simple' array\n\n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:29\n                            \n                        \n\n                \n                    \n                        the default list of field/column names to be populated on each Collection record data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRecord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:32\n                            \n                        \n\n                \n                    \n                        holds current record from the current selection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:26\n                            \n                        \n\n                \n                    \n                        default filter to be applied on all queries \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fourD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n                \n                    \n                        injected FourDInterface service \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:18\n                            \n                        \n\n                \n                    \n                        the model this collection is based on \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:20\n                            \n                        \n\n                \n                    \n                        array of models in the collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:22\n                            \n                        \n\n                \n                    \n                        default order by string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDQuery\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:24\n                            \n                        \n\n                \n                    \n                        default query string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalRecordCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:34\n                            \n                        \n\n                \n                    \n                        holds the total # of records found on the latest query \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/js44D/JSFourDCollection.ts:235\n                                \n                            \n                    \n                        \n                                returns the length of the Collection, or the # of records loaded in\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDModel } from './JSFourDModel';\n\n/**\n * This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n */\n@Injectable()\nexport class FourDCollection {\n\n    //\n    // FourDCollection properties\n    //\n    /** the model this collection is based on */\n    public model: any;\n    /** array of models in the collection */\n    public models: Array = [];\n    /** default order by string */\n    public orderBy: string;\n    /** default query string */\n    public queryString: FourDQuery = null;\n    /** default filter to be applied on all queries */\n    public filterOptions: string;\n\n    /** the default list of field/column names to be populated on each Collection record data */\n    public columns: Array = [];\n\n    /** holds current record from the current selection */\n    public currentRecord: FourDModel;\n    /** holds the total # of records found on the latest query */\n    public totalRecordCount = 0;\n\n    /** injected FourDInterface service */\n    private fourD: FourDInterface;\n\n    //\n    // constructor: initialize collection properties\n    //\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n    /**\n     * prepares the JSON field description to send to 4D, listing the columns to retrieve\n     * \n     *  @param columns a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n     * \n     *  @returns a JSON string listing the fields/columns to retrieve for each record\n     */\n    public getColumnListJSON(columns: Array): string {\n        if (!columns) { columns = this.columns; }\n        const colList: Array = [];\n        const modelDef = (this.model);\n        let theModel: FourDModel = (new modelDef());\n        let fld: any;\n        for (const col of columns) {\n            if (typeof (col) === 'string') {\n                if (col.indexOf('.') > 0) { // is this a longname field?\n                    colList.push({ name: col.substr(col.indexOf('.') + 1), field: col });\n                } else { // nope, so let's see if we have it in our datamodel\n                    fld = theModel.getFieldProperties(col);\n                    if (fld) { // field in our datamodel, use its properties\n                        if (fld.formula) {\n                            colList.push({ name: fld.name, formula: fld.formula });\n                        } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                    }\n                }\n            } else if (col.field) {\n                theModel = (new modelDef());\n                fld = theModel.getFieldProperties(col.field);\n                if (fld) {\n                    if (fld.formula) {\n                        colList.push({ name: fld.name, formula: fld.formula });\n                    } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                }\n            } else {\n                if (col.formula) {\n                    colList.push({ name: col.name, formula: col.formula });\n                } else if (col.name && col.longname) { colList.push({ name: col.name, field: col.longname }); }\n            }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Retrieves a list of records using a query string \n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *  \n     * @returns returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n     */\n    public getRecords(query: FourDQuery = null, columns: Array = null, startRec: number = 0, numOfRecords: number = -1, filter: string = null, orderby: string = null): Promise> {\n        if (!query) {\n            query = this.queryString;\n        }\n        if (columns) {\n            this.columns = columns;\n        }\n        if (!filter || filter === '') {\n            filter = this.filterOptions;\n        }\n        if (!orderby || orderby === '') {\n            orderby = this.orderBy;\n        }\n\n        const body: any = { Username: FourDInterface.currentUser };\n        const modelDef = (this.model);\n        let newModel: FourDModel = (new modelDef());\n        body.TableName = newModel.tableName;\n        body.StartRec = startRec;\n        body.NumRecs = numOfRecords;\n\n        body.QueryString = JSON.stringify(query);\n        body.Columns = Base64.encode(Utf8.utf8encode((columns) ? this.getColumnListJSON(columns) : this.getColumnListJSON(newModel.getColumnList())));\n\n        if (filter) { body.FilterOptions = filter; }\n        if (orderby) { body.OrderBy = orderby; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetRecords', body)\n                .subscribe(resultJSON => {\n                    this.totalRecordCount = 0;\n                    this.models = [];\n                    if (resultJSON && resultJSON['selected'] && resultJSON['records']) {\n                        this.totalRecordCount = parseInt(resultJSON['selected']);\n                        const recList: Array = resultJSON['records'];\n                        recList.forEach(record => {\n                            newModel = (new modelDef());\n                            newModel.populateModelData(record);\n                            newModel.clearRecordDirtyFlag();\n                            this.models.push(newModel);\n                        });\n                    }\n\n                    resolve(this.models);\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n\n    /**\n     * Delete a selection of records based on a supplied query+filter\n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *\n     * @returns returns a Promise for the database operation, whose result is the # of records deleted\n     */\n    public bulkDelete(query: FourDQuery, filter: string = null): Promise {\n        const modelDef = (this.model);\n        const newModel: FourDModel = (new modelDef());\n        let body: any = { TableName: newModel.tableName };\n        body.QueryString = JSON.stringify(query);\n        if (filter) { body.FilterOptions = filter; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_BulkDelete', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON && resultJSON.valid) {\n                        resolve(resultJSON.deleted);\n                    } else reject(resultJSON.message)\n\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n    /**\n    * Update a selection of records on a FourDCollection\n    *\n    * @returns returns a Promise for the database operation, blank means all records have been updated\n    */\n    public bulkUpdate(): Promise {\n        let recordList = [];\n        //\n        // build list of records to update, with the modified fields data\n        //\n        for (const record of (this.models as Array)) {\n            if (record.recordIsDirty()) {\n                recordList.push({ table: record.tableName, recnum: record.recordNumber, fields: Base64.encode(Utf8.utf8encode(record.recordToJSON('update', false)))});\n            }\n        }\n\n        if (recordList.length > 0) { // do we have any record to update?\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_BulkUpdate', { recordList: Base64.encode(Utf8.utf8encode(JSON.stringify(recordList)))})\n                    .subscribe(resultJSON => {\n                        if (resultJSON && resultJSON.valid) {\n                            resolve('');\n                        } else reject(resultJSON.message)\n\n                    },\n                        error => {\n                            console.log('error:' + error);\n                            reject(error);\n                        });\n            });\n        \n        } else {\n            return new Promise((resolve, reject) => {\n                resolve('No records have been modified!');\n            });\n        }\n\n    }\n\n\n    /**\n     * returns the length of the Collection, or the # of records loaded in\n     */\n    public get length(): number {\n        return this.models.length;\n    }\n\n    /**\n     * Convert Collection Data Models into a 'simple' array\n     */\n    public toArray(): Array {\n        let ret = [];\n        this.models.forEach((element:FourDModel) => {\n            ret.push(element.extractModelData());\n        });\n        return ret;\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FourDDateToString.html":{"url":"pipes/FourDDateToString.html","title":"pipe - FourDDateToString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FourDDateToString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/FourDDateToString.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fourDDateToString\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/FourDDateToString.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/*\n * Convert a 4D Date string into Locale Date String \n * Usage:\n *   value | fourDDateToLocaleString \n * \n*/\n@Pipe({name: 'fourDDateToString'})\nexport class FourDDateToString implements PipeTransform {\n    transform(value): string {\n        if (value) {\n            if (typeof (value) === 'string' && value !== '') {\n                const date = new Date(value.replace(/-/g, '\\/'));\n                return date.toLocaleDateString();\n            } else return value.toLocaleDateString();\n        } else return ''; // handle case where date field is null/undefined\n      }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDDropDown.html":{"url":"components/FourDDropDown.html","title":"component - FourDDropDown","body":"\n                   \n\n\n\n\n\n  Components\n  FourDDropDown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDDropDown.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-dropdown\n            \n\n\n            \n                styles\n                .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n            \n\n            \n                template\n                \n    {{item}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isItemSelected\n                            \n                            \n                                    Private\n                                loadListFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listName\n                            \n                            \n                                listOptions\n                            \n                            \n                                selectedValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listOptions\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(item: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadListFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadListFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-dropdown',\n    styles: [`.fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            `],\n    template: `\n        \n            {{item}}\n        \n       `\n})\n\n@Injectable()\nexport class FourDDropDown implements AfterViewInit {\n    @Input() public listName: string;\n    @Input() public selectedValue: string;\n    @Input() public listOptions: Array = [];\n\n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadListFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(user => {\n                this.loadListFrom4D();\n            })\n        }\n    }\n\n    isItemSelected(item: string): string {\n        return (item === this.selectedValue) ? 'selected' : '';\n    }\n\n    private loadListFrom4D() {\n        if (this.listName) {\n            this.fourD.get4DList(this.listName)\n                .then((values) => {\n                    this.listOptions = ['', ...values];\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n    \n            .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{item}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDDropDown'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FourDModule.html":{"url":"modules/FourDModule.html","title":"module - FourDModule","body":"\n                   \n\n\n\n\n    Modules\n    FourDModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fourD.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FourDCollection\n                        \n                        \n                            FourDInterface\n                        \n                        \n                            FourDModel\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDInterface } from './js44D/JSFourDInterface';\nimport { FourDModel } from './js44D/JSFourDModel';\nimport { FourDCollection } from './js44D/JSFourDCollection';\n\n@NgModule({\n      imports: [HttpClientModule],\n      providers: [HttpClient, FourDInterface, FourDModel, FourDCollection],\n      exports: [HttpClientModule]\n})\nexport class FourDModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FourDQuery.html":{"url":"classes/FourDQuery.html","title":"class - FourDQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FourDQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                Describes the properties of a 4D Query String  - see RESTApi documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                custom\n                            \n                            \n                                    Optional\n                                intersection\n                            \n                            \n                                    Optional\n                                join\n                            \n                            \n                                    Optional\n                                joinFK\n                            \n                            \n                                    Optional\n                                joinPK\n                            \n                            \n                                    Optional\n                                joinTable\n                            \n                            \n                                    Optional\n                                query\n                            \n                            \n                                    Optional\n                                sql\n                            \n                            \n                                    Optional\n                                union\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:716\n                            \n                        \n\n                \n                    \n                        Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            intersection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:714\n                            \n                        \n\n                \n                    \n                        An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            join\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:718\n                            \n                        \n\n                \n                    \n                        Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinFK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:724\n                            \n                        \n\n                \n                    \n                        A join query property. The main table foreign key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinPK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:722\n                            \n                        \n\n                \n                    \n                        A join query property. The join table primary key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:720\n                            \n                        \n\n                \n                    \n                        A join query property. This is the join table, a table name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:708\n                            \n                        \n\n                \n                    \n                        Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:710\n                            \n                        \n\n                \n                    \n                        Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            union\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:712\n                            \n                        \n\n                \n                    \n                        An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: any) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n\n    /**\n     * Get Record count based on a supplied query+filter\n     * \n     *  @param tableName the table to get the resulting record count\n     *  @param query the FourDQuery object that defines the query to be used for determining\n     *  @param filter optional, FourDQuery to further filter records\n     *\n     * @returns returns a Promise for the database operation, whose result is the # of records selected\n     */\n    public getRecordCount(tableName:string, query: FourDQuery, filter: string = null): Promise {\n        let body: any = { TableName: tableName, QueryString: JSON.stringify(query)};\n        if (filter) { body.FilterOptions = filter; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.call4DRESTMethod('REST_CountRecords', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON && resultJSON.valid) {\n                        resolve(resultJSON.selected);\n                    } else reject(resultJSON.message)\n\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDRegistryInput.html":{"url":"components/FourDRegistryInput.html","title":"component - FourDRegistryInput","body":"\n                   \n\n\n\n\n\n  Components\n  FourDRegistryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDRegistryInput.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-registry-input\n            \n\n\n\n            \n                template\n                \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanValue\n                            \n                            \n                                    Private\n                                originalValue\n                            \n                            \n                                    Public\n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadValueFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                defaultValue\n                            \n                            \n                                inputType\n                            \n                            \n                                parameterValue\n                            \n                            \n                                selectorValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        className\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parameterValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectorValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadValueFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadValueFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            originalValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            textValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-registry-input',\n    template: `\n        \n            \n            \n        \n       `\n})\n\n@Injectable()\nexport class FourDRegistryInput implements AfterViewInit {\n\n    @Input() public className: string;\n    @Input() public parameterValue: string;\n    @Input() public selectorValue: string;\n    @Input() public defaultValue: string;\n    @Input() public inputType: string;\n    \n    public textValue: string = '';\n    public booleanValue: boolean = false;\n    private originalValue: string = '';\n    \n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadValueFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(() => {\n                this.loadValueFrom4D();\n            })\n        }\n    }\n\n    public valueChanged() {\n        if (this.inputType === 'checkbox') {\n            this.textValue = (this.booleanValue)?'Y':'N';\n        }\n        if (this.originalValue != this.textValue) {\n            this.fourD.setRegistryValue(this.className, this.parameterValue, this.textValue, this.selectorValue)\n                .then (v => {this.originalValue = this.textValue;});\n        }\n    }\n\n    private loadValueFrom4D() {\n        if (this.className && this.className != '' && this.parameterValue && this.parameterValue != '') {\n            this.fourD.getRegistryValue(this.className, this.parameterValue, this.defaultValue, this.selectorValue)\n                .then((value) => {\n                    this.originalValue = this.textValue = value;\n                    this.booleanValue = (value.toUpperCase() == \"Y\");\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDRegistryInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModal.html":{"url":"classes/ICustomModal.html","title":"class - ICustomModal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModal.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ICustomModal { }\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModalComponent.html":{"url":"classes/ICustomModalComponent.html","title":"class - ICustomModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModalComponent.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                beforeClose\n                            \n                            \n                                    Optional\n                                beforeDismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeClose\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeClose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:18\n                \n            \n\n\n            \n                \n                    Invoked before a modal is closed, return true to cancel closing.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeDismiss\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:13\n                \n            \n\n\n            \n                \n                    Invoked before a modal is dismissed, return true to cancel dismissal.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * A Type used as a binding key for dialog window Components\n */\n\nexport class ICustomModalComponent {\n    dialog: ModalDialogInstance;\n\n    /**\n     * Invoked before a modal is dismissed, return true to cancel dismissal.\n     */\n    beforeDismiss?(): boolean;\n\n    /**\n     * Invoked before a modal is closed, return true to cancel closing.\n     */\n    beforeClose?(): boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldDescription.html":{"url":"interfaces/IFieldDescription.html","title":"interface - IFieldDescription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFieldDescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDModel.ts\n        \n\n            \n                Description\n            \n            \n                This is the description for each field in a Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        formula\n                                \n                                \n                                        indexed\n                                \n                                \n                                        isrelated\n                                \n                                \n                                        joinFK\n                                \n                                \n                                        joinPK\n                                \n                                \n                                        length\n                                \n                                \n                                        list\n                                \n                                \n                                        longname\n                                \n                                \n                                        name\n                                \n                                \n                                        readonly\n                                \n                                \n                                        relatesTo\n                                \n                                \n                                        required\n                                \n                                \n                                        subTable\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    not used \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formula\n                                    \n                                \n                                \n                                    \n                                        formula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a calculated value, this is a 4D expresstion that returns the field contents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexed\n                                    \n                                \n                                \n                                    \n                                        indexed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates that the field is indexed on 4D side \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isrelated\n                                    \n                                \n                                \n                                    \n                                        isrelated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field comes from a related table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinFK\n                                    \n                                \n                                \n                                    \n                                        joinFK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the foreign key field in the main table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinPK\n                                    \n                                \n                                \n                                    \n                                        joinPK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the primary key field in the related many table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if an alpha field, the field length as defined in the 4D Structure \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the choice list associated to the field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longname\n                                    \n                                \n                                \n                                    \n                                        longname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field dot long name, in the format 'table.field', applicable if a database field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field name, must be unique in the Data Model \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field is read only, and can't me modified \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatesTo\n                                    \n                                \n                                \n                                    \n                                        relatesTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a foreign key that relates to a one table, this is the related one field name in dot long format \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is a required field, cannot be empty or null \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTable\n                                    \n                                \n                                \n                                    \n                                        subTable:         FourDModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FourDModel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable (related many table), this is the FourDModel that represents records in that table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is unique \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDCollection } from './JSFourDCollection';\n\n/**\n * This is the description for each field in a Data Model\n */\nexport interface IFieldDescription {\n    /** the field name, must be unique in the Data Model */\n    name: string;\n    /** the field dot long name, in the format 'table.field', applicable if a database field */\n    longname: string;\n    /** the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture */\n    type: string;\n    /** if field is a calculated value, this is a 4D expresstion that returns the field contents */\n    formula: string;\n    /** if field is a subtable (related many table), this is the FourDModel that represents records in that table */\n    subTable: FourDModel;\n    /** not used */\n    className: string;\n    /** if field is a subtable, this is the foreign key field in the main table */\n    joinFK: string;\n    /** if field is a subtable, this is the primary key field in the related many table */\n    joinPK: string;\n    /** indicates field comes from a related table */\n    isrelated: boolean;\n    /** if field is a foreign key that relates to a one table, this is the related one field name in dot long format */\n    relatesTo: string;\n    /** indicates field is read only, and can't me modified */\n    readonly: boolean;\n    /** the choice list associated to the field */\n    list: string;\n    /** field is a required field, cannot be empty or null */\n    required: boolean;\n    /** indicates that the field is indexed on 4D side */\n    indexed: boolean;\n    /** field is unique */\n    unique: boolean;\n    /** if an alpha field, the field length as defined in the 4D Structure */\n    length: number;\n}\n\n/**\n * Individual 4D Datamodel that replicates a 4D Table's structure and provides a CRUD API to 4D data\n */\n@Injectable()\nexport class FourDModel {\n    /** 4D's Table name */\n    public tableName = '';\n    /** 4D's table number */\n    public tableNumber = 0;\n    /** Table's primary key field name */\n    public primaryKey_: string;\n\n    /** record number field/attribute name, usually '_recnum' */\n    public idAttribute = '_recnum';\n\n    /** Table definition, array describing all fields in the Data Model and how they map to the 4D Structure */\n    public fields: Array = [];\n\n    /** callback method to be executed on 4D side before a Save operation */\n    public fourdSaveCallbackMethod_: string;\n    /** callback method to be executed on 4D side before a Delete operation */\n    public fourdDeleteCallbackMethod_: string;\n\n    // injected FourDInterface service\n    public fourD: FourDInterface;\n\n    // -----------------------\n    // Private variables\n    // -----------------------\n    // current record number\n    private _recnum = -3;\n    // keeps all attributes for the current model\n    private _attributes: any = {};\n    // keep a list of modified fields, to optimize Updates, only modified data is set to 4D\n    private _modified: any = {};\n\n\n    /** \n     * constructor: initialize model properties\n    */\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n\n    /**\n     * Get a field value\n     */\n    get(field: string): any {\n        return this._attributes[field];\n    }\n\n    /**\n     * Set a field value, updates field modified flag\n     */\n    set(field: string, value: any) {\n        if (this.getFieldProperties(field)) {\n            if (this.getFieldDescription(field).type === 'Date') {\n                if (typeof (value) === 'string' && value !== '') {\n                    value = new Date(value.replace(/-/g, '\\/'));\n                }\n            } else if (this.getFieldDescription(field).type === 'Time') {\n                if (typeof (value) === 'string' && value !== '') {\n                    const hh = +value.substr(0,2);\n                    const mm = +value.substr(3,2);\n                    const ss = +value.substr(6,2);\n                    value = new Date(0,0,0,hh,mm,ss);\n                }\n            }\n            if (this._attributes.hasOwnProperty(field)) {\n                // we are updating an attribute\n                if (this._attributes[field] !== value) {\n                    // make sure value is indeed changing...\n                    this._attributes[field] = value;\n                    this._modified[field] = true; // mark field as modified\n                }\n            } else {\n                // setting a new attribute\n                this._attributes[field] = value;\n                this._modified[field] = true; // mark field as modified\n            }\n        } else {\n            this._attributes[field] = value;\n        }\n    }\n\n    /**\n     * Returns the description for a given field\n     * \n     * @param fieldName the field name to get properties for\n     * \n     * @returns the field name properties, an IFieldDescription instance\n     * \n     */\n    getFieldProperties(fieldName): IFieldDescription {\n        let ret: IFieldDescription = null;\n        for (const col of this.fields) {\n            if (col.name === fieldName) { ret = col; }\n        };\n        return ret;\n    }\n\n\n    /**\n     * Clears up all record fields\n     */\n    clearRecord() {\n        for (const field of this.fields) {\n            switch (field.type) {\n                case 'date':\n                case 'Date':\n                    this[field.name] = null;\n                    break;\n\n                case 'time':\n                case 'Time':\n                    this[field.name] = null;\n                    break;\n\n                case 'boolean':\n                    this[field.name] = false;\n                    break;\n\n                case 'string':\n                case 'text':\n                    this[field.name] = '';\n                    break;\n\n                case 'number':\n                    this[field.name] = 0;\n                    break;\n\n                case 'json':\n                    this[field.name] = {};\n                    break;\n\n                case 'blob':\n                case 'picture':\n                    this[field.name] = null;\n                    break;\n\n                default:\n                    this[field.name] = '';\n                    break;\n            }\n        };\n\n    }\n\n    /**\n     * Serializes record data into its JSON representation as used in 4D\n     *\n     * @param mode can be 'insert' or 'update', if mode is 'update' the JSON string will contain only fields that have been modified\n     * @param noAudit 'no audit' flag to be sent to 4D, if 'true' record audit log will be disabled \n     * \n     * @returns record contents as JSON string\n     *\n     */\n    recordToJSON(mode: string, noAudit: boolean): string {\n        const recordData: any = { table: this.tableName, recnum: this.recordNumber };\n        // set callback methods\n        if (this.fourdSaveCallbackMethod_) {\n            recordData['saveCallback'] = this.fourdSaveCallbackMethod_; // set save callback method if set\n        }\n\n        recordData['noAudit'] = noAudit;    // disable audit log for this record\n\n        if ((mode === 'update') && this.hasOwnProperty('TimeStamp')) {\n            recordData['timeStamp'] = this['TimeStamp'];\n        } // if updating, add current record's timestamp attribute\n\n        recordData['fields'] = {}; // initialize fields propriety\n        for (const field of this.fields) {\n            const fieldName: string = field.name;\n            if (!this.isCalculatedField(field) &&\n                !this.isSubtable(field) &&\n                !this.isRelatedField(field) &&\n                (!this.isReadOnly(field) || (mode === 'insert')) &&\t\t\t// May/15/09 send all non-read only fields, empty or not\n                (this.isModifiedField(fieldName) || (mode === 'insert'))) { \t// Nov 18/09 send ONLY fields that have indeed been modified\n                let value = '';\n                if (((this[fieldName] !== null) && (this[fieldName] !== undefined)) || (field.type === 'boolean')) {\n                    // send back only fields that do have some value and that belong to the table\n                    // ignore calculated or related fields\n                    switch (field.type) {\n                        case 'Date':\n                        case 'date':\n                            if (typeof(this[fieldName]) === 'string') {\n                                recordData['fields'][field.longname] = this[fieldName]; \n                            } else {\n                                const dateValue: Date = this[fieldName];\n                                value = dateValue.getFullYear().toString();\n                                if (dateValue.getMonth() '; // if blob, wrap data inside a cdata\n                             }\n                             */\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n\n                        default:\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n                    }\n                }\n\n\n            }\n        };\n\n        return JSON.stringify(recordData);\n\n    }\n\n\n    /**\n     * Retrieve a record from 4D and populates the Data Model.\n     *\n     * @param recordNumber the record # to retrieve (optional, it defaults to the currentRecordNumber property)\n     * @param recordID primary key value for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     *    if specified the record is retrieved by querying on its primary key field\n     * @param query query string for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     * \n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     *\n     */\n    public getRecord(recordNumber: number = null, recordID: string = null, query: FourDQuery = null): Promise {\n        if (query) {\n            // if we have a query, use it...\n        } else if (recordID && FourDInterface.fourdAPIVersion = 0 || this.recordNumber >= 0 || (recordID && FourDInterface.fourdAPIVersion >= '1.18.06.17a' && this.primaryKey_)) {\n            // if we have a record number, use it directly then\n            if (recordNumber >= 0) { this.recordNumber = recordNumber; }\n\n            // build request body with record number to retrieve\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            if (recordID) {\n                body.RecordID = recordID; // if querying record using record ID...             \n            } else {\n                body.RecordNum = this.recordNumber;\n            }\n            body.VariablesList = Base64.encode(Utf8.utf8encode(this.getColumnListJSON()));\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_LoadData', body)\n                    .subscribe(resultJSON => {\n                        this.clearRecord();\n                        this.populateModelData(resultJSON);\n                        this.clearRecordDirtyFlag();\n                        resolve(this);\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n        } else { \n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n\n        }\n\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        const me = this;\n\n        // first we send to query to 4D to get all records that match the query criteria\n        // then if at lest 1 record is returned by 4D, we use it's record number to refresh to complete record contents\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, [this.primaryKey_])\n                .then((reclist) => {\n                    if (records.models.length > 0) {\n                        me.recordNumber = records.models[0].recordNumber; // set the record number and refresh it\n                        me.refresh().then((rec) => { rec.clearRecordDirtyFlag(); resolve(me); }).catch((error) => { reject(error); });\n                    } else { reject('recordNotFound'); }\n                })\n                .catch((error) => { reject(error); });\n        });\n\n\n    }\n\n    /**\n     * Refresh current record, grab a fresh copy from 4D\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public refresh(): Promise {\n        if (this.recordNumber >= 0) {\n            return this.getRecord(this.recordNumber);\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n\n    }\n\n\n    /**\n     * Insert a new record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance. the primary key property is set after the record is inserted\n     *\n     */\n    public insertRecord(): Promise {\n        const body: any = { Username: FourDInterface.currentUser };\n        body.TableName = this.tableName;\n        body.RecordNum = this.recordNumber;\n        if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n        body.Action = 'add';\n        body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('add', false)));\n\n        return new Promise((resolve, reject) => {\n            const me = this;\n            this.fourD.call4DRESTMethod('REST_PostData', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.returnCode === 'OK') {\n                        // insert record went OK, retrieve calculated return code & record ID\n                        me.recordNumber = resultJSON['recordNum'];\n                        if (me.primaryKey_ && me.primaryKey_ !== '') { me[me.primaryKey_] = resultJSON['recordID']; }\n                        me.clearRecordDirtyFlag(); // clean up modified fields\n                        resolve(me);\n                    } else { reject(resultJSON.returnCode); }\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error.text());\n                    });\n        });\n\n\n    }\n\n    /**\n     * Update record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public updateRecord(): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n            body.Action = 'update';\n            body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('update', false)));\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // update record went OK\n                            me.clearRecordDirtyFlag(); // clean up modified fields\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n    }\n\n    /**\n     * Delete record from the database\n     *\n     * @param cascade true|false indicates if 4D should perform a cascade delete (optional, default=false)\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public deleteRecord(cascade: boolean = false): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdDeleteCallbackMethod_) { body.CallBackMethod = this.fourdDeleteCallbackMethod_; }\n            body.Action = 'delete';\n            if (cascade) { body.cascadeDelete = cascade; }\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // delete record went OK\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n        }\n\n    }\n\n    /**\n     * Populates model with attributes/properties from a json Object\n     *\n     *  @param recordData json object whose properties will be used to populate the Data Model\n     */\n    public populateModelData(recordData: any) {\n        if (recordData.hasOwnProperty('_recnum')) { this.recordNumber = recordData['_recnum']; }\n        for (const field in recordData) {\n            if (field !== '_recnum' && this.getFieldProperties(field)) {\n                switch (this.getFieldProperties(field).type ) {\n                    case 'json':\n                        this[field] = (recordData[field] && recordData[field] != '')?JSON.parse(recordData[field]):{}; \n                        break;\n                \n                    default:\n                        this[field] = recordData[field];\n                        break;\n                }\n            }\n        }\n\n    }\n\n    public extractModelData(): any {\n        let data = { _recnum: this._recnum };\n        for (const field of this.fields) {\n            data[field.name] = this[field.name];\n        }\n\n        return data;\n    }\n\n    /**\n     * Retrieves a list of records using a query string\n     *\n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *\n     *\n     * @returns returns a Promise for the database operation, whose result is a FourDCollection with the query results\n     */\n    public getRecords(query: FourDQuery = null,\n        columns: Array = null,\n        startRec: number = 0, numOfRecords: number = -1,\n        filter: string = null,\n        orderby: string = null): Promise {\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, (columns) ? columns : this.getColumnList(), startRec, numOfRecords, filter, orderby)\n                .then((reclist) => { resolve(records); })\n                .catch((error) => { reject(error); });\n        });\n\n    }\n\n    /**\n     * Retrieves a set of variables or 4D execute formula values\n     * \n     * @param values an Array of objects with the following format: {formula: 'a 4d formula', value:'the resulting value returned by 4D'}\n     * @param method the name of a 4D method to be called before processing the formulas\n     *\n     * @returns returns a Promise for the database operation, whose result is the values Array populated by 4D\n     */\n    public getValuesFrom4D(values: Array, method: string = ''): Promise> {\n        const body: any = { VariablesList: Base64.encode(Utf8.utf8encode(JSON.stringify(values))) };\n        if (method && method != '') {\n            body.CallbackMethod = method;\n        }\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetValues', body)\n                .subscribe(result => {\n                    resolve(result);\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error);\n                    });\n        });\n\n    }\n    /**\n     * Get the current record's record number\n     * \n     *  @returns current record number (4D's record number, equivalent to ROWID)\n     *\n     */\n    public get recordNumber(): number {\n        return this._recnum;\n    }\n    public set recordNumber(v: number) { this._recnum = v; }\n\n    /**\n     * Checks to see if a record is currently loaded\n     *\n     * @returns true if a record is loaded into this FourDModel instance\n     *\n     */\n    public isRecordLoaded(): boolean {\n        return (this.recordNumber >= 0);\n    }\n\n\n    /**\n     * Clears record modified flag.\n     * \n     * This can be used when one changes a record programmatically, but does not want to set the record modified flag.\n     * For example on record initialization.\n     *\n     */\n    public clearRecordDirtyFlag() {\n        this._modified = {};\t\t\t\t\t// clear modified fields list\n    }\n\n\n    /**\n     * Check if current record has been modified.\n     *\n     * @returns true indicates that record contents have been modified.\n     *\n     */\n    public recordIsDirty(): boolean {\n        for (const field of this.fields) {\n            if (this._modified.hasOwnProperty(field.name)) { return true; }\n        }\n        return false;\n    }\n\n\n    /**\n     * Prepares the record's JSON field description to send to 4D\n     * \n     * @returns JSON string representing all fields in the Data Model\n     */\n    public getColumnListJSON(): string {\n        const colList: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (col.formula) {\n                colList.push({ name: col.name, formula: col.formula });\n            } else if (col.subTable) {\n                const subFields: Array = [];\n                for (const sub of col.subTable.fields) {\n                    if (sub.formula) { // add support for formulas in subfields\n                        subFields.push({ name: sub.name, formula: sub.formula });\n                    } else {\n                        subFields.push({ name: sub.name, field: sub.longname });\n                    }\n                };\n                colList.push({\n                    name: col.name,\n                    subTable: col.subTable.tableName,\n                    joinFK: col.joinFK,\n                    joinPK: col.joinPK,\n                    subFields: subFields\n                });\n\n            } else if (col.longname) { colList.push({ name: col.name, field: col.longname }); }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Gets a list of fields in the Data Model\n     * \n     * @param includeSubTables if 'true', includes fields in subtables defined in the Data Model\n     * \n     * @returns an array with all fields defined for this data model\n     */\n    public getColumnList(includeSubTables: boolean = false): Array {\n        const cols: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (!this.isSubtable(col) || includeSubTables) {\n                if (col.formula) {\n                    cols.push(col);\n                } else { cols.push(col.name); }\n            }\n        };\n        return cols;\n    }\n\n    /**\n     * Returns a field's longname, given its field name\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field dot longname, as 'table.field'\n     */\n    public getLongname(fieldName: string): string {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field.longname; }\n        }\n\n        // not found, assume table.field\n        return this.tableName + '.' + fieldName;\n    }\n\n    // -----------------------\n    // Private methods\n    // -----------------------\n\n    /**\n     * Returns a field's data model description\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field's iFieldDescription\n     */\n    private getFieldDescription(fieldName: string): IFieldDescription {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field; }\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks to see if a field is from a related table\n     *\n     * @param field field description for the Class definition\n     * @return true if field is on a related table\n     *\n     */\n    private isRelatedField(field: IFieldDescription): boolean {\n        return field.isrelated;\n    }\n\n    /**\n     * Checks to see if a field contents have been modified\n     *\n     * @param field field/property name\n     * @returns true if field has been modified\n     *\n     */\n    private isModifiedField(field: string): boolean {\n        return this._modified.hasOwnProperty(field);\n    }\n\n    /**\n     * Checks to see if a field is a calculated field\n     *\n     * @param field field description from the Data Model\n     * \n     * @returns true if field is formula, a calculated field\n     *\n     */\n    private isCalculatedField(field: IFieldDescription): boolean {\n        return (field.formula !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is a related many subtable\n     *\n     * @param field field description from the Data Model\n     * @returna true if field is a related many subtable\n     *\n     */\n    private isSubtable(field: IFieldDescription): boolean {\n        return (field.subTable !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is read only\n     *\n     * @param field field description from the Data Model\n     * @returns true if field is read only\n     *\n     */\n    private isReadOnly(field: IFieldDescription): boolean {\n        return field.readonly;\n    }\n\n\n\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JS44DModule.html":{"url":"modules/JS44DModule.html","title":"module - JS44DModule","body":"\n                   \n\n\n\n\n    Modules\n    JS44DModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_imports\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_JS44DModule_providers\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nFourDModule\n\nFourDModule\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/js44D.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FourDInterface\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FourDModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDModule } from './fourD.module';\nimport { FourDInterface } from './js44D/JSFourDInterface';\n\nimport { QueryBand, CustomButtonBarDirective, QueryBandDirective } from './containers/queryBand';\nimport { AdvancedQueryComponent } from './containers/advancedQuery';\nimport { RecordList } from './containers/recordList';\nimport { RecordEditWindow } from './containers/recordEditWindow';\nimport { Tabs, Tab } from './containers/tabs';\nimport { WebAppContainer } from './containers/webAppContainer';\nimport { FourDDropDown } from './controls/fourDDropDown';\nimport { QuickFindInput } from './controls/quickFindInput';\nimport { DataGrid } from './dataGrid/dataGrid';\nimport { LoginCmp } from './login/login';\nimport { ListSelectorDialog } from './dialogs/listSelectorDialog';\n\nimport { Base64ImageRef } from './pipes/Base64ImageRef.pipe';\nimport { FourDDateToString } from './pipes/FourDDateToString.pipe';\nimport { FourDRegistryInput } from './controls/fourDRegistryInput';\n\n\n@NgModule({\n      imports: [FormsModule, ReactiveFormsModule, CommonModule, HttpClientModule, FourDModule],\n      declarations: [ \n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      providers: [HttpClient, FourDInterface],\n      exports: [\n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      entryComponents: [LoginCmp, AdvancedQueryComponent, ListSelectorDialog]\n})\nexport class JS44DModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSelectorDialog.html":{"url":"components/ListSelectorDialog.html","title":"component - ListSelectorDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ListSelectorDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/listSelectorDialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                list-selector\n            \n\n\n\n            \n                template\n                \n    \n        {{item}}\n    \n    \n        {{message}}\n        {{buttonText}}\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelection\n                            \n                            \n                                ok\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                itemsList\n                            \n                            \n                                message\n                            \n                            \n                                tipsList\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                                \n                                    width\n                                \n                                \n                                    title\n                                \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, modal: Modal, viewRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/listSelectorDialog.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : 'Select'\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tipsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelection\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelection(ev)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(list: string[], tips?: string[], message?: string, buttonLabel?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:63\n                \n            \n\n\n            \n                \n                    Show Me - show the list selector dialog and return a Promise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tips\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    buttonLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n\n                \n                    \n                        setheight(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n\n                \n                    \n                        settitle(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, OnInit, Input } from '@angular/core';\n\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\n@Component({\n    selector: 'list-selector',\n    template: `\n        \n            \n                {{item}}\n            \n            \n                {{message}}\n                {{buttonText}}\n            \n        \n   `,\n    providers: [Modal]\n})\n\nexport class ListSelectorDialog implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    };\n\n    @Input() public itemsList: string[] = [];\n    @Input() public tipsList: string[] = [];\n    @Input() public buttonText = 'Select';\n    @Input() public message = '';\n\n    public set height(v) { ListSelectorDialog.dialogConfig.height = v };\n    public set width(v) { ListSelectorDialog.dialogConfig.width = v };\n    public set title(v) { ListSelectorDialog.dialogConfig.title = v };\n\n\n    public set modelContentData(v) {\n        this.itemsList = v.list;\n        this.tipsList = v.tips;\n        if (v.buttonLabel) { this.buttonText = v.buttonLabel; }\n        if (v.message) { this.message = v.message; }\n    }\n\n\n    private selectedIndex = -1;\n\n\n    constructor(public dialog: ModalDialogInstance, private modal: Modal, private viewRef:ViewContainerRef) {\n  \n    }\n\n    /**\n     * Show Me - show the list selector dialog and return a Promise\n     */\n    public show(list: string[], tips?: string[], message?: string, buttonLabel?: string): Promise {\n        if (!tips) { tips = list; }\n\n        return this.modal.openInside(ListSelectorDialog, this.viewRef, { list: list, tips: tips, message: message, buttonLabel: buttonLabel }, ListSelectorDialog.dialogConfig);\n    }\n\n    changeSelection(ev) {\n        this.selectedIndex = ev.target.selectedIndex;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(this.selectedIndex);\n    }\n\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item}}                {{message}}        {{buttonText}}    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSelectorDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginCmp.html":{"url":"components/LoginCmp.html","title":"component - LoginCmp","body":"\n                   \n\n\n\n\n\n  Components\n  LoginCmp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/login/login.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                log-in\n            \n\n\n            \n                styles\n                \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n            \n\n            \n                template\n                    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fourDVersion\n                            \n                            \n                                password\n                            \n                            \n                                showError\n                            \n                            \n                                username\n                            \n                            \n                                webAppVersion\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fourDVersion\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        webAppVersion\n                    \n                \n                \n                    \n                        Default value : '1.18.02.16a'\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/login/login.ts:62\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\nimport { FourDInterface, MD5 } from '../js44D/JSFourDInterface';\n\n\n@Component({\n    selector: 'log-in',\n    template: `\n    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n    `,\n    styles: [`\n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    `]\n})\nexport class LoginCmp implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    };\n\n    @Input() public username = '';\n    @Input() public password = '';\n    @Input() public showError = false;\n    @Input() public fourDVersion = '';\n    @Input() public webAppVersion = '1.18.02.16a';\n\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            if (parms.hasOwnProperty('version')) {\n                this.webAppVersion = parms['version'];\n            }\n        }\n    }\n\n    constructor(public dialog: ModalDialogInstance, private fourD: FourDInterface) {\n        this.fourD.call4DRESTMethod('REST_GetApplicationVersion', {}, { responseType: 'text' })\n            .subscribe((v) => {\n                this.fourDVersion = v;\n            });\n    }\n\n    login() {\n        // event.preventDefault();\n        const md5pwd: string = MD5.md5(this.password);\n        this.fourD.signIn(this.username, md5pwd.toUpperCase())\n            .then((authentication) => {\n                if (FourDInterface.authentication) {\n                    //  console.log('authenticated');\n\n                    this.showError = false;\n                    if (this.dialog) { this.dialog.close('loggedin'); }\n                } else {\n                    console.log('oops');\n                    this.showError = true;\n                }\n            })\n            .catch((e) => {\n                //console.log(e);\n                this.showError = true;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Welcome, Please Login                    User Name                                        Password                            Login        Sorry, the username and/or password was incorrect    4D: {{fourDVersion}}, web: {{webAppVersion}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginCmp'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MD5.html":{"url":"classes/MD5.html","title":"class - MD5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MD5\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                MD5 has calculation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hex_chr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add32\n                            \n                            \n                                    Static\n                                cmn\n                            \n                            \n                                    Static\n                                ff\n                            \n                            \n                                    Static\n                                gg\n                            \n                            \n                                    Static\n                                hex\n                            \n                            \n                                    Static\n                                hh\n                            \n                            \n                                    Static\n                                ii\n                            \n                            \n                                    Static\n                                md5\n                            \n                            \n                                    Static\n                                md51\n                            \n                            \n                                    Static\n                                md5blk\n                            \n                            \n                                    Static\n                                md5cycle\n                            \n                            \n                                    Static\n                                rhex\n                            \n                            \n                                    Static\n                                str2rstr_utf8\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hex_chr\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : '0123456789abcdef'.split('')\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:487\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            add32\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add32(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:658\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            cmn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cmn(q, a, b, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:567\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    q\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ff\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ff(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:572\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            gg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gg(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:576\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hex(x)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:643\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hh(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:580\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ii\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ii(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:584\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:648\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md51\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md51(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:588\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5blk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5blk(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:623\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5cycle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5cycle(x, k)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:489\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            rhex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rhex(n)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:634\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2rstr_utf8\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2rstr_utf8(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:667\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: any) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n\n    /**\n     * Get Record count based on a supplied query+filter\n     * \n     *  @param tableName the table to get the resulting record count\n     *  @param query the FourDQuery object that defines the query to be used for determining\n     *  @param filter optional, FourDQuery to further filter records\n     *\n     * @returns returns a Promise for the database operation, whose result is the # of records selected\n     */\n    public getRecordCount(tableName:string, query: FourDQuery, filter: string = null): Promise {\n        let body: any = { TableName: tableName, QueryString: JSON.stringify(query)};\n        if (filter) { body.FilterOptions = filter; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.call4DRESTMethod('REST_CountRecords', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON && resultJSON.valid) {\n                        resolve(resultJSON.selected);\n                    } else reject(resultJSON.message)\n\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Modal.html":{"url":"injectables/Modal.html","title":"injectable - Modal","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Modal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/providers/Modal.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostViewRef\n                            \n                            \n                                    Static\n                                openDialogList\n                            \n                            \n                                    Public\n                                theDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openInside\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ViewContainerRef, defaultConfig: ModalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultConfig\n                                                  \n                                                        \n                                                                        ModalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog(event, theDialogInstance: ModalDialogInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    theDialogInstance\n                                    \n                                                ModalDialogInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(componentType: any, parameters?: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:43\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDialog(component: any, parameters: any, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:143\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openInside\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openInside(componentType: Type, viewRef: ViewContainerRef, parameters: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:63\n                \n            \n\n\n            \n                \n                    Opens a modal window inside an existing component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    viewRef\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to block using the modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hostViewRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            openDialogList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Type,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    Injectable,\n    Optional\n} from '@angular/core';\n\n\nimport { ModalConfig } from '../models/ModalConfig';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n\nlet _config: ModalConfig;\n\n// @dynamic\n@Injectable()\nexport class Modal {\n\n    public static hostViewRef: ViewContainerRef;\n    public static openDialogList = [];\n\n    public theDialog: any;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ViewContainerRef,\n        @Optional() defaultConfig: ModalConfig) {\n        // The Modal class should be an application wide service (i.e: singleton).\n        // This will run once in most applications...\n        // If the user provides a ModalConfig instance to the DI,\n        // the custom config will be the default one.\n        _config = (defaultConfig) ? ModalConfig.makeValid(defaultConfig) : new ModalConfig();\n    }\n\n    /**\n     * Opens a modal window blocking the whole screen.\n     * @param componentType The angular Component to render as modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public open(componentType: any, parameters?: any,\n        config?: ModalConfig, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n        // TODO: appRef.injector.get(APP_COMPONENT) Doesn't work.\n        // When it does replace with the hack below.\n        // let viewRef = this.appRef.element.nativeElement.location;\n        // let viewRef: viewRef = this.appRef['_rootComponents'][0].location;\n\n        return this.openInside(componentType, (Modal.hostViewRef) ? Modal.hostViewRef : this.appRef, parameters, config, allowMultiple, dialogID);\n    }\n\n    /**\n     * Opens a modal window inside an existing component.\n     * @param componentType The angular Component to render as modal.\n     * @param viewRef The element to block using the modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public openInside(componentType: Type, viewRef: ViewContainerRef,\n        parameters: any,\n        config?: ModalConfig,\n        allowMultiple: boolean = false,\n        dialogID: string = ''): Promise {\n\n        if (!allowMultiple) {\n            for (let index = 0; index  { this.closeDialog(event, dialogInstance); }\n        }).data('kendoWindow');\n        if (config.selfCentered) {\n            this.theDialog.center().open();\n        } else { this.theDialog.open(); }\n\n        dialogInstance.contentRef = dialogComponentRef;\n        dialogInstance.kendoDialog = this.theDialog;\n\n        // trick to avoid angular2 error \"Expression has changed after it was checked\"\n        dialogComponentRef.changeDetectorRef.detectChanges(); // need this to avoid NG2 error/warning\n\n        // if multiples not allowed, save this instance\n        if (!allowMultiple) {\n            const id = (dialogID && dialogID !== '') ? dialogID : componentType['name'];\n            Modal.openDialogList.push({ component: id, dialog: dialogInstance });\n        }\n\n        return dialogInstance.result;\n\n    }\n\n    public closeDialog(event, theDialogInstance:ModalDialogInstance) {\n        // console.log(event, theDialog);\n        for (let index = 0; index \n     */\n    public openDialog(component: any, parameters: any, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n\n        return this.open(component, parameters, component.dialogConfig, allowMultiple, dialogID);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalConfig.html":{"url":"injectables/ModalConfig.html","title":"injectable - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalConfig.ts\n        \n\n            \n                Description\n            \n            \n                A configuration definition object.\nInstruction for how to show a modal.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                customStyle\n                            \n                            \n                                height\n                            \n                            \n                                isBlocking\n                            \n                            \n                                isDraggable\n                            \n                            \n                                isModal\n                            \n                            \n                                isResizable\n                            \n                            \n                                keyboard\n                            \n                            \n                                minHeight\n                            \n                            \n                                minWidth\n                            \n                            \n                                position\n                            \n                            \n                                selfCentered\n                            \n                            \n                                size\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                makeValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalConfig.ts:86\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeValid(config: ModalConfig, defaultConfig?: ModalConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalConfig.ts:67\n                \n            \n\n\n            \n                \n                    Makes a ModalConfig instance valid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    defaultConfig\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A Default config to use as master, optional.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModalConfig\n\n                    \n                    \n                        ModalConfig The same config instance sent.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Close']\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:24\n                            \n                        \n\n                \n                    \n                        Width of the modal.\nused only if size is 'custom'.\nNOTE: No validation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:31\n                            \n                        \n\n                \n                    \n                        Describes if the modal is blocking modal.\nA Blocking modal is not closable by clicking outside of the modal window.\nDefaults to false.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDraggable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResizable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:39\n                            \n                        \n\n                \n                    \n                        Keyboard value/s that close the modal.\nAccepts either a single numeric value or an array of numeric values.\nA modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\nDefaults to 27, set null implicitly to disable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 100, left: 100 }\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selfCentered\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:17\n                            \n                        \n\n                \n                    \n                        Size of the modal.\n'lg', 'sm' or 'custom'.\nNOTE: No validation.\nDefault to 'lg'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nlet _defaultConfig: ModalConfig;\n\n\n/**\n * A configuration definition object.\n * Instruction for how to show a modal.\n */\n@Injectable()\nexport class ModalConfig {\n    /**\n     * Size of the modal.\n     * 'lg', 'sm' or 'custom'.\n     * NOTE: No validation.\n     * Default to 'lg'\n     */\n    size: string;\n\n    /**\n     * Width of the modal.\n     * used only if size is 'custom'.\n     * NOTE: No validation.\n     */\n    customStyle: string;\n\n    /**\n     * Describes if the modal is blocking modal.\n     * A Blocking modal is not closable by clicking outside of the modal window.\n     * Defaults to false.\n     */\n    isBlocking: boolean;\n\n    /**\n     * Keyboard value/s that close the modal.\n     * Accepts either a single numeric value or an array of numeric values.\n     * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n     * Defaults to 27, set `null` implicitly to disable.\n     */\n    keyboard: Array | number;\n\n    width: number = null;\n    minWidth = 50;\n\n    height: number = null;\n    minHeight = 50;\n\n    position = { top: 100, left: 100 };\n\n    selfCentered = true;\n\n    isModal = true;\n\n    isDraggable = true;\n\n    isResizable = true;\n\n    title = '';\n\n    actions: Array = ['Close'];\n\n    /**\n      * Makes a ModalConfig instance valid.\n      * @param config\n      * @param defaultConfig A Default config to use as master, optional.\n      * @returns ModalConfig The same config instance sent.\n      */\n    static makeValid(config: ModalConfig, defaultConfig?: ModalConfig) {\n        defaultConfig = (defaultConfig) ? defaultConfig : _defaultConfig;\n\n        if (!config.size) { config.size = defaultConfig.size; }\n\n        if (config.isBlocking !== false) { config.isBlocking = true; }\n\n        if (config.keyboard !== null) {\n            if (Array.isArray(>config.keyboard)) {\n                config.keyboard = (>config.keyboard).length === 0\n                    ? defaultConfig.keyboard : config.keyboard;\n            } else if (!isNaN(config.keyboard)) {\n                config.keyboard = [config.keyboard];\n            } else {\n                config.keyboard = defaultConfig.keyboard;\n            }\n        }\n\n        return config;\n    }\n\n    constructor() {\n        this.size = 'ls';\n        this.isBlocking = true;\n        this.keyboard = [27];\n    }\n\n\n}\n\n_defaultConfig = new ModalConfig();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalDialogInstance.html":{"url":"injectables/ModalDialogInstance.html","title":"injectable - ModalDialogInstance","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalDialogInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n            \n                Description\n            \n            \n                API to an open modal window.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _backdropRef\n                            \n                            \n                                    Private\n                                _bootstrapRef\n                            \n                            \n                                    Private\n                                _resultDefered\n                            \n                            \n                                contentRef\n                            \n                            \n                                    Public\n                                inElement\n                            \n                            \n                                kendoDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismiss\n                            \n                            \n                                    Private\n                                dispose\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    backdropRef\n                                \n                                \n                                    bootstrapRef\n                                \n                                \n                                    result\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(result: any)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:64\n                \n            \n\n\n            \n                \n                    Close the modal with a return value, i.e: result.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:82\n                \n            \n\n\n            \n                \n                    Close the modal without a return value, i.e: cancelled.\nThis call is automatically invoked when a user either:\n\nPresses an exit keyboard key (if configured).\nClicks outside of the modal window (if configured).\nUsually, dismiss represent a Cancel button or a X button.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:56\n                \n            \n\n\n            \n                \n                    set the dialog title\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _backdropRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bootstrapRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resultDefered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:28\n                            \n                        \n\n                \n                    \n                        States if the modal is inside a specific element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kendoDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        backdropRef\n                    \n                \n\n\n                \n                    \n                        setbackdropRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bootstrapRef\n                    \n                \n\n\n                \n                    \n                        setbootstrapRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n\n                \n                    \n                        getresult()\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:49\n                                \n                            \n                    \n                        \n                                A Promise that is resolved on a close event and rejected on a dismiss event.\n\n\n                                \n                                \n                                \n                                    Returns :     Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Modal\n                        \n                        \n                            ModalDialogInstance\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\n\nimport { ModalDialogInstance } from './angular2-modal/models/ModalDialogInstance';\nimport { Modal } from './angular2-modal/providers/Modal';\nimport { OKOnlyModal } from './angular2-modal/commonModals/okOnlyModal';\nimport { YesNoModal } from './angular2-modal/commonModals/yesNoModal';\nimport { ICustomModal } from './angular2-modal/models/ICustomModal';\n\n@NgModule({\n      declarations: [\n            OKOnlyModal, YesNoModal\n      ],\n      exports: [\n            OKOnlyModal, YesNoModal\n      ],\n      entryComponents: [OKOnlyModal, YesNoModal],\n      providers: [Modal, ModalDialogInstance, ICustomModal]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OKOnlyContent.html":{"url":"classes/OKOnlyContent.html","title":"class - OKOnlyContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OKOnlyContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/okOnlyModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                okText\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, okText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        okText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            okText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OKOnlyModal.html":{"url":"components/OKOnlyModal.html","title":"component - OKOnlyModal","body":"\n                   \n\n\n\n\n\n  Components\n  OKOnlyModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/okOnlyModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OKOnlyContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.okText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'OKOnlyModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryBand.html":{"url":"components/QueryBand.html","title":"component - QueryBand","body":"\n                   \n\n\n\n\n\n  Components\n  QueryBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/queryBand.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                query-band\n            \n\n\n            \n                styles\n                \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n            \n\n            \n                template\n                \n    \n        \n        \n        \n        \n            \n                Select Highlighted\n                \n                Reuse a Saved Search\n                Restore a Saved Record Set\n                Combine Searches -->\n                \n                Save Current Search\n                Save Record Set\n                \n                Manage Saved Searches\n                Manage Saved Sets\n            \n        \n         -->\n        \n        \n    \n\n    \n        \n        Add\n        Edit\n        Delete\n    \n\n\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dropDownIsOpen\n                            \n                            \n                                    Public\n                                openStateIcon\n                            \n                            \n                                    Public\n                                queryBandIsOpen\n                            \n                            \n                                theQueryBand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doAddRecord\n                            \n                            \n                                    Public\n                                doClear\n                            \n                            \n                                    Public\n                                doDeleteRecord\n                            \n                            \n                                    Public\n                                doEditRecord\n                            \n                            \n                                    Public\n                                doExportGrid\n                            \n                            \n                                    Public\n                                doManageSets\n                            \n                            \n                                    Public\n                                doQBE\n                            \n                            \n                                    Public\n                                doQFF\n                            \n                            \n                                    Public\n                                doRefresh\n                            \n                            \n                                    Public\n                                doSort\n                            \n                            \n                                    Public\n                                doWehaveAQuery\n                            \n                            \n                                    Public\n                                enableButton\n                            \n                            \n                                    Public\n                                switchState\n                            \n                            \n                                    Public\n                                toggleDropDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cascadeDeleteRecord\n                            \n                            \n                                enableAddRecord\n                            \n                            \n                                enableButtonBar\n                            \n                            \n                                enableCombiSearch\n                            \n                            \n                                enableDeleteRecord\n                            \n                            \n                                enableEditRecord\n                            \n                            \n                                enableExportGrid\n                            \n                            \n                                enableQBE\n                            \n                            \n                                enableQFF\n                            \n                            \n                                enableSETS\n                            \n                            \n                                enableSort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryAddRecord\n                            \n                            \n                                queryDeleteRecord\n                            \n                            \n                                queryEditRecord\n                            \n                            \n                                queryExportGrid\n                            \n                            \n                                queryFromFile\n                            \n                            \n                                queryFromQBE\n                            \n                            \n                                queryManageSets\n                            \n                            \n                                queryRefresh\n                            \n                            \n                                querySortGrid\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cascadeDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:149\n                            \n                        \n                \n                    \n                        Cascade Delete record if Delete is enabled, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:134\n                            \n                        \n                \n                    \n                        Enable Add record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableButtonBar\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:129\n                            \n                        \n                \n                    \n                        Enable Record Edit Button bar, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableCombiSearch\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:114\n                            \n                        \n                \n                    \n                        enable Combine Searches buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:144\n                            \n                        \n                \n                    \n                        Enable Delete record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditRecord\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:139\n                            \n                        \n                \n                    \n                        Enable Edit record button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableExportGrid\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:124\n                            \n                        \n                \n                    \n                        enable Export To Excel button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQBE\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:99\n                            \n                        \n                \n                    \n                        enable QBE button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQFF\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:104\n                            \n                        \n                \n                    \n                        enable QFF (query from file) button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSETS\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:109\n                            \n                        \n                \n                    \n                        enable Save/Load Searches/Set buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSort\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:119\n                            \n                        \n                \n                    \n                        enable Multicolumn Sort button, default is false\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        queryAddRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryDeleteRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:167\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryEditRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryExportGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromFile\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:155\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromQBE\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryManageSets\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:160\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryRefresh\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:156\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        querySortGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:157\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doAddRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doAddRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doClear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doClear()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doDeleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doDeleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doEditRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doEditRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doExportGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doExportGrid()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQBE\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQBE()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQFF\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQFF()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doRefresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doRefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doSort()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doWehaveAQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doWehaveAQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableButton(btn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    btn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            switchState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    switchState()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleDropDown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDown()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropDownIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:176\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openStateIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'glyphicon-triangle-right'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryBandIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theQueryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBandDirective, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n    \n            \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Select Highlighted                                Reuse a Saved Search                Restore a Saved Record Set                Combine Searches -->                                Save Current Search                Save Record Set                                Manage Saved Searches                Manage Saved Sets                             -->                                        Add        Edit        Delete        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryBand'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBandDirective.html":{"url":"directives/QueryBandDirective.html","title":"directive - QueryBandDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBandDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        queryband\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                theCustomQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theCustomQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('customQueryBand', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:10\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickFindInput.html":{"url":"components/QuickFindInput.html","title":"component - QuickFindInput","body":"\n                   \n\n\n\n\n\n  Components\n  QuickFindInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/quickFindInput.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                quickfind-input\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                quickFind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                runQuickFinder\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        quickFind\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        runQuickFinder\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n\n\n\n@Component({\n    selector: 'quickfind-input',\n    template: ``\n})\n\nexport class QuickFindInput {\n\n    @Input() public quickFind = new FormControl();\n\n    @Output() public runQuickFinder: EventEmitter = new EventEmitter();\n\n    constructor() {\n        this.quickFind.valueChanges.pipe(distinctUntilChanged(),debounceTime(1500)).subscribe(query => {\n            this.runQuickFinder.emit(query);\n        });\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QuickFindInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordEditWindow.html":{"url":"components/RecordEditWindow.html","title":"component - RecordEditWindow","body":"\n                   \n\n\n\n\n\n  Components\n  RecordEditWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordEditWindow.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-edit-window\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                saveRecord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentRecord\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentRecord\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveRecord\n                        \n                        \n                    \n                \n            \n            \n                \nsaveRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordEditWindow.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordEditWindow.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FourDModel } from '../js44D/JSFourDModel';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\n\n@Component({\n    selector: 'record-edit-window',\n    template: ''\n})\n\nexport class RecordEditWindow implements ICustomModalComponent {\n\n    @Input() public currentRecord: any; // the Record Edit Window FourDModel\n\n\n    public dialog: ModalDialogInstance;\n\n\n    public set modelContentData(v: ICustomModal) {\n        this.currentRecord = v;\n    }\n\n    saveRecord() {\n        if (this.currentRecord.isRecordLoaded()) {\n            this.currentRecord.updateRecord()\n                .then(() => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        } else {\n            this.currentRecord.insertRecord()\n                .then((recnum) => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        };\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordEditWindow'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordList.html":{"url":"components/RecordList.html","title":"component - RecordList","body":"\n                   \n\n\n\n\n\n  Components\n  RecordList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordList.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                HttpClient\n                                FourDInterface\n                                ListSelectorDialog\n                                Modal\n                \n            \n\n\n            \n                selector\n                record-list\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editWindowConfig\n                            \n                            \n                                    Private\n                                _previousAdvancedQuery\n                            \n                            \n                                    Private\n                                _previousQuery\n                            \n                            \n                                queryBand\n                            \n                            \n                                theGrid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearQuery\n                            \n                            \n                                    Public\n                                deleteRecord\n                            \n                            \n                                    Private\n                                doManageSets\n                            \n                            \n                                    Private\n                                editWindowHandler\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                refreshGrid\n                            \n                            \n                                    Private\n                                restoreSet\n                            \n                            \n                                    Private\n                                showAdvancedQuery\n                            \n                            \n                                    Public\n                                showEditWindow\n                            \n                            \n                                    Public\n                                windowResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dialogInstance\n                            \n                            \n                                editWindow\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedRecords\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ElementRef, viewRef: ViewContainerRef, selectList: ListSelectorDialog)\n                    \n                \n                        \n                            \n                                Defined in src/containers/recordList.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectList\n                                                  \n                                                        \n                                                                        ListSelectorDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dialogInstance\n                    \n                \n                \n                    \n                        Type :         ModalDialogInstance\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:25\n                            \n                        \n                \n                    \n                        this is the associated record list dialog, if set we use it to handle window resize\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editWindow\n                    \n                \n                \n                    \n                        Type :         ICustomModalComponent\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:30\n                            \n                        \n                \n                    \n                        this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n\n                    \n                \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:134\n                \n            \n\n\n            \n                \n                    Handle browser window resize and resize grid\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:115\n                \n            \n\n\n            \n                \n                    Clear all previous queries\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:179\n                \n            \n\n\n            \n                \n                    Delete Selected Record(s)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:216\n                \n            \n\n\n            \n                \n                    Handle Manage Sets dropdown menu and act upon user selected action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editWindowHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editWindowHandler(result: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:192\n                \n            \n\n\n            \n                \n                    private method to deal with edit window close\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:71\n                \n            \n\n\n            \n                \n                    AFter our view gets initialized, subscribe to various events on the Query band and the Grid\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshGrid(query?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:125\n                \n            \n\n\n            \n                \n                    Refresh teh Grid, run query on 4D side and get records to display\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : the query string to send to 4D to select records to display on the grid\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            restoreSet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSet(records: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:346\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    records\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showAdvancedQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAdvancedQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:199\n                \n            \n\n\n            \n                \n                    deal with advanced Query dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showEditWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showEditWindow(mode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:149\n                \n            \n\n\n            \n                \n                    Show record edit window, to either edit or add a new record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            windowResized\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    windowResized(event)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:142\n                \n            \n\n\n            \n                \n                    Intercept Dialog Window resize event and resize the Grid to fit the entire window\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editWindowConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:57\n                            \n                        \n\n                \n                    \n                        Save Edit Window Configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousAdvancedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryBand\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBand, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:35\n                            \n                        \n\n                \n                    \n                        get the associated Query band and Datagrid object instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theGrid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataGrid\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(DataGrid, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedRecords\n                    \n                \n\n                \n                    \n                        getselectedRecords()\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordList.ts:41\n                                \n                            \n                    \n                        \n                                return the currently selected records from the grid\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, AfterContentInit, Input, HostListener } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\nimport { QueryBand } from './queryBand';\nimport { AdvancedQueryComponent } from './advancedQuery';\nimport { DataGrid } from '../dataGrid/dataGrid';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { ListSelectorDialog } from '../dialogs/listSelectorDialog';\n\n@Component({\n    selector: 'record-list',\n    template: '',\n    providers: [HttpClient, FourDInterface, ListSelectorDialog, Modal]\n})\n\nexport class RecordList implements AfterContentInit {\n\n    /**\n     * this is the associated record list dialog, if set we use it to handle window resize\n     */\n    @Input() public dialogInstance: ModalDialogInstance = null;\n\n    /**\n     * this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n     */\n    @Input() public editWindow: ICustomModalComponent = null;\n\n    /**\n     * get the associated Query band and Datagrid object instances\n     */\n    @ContentChild(QueryBand, {static: false}) queryBand: QueryBand;\n    @ContentChild(DataGrid, {static: false}) theGrid: DataGrid;\n\n    /**\n     * return the currently selected records from the grid\n     */\n    public get selectedRecords():Array {\n        let selection = [];\n        if (this.theGrid && this.theGrid.getDataProvider()) {\n            const gridRows = this.theGrid.getDataProvider().models;\n            const selectedRows = this.theGrid.selectedRows();\n            for (let index = 0; index  { this.refreshGrid(query); });\n            // if user hits Advanced Query button, call advanced query method\n            if (this.queryBand.enableQBE) {\n                this.queryBand.queryFromQBE.subscribe((query: Object) => { this.showAdvancedQuery(); });\n            }\n            // if user hits Set Management button, call corresponding method method\n            if (this.queryBand.enableSETS) {\n                this.queryBand.queryManageSets.subscribe((action: string) => { this.doManageSets(action); });\n            }\n            // if user hits Export to Excel, call grid's excel export method\n            this.queryBand.queryExportGrid.subscribe(() => { if (this.theGrid) { this.theGrid.exportGridToExcel(); } });\n\n            if (this.editWindow) {\n                this.queryBand.queryAddRecord.subscribe(() => { this.showEditWindow('add'); });\n                this.queryBand.queryEditRecord.subscribe(() => { this.showEditWindow('edit'); });\n            }\n\n            this.queryBand.queryDeleteRecord.subscribe(() => { this.deleteRecord(); });\n\n        }\n\n        // if we have a grid and an associated edit record form, subscribe to the record select event\n        if (this.theGrid && this.editWindow) {\n            this.theGrid.recordSelected.subscribe((record: any) => { this.showEditWindow('edit'); });\n        }\n\n        if (this.editWindow && this.editWindow['dialogConfig']) {\n            this._editWindowConfig = this.editWindow['dialogConfig'];\n        }\n\n        if (this.dialogInstance) {\n            //            console.log(this.dialogInstance)\n            const dialog: any = $(this.dialogInstance.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.resizing._draggable.userEvents.bind('release', (event) => { this.windowResized(event) });\n        }\n    }\n\n    /**\n     * Clear all previous queries\n     */\n    public clearQuery() {\n        this._previousAdvancedQuery = null;\n        this._previousQuery = null;\n    }\n\n\n    /**\n     * Refresh teh Grid, run query on 4D side and get records to display\n     * @param query: the query string to send to 4D to select records to display on the grid\n     */\n    public refreshGrid(query?: Object) {\n        if (!query) { query = this._previousQuery; } // if no query given, try previous\n        if (query && this.theGrid) { this.theGrid.loadData(query); }\n        this._previousQuery = query; // save last queryDeleteRecord\n    }\n\n    /**\n     * Handle browser window resize and resize grid\n     */\n    @HostListener('window:resize') onResize() {\n        this.windowResized(null);\n    }\n\n    /**\n     * Intercept Dialog Window resize event and resize the Grid to fit the entire window\n     * @param event \n     */\n    public windowResized(event) {\n        this.theGrid.resize(); // refresh datagrid to adjust it to the window size\n    }\n\n    /**\n     * Show record edit window, to either edit or add a new record\n     */\n    public showEditWindow(mode: string) {\n        // if editing a record, and we do have a record selected and an edit dialog does exist\n        if (this.theGrid && this.editWindow && mode === 'edit' && this.theGrid.currentRecord) {\n            if (this.theGrid.optimizeGridLoading) { // if we are optimizing the grid, then we need to refresh selected record\n                kendo.ui.progress($(this.elementRef.nativeElement), true); // show loading progress icon\n                this.theGrid.currentRecord.refresh().then(() => { // refresh current record\n                    kendo.ui.progress($(this.elementRef.nativeElement), false); // clear loading progress icon\n                    this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                        .then(result => { this.editWindowHandler(result); }); // open edit dialog\n                });\n            } else {\n                // if not optimizing the grid loading, then we have a complete record loaded already\n                this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                    .then(result => { this.editWindowHandler(result); }); // open edit dialog\n            }\n        }\n\n        if (this.theGrid && this.editWindow && mode === 'add') {\n            // if we are adding a new record\n            const modelDef = (this.theGrid.model);\n            const newModel = (new modelDef());\n            // show edit dialog to insert new record\n            this.modal.openInside(this.editWindow, this.viewRef, newModel, this._editWindowConfig, true)\n                .then(result => { this.editWindowHandler(result); }); // open edit dialog\n        }\n    }\n\n    /** \n     * Delete Selected Record(s)\n     */\n    public deleteRecord() {\n        if (this.theGrid && this.theGrid.currentRecord) {\n            if (confirm((this.queryBand.cascadeDeleteRecord) ? 'Really delete selected record and all its associated data records?' : 'Really delete selected record?')) {\n                this.theGrid.currentRecord.deleteRecord(this.queryBand.cascadeDeleteRecord)\n                    .then((message) => { alert('Record Deleted'); this.theGrid.refresh(); })\n                    .catch((reason) => { alert(reason); });\n            }\n        }\n    }\n\n    /**\n     * private method to deal with edit window close\n     */\n    private editWindowHandler(result: string) {\n        if (result === 'recordSaved') { this.theGrid.refresh(); }\n    }\n\n    /**\n     * deal with advanced Query dialog\n     */\n    private showAdvancedQuery() {\n        const advancedQuery = AdvancedQueryComponent;\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        this.modal.openInside(AdvancedQueryComponent, this.viewRef, { previousQuery: this._previousAdvancedQuery, model: (newModel.tableName !== '') ? newModel : (this.theGrid.model).prototype }, advancedQuery['dialogConfig'])\n            .then((result: any) => {\n                if (result.query.length > 0) {\n                    this._previousAdvancedQuery = result.queryFields;\n                    this.refreshGrid({ query: result.query }); // open edit dialog\n                }\n            });\n\n    }\n\n    /**\n     * Handle Manage Sets dropdown menu and act upon user selected action\n     */\n    private doManageSets(action: string) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pk = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        let gridRows = this.theGrid.getDataProvider().models;\n        let savedSearches: Array;\n        let savedSets: Array;\n        let selectedRecords = [];\n        let setList = [];\n        let searchList = [];\n\n        switch (action) {\n            case 'selectHighlited':\n                if (pk && pk !== '') {\n                    const selectedRows = this.theGrid.selectedRows();\n                    selectedRecords = [];\n                    for (let index = 0; index  {\n                    if (searchName !== '') {\n                        savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                        savedSearches.push({ name: searchName, search: this._previousQuery });\n                        localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                    }\n                }, function () {\n                    // cancelled...\n                })\n                break;\n\n            case 'saveSet':\n                if (pk && pk !== '' && gridRows.length > 0) {\n                    kendo.prompt('Please, enter a name for this Record Set:', '').then((setName) => {\n                        if (setName !== '') {\n                            savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n\n                            gridRows = this.theGrid.getDataProvider().models;\n                            selectedRecords = [];\n                            for (let row = 0; row  {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Select Saved Search';\n                    this.selectList.show(searchList)\n                        .then(result => {\n                            const query = savedSearches[result].search;\n                            this.refreshGrid(query);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'restoreSet':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Select Saved Set';\n                    this.selectList.show(setList)\n                        .then(result => {\n                            const set = savedSets[result].set;\n                            this.restoreSet(set);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'combineSearches':\n\n                break;\n\n            case 'manageSearches':\n                savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                searchList = [];\n                savedSearches.forEach(element => {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Delete Saved Search';\n                    this.selectList.show(searchList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSearches.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                        }); // open list selector dialog\n                }\n\n                break;\n\n            case 'manageSets':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Delete Saved Set';\n                    this.selectList.show(setList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSets.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSets', JSON.stringify(savedSets));\n                        }); // open list selector dialog\n                }\n                break;\n        }\n    }\n\n    private restoreSet(records: Array) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pkField = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        if (pkField && pkField !== '' && tableName && tableName !== '') {\n            const queryItems = [];\n            records.forEach(id => {\n                queryItems.push(tableName + '.' + pkField + ';=;' + id + ';OR');\n            });\n            this.refreshGrid({ query: queryItems });\n        }\n\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordList'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab.html":{"url":"components/Tab.html","title":"component - Tab","body":"\n                   \n\n\n\n\n\n  Components\n  Tab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tab\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tabs: Tabs)\n                    \n                \n                        \n                            \n                                Defined in src/containers/tabs.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabs\n                                                  \n                                                        \n                                                                        Tabs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:63\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Injectable, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  @Output() public change: EventEmitter = new EventEmitter();\n\n  tabs: Tab[] = [];\n\n  public selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  public selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n\n    this.change.emit();\n  }\n\n\n  public addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n\n  public get selectedIndex():number {\n    let selected = -1;\n    for (let index = 0; index \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tab'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tabs.html":{"url":"components/Tabs.html","title":"component - Tabs","body":"\n                   \n\n\n\n\n\n  Components\n  Tabs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabs\n            \n\n\n\n            \n                template\n                \n  \n    {{tab.title}}\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTab\n                            \n                            \n                                    Public\n                                selectTab\n                            \n                            \n                                    Public\n                                selectThisTab\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIndex\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTab\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTab(tab: Tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                Tab\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectTab\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectTab(event, tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectThisTab\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectThisTab(tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tab[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/tabs.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIndex\n                    \n                \n\n                \n                    \n                        getselectedIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/containers/tabs.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Injectable, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  @Output() public change: EventEmitter = new EventEmitter();\n\n  tabs: Tab[] = [];\n\n  public selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  public selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n\n    this.change.emit();\n  }\n\n\n  public addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n\n  public get selectedIndex():number {\n    let selected = -1;\n    for (let index = 0; index \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{tab.title}}  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tabs'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utf8.html":{"url":"classes/Utf8.html","title":"class - Utf8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utf8\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/utf8.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                byteArray\n                            \n                            \n                                    Private\n                                    Static\n                                byteCount\n                            \n                            \n                                    Private\n                                    Static\n                                byteIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                checkScalarValue\n                            \n                            \n                                    Private\n                                    Static\n                                createByte\n                            \n                            \n                                    Private\n                                    Static\n                                decodeSymbol\n                            \n                            \n                                    Private\n                                    Static\n                                encodeCodePoint\n                            \n                            \n                                    Private\n                                    Static\n                                readContinuationByte\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2decode\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2encode\n                            \n                            \n                                    Static\n                                utf8decode\n                            \n                            \n                                    Static\n                                utf8encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteArray\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:181\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteCount\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteIndex\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:183\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            checkScalarValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScalarValue(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createByte(codePoint, shift)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shift\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            decodeSymbol\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeSymbol()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            encodeCodePoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeCodePoint(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            readContinuationByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readContinuationByte()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2decode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2encode(array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8decode(byteString)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    byteString\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8encode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utf8 {\n\n\n\t// Taken from https://mths.be/punycode\n\tprivate static ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter = 0xD800 && value  0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += String.fromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tprivate static checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint > shift) & 0x3F) | 0x80);\n\t}\n\n\tprivate static encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn String.fromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 12);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += String.fromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tpublic static utf8encode(string) {\n\t\tvar codePoints = Utf8.ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index = Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tprivate static decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (Utf8.byteIndex > Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (Utf8.byteIndex == Utf8.byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) = 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) = 0x0800) {\n\t\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tbyte4 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) = 0x010000 && codePoint \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebAppContainer.html":{"url":"components/WebAppContainer.html","title":"component - WebAppContainer","body":"\n                   \n\n\n\n\n\n  Components\n  WebAppContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/webAppContainer.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                web-application\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                            \n                                    Private\n                                urlSearchParms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                showLoginDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userIsLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                userHasLoggedIn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ViewContainerRef, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userIsLoggedIn\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        userHasLoggedIn\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nshowLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Modal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlSearchParms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation, ViewContainerRef, EventEmitter, AfterContentInit, Input, Output } from '@angular/core';\n\nimport { LoginCmp } from '../login/login';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'web-application',\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    providers: [Modal]\n})\n\n\nexport class WebAppContainer implements AfterContentInit {\n\n    @Input() public userIsLoggedIn = false;\n\n    @Output() public userHasLoggedIn: EventEmitter = new EventEmitter();\n\n    private urlSearchParms: any = {};\n\n    constructor(public modal: Modal, private elementRef: ViewContainerRef, private fourD: FourDInterface/*, private win:WindowService*/) {\n        const win = window;\n        if (win && win.location && win.location.search) {\n            const url = win.location.search.substr(1); // get incoming url and parse search params\n            url.split('&').forEach(element => {\n                const item = element.split('=');\n                if (item.length === 2) {\n                    this.urlSearchParms[item[0]] = item[1];\n                } else {\n                    this.urlSearchParms[element] = true;\n                }\n            });\n        }\n    }\n\n    showLoginDialog() {\n        this.modal.openInside(LoginCmp, this.elementRef, null, LoginCmp.dialogConfig)\n            .then((result) => {\n                this.userIsLoggedIn = true;\n                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n            });\n\n\n    }\n\n    ngAfterContentInit() {\n        if (!FourDInterface.authentication) {\n            if (this.urlSearchParms.hasOwnProperty('key')) {\n                try {\n                    const key = JSON.parse(atob(this.urlSearchParms['key']));\n                    this.fourD.signIn(key.username, key.password)\n                        .then((authentication) => {\n                            if (FourDInterface.authentication) {\n                                this.userIsLoggedIn = true;\n                                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n                            }\n                        })\n                        .catch(e => { this.showLoginDialog(); });\n                } catch (error) {\n                    this.showLoginDialog();\n                }\n            } else {\n                // no predefined user, login...\n                this.showLoginDialog();\n            }\n        } else {\n            this.userIsLoggedIn = true;\n            this.userHasLoggedIn.emit(FourDInterface.currentUser);\n        }\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'WebAppContainer'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/YesNoModal.html":{"url":"components/YesNoModal.html","title":"component - YesNoModal","body":"\n                   \n\n\n\n\n\n  Components\n  YesNoModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/yesNoModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         YesNoModalContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.yesText}}            {{context.noText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'YesNoModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/YesNoModalContent.html":{"url":"classes/YesNoModalContent.html","title":"class - YesNoModalContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  YesNoModalContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/yesNoModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                hideNo\n                            \n                            \n                                    Public\n                                noText\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                yesText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, hideNo: boolean, yesText: string, noText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hideNo\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideNo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NO'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YES'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            component\n            OKOnlyModal\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            class\n            OKOnlyContent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            component\n            YesNoModal\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            class\n            YesNoModalContent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModal.ts\n            \n            class\n            ICustomModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModalComponent.ts\n            \n            class\n            ICustomModalComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            injectable\n            ModalConfig\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            variable\n            _defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            class\n            Deferred\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            injectable\n            ModalDialogInstance\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            injectable\n            Modal\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            variable\n            _config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/advancedQuery.ts\n            \n            component\n            AdvancedQueryComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            component\n            QueryBand\n            \n                30 %\n                (12/40)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            CustomButtonBarDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            QueryBandDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/containers/recordEditWindow.ts\n            \n            component\n            RecordEditWindow\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/recordList.ts\n            \n            component\n            RecordList\n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tab\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tabs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tab\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tabs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/webAppContainer.ts\n            \n            component\n            WebAppContainer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            component\n            FourDDropDown\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            injectable\n            FourDDropDown\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            component\n            FourDRegistryInput\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            injectable\n            FourDRegistryInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/quickFindInput.ts\n            \n            component\n            QuickFindInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dataGrid/dataGrid.ts\n            \n            component\n            DataGrid\n            \n                56 %\n                (30/53)\n            \n        \n        \n            \n                \n                src/dialogs/listSelectorDialog.ts\n            \n            component\n            ListSelectorDialog\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDCollection.ts\n            \n            injectable\n            FourDCollection\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            FourDQuery\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            MD5\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            injectable\n            FourDInterface\n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            calculateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            convertObjectToURL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            injectable\n            FourDModel\n            \n                87 %\n                (34/39)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            interface\n            IFieldDescription\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/js44D/base64.ts\n            \n            class\n            Base64\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/js44D/utf8.ts\n            \n            class\n            Utf8\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/login/login.ts\n            \n            component\n            LoginCmp\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/pipes/Base64ImageRef.pipe.ts\n            \n            pipe\n            Base64ImageRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/FourDDateToString.pipe.ts\n            \n            pipe\n            FourDDateToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            __karma__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            jquery : >=3.2.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJS44D Library\nPascal's 4D RESTApi companion Angular Typescript library.\n\n\n\n\n\n\nThis library includes a series of Angular services, components and UI widgets, that interface to a 4D Database backend via 4D RESTApi component. The 4D RESTApi Component must be installed in the 4D Database, and Web Serving must be enabled.\nDetailed documentation for each service/component in this library can be found on the wiki here. Following is a quick run down of the library contents.\nThere is a step by step procedure to get started with the 4D RESTApi component and this library at this wiki page. That page will instruct you on how to get going on the 4D and Angular sides.\nInstallation\nInstall js44d library using npm, as:\nnpm install js44d --saveUsage\nThe library can be divided into three sets of components: 4D Service classes, UI widgets and a Modal Dialog Service class. The 4D Service Classes provide the interface to a 4D backend. The UI widgets are not essential, but do provide some useful UI Components that use the Services Classes. The Modal Dialog provides funcionality to open multiple floating Dialog windows, similar to Windows MDI funcionality.\nEach of the three sets are declared in a separate NgModule: FourDModule, JS44DModule and ModalModule.\nYou reference the 4D Interface Service Classes as:\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';They need to be included in your main NgModule declaration, by importing the FourDModule.\nAs for UI components/widgets and the Modal dialog service, you reference/import them as:\nimport { ..widget.. } from 'js44d';You need to import the modules in your NgModule declaration, where you use them, as in:\n...\nimport { FourDModule, JS44DModule, ModalModule } from 'js44d';\n...\n@NgModule({\n  imports: [\n    ...,\n    FourDModule, JS44DModule, ModalModule\n  ]\n  ],\n  exports: [FourDModule, JS44DModule, ModalModule],\nIf you plan on using any of the UI widgets, then you need to grab a copy of the assets folder contents and drop all that in your own assets directory. You need to also add the following line to your styles.scss file:\n@import './assets/main';And you can edit src/assets/main.scss at will, to add you own styles or modify the existing styles that are used by JS44D UI Widgets.\nA quick note, the UI components/widgets are WEB ONLY, they do not work under Nativescript, so for {N} you can only use the 4D Service Classes. For NativeScript your module declaration should look something like this:\n...\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';\n...\n\n@NgModule({\n    ...\n    providers: [\n        ...,\n        FourDInterface, FourDModel, FourDCollection\n    ],\n...4D Interface Service Classes\nThe library provides a set of service classes for accessing a 4D Database backend that has the 4D RESTApi Component installed.\nFourDInterface\nThis is the base service class that implements most of the calls to 4D RESTApi.\nThe two key functions made available by this class are:\n\ncall4DRESTMethod: a wrapper function to enable calling any 4D RESTApi entry point; it automatically adds a Session Key and a hash tokens to each HTTP POST request sent to 4D, which are required by the 4D RESTApi Component; this function is used by all other services and components to send requests to 4D.\nsignin: a function that will send a REST_Authenticate sign in request to 4D and process 4D's response.\ngetRecordCount: a function that will send a REST_CountRecords request to 4D to obtain the count of records that match a given query.\n\nThis class also provides some static variables:\n\ncurrentUser: the name of the currectly signed in user\nauthentication: the authentication response object, returned by the REST_Authenticate call (see)\nsessionKey: the current session token, that must be present in all requests to 4D\netc..\n\nFourDModel\nThis is a service class that provides CRUD functionality, acting as a Data Model base class. It provides the ability to retrieve, create, update or delete records from any 4D table.\nThis class builds upon the Data Model functionality, as described in the Data Model wiki page. \nAll 4D table's Data Models extend the FourDModel class, describing each of the table's fields and providing getter/setter for each field.\nInstances of the FourDModel class, and its extensions, represent a record in the database. This service provides basic CRUD functions to access those records:\n\ngetRecord: retrieves a single record from the database\ninsertRecord: adds a new record to the database\nupdateRecord: updates a record in the database\ndeleteRecord: deletes a record from the database\n\nAdditional functions are described in the FourDModel wiki page.\nFourDCollection\nA service class that represents a collection of 4D records. It is basically an Array of FourDModel derived instances.\nThis class provides a function to retrieve a set of records from a 4D Database:\n\ngetRecords: will take a Query String and send a REST_GetRecords request to 4D to retrieve a collection of 4D records. Record data comes as an Array of Data Model (FourDModel) instances.\nbulkDelete: a function that will send a REST_BulkDelete request to 4D to delete a set of records that match a given query.\nbulkUpdate: a function that will send a REST_BulkUpdate request to 4D to update any record in the collection that has been updated.\n\nUI Widgets\nThe following UI widgets and components, which also interact with a 4D backend, are available for use in Angular apps. Detailed documentation for each widget is found on the wiki pages.\nLogin Component\nA basic Login dialog that takes a user name and password. It calls FourDInterface signin function, that sends a REST_Authenticate request to 4D to authenticate the given user.\n\nDatagrid Component\nThis Component provides Data Grid functionality, to display and interact with a list of records from a 4D Database.\n\nThe component is based on a KendoUI Grid widget, and displays contents of FourDModel instances, from a FourDCollection. \nQuery Band Component\nA query widget that provides functionality for querying a 4D Database, built upon a FourDModel.\n\nIt allows for a user defined query form, advanced query functionality and the ability to save and reuse queries.\nRecord List Component\nThis widget builds upon the QueryBand and DataGrid components. It associates a QueryBand to a DataGrid, so the results of a query are displayed on the associated DataGrid.\n\nAdditionally the widget provides a button bar with functionality to add/edit/delete records. It also allows for user defined custom buttons added to the button bar.\nWeb App Container Component\nThis is a Web App wrapper component, that ensures that the application component runs authenticated. If upon app initialization, it is not yet authenticated to a 4D backend, this component will display a Login dialog to get user credentials and authenticate the user.\n4D List DropDown Control\nThis is an HTML select drop down whose items are obtained directly from a 4D Choice List. One of the parameters to this widget is the choice list name.\nExample:\n  Additional Widgets/Services\nSome additional widgets/services are also part of the library, but those do not interact with 4D backends and do not depend on the 4D RESTApi.\nMDI Dialog Service\nA set of service classes that provide functionality to show multiple floating dialog windows, which can be modal or not.\n\nList Selector Dialog\nA component that presents a dialog with a list of items for user selection.\n\nTab Component\nA simple horizontal tab component, that provides functionality to allow user to tab among multiple forms.\n\nContributors\n\n\n\n\n\n\n\n\nJulio Carneiro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Julio Carneiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FourDModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JS44DModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __karma__   (src/.../test.ts)\n                        \n                        \n                            _config   (src/.../Modal.ts)\n                        \n                        \n                            _defaultConfig   (src/.../ModalConfig.ts)\n                        \n                        \n                            calculateHash   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            convertObjectToURL   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            __karma__\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/providers/Modal.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/models/ModalConfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/js44D/JSFourDInterface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateHash\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (formData: any) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n}\n                        \n                    \n\n                \n                    \n                        Calculates hash code from URL string or POST form data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertObjectToURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n}\n                        \n                    \n\n                \n                    \n                        convert object to encoded url string\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

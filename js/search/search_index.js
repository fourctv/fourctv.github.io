var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdvancedQueryComponent.html",[0,0.195,1,0.859]],["body/components/AdvancedQueryComponent.html",[0,0.23,1,1.14,2,0.823,3,0.12,4,0.12,5,3.004,6,0.529,7,0.681,8,0.086,9,1.783,10,0.996,11,1.48,12,3.005,13,0.529,14,1.347,15,1.495,16,1.391,17,0.026,18,2.464,19,5.205,20,6.861,21,4.02,22,4.02,23,4.02,24,5.205,25,6.479,26,3.501,27,4.02,28,4.02,29,3.883,30,4.02,31,2.464,32,3.19,33,1.836,34,2.715,35,3.891,36,4.02,37,4.02,38,4.02,39,5.205,40,4.02,41,4.894,42,4.894,43,6.684,44,2.046,45,5.205,46,4.413,47,5.205,48,5.205,49,3.891,50,4.02,51,5.205,52,4.02,53,4.02,54,1.069,55,2.704,56,3.501,57,4.315,58,5.205,59,2.092,60,4.02,61,4.02,62,2.704,63,4.02,64,4.02,65,3.005,66,4.02,67,4.02,68,0.533,69,4.02,70,5.205,71,4.02,72,4.02,73,4.02,74,3.408,75,4.02,76,3.408,77,4.02,78,4.02,79,4.02,80,4.02,81,4.02,82,6.106,83,6.684,84,6.684,85,6.106,86,4.02,87,4.02,88,3.891,89,4.02,90,4.02,91,4.02,92,2.704,93,2.704,94,4.02,95,2.704,96,4.02,97,2.464,98,4.02,99,3.408,100,4.02,101,0.823,102,3.274,103,4.02,104,4.167,105,2.554,106,5.003,107,2.046,108,4.254,109,4.413,110,3.408,111,4.02,112,4.02,113,0.51,114,1.486,115,3.274,116,0.765,117,1.379,118,1.302,119,3.005,120,3.274,121,3.274,122,0.59,123,4.537,124,2.776,125,4.537,126,4.537,127,3.005,128,3.274,129,3.274,130,1.287,131,4.02,132,4.02,133,3.274,134,3.274,135,1.473,136,1.844,137,0.464,138,1.573,139,1.222,140,1.215,141,0.601,142,2.104,143,0.765,144,0.748,145,0.581,146,0.655,147,1.147,148,0.875,149,0.867,150,2.104,151,1.287,152,2.104,153,2.263,154,3.274,155,2.78,156,0.61,157,3.005,158,4.02,159,4.02,160,4.02,161,4.02,162,2.104,163,2.104,164,2.104,165,0.875,166,1.456,167,3.274,168,5.773,169,2.104,170,2.104,171,2.104,172,2.104,173,3.274,174,2.104,175,1.287,176,3.274,177,2.104,178,2.104,179,2.104,180,1.809,181,1.844,182,2.202,183,2.202,184,1.486,185,2.202,186,0.772,187,2.202,188,2.202,189,1.205,190,5.205,191,2.375,192,2.104,193,1.844,194,2.104,195,2.104,196,1.573,197,2.104,198,1.016,199,0.387,200,1.095,201,1.289,202,1.147,203,0.195,204,2.192,205,1.184,206,0.827,207,1.415,208,1.289,209,1.415,210,1.016,211,0.12,212,0.045,213,2.104,214,2.104,215,4.02,216,2.104,217,3.274,218,4.02,219,2.104,220,1.906,221,4.02,222,4.02,223,4.916,224,4.916,225,2.104,226,3.274,227,2.104,228,0.435,229,2.104,230,1.783,231,1.289,232,1.295,233,2.776,234,2.104,235,2.104,236,4.537,237,2.104,238,2.104,239,2.448,240,2.104,241,2.104,242,2.104,243,2.104,244,2.104,245,2.104,246,2.104,247,3.274,248,4.02,249,2.104,250,1.095,251,0.496,252,1.783,253,3.274,254,2.104,255,2.104,256,1.783,257,3.274,258,2.104,259,2.104,260,1.184,261,1.289,262,2.104,263,2.104,264,0.529,265,0.935,266,0.877,267,0.496,268,1.295,269,0.681,270,4.916,271,0.681,272,0.529,273,0.681,274,0.529,275,0.681,276,0.529,277,0.6,278,1.061,279,0.529,280,0.681,281,0.529,282,0.64,283,0.681,284,0.496,285,0.472,286,0.681,287,0.676,288,0.681,289,0.529,290,0.681,291,0.529,292,0.676,293,0.564,294,0.681,295,0.496,296,0.681,297,0.496,298,0.681,299,0.529,300,0.681,301,0.529,302,0.564,303,0.681,304,0.496,305,0.529,306,0.564,307,0.464,308,0.681,309,0.464,310,0.681,311,0.007,312,0.011,313,0.007]],["title/classes/Base64.html",[212,0.074,314,1.652]],["body/classes/Base64.html",[3,0.214,4,0.214,8,0.227,17,0.026,33,1.591,44,2.19,49,2.795,59,3.089,65,4.438,68,0.383,113,0.773,114,1.901,116,0.773,118,2.246,122,0.894,141,0.589,143,0.773,144,0.608,145,0.347,146,0.661,148,0.924,149,0.856,156,0.728,165,0.773,202,1.813,211,0.214,212,0.081,220,2.341,228,0.772,251,1.17,265,1.417,268,1.979,311,0.013,312,0.017,313,0.013,314,2.692,315,1.47,316,3.17,317,3.215,318,5.573,319,5.573,320,2.9,321,5.573,322,5.573,323,2.494,324,5.384,325,4.166,326,4.964,327,2.78,328,4.964,329,4.209,330,4.209,331,4.964,332,4.964,333,5.573,334,4.964,335,4.209,336,4.964,337,3.739,338,4.209,339,3.739,340,4.964,341,3.042,342,3.739,343,4.964,344,3.739,345,4.964,346,3.739,347,4.964,348,3.739,349,3.739,350,3.739,351,4.964,352,4.964,353,4.964,354,4.964,355,4.964,356,4.209,357,4.964,358,4.964,359,4.964,360,3.739,361,3.739,362,3.739,363,2.292,364,3.739,365,3.739,366,3.739,367,4.964,368,3.739,369,4.156,370,5.937,371,3.748,372,3.739,373,3.739,374,4.964,375,4.964,376,3.739,377,3.739,378,3.739,379,4.964,380,3.739,381,3.739,382,3.739,383,3.339,384,4.964,385,3.739,386,4.964,387,2.507,388,3.042,389,4.964,390,3.739,391,2.105,392,3.739,393,1.682,394,3.739,395,3.739,396,2.795,397,3.17,398,3.739,399,3.739,400,3.17,401,3.739,402,3.739,403,3.339,404,3.739,405,3.739,406,2.515,407,2.795,408,2.515,409,2.795,410,3.17,411,3.739,412,3.739,413,2.515,414,4.156,415,5.573,416,2.515,417,3.739,418,2.795,419,5.573]],["title/pipes/Base64ImageRef.html",[420,2.095,421,2.095]],["body/pipes/Base64ImageRef.html",[3,0.288,4,0.288,8,0.206,10,1.534,13,1.268,17,0.025,122,0.908,141,0.468,143,0.933,144,0.735,145,0.593,146,0.798,148,0.933,149,0.922,156,0.777,165,0.785,199,0.446,203,0.468,211,0.288,212,0.109,228,1.042,311,0.018,312,0.021,313,0.018,314,2.437,420,3.091,421,4.14,422,3.77,423,4.276,424,4.276,425,5.081,426,6.394,427,5.044,428,6.394,429,6.394,430,5.081,431,5.993,432,5.044,433,3.77,434,3.091,435,6.394,436,3.392,437,3.091,438,4.276,439,3.77,440,4.276,441,5.044,442,2.625,443,5.044]],["title/directives/CustomButtonBarDirective.html",[267,0.806,307,0.755]],["body/directives/CustomButtonBarDirective.html",[0,0.254,3,0.181,4,0.181,5,1.653,6,0.798,8,0.181,13,0.798,14,1.146,16,1.308,17,0.026,26,2.136,29,2.987,31,1.946,32,3.139,33,0.907,34,1.534,55,2.136,56,2.987,59,2.311,62,4.329,95,2.136,97,3.399,101,0.798,116,1.098,118,1.439,148,1.026,156,0.499,184,1.861,186,1.599,191,1.534,199,0.236,200,2.665,202,1.898,203,0.295,211,0.333,212,0.111,228,1.347,232,0.907,250,2.665,251,1.517,267,1.207,287,1.058,292,1.282,293,1.486,306,0.851,307,0.98,309,0.701,311,0.011,312,0.015,313,0.011,323,1.334,387,2.933,393,2.85,436,2.987,442,1.653,444,2.136,445,3.32,446,3.591,447,1.946,448,2.501,449,2.33,450,3.706,451,2.374,452,2.374,453,1.788,454,2.374,455,2.136,456,3.73,457,2.722,458,2.374,459,1.047,460,3.32,461,3.828,462,1.998,463,1.429,464,2.987,465,2.311,466,2.886,467,2.374,468,2.136,469,2.374,470,2.374,471,3.32,472,2.374,473,3.32,474,2.374,475,2.374,476,2.374,477,2.374,478,2.374,479,2.374,480,3.393,481,3.445,482,2.374,483,2.374,484,4.385,485,3.32,486,2.374,487,3.32,488,2.374,489,2.374,490,2.374,491,2.722,492,2.374,493,2.374,494,2.374,495,2.722,496,2.374,497,2.136,498,2.374,499,2.374,500,2.374,501,2.374,502,2.374,503,2.136,504,2.136,505,2.374,506,2.987,507,2.722,508,2.374,509,2.374,510,2.374,511,2.374,512,2.374,513,2.374,514,2.374,515,2.374,516,2.374,517,2.136,518,2.374,519,1.653,520,2.374,521,3.828,522,3.828,523,3.32,524,2.374,525,2.374,526,2.374,527,2.374,528,2.374,529,3.828,530,2.374,531,2.374,532,2.374,533,1.946,534,2.374,535,2.374,536,2.374,537,2.374,538,2.374,539,2.374,540,3.828,541,2.374,542,2.374,543,2.374,544,2.374,545,2.374,546,2.374,547,2.374,548,2.374,549,2.374,550,3.828,551,2.374,552,2.136,553,2.374,554,2.374,555,2.374,556,2.374,557,2.374,558,2.374,559,2.374,560,3.32,561,2.374,562,2.311,563,3.32,564,2.374,565,1.429,566,2.722,567,2.474,568,1.248,569,1.429,570,3.32,571,2.374,572,2.374,573,2.374,574,2.374,575,2.374,576,2.374,577,2.374,578,2.374,579,2.374,580,2.374,581,2.374,582,2.374,583,1.029,584,3.32]],["title/classes/Deferred.html",[212,0.074,585,2.3]],["body/classes/Deferred.html",[3,0.24,4,0.24,8,0.171,17,0.026,68,0.429,113,0.833,114,1.771,116,0.653,117,1.886,137,1.369,140,1.124,141,0.575,145,0.546,149,0.924,156,0.471,165,0.653,166,1.433,175,2.102,184,1.527,189,1.544,199,0.312,203,0.389,211,0.24,212,0.116,228,1.324,232,1.681,251,1.261,266,1.124,285,0.924,311,0.021,312,0.019,313,0.015,315,1.648,323,2.247,403,2.821,459,1.388,480,2.784,565,1.887,583,1.359,585,3.962,586,2.359,587,3.135,588,2.996,589,3.335,590,3.802,591,5.349,592,4.194,593,4.194,594,5.555,595,1.433,596,2.821,597,3.555,598,2.821,599,3.555,600,2.361,601,3.555,602,3.555,603,2.57,604,2.57,605,1.847,606,3.555,607,3.555,608,3.555,609,2.361,610,3.555,611,3.555,612,3.555,613,3.555,614,3.555,615,3.555,616,3.555,617,3.555,618,4.535,619,3.555,620,4.535,621,3.555,622,3.962,623,3.555,624,4.993,625,3.555,626,3.555,627,3.555,628,4.993,629,3.555,630,3.998,631,3.555,632,1.648,633,4.535,634,3.555,635,4.535,636,4.535,637,4.535,638,3.555,639,3.135,640,3.135,641,3.135,642,3.135,643,1.887,644,3.555,645,3.555,646,3.135,647,1.762,648,4.535,649,3.555,650,3.135,651,3.135,652,2.57,653,2.821,654,4.535,655,3.555,656,3.555,657,3.555,658,3.555,659,3.555]],["title/injectables/FourDCollection.html",[595,0.916,660,1.779]],["body/injectables/FourDCollection.html",[3,0.125,4,0.125,8,0.089,16,1.347,17,0.026,33,1.574,54,1.431,68,0.224,107,1.821,108,2.271,113,0.78,114,1.177,116,1.08,122,0.608,135,1.519,137,1.023,139,1.609,141,0.601,143,0.642,144,0.731,145,0.572,146,0.778,147,1.177,148,1.016,149,0.763,151,2.607,155,3.489,156,0.76,165,1.009,186,0.516,193,3.515,199,0.372,203,0.203,211,0.125,212,0.089,220,2.103,228,1.093,232,1.759,251,1.377,260,1.232,261,2.526,292,1.304,295,0.796,311,0.017,312,0.012,313,0.008,314,1.631,317,2.753,320,1.139,327,2.38,363,2.839,369,3.367,449,1.418,459,0.796,463,2.085,466,1.757,495,2.526,568,0.86,588,2.773,589,2.411,590,1.341,595,0.904,600,2.609,632,2.481,660,2.605,661,1.341,662,1.855,663,1.714,664,2.524,665,5.404,666,3.376,667,2.271,668,2.862,669,2.862,670,3.376,671,3.878,672,2.882,673,3.489,674,5.649,675,3.494,676,4.122,677,3.367,678,4.244,679,5.225,680,3.081,681,4.122,682,3.376,683,4.633,684,2.862,685,2.862,686,3.376,687,3.376,688,3.647,689,4.461,690,2.189,691,3.954,692,2.524,693,2.524,694,3.117,695,3.928,696,3.117,697,3.83,698,3.558,699,2.839,700,2.862,701,2.189,702,2.839,703,2.524,704,3.376,705,3.376,706,3.376,707,2.189,708,2.862,709,4.485,710,1.901,711,4.633,712,3.997,713,4.633,714,4.633,715,3.242,716,3.376,717,2.862,718,4.244,719,4.244,720,2.189,721,2.524,722,1.901,723,2.862,724,2.862,725,2.862,726,2.862,727,2.524,728,2.862,729,2.862,730,2.271,731,3.929,732,2.271,733,2.271,734,3.117,735,2.862,736,2.963,737,2.069,738,2.189,739,2.862,740,1.62,741,2.189,742,3.464,743,2.189,744,2.524,745,2.069,746,2.862,747,1.901,748,2.189,749,2.189,750,2.189,751,2.189,752,2.189,753,3.376,754,2.524,755,3.376,756,2.189,757,2.189,758,2.524,759,1.757,760,1.855,761,2.189,762,1.855,763,1.472,764,1.855,765,1.472,766,3.04,767,3.376,768,1.855,769,4.827,770,4.122,771,2.862,772,5.006,773,3.494,774,1.636,775,2.189,776,1.855,777,4.674,778,2.189,779,2.189,780,2.189,781,1.341,782,2.862,783,2.189,784,4.633,785,4.633,786,3.494,787,4.633,788,2.189,789,2.189,790,2.862,791,3.494,792,2.862,793,1.855,794,1.855,795,1.855,796,1.855,797,2.189,798,2.189,799,2.189,800,2.238,801,1.341,802,1.472,803,3.494,804,1.855,805,2.862,806,2.189,807,2.189,808,3.376,809,2.524,810,2.189,811,2.189,812,2.189,813,2.189,814,2.524,815,2.189,816,2.189,817,3.376,818,3.376,819,3.081,820,2.189,821,3.376,822,2.189,823,2.189,824,2.189,825,2.189,826,2.189,827,2.189,828,2.189,829,2.321,830,2.772,831,2.189,832,2.524,833,2.189,834,2.524,835,1.855,836,2.271,837,2.189,838,2.189,839,2.189,840,1.855,841,2.189,842,2.189,843,2.189,844,2.189,845,2.189,846,2.189,847,2.189]],["title/pipes/FourDDateToString.html",[420,2.095,848,2.095]],["body/pipes/FourDDateToString.html",[3,0.29,4,0.29,8,0.207,10,1.542,13,1.275,17,0.025,122,0.913,141,0.47,143,0.79,144,0.737,146,0.676,149,0.976,155,3.108,156,0.76,165,0.79,199,0.377,203,0.47,211,0.29,212,0.11,228,1.324,232,1.448,251,1.195,311,0.018,312,0.021,313,0.018,341,3.108,393,2.282,420,3.108,422,3.791,424,4.3,425,5.098,430,5.098,434,3.108,438,4.3,440,4.3,672,2.45,774,3.791,848,4.062,849,4.3,850,5.072,851,4.458,852,5.072,853,5.072,854,4.3,855,5.072,856,5.072,857,3.411,858,5.072]],["title/components/FourDDropDown.html",[0,0.195,274,0.859]],["body/components/FourDDropDown.html",[0,0.327,1,0.994,2,1.294,3,0.226,4,0.226,5,2.98,6,0.994,7,1.281,8,0.161,10,1.566,12,4.281,13,0.994,14,1.458,15,1.202,16,0.817,17,0.025,32,3.51,34,2.767,54,0.932,59,2.98,68,0.405,74,4.855,76,4.855,97,3.51,99,4.855,101,1.294,105,3.542,114,1.635,116,0.892,122,0.927,124,4.366,127,4.535,130,2.024,137,0.873,138,2.955,139,1.845,141,0.609,143,0.802,144,0.771,145,0.583,146,0.686,147,1.841,148,0.616,149,0.57,151,2.024,156,0.756,165,0.892,166,1.38,181,3.224,191,2.767,199,0.383,202,1.732,203,0.367,210,1.91,211,0.226,212,0.085,228,0.817,231,2.423,264,0.994,265,1.47,266,1.38,267,0.932,268,1.732,269,1.281,271,1.281,272,0.994,273,1.281,274,1.651,275,1.281,276,0.994,277,1.128,278,1.668,279,0.994,280,1.281,281,0.994,282,1.202,283,1.281,284,0.932,285,0.743,286,1.281,287,1.064,288,1.281,289,0.994,290,1.281,291,0.994,292,1.064,293,1.059,294,1.281,295,0.932,296,1.281,297,0.932,298,1.281,299,0.994,300,1.281,301,0.994,302,1.059,303,1.281,304,0.932,305,0.994,306,1.059,307,0.873,308,1.281,309,0.873,310,1.281,311,0.014,312,0.018,313,0.014,442,2.057,595,1.38,598,2.659,632,1.554,829,2.226,859,3.352,860,3.849,861,6.979,862,5.727,863,6.067,864,4.281,865,5.727,866,5.727,867,5.149,868,3.954,869,3.954,870,5.149,871,3.954,872,3.954,873,3.954,874,2.899,875,2.955,876,5.149,877,3.954,878,3.954,879,3.954,880,3.954,881,3.954,882,3.954,883,2.423,884,2.659]],["title/modules/FourDModule.html",[885,1.652,886,1.925]],["body/modules/FourDModule.html",[3,0.291,4,0.291,8,0.208,17,0.025,139,2.088,199,0.504,203,0.472,210,2.458,211,0.291,212,0.11,264,1.279,311,0.018,312,0.021,313,0.018,569,2.29,660,3.573,736,3.573,885,2.458,886,3.977,887,2.648,888,2.865,889,3.423,890,2.458,891,3.101,892,3.692,893,4.314,894,4.314,895,4.052,896,3.119,897,5.089,898,3.119,899,4.052,900,3.692,901,5.441,902,3.119,903,4.314,904,5.089,905,3.804]],["title/classes/FourDQuery.html",[212,0.074,688,1.925]],["body/classes/FourDQuery.html",[3,0.092,4,0.092,6,1.165,8,0.066,14,1.125,16,1.376,17,0.026,18,2.394,33,1.115,44,1.327,54,1.283,68,0.166,92,1.786,93,1.089,105,1.495,107,1.821,113,0.762,114,1.115,116,0.995,118,2.03,139,0.492,141,0.505,144,0.667,145,0.505,146,0.852,148,0.252,149,0.922,151,2.481,153,1.495,156,0.766,157,1.985,165,0.951,175,0.636,186,0.382,198,0.782,199,0.321,203,0.15,211,0.223,212,0.106,220,0.68,228,1.328,231,0.992,232,1.703,239,2.524,251,1.366,260,1.901,261,2.394,277,1.724,292,0.549,302,0.711,305,0.407,311,0.014,312,0.009,313,0.015,314,1.283,315,0.636,317,2.659,320,2.903,323,1.418,327,2.38,341,0.992,363,0.992,371,1.089,383,1.089,387,0.728,388,2.069,391,1.495,393,0.728,407,4.169,408,3.292,409,3.954,413,1.089,414,3.117,416,1.786,434,0.992,437,3.336,439,2.92,446,1.757,448,0.912,449,1.418,459,1.247,462,0.728,463,2.085,465,1.757,507,0.992,562,2.547,565,1.519,567,1.283,568,1.327,569,0.728,588,2.608,589,2.753,590,1.627,595,0.711,596,3.437,600,2.979,603,0.992,609,0.912,632,1.535,643,2.51,647,2.223,653,4.062,663,0.524,671,1.495,672,3.32,673,2.84,680,1.21,688,3.14,689,2.901,692,1.21,693,1.21,694,1.089,696,1.089,697,1.089,698,3.117,699,1.627,702,1.627,703,1.985,710,0.912,712,2.394,715,2.643,722,0.912,730,1.089,731,1.089,732,1.786,733,2.901,734,1.786,737,1.627,740,1.044,742,1.21,744,1.985,745,2.394,747,0.912,759,1.382,763,1.786,765,1.786,766,3.363,781,1.627,800,2.978,801,1.627,802,1.786,809,1.21,814,1.21,819,1.985,829,2.755,830,3.292,832,1.985,834,1.21,836,1.089,851,3.752,857,1.089,864,3.819,874,1.495,883,2.84,900,2.394,902,0.992,906,1.089,907,1.985,908,1.985,909,1.089,910,4.149,911,5.352,912,3.224,913,3.224,914,2.862,915,4.149,916,4.149,917,1.619,918,3.312,919,1.985,920,2.92,921,1.627,922,1.627,923,2.251,924,1.619,925,2.627,926,2.627,927,3.312,928,1.619,929,3.312,930,2.251,931,3.312,932,2.251,933,2.251,934,1.985,935,2.251,936,1.619,937,3.464,938,1.985,939,3.312,940,1.619,941,1.985,942,1.619,943,1.619,944,1.985,945,2.627,946,1.985,947,2.251,948,1.627,949,2.251,950,1.619,951,2.271,952,1.619,953,1.373,954,3.656,955,1.373,956,1.21,957,1.373,958,1.21,959,1.373,960,2.627,961,1.089,962,1.985,963,1.21,964,1.21,965,1.21,966,1.21,967,1.21,968,1.21,969,1.089,970,1.089,971,1.373,972,1.21,973,1.786,974,1.786,975,1.089,976,1.985,977,1.21,978,1.21,979,1.21,980,1.21,981,1.373,982,2.92,983,0.843,984,1.21,985,1.373,986,1.373,987,3.224,988,1.373,989,1.373,990,2.92,991,1.373,992,1.21,993,2.862,994,1.21,995,1.373,996,2.627,997,1.373,998,1.373,999,1.373,1000,1.373,1001,1.089,1002,1.373,1003,1.985,1004,1.373,1005,1.373,1006,1.373,1007,2.251,1008,1.373,1009,1.373,1010,1.373,1011,1.21,1012,1.21,1013,1.373,1014,1.21,1015,1.373,1016,1.21,1017,1.21,1018,1.21,1019,1.089,1020,1.373,1021,1.373,1022,1.373,1023,1.373,1024,1.373,1025,1.21,1026,1.373,1027,2.251,1028,3.656,1029,3.656,1030,3.224,1031,3.656,1032,3.656,1033,1.373,1034,1.373,1035,2.251,1036,1.373,1037,1.373,1038,1.373,1039,1.373,1040,1.373,1041,1.21,1042,3.117,1043,1.089,1044,2.251,1045,2.251,1046,0.992,1047,3.464,1048,1.373,1049,1.373,1050,1.373,1051,3.928,1052,1.21,1053,1.373,1054,2.92,1055,1.21,1056,1.089,1057,2.251,1058,1.373,1059,1.373,1060,1.373,1061,1.373,1062,1.373,1063,1.373,1064,2.251,1065,2.251,1066,1.373,1067,1.373,1068,1.373,1069,1.373,1070,2.251,1071,1.373,1072,2.251,1073,3.312,1074,2.251,1075,2.251,1076,2.251,1077,1.373,1078,2.251,1079,1.373,1080,1.21,1081,2.251,1082,2.251,1083,1.21,1084,1.373,1085,1.373,1086,1.373,1087,1.373,1088,1.373,1089,1.21,1090,3.312,1091,0.992,1092,1.373,1093,1.373,1094,1.373,1095,2.251,1096,1.21,1097,1.089,1098,1.21,1099,2.251,1100,1.373,1101,1.373,1102,1.373,1103,1.373,1104,1.373,1105,1.373,1106,1.373,1107,1.373,1108,1.373,1109,1.373,1110,3.464,1111,2.251,1112,1.373,1113,1.373,1114,1.373,1115,1.373,1116,2.271,1117,2.901,1118,1.373,1119,2.251,1120,1.373,1121,1.373,1122,3.312,1123,1.373,1124,1.373,1125,1.373,1126,2.251,1127,1.373,1128,1.373,1129,2.524,1130,2.271,1131,2.92,1132,1.373,1133,1.373,1134,1.373,1135,1.089,1136,1.373,1137,2.251,1138,1.21,1139,1.373,1140,1.373,1141,1.373,1142,1.373,1143,3.656,1144,4.149,1145,2.862,1146,4.149,1147,1.373,1148,1.373,1149,2.251,1150,1.373,1151,1.373,1152,1.373,1153,1.373,1154,1.21,1155,1.373,1156,1.373,1157,1.373,1158,1.373,1159,1.373,1160,1.373,1161,1.373,1162,1.21,1163,2.862,1164,2.862,1165,4.149,1166,2.862,1167,1.373,1168,1.373,1169,1.373,1170,1.373,1171,1.373,1172,1.373,1173,1.21,1174,1.373,1175,1.373,1176,1.985,1177,2.251,1178,1.373,1179,1.373,1180,1.373,1181,1.373,1182,1.373,1183,4.616,1184,1.373,1185,2.251,1186,1.373,1187,1.373,1188,1.373,1189,1.373,1190,1.373,1191,1.373,1192,1.21,1193,1.373,1194,0.912,1195,1.373,1196,1.373,1197,1.373,1198,1.373,1199,1.373,1200,2.862,1201,3.658,1202,1.373,1203,1.373,1204,1.373,1205,2.251,1206,2.251,1207,2.524,1208,1.373,1209,1.373,1210,1.21,1211,1.21,1212,1.373,1213,1.21]],["title/components/FourDRegistryInput.html",[0,0.195,276,0.859]],["body/components/FourDRegistryInput.html",[0,0.322,1,0.96,2,1.266,3,0.218,4,0.218,6,0.96,7,1.238,8,0.156,10,1.531,12,4.21,13,0.96,14,1.454,15,1.162,16,0.789,17,0.025,54,0.9,68,0.391,101,1.266,113,0.784,114,1.824,116,1.078,122,0.907,127,4.476,130,1.979,137,0.843,138,2.856,139,1.821,141,0.635,143,0.595,144,0.734,145,0.62,146,0.509,147,1.824,148,0.877,149,0.864,156,0.777,165,0.877,166,1.509,186,1.187,198,1.846,199,0.375,202,1.887,203,0.354,210,1.846,211,0.218,212,0.083,264,0.96,265,1.437,266,1.349,267,0.9,268,1.709,269,1.238,271,1.238,272,0.96,273,1.238,274,0.96,275,1.238,276,1.505,277,1.608,278,1.631,279,0.96,280,1.238,281,0.96,282,1.162,283,1.238,284,0.9,285,0.726,286,1.238,287,1.04,288,1.238,289,0.96,290,1.238,291,0.96,292,1.04,293,1.024,294,1.238,295,0.9,296,1.238,297,0.9,298,1.238,299,0.96,300,1.238,301,0.96,302,1.024,303,1.238,304,0.9,305,0.96,306,1.024,307,0.843,308,1.238,309,0.843,310,1.238,311,0.013,312,0.018,313,0.013,442,1.988,583,1.631,595,1.349,598,2.57,632,1.502,829,2.151,874,2.835,875,2.856,884,2.57,1154,4.21,1214,3.239,1215,5.632,1216,5.632,1217,5.632,1218,5.987,1219,5.987,1220,4.775,1221,5.632,1222,5.632,1223,5.632,1224,5.036,1225,3.821,1226,3.821,1227,3.821,1228,3.821,1229,3.821,1230,3.821,1231,3.821,1232,3.821,1233,3.821,1234,3.821,1235,5.036,1236,3.821,1237,3.821,1238,3.821,1239,6.223,1240,3.821,1241,5.632,1242,3.821,1243,5.987,1244,5.036,1245,5.036,1246,3.821,1247,3.821,1248,3.821,1249,3.821,1250,3.821,1251,3.821]],["title/classes/ICustomModal.html",[206,1.344,212,0.074]],["body/classes/ICustomModal.html",[2,1.383,3,0.314,4,0.314,8,0.224,17,0.024,117,1.673,145,0.51,206,2.478,211,0.314,212,0.119,311,0.019,312,0.022,313,0.019,315,2.162,327,2.475,586,2.025,605,1.899,647,2.311,663,1.782,1252,4.663,1253,4.663]],["title/classes/ICustomModalComponent.html",[11,1.259,212,0.074]],["body/classes/ICustomModalComponent.html",[2,1.488,3,0.282,4,0.282,8,0.201,11,2.179,17,0.025,68,0.506,113,0.922,117,2.043,122,1.066,140,1.698,141,0.588,145,0.588,146,0.875,165,0.922,184,1.875,199,0.368,211,0.282,212,0.107,228,1.357,285,0.948,311,0.017,312,0.021,313,0.017,315,1.941,327,2.663,583,2.128,586,2.419,605,2.043,642,4.911,647,2.487,652,4.026,663,1.6,970,4.419,1253,5.018,1254,4.188,1255,6.57,1256,6.57,1257,4.94,1258,4.94,1259,5.018,1260,5.919,1261,4.94,1262,5.919,1263,5.919,1264,2.781]],["title/interfaces/IFieldDescription.html",[983,1.779,1265,2.556]],["body/interfaces/IFieldDescription.html",[3,0.075,4,0.075,8,0.053,16,1.145,17,0.026,18,1.361,33,1.481,49,0.977,54,1.223,68,0.134,92,3.658,104,1.108,106,1.883,107,1.835,108,4.066,109,2.895,110,2.455,113,0.648,114,1.481,116,0.969,122,0.4,137,0.49,139,1.038,141,0.317,144,0.763,145,0.565,146,0.554,147,0.373,148,0.532,149,0.872,151,2.178,153,1.251,155,4.309,156,0.764,165,1,184,1.519,186,0.98,193,3.583,198,0.632,199,0.285,203,0.121,211,0.127,212,0.048,220,1.217,228,1.337,230,2.455,232,1.872,250,1.507,251,1.366,260,0.736,261,2.093,282,0.675,292,1.385,311,0.016,312,0.008,313,0.008,314,1.073,317,1.991,320,3.087,327,1.996,329,1.108,341,0.801,369,2.798,393,2.494,400,1.108,406,0.879,410,1.108,449,0.549,459,1.328,462,0.999,463,2.335,466,1.991,495,1.361,503,2.297,519,1.156,533,1.775,562,2.534,566,0.801,568,1.138,583,2.061,588,2.494,589,2.701,595,0.595,600,2.922,603,0.801,609,0.736,632,2.215,647,2.118,650,0.977,660,2.165,663,1.633,664,1.66,667,0.879,669,1.108,671,2.996,672,3.043,673,3.261,674,3.527,677,3.947,679,2.455,684,1.108,688,2.154,689,2.297,694,0.879,695,1.108,696,0.879,697,1.948,698,3.275,699,2.862,702,2.549,708,1.108,709,4.512,710,2.154,712,3.261,715,1.361,717,1.108,718,2.455,719,2.455,721,1.66,722,1.251,723,1.108,724,1.108,725,1.108,726,1.108,727,0.977,728,1.108,729,1.108,730,1.494,731,2.297,732,0.879,733,2.798,734,2.798,735,1.108,736,2.769,737,1.361,739,1.108,740,2.376,746,1.108,747,0.736,754,0.977,758,1.66,759,1.156,760,1.108,762,1.883,763,0.879,764,1.108,765,0.879,766,3.219,768,1.108,771,2.895,773,2.895,774,1.66,776,3.527,777,2.455,781,2.549,782,1.108,786,4.273,790,2.455,791,2.895,792,1.883,793,1.108,794,1.108,795,1.108,796,1.108,800,2.507,801,2.093,802,2.297,804,2.895,829,2.154,830,2.984,835,1.108,836,3.947,840,1.108,851,3.141,854,1.108,875,2.165,883,2.345,912,2.86,913,2.86,919,0.977,920,0.977,921,2.719,922,0.801,937,2.553,938,2.553,941,3.11,948,0.801,951,2.297,960,0.879,970,1.948,983,0.68,992,0.977,1001,1.948,1012,1.66,1019,3.141,1030,0.977,1042,0.879,1043,2.798,1046,2.345,1096,1.66,1097,1.948,1110,2.86,1116,0.879,1117,1.494,1130,0.879,1162,0.977,1173,0.977,1176,2.86,1220,2.895,1265,3.879,1266,1.307,1267,1.108,1268,4.16,1269,3.415,1270,3.415,1271,3.415,1272,5.438,1273,4.67,1274,4.16,1275,2.221,1276,3.527,1277,1.883,1278,4.16,1279,2.221,1280,3.415,1281,1.494,1282,3.826,1283,3.415,1284,2.221,1285,3.244,1286,2.221,1287,2.896,1288,1.361,1289,1.307,1290,1.307,1291,1.307,1292,1.883,1293,1.108,1294,2.455,1295,1.307,1296,1.307,1297,1.307,1298,3.826,1299,1.307,1300,1.251,1301,1.108,1302,1.307,1303,3.415,1304,2.221,1305,1.307,1306,1.307,1307,1.307,1308,1.307,1309,1.307,1310,1.883,1311,1.307,1312,1.307,1313,3.826,1314,3.415,1315,1.307,1316,2.221,1317,2.221,1318,1.108,1319,1.307,1320,1.307,1321,1.307,1322,1.307,1323,1.307,1324,1.307,1325,1.307,1326,2.221,1327,2.896,1328,2.221,1329,1.307,1330,2.221,1331,2.221,1332,1.307,1333,1.66,1334,4.67,1335,1.307,1336,2.896,1337,4.869,1338,2.221,1339,1.307,1340,2.896,1341,4.869,1342,4.512,1343,1.307,1344,1.307,1345,3.244,1346,3.244,1347,2.896,1348,2.896,1349,1.307,1350,1.307,1351,2.896,1352,4.16,1353,5.322,1354,4.16,1355,1.307,1356,1.307,1357,1.108,1358,1.307,1359,1.307,1360,1.307,1361,2.896,1362,1.307,1363,1.307,1364,1.307,1365,1.307,1366,1.307,1367,1.307,1368,1.307,1369,1.307,1370,1.307,1371,1.307,1372,1.307,1373,1.307,1374,4.16,1375,1.307,1376,1.307,1377,1.307,1378,1.307,1379,2.896,1380,1.307,1381,1.307,1382,1.307,1383,1.307,1384,1.307,1385,2.221,1386,3.415,1387,2.896,1388,4.16,1389,2.896,1390,1.883,1391,1.307,1392,1.307,1393,2.221,1394,1.108,1395,1.307,1396,3.415,1397,1.307,1398,1.307,1399,1.307,1400,1.307,1401,1.307,1402,1.307,1403,1.307,1404,3.415,1405,2.221,1406,2.221,1407,1.108,1408,1.307,1409,1.307,1410,1.307,1411,2.895,1412,1.108,1413,2.221,1414,2.221,1415,1.307,1416,2.221,1417,1.307,1418,1.307,1419,1.307,1420,3.415,1421,2.896,1422,1.307,1423,1.108,1424,1.307,1425,0.977,1426,1.307,1427,1.307,1428,1.108,1429,3.415,1430,2.896,1431,2.221,1432,1.307,1433,2.896,1434,2.896,1435,2.549,1436,2.896,1437,1.307,1438,2.221,1439,1.307,1440,1.307,1441,2.221,1442,2.896,1443,1.307,1444,1.108,1445,1.307,1446,1.307,1447,1.307,1448,1.307,1449,2.221,1450,1.307,1451,1.307,1452,1.307,1453,1.307,1454,1.307,1455,1.307,1456,2.221,1457,2.896,1458,1.307,1459,1.307,1460,2.896,1461,1.307,1462,1.307,1463,1.307,1464,1.307,1465,1.307,1466,1.307,1467,1.307,1468,2.221,1469,1.307,1470,1.307,1471,1.307,1472,1.307,1473,1.307,1474,1.307,1475,1.307,1476,1.307,1477,1.307,1478,4.16,1479,1.108,1480,1.307,1481,1.307,1482,1.307,1483,1.108,1484,1.108,1485,1.307,1486,1.307,1487,1.307,1488,1.307,1489,1.307,1490,0.801,1491,1.307,1492,3.415,1493,1.307,1494,1.307,1495,2.221,1496,1.108,1497,2.221,1498,2.221,1499,1.307,1500,1.307,1501,1.307,1502,1.307,1503,2.221,1504,1.108,1505,1.307,1506,1.307,1507,2.221,1508,1.307,1509,1.307,1510,1.307,1511,2.896,1512,1.307,1513,1.307,1514,1.307,1515,1.307,1516,1.307,1517,1.307,1518,1.307,1519,1.307,1520,1.307,1521,1.307,1522,1.307,1523,1.307,1524,1.307,1525,1.307,1526,1.307]],["title/modules/JS44DModule.html",[885,1.652,1527,2.095]],["body/modules/JS44DModule.html",[1,1.727,3,0.207,4,0.207,8,0.148,17,0.025,139,1.913,199,0.522,203,0.335,210,1.748,211,0.207,212,0.078,264,0.909,272,1.707,274,1.707,276,1.707,279,1.727,281,1.727,287,1.403,289,1.707,291,1.707,295,1.601,297,1.601,299,1.707,301,1.707,307,1.5,309,1.5,311,0.013,312,0.017,313,0.013,421,4.163,569,1.628,848,4.163,885,1.748,886,3.542,887,1.883,888,2.037,889,3.687,890,1.748,891,2.648,892,3.359,895,3.266,896,2.217,898,2.217,899,3.266,900,2.976,901,4.117,902,2.217,905,3.63,1527,4.446,1528,3.067,1529,3.067,1530,3.618,1531,3.067,1532,3.618,1533,3.618,1534,4.117,1535,4.856,1536,4.856,1537,3.067,1538,4.856,1539,3.618,1540,3.618,1541,3.618,1542,3.618,1543,3.618,1544,3.618,1545,3.618,1546,3.618,1547,3.618,1548,3.618,1549,3.067,1550,3.067,1551,3.067,1552,3.618,1553,3.618,1554,3.618]],["title/components/ListSelectorDialog.html",[0,0.195,279,0.859]],["body/components/ListSelectorDialog.html",[0,0.299,1,0.832,2,1.149,3,0.189,4,0.189,6,0.832,7,1.072,8,0.135,10,1.39,11,1.927,13,0.832,14,1.447,15,1.006,16,0.684,17,0.025,34,2.727,54,1.53,68,0.339,101,1.149,105,2.948,113,0.712,114,1.792,116,1.057,117,1.863,118,1.696,119,3.913,122,0.823,130,1.796,135,2.057,136,2.573,137,0.731,140,1.587,141,0.636,143,0.996,144,0.814,145,0.582,146,0.852,147,1.305,148,0.954,149,0.884,156,0.77,165,0.978,166,1.641,175,1.301,180,2.666,181,2.573,182,3.074,183,3.074,184,1.826,185,3.074,187,3.074,188,3.074,189,2.079,191,2.727,196,2.474,198,3.033,199,0.441,200,1.722,201,2.028,202,1.691,203,0.307,204,2.727,205,1.864,208,2.028,209,2.226,211,0.189,212,0.072,220,1.92,228,1.081,264,0.832,265,1.305,266,1.224,267,0.78,268,1.612,269,1.072,271,1.072,272,0.832,273,1.072,274,0.832,275,1.072,276,0.832,277,0.945,278,1.481,279,1.419,280,1.072,281,0.832,282,1.006,283,1.072,284,0.78,285,0.958,286,1.072,287,0.944,288,1.072,289,0.832,290,1.072,291,0.832,292,0.944,293,0.887,294,1.072,295,0.78,296,1.072,297,0.78,298,1.072,299,0.832,300,1.072,301,0.832,302,0.887,303,1.072,304,0.78,305,0.832,306,0.887,307,0.731,308,1.072,309,0.731,310,1.072,311,0.012,312,0.016,313,0.012,324,5.629,338,2.806,447,2.028,453,3.179,459,1.33,588,2.54,891,2.208,1435,2.801,1555,2.806,1556,6.126,1557,3.913,1558,5.235,1559,4.571,1560,4.121,1561,5.235,1562,5.235,1563,1.864,1564,4.571,1565,3.31,1566,3.31,1567,3.31,1568,3.31,1569,4.571,1570,3.31,1571,3.31,1572,3.417,1573,3.31,1574,4.571,1575,6.279,1576,5.925,1577,3.31,1578,2.948,1579,3.31,1580,3.31,1581,4.571,1582,4.571,1583,3.31,1584,3.31,1585,3.31,1586,3.31,1587,3.31,1588,3.31,1589,3.31,1590,3.31,1591,3.31,1592,2.226,1593,3.31,1594,3.31,1595,3.31,1596,3.31,1597,3.31,1598,3.31,1599,2.806,1600,3.31,1601,3.31,1602,3.31,1603,3.31,1604,4.571,1605,3.31,1606,4.571,1607,2.474,1608,4.571,1609,3.31,1610,3.31,1611,3.31,1612,3.31,1613,2.474,1614,3.31]],["title/components/LoginCmp.html",[0,0.195,281,0.859]],["body/components/LoginCmp.html",[0,0.305,1,0.864,2,1.179,3,0.196,4,0.196,5,2.779,6,0.864,7,1.113,8,0.14,10,1.426,11,1.966,13,0.864,14,1.438,15,1.045,16,0.71,17,0.025,34,2.901,46,5.254,54,0.81,57,3.991,59,3.225,68,0.352,88,3.991,101,1.179,113,0.73,114,0.981,116,1.02,117,1.744,118,1.73,119,3.991,122,0.845,130,1.844,135,2.111,136,2.641,137,0.759,139,1.744,140,1.609,141,0.614,143,0.73,144,0.791,145,0.495,146,0.625,147,1.714,148,0.965,149,0.894,156,0.386,165,0.73,166,1.257,180,2.403,181,2.641,182,3.155,183,3.155,184,1.843,185,3.155,186,1.415,187,3.155,188,3.155,189,1.727,191,2.901,198,1.661,199,0.461,202,1.769,203,0.319,204,2.771,205,1.935,206,1.844,207,2.312,208,2.106,209,2.312,210,1.661,211,0.196,212,0.074,232,0.981,264,0.864,265,1.339,266,1.257,267,0.81,268,1.637,269,1.113,271,1.113,272,0.864,273,1.113,274,0.864,275,1.113,276,0.864,277,0.981,278,1.519,279,0.864,280,1.113,281,1.442,282,1.624,283,1.113,284,0.81,285,0.677,286,1.113,287,0.969,288,1.113,289,0.864,290,1.113,291,0.864,292,0.969,293,0.921,294,1.113,295,0.81,296,1.113,297,0.81,298,1.113,299,0.864,300,1.113,301,0.864,302,1.537,303,1.113,304,0.81,305,0.864,306,0.921,307,0.759,308,1.113,309,0.759,310,1.113,311,0.012,312,0.016,313,0.012,459,0.81,643,2.403,672,2.58,801,3.798,874,1.935,996,4.404,1011,2.569,1091,2.106,1129,2.569,1130,2.312,1563,1.935,1607,2.569,1615,2.914,1616,5.126,1617,5.34,1618,6.197,1619,5.34,1620,6.197,1621,5.34,1622,6.197,1623,5.34,1624,5.34,1625,5.34,1626,4.527,1627,5.34,1628,6.197,1629,6.197,1630,5.34,1631,3.437,1632,3.437,1633,3.437,1634,3.437,1635,3.437,1636,4.691,1637,3.437,1638,3.437,1639,3.437,1640,4.691,1641,4.691,1642,3.437,1643,2.569,1644,3.437,1645,2.875,1646,2.106,1647,3.437,1648,3.437,1649,3.437,1650,3.437,1651,3.437,1652,2.569,1653,3.437,1654,3.437,1655,3.437,1656,3.437,1657,2.914,1658,3.437,1659,5.34,1660,2.106,1661,3.437,1662,3.437,1663,3.437,1664,3.437]],["title/classes/MD5.html",[212,0.074,1091,2.095]],["body/classes/MD5.html",[3,0.091,4,0.091,6,1.153,8,0.065,14,1.117,16,1.268,17,0.026,18,2.04,33,1.101,44,1.308,54,1.274,68,0.162,92,1.067,93,1.067,105,1.47,107,1.803,113,0.664,114,1.101,116,0.992,118,2.222,122,0.47,139,0.482,141,0.551,143,0.897,144,0.771,145,0.242,146,0.817,148,0.407,149,0.893,151,2.265,153,1.47,156,0.756,157,1.186,165,1.025,166,0.425,175,0.623,186,0.374,193,2.583,198,0.766,199,0.317,202,0.453,203,0.147,211,0.22,212,0.105,220,0.666,228,1.323,231,0.972,232,1.694,239,2.488,251,1.358,260,1.874,261,2.364,277,1.715,292,0.539,302,0.7,305,0.399,311,0.013,312,0.009,313,0.012,314,1.262,315,0.623,317,2.637,320,2.388,323,1.398,327,2.065,341,0.972,363,0.972,371,1.067,383,1.067,387,0.714,388,2.04,391,1.47,393,0.714,407,4.762,408,3.993,409,4.542,413,1.067,414,3.086,416,1.757,434,0.972,437,3.313,439,2.884,446,1.732,448,0.893,449,0.666,459,1.143,462,0.714,463,2.065,465,1.359,507,0.972,562,2.008,565,1.498,567,1.262,568,1.308,569,0.714,588,2.593,589,2.733,590,1.6,595,0.7,596,4.128,600,2.956,603,0.972,609,0.893,632,1.516,643,2.494,647,2.038,653,4.392,663,0.514,671,1.47,672,3.287,673,2.812,680,1.186,688,2.731,689,2.869,692,1.186,693,1.186,694,1.067,696,1.067,697,1.067,698,3.086,699,1.6,702,1.6,703,1.952,710,0.893,712,2.364,715,2.04,722,0.893,730,1.067,731,1.067,732,1.067,733,2.595,734,1.067,737,1.6,740,1.026,742,1.186,744,1.186,745,1.6,747,0.893,759,1.359,763,1.757,765,1.757,766,3.352,781,0.972,800,2.965,801,1.6,802,1.757,809,1.186,814,1.186,819,1.952,829,2.731,830,3.263,832,1.952,834,1.186,836,1.067,851,3.728,857,1.067,864,3.788,874,1.47,883,2.812,900,2.364,902,0.972,906,1.067,907,1.186,908,1.186,910,2.822,911,4.584,912,1.952,913,1.952,914,1.345,915,2.822,916,2.822,918,2.214,919,1.186,920,1.952,921,0.972,922,0.972,923,1.345,925,1.757,926,1.757,927,2.214,929,2.214,930,1.345,931,2.214,932,1.345,933,1.345,934,1.186,935,1.345,937,2.488,938,1.186,939,2.214,941,1.186,944,1.186,945,2.239,946,1.186,947,1.345,948,0.972,949,1.345,951,1.757,953,1.345,954,3.616,955,1.345,956,1.186,957,1.345,958,1.186,959,1.345,960,2.595,961,1.067,962,1.952,963,1.186,964,1.186,965,1.186,966,1.186,967,1.186,968,1.186,969,1.067,970,1.067,971,1.345,972,1.186,973,1.757,974,1.757,975,1.067,976,1.952,977,1.186,978,1.186,979,1.186,980,1.186,981,1.345,982,2.884,983,0.826,984,1.186,985,1.345,986,1.345,987,3.189,988,1.345,989,1.345,990,2.884,991,1.345,992,1.186,993,2.822,994,1.186,995,1.345,996,2.595,997,1.345,998,1.345,999,1.345,1000,1.345,1001,1.067,1002,1.345,1003,1.952,1004,1.345,1005,1.345,1006,1.345,1007,2.214,1008,1.345,1009,1.345,1010,1.345,1011,1.186,1012,1.186,1013,1.345,1014,1.186,1015,1.345,1016,1.186,1017,1.186,1018,1.186,1019,1.067,1020,1.345,1021,1.345,1022,1.345,1023,1.345,1024,1.345,1025,1.186,1026,1.345,1027,2.214,1028,3.616,1029,3.616,1030,3.189,1031,3.616,1032,3.616,1033,1.345,1034,1.345,1035,2.214,1036,1.345,1037,1.345,1038,1.345,1039,1.345,1040,1.345,1041,1.186,1042,3.086,1043,1.067,1044,2.214,1045,2.214,1046,0.972,1047,3.43,1048,1.345,1049,1.345,1050,1.345,1051,3.89,1052,1.186,1053,1.345,1054,2.884,1055,1.186,1056,1.067,1057,2.214,1058,1.345,1059,1.345,1060,1.345,1061,1.345,1062,1.345,1063,1.345,1064,2.214,1065,2.214,1066,1.345,1067,1.345,1068,1.345,1069,1.345,1070,2.214,1071,1.345,1072,2.214,1073,3.271,1074,2.214,1075,2.214,1076,2.214,1077,1.345,1078,2.214,1079,1.345,1080,1.186,1081,2.214,1082,2.214,1083,1.186,1084,1.345,1085,1.345,1086,1.345,1087,1.345,1088,1.345,1089,1.186,1090,3.271,1091,2.614,1092,1.345,1093,1.345,1094,1.345,1095,2.214,1096,1.186,1097,1.067,1098,1.186,1099,2.214,1100,1.345,1101,1.345,1102,1.345,1103,1.345,1104,1.345,1105,1.345,1106,1.345,1107,1.345,1108,1.345,1109,1.345,1110,3.43,1111,2.214,1112,1.345,1113,1.345,1114,1.345,1115,1.345,1116,2.239,1117,2.869,1118,1.345,1119,2.214,1120,1.345,1121,1.345,1122,3.271,1123,1.345,1124,1.345,1125,1.345,1126,2.214,1127,1.345,1128,1.345,1129,2.488,1130,2.239,1131,2.884,1132,1.345,1133,1.345,1134,1.345,1135,1.067,1136,1.345,1137,2.214,1138,1.186,1139,1.345,1140,1.345,1141,1.345,1142,1.345,1143,3.616,1144,4.112,1145,2.822,1146,4.112,1147,1.345,1148,1.345,1149,2.214,1150,1.345,1151,1.345,1152,1.345,1153,1.345,1154,1.186,1155,1.345,1156,1.345,1157,1.345,1158,1.345,1159,1.345,1160,1.345,1161,1.345,1162,1.186,1163,2.822,1164,2.822,1165,4.112,1166,2.822,1167,1.345,1168,1.345,1169,1.345,1170,1.345,1171,1.345,1172,1.345,1173,1.186,1174,1.345,1175,1.345,1176,1.952,1177,2.214,1178,1.345,1179,1.345,1180,1.345,1181,1.345,1182,1.345,1183,5.401,1184,2.214,1185,2.214,1186,2.214,1187,2.214,1188,1.345,1189,2.214,1190,1.345,1191,2.214,1192,1.952,1193,1.345,1194,0.893,1195,1.345,1196,1.345,1197,1.345,1198,1.345,1199,1.345,1200,2.822,1201,3.626,1202,1.345,1203,1.345,1204,1.345,1205,2.214,1206,2.214,1207,2.488,1208,1.345,1209,2.214,1210,1.186,1211,1.186,1212,1.345,1213,1.186,1318,2.214,1665,1.586,1666,2.612,1667,2.612,1668,2.612,1669,2.612,1670,2.612,1671,2.612,1672,2.612,1673,2.612,1674,2.612,1675,2.612,1676,2.612,1677,2.612,1678,1.586,1679,1.586,1680,1.586,1681,1.586,1682,1.586,1683,1.586,1684,1.586,1685,1.586,1686,1.586,1687,1.586,1688,1.586,1689,1.586,1690,1.586,1691,1.586,1692,1.586,1693,1.586,1694,1.586,1695,1.586,1696,2.612,1697,1.586,1698,1.586,1699,1.586,1700,1.586,1701,1.586]],["title/injectables/Modal.html",[285,0.493,595,0.916]],["body/injectables/Modal.html",[0,0.361,3,0.18,4,0.18,8,0.128,17,0.025,31,2.706,33,1.26,68,0.596,107,2.172,113,0.688,114,0.899,116,1.065,117,2.071,118,1.954,122,0.795,137,0.695,140,1.366,141,0.586,143,1.086,144,0.713,145,0.616,146,0.825,148,0.906,149,0.797,153,2.486,156,0.721,165,0.939,166,0.844,175,1.238,180,3.011,186,1.421,199,0.379,201,3.936,203,0.292,204,1.522,211,0.18,212,0.095,228,1.053,232,0.899,251,0.742,266,1.183,285,0.991,311,0.011,312,0.015,313,0.011,317,1.639,391,1.773,442,1.639,449,1.323,462,1.417,583,2.081,586,2.365,588,2.96,595,1.183,604,2.706,605,2.009,609,2.486,630,2.354,643,1.417,661,1.93,663,1.652,667,2.119,722,2.486,727,3.811,747,1.773,766,3.424,898,3.386,921,3.796,925,4.377,984,2.354,1014,4.349,1019,3.914,1046,1.93,1083,3.301,1264,1.773,1557,4.865,1578,2.871,1702,2.354,1703,5.099,1704,5.099,1705,5.526,1706,4.416,1707,4.416,1708,4.416,1709,3.15,1710,6.032,1711,5.099,1712,4.685,1713,4.416,1714,4.416,1715,4.416,1716,3.15,1717,4.416,1718,6.776,1719,6.811,1720,3.15,1721,5.819,1722,4.322,1723,5.099,1724,5.526,1725,5.526,1726,5.819,1727,4.131,1728,4.933,1729,6.032,1730,5.819,1731,4.933,1732,4.933,1733,5.819,1734,4.416,1735,3.15,1736,4.416,1737,5.251,1738,3.15,1739,3.743,1740,3.15,1741,3.15,1742,3.15,1743,3.301,1744,2.354,1745,3.15,1746,3.15,1747,2.354,1748,3.15,1749,3.15,1750,3.15,1751,3.15,1752,3.15,1753,3.15,1754,3.15,1755,2.67,1756,3.15,1757,3.15,1758,3.15,1759,3.15,1760,3.15,1761,3.15,1762,4.416,1763,3.15,1764,3.15,1765,3.743,1766,3.15,1767,3.15,1768,3.15,1769,3.15,1770,3.15,1771,3.15,1772,3.15,1773,3.15,1774,3.15,1775,3.15,1776,3.15,1777,3.15,1778,3.15,1779,3.15,1780,3.15,1781,3.15,1782,3.15,1783,3.15,1784,3.15,1785,3.15,1786,3.15,1787,3.15,1788,3.15]],["title/injectables/ModalConfig.html",[180,1.539,595,0.916]],["body/injectables/ModalConfig.html",[3,0.195,4,0.195,8,0.139,17,0.025,33,0.975,34,2.895,35,4.277,57,3.492,65,3.979,68,0.35,88,3.492,107,2.092,113,0.727,118,1.724,122,0.841,137,1.175,141,0.641,143,0.532,144,0.419,145,0.624,146,0.709,148,1.067,149,0.978,151,2.431,156,0.673,165,0.727,180,3.083,181,3.565,182,3.142,183,3.58,184,1.888,185,3.58,186,1.254,187,3.58,188,3.58,189,1.96,191,2.572,193,3.63,199,0.254,203,0.317,211,0.195,212,0.074,228,0.706,251,0.805,285,1,311,0.019,312,0.016,313,0.012,325,4.277,327,2.102,403,3.142,449,2.404,459,1.101,568,1.836,583,1.513,586,2.553,588,2.102,589,2.431,595,1.251,605,1.613,622,3.849,632,2.489,646,4.734,661,2.094,663,1.513,766,2.431,883,2.863,907,3.492,921,3.507,922,2.863,1001,3.849,1135,3.142,1259,3.96,1300,2.63,1357,3.96,1557,4.734,1560,3.142,1578,1.924,1712,5.369,1722,4.851,1727,3.492,1728,3.96,1789,2.554,1790,4.671,1791,5.323,1792,5.323,1793,5.323,1794,5.323,1795,5.323,1796,4.671,1797,3.417,1798,4.671,1799,3.417,1800,4.671,1801,4.671,1802,4.671,1803,3.417,1804,3.417,1805,5.722,1806,3.417,1807,3.417,1808,4.671,1809,4.671,1810,3.417,1811,3.417,1812,3.417,1813,3.417,1814,4.671,1815,4.671,1816,5.722,1817,4.671,1818,4.671,1819,5.323,1820,4.671,1821,4.851,1822,3.417,1823,3.417,1824,3.417,1825,3.417,1826,3.417,1827,5.722,1828,3.417,1829,3.417,1830,3.979,1831,4.671,1832,3.417,1833,4.671,1834,6.186,1835,3.417,1836,3.417,1837,4.671,1838,3.417,1839,3.417,1840,3.417,1841,3.417,1842,3.417]],["title/injectables/ModalDialogInstance.html",[140,0.916,595,0.916]],["body/injectables/ModalDialogInstance.html",[3,0.205,4,0.205,8,0.147,17,0.025,68,0.368,113,0.753,114,1.937,116,0.851,117,1.855,122,0.871,135,2.177,137,1.29,140,1.296,141,0.637,143,0.91,144,0.716,145,0.605,146,0.779,148,0.56,149,0.964,156,0.614,165,1.016,166,1.748,175,2.297,184,1.381,189,2.012,199,0.268,203,0.334,211,0.205,212,0.105,228,1.326,232,1.56,251,1.14,266,1.296,285,0.964,311,0.022,312,0.017,313,0.013,403,3.254,459,1.377,480,3.042,565,2.177,583,1.567,585,3.254,586,2.54,587,2.689,588,2.826,589,2.844,590,2.965,594,5.604,595,1.296,596,2.42,597,3.05,598,2.42,599,3.05,600,2.026,601,3.05,602,3.05,603,2.965,604,2.965,605,2.018,606,4.634,607,4.634,608,4.101,609,2.724,610,4.101,611,4.634,612,4.634,613,4.634,614,4.634,615,3.05,616,3.05,617,3.05,618,4.101,619,3.05,620,4.101,621,4.101,622,4.389,623,4.101,624,5.531,625,3.05,626,3.05,627,4.101,628,4.634,629,3.05,630,4.369,631,4.101,632,1.901,633,4.101,634,3.05,635,4.101,636,4.101,637,4.101,638,3.05,639,3.616,640,3.616,641,3.616,642,3.616,643,2.177,644,4.101,645,4.101,646,3.616,647,2.032,648,4.955,649,4.101,650,3.616,651,3.616,652,2.965,653,3.254,654,4.101,655,3.05,656,4.955,657,3.05,658,3.05,659,3.05,661,2.205,663,1.165,1843,4.838,1844,4.838,1845,4.838,1846,4.838,1847,3.598,1848,3.598,1849,3.598,1850,3.598,1851,3.598,1852,3.598,1853,3.598,1854,3.598,1855,3.598,1856,3.598,1857,3.598,1858,3.598,1859,3.598,1860,3.598,1861,3.598]],["title/modules/ModalModule.html",[885,1.652,1862,2.095]],["body/modules/ModalModule.html",[3,0.277,4,0.277,8,0.198,17,0.025,140,1.819,199,0.505,203,0.449,204,3.228,205,2.728,206,2.299,207,3.259,211,0.277,212,0.105,264,1.218,284,1.677,285,0.979,304,1.677,311,0.017,312,0.02,313,0.017,569,2.18,885,2.341,887,2.521,888,2.728,889,4.228,890,2.341,891,3.036,892,3.852,895,3.935,896,2.969,898,2.969,899,3.935,1534,4.96,1592,3.259,1862,4.361,1863,4.108,1864,4.108,1865,4.108,1866,4.108,1867,4.845,1868,4.845,1869,4.845]],["title/classes/OKOnlyContent.html",[212,0.074,1870,2.3]],["body/classes/OKOnlyContent.html",[0,0.322,3,0.26,4,0.26,8,0.186,10,1.386,11,2.075,14,0.942,17,0.025,44,2.215,68,0.467,101,1.146,113,0.878,116,1.083,117,1.714,137,1.244,140,1.639,141,0.593,143,0.71,144,0.559,145,0.593,146,0.607,148,0.953,149,0.883,156,0.788,189,2.464,199,0.476,203,0.423,206,2.215,211,0.322,212,0.122,284,1.074,285,0.813,305,1.146,311,0.016,312,0.02,313,0.016,315,1.792,459,1.074,586,2.418,605,1.574,663,1.477,740,2.215,800,3.277,890,2.202,1194,2.567,1264,2.567,1288,2.794,1300,3.174,1435,3.75,1490,2.794,1563,2.567,1645,3.454,1646,2.794,1660,2.794,1870,4.116,1871,3.408,1872,5.569,1873,3.865,1874,4.559,1875,4.3,1876,4.3,1877,4.559,1878,4.559,1879,4.559,1880,3.066,1881,3.066,1882,3.066,1883,3.066,1884,3.066,1885,3.066,1886,3.865,1887,2.567,1888,3.066,1889,3.066]],["title/components/OKOnlyModal.html",[0,0.195,284,0.806]],["body/components/OKOnlyModal.html",[0,0.334,1,1.04,2,1.333,3,0.236,4,0.236,6,1.04,7,1.34,8,0.169,10,1.612,11,2.155,13,1.04,14,1.464,15,1.258,16,0.854,17,0.025,44,2.426,54,0.975,68,0.423,101,1.333,113,0.826,116,0.961,117,1.94,122,0.955,135,2.386,136,2.985,137,1.17,140,1.749,141,0.592,143,0.826,144,0.782,145,0.543,146,0.706,147,1.513,156,0.657,165,0.826,166,1.42,189,1.952,199,0.459,203,0.384,206,2.084,211,0.303,212,0.115,264,1.04,265,1.513,266,1.42,267,0.975,268,1.762,269,1.34,271,1.34,272,1.04,273,1.34,274,1.04,275,1.34,276,1.04,277,1.181,278,1.718,279,1.04,280,1.34,281,1.04,282,1.258,283,1.34,284,1.454,285,0.942,286,1.34,287,1.095,288,1.34,289,1.04,290,1.34,291,1.04,292,1.095,293,1.108,294,1.34,295,0.975,296,1.34,297,0.975,298,1.34,299,1.04,300,1.34,301,1.04,302,1.108,303,1.34,304,0.975,305,1.471,306,1.108,307,0.913,308,1.34,309,0.913,310,1.34,311,0.014,312,0.018,313,0.014,459,0.975,586,2.404,605,1.831,663,1.34,740,1.626,800,2.562,890,2.562,1194,2.985,1264,2.329,1288,3.249,1300,2.329,1435,3.91,1490,3.249,1563,2.985,1643,3.092,1645,3.586,1646,2.535,1660,2.535,1870,3.936,1871,3.092,1872,3.507,1875,3.566,1876,3.566,1880,2.782,1881,2.782,1882,3.566,1883,3.566,1884,3.936,1885,3.936,1886,4.961,1887,3.295,1888,2.782,1889,2.782,1890,4.137,1891,4.137,1892,4.137,1893,4.137,1894,4.137]],["title/components/QueryBand.html",[0,0.195,287,0.706]],["body/components/QueryBand.html",[0,0.231,1,0.535,2,0.831,3,0.122,4,0.122,5,2.108,6,0.831,7,0.69,8,0.165,13,0.535,14,1.365,15,0.647,16,1.321,17,0.025,26,2.725,29,3.519,31,2.483,32,3.551,33,0.608,34,1.957,54,0.502,55,2.725,56,2.725,59,2.722,62,4.056,68,0.218,95,2.725,97,3.753,101,0.831,113,0.515,116,1.106,118,1.312,122,0.595,130,1.299,137,0.47,141,0.644,143,0.631,144,0.641,145,0.582,146,0.54,147,0.943,148,1.076,149,0.905,156,0.613,165,0.977,166,1.641,184,1.876,186,1.603,191,1.957,199,0.158,200,2.722,202,1.748,203,0.197,211,0.299,212,0.088,228,1.223,232,0.608,250,2.722,251,1.365,264,0.535,265,0.943,266,0.885,267,1.076,268,1.303,269,0.69,271,0.69,272,0.535,273,0.69,274,0.535,275,0.69,276,0.535,277,0.608,278,1.071,279,0.535,280,0.69,281,0.535,282,0.647,283,0.69,284,0.502,285,0.477,286,0.69,287,1.128,288,0.69,289,0.535,290,0.69,291,0.535,292,1.341,293,1.552,294,0.69,295,0.502,296,0.69,297,0.502,298,0.69,299,0.535,300,0.69,301,0.535,302,0.57,303,0.69,304,0.502,305,0.535,306,0.57,307,0.73,308,0.69,309,0.73,310,0.69,311,0.007,312,0.012,313,0.007,323,0.895,387,2.664,393,2.539,436,2.725,442,1.108,444,1.432,445,1.592,446,3.531,447,1.305,448,2.281,449,2.434,450,3.753,451,1.592,452,1.592,453,2.281,454,3.028,455,2.725,456,4.119,457,3.206,458,3.028,459,1.233,460,3.695,461,4.218,462,2.354,463,1.823,464,3.519,465,2.376,466,3.015,467,3.028,468,2.725,469,3.028,470,3.028,471,3.911,472,3.028,473,3.911,474,3.028,475,3.028,476,3.028,477,3.028,478,3.028,479,3.028,480,3.42,481,3.519,482,3.028,483,3.028,484,4.42,485,3.028,486,3.028,487,3.028,488,3.028,489,2.471,490,2.471,491,2.798,492,3.028,493,3.028,494,2.471,495,2.483,496,3.028,497,2.223,498,3.028,499,3.028,500,3.028,501,3.028,502,3.028,503,2.223,504,2.223,505,3.028,506,2.223,507,2.025,508,3.028,509,3.028,510,3.028,511,3.028,512,3.028,513,3.028,514,1.592,515,3.028,516,3.028,517,2.725,518,1.592,519,1.108,520,3.028,521,3.413,522,3.413,523,3.028,524,3.028,525,3.028,526,2.471,527,3.028,528,3.413,529,3.028,530,1.592,531,1.592,532,2.471,533,1.305,534,2.471,535,1.592,536,1.592,537,1.592,538,1.592,539,1.592,540,3.028,541,1.592,542,1.592,543,1.592,544,1.592,545,3.413,546,1.592,547,3.413,548,1.592,549,3.413,550,3.028,551,1.592,552,2.223,553,1.592,554,3.413,555,1.592,556,1.592,557,3.413,558,1.592,559,3.413,560,2.471,561,1.592,562,1.72,563,2.471,564,1.592,565,0.958,566,2.025,567,1.957,568,0.837,569,0.958,570,2.471,571,1.592,572,1.592,573,1.592,574,3.413,575,1.592,576,3.413,577,1.592,578,3.413,579,1.592,580,3.413,581,1.592,582,3.413,583,1.071,584,2.471,1895,2.802,1896,3.305,1897,2.471,1898,2.129,1899,3.305,1900,2.129,1901,2.129,1902,2.129,1903,2.129,1904,2.129,1905,2.129,1906,2.129,1907,2.129,1908,2.129,1909,2.129,1910,2.129,1911,2.129,1912,2.129,1913,2.129,1914,2.129,1915,2.129,1916,2.129,1917,2.129,1918,2.129,1919,2.129,1920,2.129,1921,2.129,1922,2.129,1923,2.129,1924,2.129,1925,2.129,1926,1.592,1927,2.129,1928,2.129,1929,2.129,1930,2.129,1931,2.129,1932,2.129,1933,2.129,1934,2.129,1935,2.129,1936,2.129,1937,2.129,1938,1.592]],["title/directives/QueryBandDirective.html",[267,0.806,309,0.755]],["body/directives/QueryBandDirective.html",[0,0.251,3,0.179,4,0.179,5,1.631,6,0.788,8,0.179,13,0.788,14,1.139,16,1.325,17,0.026,26,2.108,29,2.96,31,1.921,32,3.116,33,0.895,34,1.514,55,2.108,56,2.96,59,2.29,62,4.316,68,0.321,95,2.108,97,3.379,101,0.788,113,0.685,116,1.096,118,1.647,141,0.291,145,0.291,148,1.023,156,0.494,184,1.856,186,1.604,191,1.514,199,0.233,200,2.646,202,1.893,203,0.291,211,0.332,212,0.11,228,1.343,232,0.895,250,2.646,251,1.512,267,1.198,287,1.139,292,1.278,293,1.477,306,0.84,307,0.692,309,0.971,311,0.011,312,0.015,313,0.011,323,1.317,387,2.925,393,2.841,436,3.42,442,1.631,444,2.108,445,2.343,446,3.586,447,1.921,448,2.863,449,2.44,450,3.79,451,3.289,452,3.801,453,1.765,454,2.343,455,2.108,456,3.709,457,2.697,458,2.343,459,1.037,460,3.289,461,3.801,462,1.98,463,1.41,464,2.96,465,2.29,466,2.87,467,2.343,468,2.108,469,2.343,470,2.343,471,3.289,472,2.343,473,3.289,474,2.343,475,2.343,476,2.343,477,2.343,478,2.343,479,2.343,480,3.383,481,3.42,482,2.343,483,2.343,484,4.373,485,3.289,486,2.343,487,3.289,488,2.343,489,2.343,490,2.343,491,2.697,492,2.343,493,2.343,494,2.343,495,2.697,496,2.343,497,2.108,498,2.343,499,2.343,500,2.343,501,2.343,502,2.343,503,2.108,504,2.108,505,2.343,506,2.96,507,2.697,508,2.343,509,2.343,510,2.343,511,2.343,512,2.343,513,2.343,514,2.343,515,2.343,516,2.343,517,2.108,518,2.343,519,1.631,520,2.343,521,3.801,522,3.801,523,3.289,524,2.343,525,2.343,526,2.343,527,2.343,528,2.343,529,3.801,530,2.343,531,2.343,532,2.343,533,1.921,534,2.343,535,2.343,536,2.343,537,2.343,538,2.343,539,2.343,540,3.801,541,2.343,542,2.343,543,2.343,544,2.343,545,2.343,546,2.343,547,2.343,548,2.343,549,2.343,550,3.801,551,2.343,552,2.108,553,2.343,554,2.343,555,2.343,556,2.343,557,2.343,558,2.343,559,2.343,560,3.289,561,2.343,562,2.29,563,3.289,564,2.343,565,1.41,566,2.697,567,2.457,568,1.232,569,1.41,570,3.289,571,2.343,572,2.343,573,2.343,574,2.343,575,2.343,576,2.343,577,2.343,578,2.343,579,2.343,580,2.343,581,2.343,582,2.343,583,1.015,584,3.289,1938,2.343,1939,3.135]],["title/components/QuickFindInput.html",[0,0.195,289,0.859]],["body/components/QuickFindInput.html",[0,0.351,1,1.159,2,1.427,3,0.263,4,0.263,6,1.159,7,1.493,8,0.188,13,1.159,14,1.478,15,1.402,16,0.952,17,0.025,54,1.086,68,0.472,101,1.427,116,0.884,130,2.231,137,1.358,141,0.57,144,0.754,145,0.526,147,1.62,148,0.718,149,0.665,199,0.458,202,1.832,203,0.428,211,0.263,212,0.1,251,1.449,264,1.159,265,1.62,266,1.521,267,1.086,268,1.832,269,1.493,271,1.493,272,1.159,273,1.493,274,1.159,275,1.493,276,1.159,277,1.316,278,1.839,279,1.159,280,1.493,281,1.159,282,1.402,283,1.493,284,1.086,285,0.819,286,1.493,287,1.172,288,1.493,289,1.613,290,2.174,291,1.159,292,1.172,293,1.235,294,1.493,295,1.086,296,1.493,297,1.086,298,1.493,299,1.159,300,1.493,301,1.159,302,1.235,303,1.493,304,1.086,305,1.159,306,1.235,307,1.018,308,1.493,309,1.018,310,1.493,311,0.016,312,0.02,313,0.016,387,2.554,446,3.34,1537,3.908,1897,4.243,1940,3.908,1941,6.15,1942,5.676,1943,6.418,1944,4.61,1945,4.61,1946,4.61,1947,4.61,1948,4.61,1949,4.61]],["title/components/RecordEditWindow.html",[0,0.195,291,0.859]],["body/components/RecordEditWindow.html",[0,0.342,1,1.09,2,1.373,3,0.248,4,0.248,6,1.09,7,1.405,8,0.177,10,1.662,11,2.203,13,1.09,14,1.471,15,1.319,16,0.896,17,0.025,54,1.022,68,0.444,101,1.09,113,0.851,116,1.008,117,1.819,122,0.984,130,2.148,135,2.459,136,3.077,140,1.603,141,0.582,143,0.675,144,0.77,145,0.507,146,0.578,147,1.56,165,0.851,166,1.464,196,3.242,198,2.64,199,0.482,202,1.56,203,0.402,204,2.89,205,2.442,206,2.148,207,2.918,208,2.658,211,0.248,212,0.094,264,1.09,265,1.56,266,1.464,267,1.022,268,1.793,269,1.405,271,1.405,272,1.09,273,1.405,274,1.09,275,1.405,276,1.09,277,1.238,278,1.77,279,1.09,280,1.405,281,1.09,282,1.319,283,1.405,284,1.022,285,0.788,286,1.405,287,1.129,288,1.405,289,1.09,290,1.405,291,1.579,292,1.337,293,1.683,294,1.405,295,1.022,296,1.405,297,1.022,298,1.405,299,1.09,300,1.405,301,1.09,302,1.162,303,1.405,304,1.022,305,1.09,306,1.162,307,0.958,308,1.405,309,0.958,310,1.405,311,0.015,312,0.019,313,0.015,459,1.022,605,2.065,675,5.072,736,2.844,884,3.676,903,3.677,1599,3.677,1950,3.677,1951,6.28,1952,4.338,1953,4.338,1954,4.338,1955,4.338,1956,4.338,1957,4.338,1958,4.338,1959,5.465,1960,4.633,1961,4.338,1962,4.338]],["title/components/RecordList.html",[0,0.195,295,0.806]],["body/components/RecordList.html",[0,0.217,1,0.955,2,0.768,3,0.11,4,0.11,6,0.484,7,0.624,8,0.079,10,0.929,11,1.399,13,0.484,14,1.358,15,1.433,16,1.351,17,0.026,33,1.603,54,1.324,68,0.483,101,0.768,107,2.066,113,0.476,114,1.846,116,0.993,117,1.954,118,1.401,122,0.55,130,1.201,135,1.375,137,0.425,139,1.155,140,1.018,141,0.6,143,0.819,144,0.732,145,0.562,146,0.7,147,0.872,148,0.476,149,0.441,151,1.971,153,1.085,156,0.671,165,0.914,166,1.541,175,1.971,180,1.375,181,1.085,184,1.234,186,1.111,199,0.437,200,2.453,201,2.328,202,1.084,203,0.179,204,2.089,205,1.085,208,1.181,209,1.296,210,0.931,211,0.217,212,0.042,220,1.284,228,0.631,231,3.526,232,1.846,233,2.591,250,1.977,251,1.285,256,1.634,260,2.434,264,0.484,265,0.872,266,0.819,267,0.454,268,1.234,269,0.624,271,0.624,272,1.321,273,0.624,274,0.484,275,0.624,276,0.484,277,0.55,278,0.99,279,1.261,280,0.624,281,0.484,282,0.586,283,0.624,284,0.454,285,0.787,286,0.624,287,1.16,288,0.624,289,0.484,290,0.624,291,0.484,292,1.364,293,1.709,294,0.624,295,1.019,296,0.624,297,0.454,298,0.624,299,0.484,300,0.624,301,0.484,302,0.516,303,0.624,304,0.454,305,0.484,306,0.516,307,0.425,308,0.624,309,0.425,310,0.624,311,0.013,312,0.011,313,0.007,323,0.81,391,1.085,393,2.257,433,2.285,447,1.181,450,2.328,453,2.654,456,2.908,457,2.328,459,1.324,462,1.375,463,0.867,464,2.056,465,1.591,466,2.838,468,2.056,480,1.591,491,1.873,497,2.056,506,1.296,517,1.296,533,1.181,552,2.056,562,2.61,565,1.709,566,2.328,567,0.931,568,1.201,604,3.526,605,2.12,622,2.056,632,2.143,640,1.441,643,2.121,663,0.624,671,3.07,672,2.089,677,1.296,691,1.441,700,3.22,710,1.721,740,0.757,745,1.873,758,1.441,766,1.591,769,4.623,803,4.253,805,4.457,857,3.374,860,2.285,884,1.296,891,1.477,900,2.328,902,1.181,926,2.056,945,2.056,951,2.056,956,1.441,1054,2.285,1055,2.285,1056,2.056,1098,2.84,1116,1.296,1281,3.668,1333,1.441,1342,4.253,1345,3.22,1346,1.634,1411,3.996,1412,1.634,1479,2.591,1549,1.634,1551,1.634,1560,2.908,1578,1.085,1592,1.296,1727,1.441,1737,2.591,1747,2.285,1765,3.22,1895,2.591,1926,3.232,1938,2.285,1960,1.634,1963,1.634,1964,3.22,1965,3.057,1966,3.057,1967,3.057,1968,3.799,1969,4.323,1970,3.665,1971,3.057,1972,3.22,1973,3.057,1974,3.799,1975,4.323,1976,3.057,1977,3.057,1978,3.799,1979,3.057,1980,3.799,1981,4.714,1982,1.634,1983,3.057,1984,3.057,1985,1.927,1986,5.754,1987,1.927,1988,3.057,1989,3.057,1990,4.323,1991,3.057,1992,3.057,1993,1.927,1994,5.206,1995,1.927,1996,1.927,1997,3.057,1998,1.927,1999,3.057,2000,3.057,2001,1.927,2002,3.665,2003,1.927,2004,1.927,2005,1.927,2006,3.057,2007,1.927,2008,3.057,2009,3.665,2010,3.057,2011,1.927,2012,1.927,2013,3.057,2014,1.927,2015,3.057,2016,1.927,2017,3.057,2018,3.057,2019,3.057,2020,1.927,2021,1.927,2022,3.057,2023,1.927,2024,3.057,2025,1.927,2026,1.927,2027,1.927,2028,1.927,2029,3.057,2030,1.927,2031,5.257,2032,1.927,2033,3.799,2034,3.799,2035,3.057,2036,3.057,2037,3.057,2038,3.799,2039,1.927,2040,1.927,2041,1.927,2042,1.927,2043,1.927,2044,1.927,2045,1.927,2046,1.927,2047,1.927,2048,1.927,2049,1.927,2050,4.714,2051,1.927,2052,1.927,2053,1.927,2054,3.057,2055,1.927,2056,1.927,2057,1.927,2058,3.057,2059,4.323,2060,1.927,2061,1.927,2062,1.927,2063,1.927,2064,1.927,2065,3.799,2066,4.323,2067,1.634,2068,1.927,2069,1.927,2070,1.927,2071,1.927,2072,1.927,2073,1.927,2074,1.927,2075,1.927,2076,4.323,2077,1.927,2078,3.057,2079,3.057,2080,3.799,2081,3.057,2082,1.927,2083,3.799,2084,4.323,2085,5.257,2086,3.799,2087,1.927,2088,1.927,2089,4.323,2090,1.927,2091,3.057,2092,1.927,2093,1.927,2094,1.927,2095,3.057,2096,1.927,2097,1.927,2098,1.927,2099,1.927,2100,1.927,2101,1.634,2102,1.927,2103,1.927,2104,3.057,2105,1.927,2106,3.057,2107,4.714,2108,3.057,2109,3.057,2110,3.799,2111,4.323,2112,1.927,2113,3.057,2114,4.714,2115,4.323,2116,1.927,2117,3.799,2118,3.057,2119,1.927,2120,1.927,2121,1.927,2122,1.927,2123,1.927,2124,1.927,2125,4.323,2126,3.057,2127,3.057,2128,4.323,2129,3.057,2130,1.927,2131,3.057,2132,3.057,2133,3.057,2134,3.057,2135,3.057,2136,1.927,2137,1.927,2138,1.927,2139,1.927,2140,1.927,2141,1.927,2142,3.057,2143,1.927,2144,1.927,2145,1.927,2146,1.927,2147,4.323,2148,1.927,2149,1.927]],["title/components/Tab.html",[0,0.195,297,0.806]],["body/components/Tab.html",[0,0.362,1,1.118,2,1.395,3,0.254,4,0.254,6,1.118,7,1.441,8,0.181,13,1.118,14,1.476,15,1.352,16,0.919,17,0.025,33,1.27,54,1.048,68,0.455,101,1.521,130,2.182,137,0.982,141,0.561,143,0.693,144,0.777,145,0.561,146,0.592,147,1.584,148,0.693,149,0.642,156,0.623,184,1.584,186,1.426,189,2.228,199,0.331,202,1.727,203,0.412,211,0.317,212,0.12,264,1.118,265,1.584,266,1.487,267,1.048,268,1.809,269,1.441,271,1.441,272,1.118,273,1.441,274,1.118,275,1.441,276,1.118,277,1.27,278,1.798,279,1.118,280,1.441,281,1.118,282,1.352,283,1.441,284,1.048,285,0.801,286,1.441,287,1.147,288,1.441,289,1.118,290,1.441,291,1.118,292,1.147,293,1.192,294,1.441,295,1.048,296,1.441,297,1.621,298,1.441,299,1.714,300,1.441,301,1.118,302,1.192,303,1.441,304,1.048,305,1.118,306,1.192,307,0.982,308,1.441,309,0.982,310,1.441,311,0.016,312,0.019,313,0.016,583,1.798,595,1.621,1652,3.325,2150,3.325,2151,5.13,2152,4.706,2153,5.551,2154,4.448,2155,3.771,2156,3.771,2157,3.771,2158,3.771,2159,3.771,2160,3.771,2161,4.706,2162,3.771,2163,3.771,2164,3.771,2165,3.771]],["title/components/Tabs.html",[0,0.195,299,0.859]],["body/components/Tabs.html",[0,0.358,1,1.087,2,1.371,3,0.247,4,0.247,6,1.087,7,1.401,8,0.176,13,1.087,14,1.473,15,1.315,16,0.893,17,0.025,33,1.235,54,1.019,68,0.443,101,1.502,113,0.849,122,0.982,141,0.582,143,0.93,144,0.809,145,0.506,146,0.796,147,1.557,148,0.673,149,0.624,156,0.486,165,0.93,166,1.601,175,1.7,184,1.557,186,1.285,189,1.592,199,0.322,202,1.705,203,0.401,211,0.312,212,0.118,264,1.087,265,1.557,266,1.461,267,1.019,268,1.791,269,1.401,271,1.401,272,1.087,273,1.401,274,1.087,275,1.401,276,1.087,277,1.235,278,1.767,279,1.087,280,1.401,281,1.087,282,1.315,283,1.401,284,1.019,285,0.787,286,1.401,287,1.127,288,1.401,289,1.087,290,1.401,291,1.087,292,1.127,293,1.159,294,1.401,295,1.019,296,1.401,297,1.65,298,1.401,299,1.733,300,1.401,301,1.087,302,1.159,303,1.401,304,1.019,305,1.087,306,1.159,307,0.955,308,1.401,309,0.955,310,1.401,311,0.015,312,0.019,313,0.015,583,1.401,595,1.601,1652,3.233,2150,3.233,2151,3.667,2152,3.667,2155,5.065,2156,4.624,2157,3.667,2158,4.624,2159,3.667,2160,3.667,2161,4.624,2162,4.624,2163,3.667,2164,3.667,2165,3.667,2166,5.455,2167,5.455,2168,5.455,2169,4.325,2170,4.325,2171,4.325,2172,4.325]],["title/classes/Utf8.html",[212,0.074,759,1.779]],["body/classes/Utf8.html",[3,0.189,4,0.189,8,0.135,17,0.026,33,1.749,44,1.797,68,0.607,113,0.712,114,2.005,116,0.516,118,2.294,122,0.823,141,0.621,143,0.978,144,0.77,146,0.837,149,0.855,151,1.302,156,0.665,165,1.011,166,0.887,186,0.781,193,1.865,211,0.189,212,0.072,220,2.2,228,1.322,268,1.965,311,0.012,312,0.016,313,0.012,315,1.302,335,5.024,369,3.076,371,3.076,387,2.541,388,3.21,396,2.476,397,2.808,406,3.076,413,2.228,414,3.523,416,3.076,418,2.476,759,2.38,1097,2.228,1201,4.43,1207,3.418,1210,3.418,1211,3.418,1285,2.808,1407,2.808,2173,2.808,2174,4.573,2175,4.573,2176,4.573,2177,4.573,2178,4.573,2179,5.648,2180,4.573,2181,5.237,2182,4.573,2183,4.573,2184,4.573,2185,4.573,2186,3.312,2187,3.312,2188,3.312,2189,4.573,2190,3.312,2191,6.885,2192,3.312,2193,5.237,2194,3.312,2195,3.312,2196,4.573,2197,3.312,2198,3.312,2199,4.573,2200,3.312,2201,3.312,2202,3.312,2203,3.312,2204,3.312,2205,4.573,2206,4.573,2207,3.312,2208,3.312,2209,3.312,2210,4.573,2211,3.312,2212,3.312,2213,5.237,2214,3.312,2215,3.312,2216,4.573,2217,4.573,2218,3.312,2219,3.312,2220,6.824,2221,6.4,2222,3.312,2223,6.496,2224,3.312,2225,5.237,2226,5.237,2227,3.312,2228,4.573,2229,5.237,2230,5.237,2231,3.312,2232,5.237,2233,3.312,2234,3.312,2235,3.312,2236,3.312,2237,5.237,2238,5.926,2239,5.237,2240,4.573,2241,4.573,2242,5.648,2243,3.312,2244,3.312,2245,5.926,2246,6.575,2247,5.648,2248,5.237,2249,4.573,2250,3.312,2251,6.128,2252,3.312,2253,3.312,2254,3.312,2255,3.312,2256,3.312]],["title/components/WebAppContainer.html",[0,0.195,301,0.859]],["body/components/WebAppContainer.html",[0,0.323,1,0.968,2,1.273,3,0.22,4,0.22,6,0.968,7,1.248,8,0.157,10,1.54,13,0.968,14,1.455,15,1.172,16,0.796,17,0.025,44,1.514,54,0.908,68,0.394,101,1.273,105,2.169,107,1.99,113,0.788,114,1.828,116,0.935,122,0.912,130,1.99,137,0.851,139,1.827,141,0.605,143,0.6,144,0.736,145,0.557,146,0.513,147,1.781,148,0.788,149,0.73,165,0.788,166,1.357,184,1.715,186,1.193,199,0.447,200,2.943,201,3.681,202,1.445,203,0.357,204,1.861,210,1.861,211,0.22,212,0.083,232,1.715,251,0.908,264,0.968,265,1.445,266,1.357,267,0.908,268,1.715,269,1.248,271,1.248,272,0.968,273,1.248,274,0.968,275,1.248,276,0.968,277,1.1,278,1.64,279,0.968,280,1.248,281,1.273,282,1.172,283,1.248,284,0.908,285,0.995,286,1.248,287,1.046,288,1.248,289,0.968,290,1.248,291,0.968,292,1.046,293,1.032,294,1.248,295,0.908,296,1.248,297,0.908,298,1.248,299,0.968,300,1.248,301,1.51,302,1.515,303,1.248,304,0.908,305,0.968,306,1.032,307,0.851,308,1.248,309,0.851,310,1.248,311,0.013,312,0.018,313,0.013,317,2.005,387,2.278,437,3.103,446,3.126,457,2.361,605,1.33,632,1.514,643,1.734,647,1.619,874,2.851,891,2.446,1550,3.267,1592,2.592,1607,2.88,1616,2.88,1657,3.267,1744,3.785,1897,3.785,1964,4.795,1972,5.093,1982,3.267,2067,3.267,2101,3.267,2257,3.267,2258,5.064,2259,5.064,2260,5.656,2261,6.007,2262,5.656,2263,5.656,2264,5.064,2265,3.853,2266,3.853,2267,3.853,2268,3.853,2269,3.853,2270,3.853,2271,3.853,2272,5.064,2273,3.853,2274,3.853,2275,3.853,2276,3.853,2277,3.853,2278,3.853,2279,3.853,2280,3.853,2281,3.853,2282,3.853,2283,3.853,2284,3.853,2285,3.853,2286,3.853,2287,3.853,2288,5.656,2289,5.656,2290,3.853,2291,3.853,2292,3.853,2293,3.853,2294,3.853,2295,5.656,2296,3.853,2297,3.853]],["title/components/YesNoModal.html",[0,0.195,304,0.806]],["body/components/YesNoModal.html",[0,0.329,1,1.008,2,1.306,3,0.229,4,0.229,6,1.008,7,1.299,8,0.164,10,1.58,11,2.123,13,1.008,14,1.46,15,1.219,16,0.828,17,0.025,44,2.397,54,0.945,68,0.41,101,1.306,113,0.809,116,1.008,117,1.921,122,0.936,135,2.338,136,2.926,137,1.147,140,1.735,141,0.6,143,0.898,144,0.794,145,0.535,146,0.768,147,1.483,156,0.685,165,0.898,166,1.545,175,1.576,186,0.945,189,1.913,199,0.454,203,0.372,206,2.042,211,0.297,212,0.112,264,1.008,265,1.483,266,1.392,267,0.945,268,1.741,269,1.299,271,1.299,272,1.008,273,1.299,274,1.008,275,1.299,276,1.008,277,1.144,278,1.683,279,1.008,280,1.299,281,1.008,282,1.219,283,1.299,284,0.945,285,0.934,286,1.299,287,1.073,288,1.299,289,1.008,290,1.299,291,1.008,292,1.073,293,1.074,294,1.299,295,0.945,296,1.299,297,0.945,298,1.299,299,1.008,300,1.299,301,1.008,302,1.074,303,1.299,304,1.437,305,1.449,306,1.074,307,0.885,308,1.299,309,0.885,310,1.299,311,0.014,312,0.018,313,0.014,459,0.945,583,1.299,586,2.426,605,1.794,652,3.738,663,1.299,740,1.576,800,2.51,890,2.51,969,2.697,1194,2.926,1264,2.257,1288,3.184,1300,2.257,1435,3.184,1490,3.184,1563,2.926,1572,3.884,1578,2.257,1613,2.997,1643,2.997,1645,3.533,1646,2.457,1660,2.457,1875,3.495,1876,3.495,1880,2.697,1881,2.697,1882,3.495,1883,3.495,1884,3.878,1885,3.878,1887,3.246,1888,2.697,1889,2.697,2298,2.997,2299,4.888,2300,4.888,2301,4.009,2302,4.009,2303,4.009,2304,3.878,2305,4.009,2306,4.009,2307,4.009,2308,3.399,2309,3.399,2310,3.399,2311,3.399]],["title/classes/YesNoModalContent.html",[212,0.074,2304,2.3]],["body/classes/YesNoModalContent.html",[0,0.312,3,0.247,4,0.247,8,0.176,10,1.315,11,2.008,14,0.893,17,0.025,44,2.144,68,0.443,101,1.087,113,0.849,116,1.101,117,1.659,137,1.204,140,1.601,141,0.613,143,0.673,144,0.53,145,0.613,146,0.576,148,1.007,149,0.933,156,0.794,186,1.285,189,2.432,199,0.467,203,0.401,206,2.144,211,0.312,212,0.118,285,0.787,304,1.019,305,1.087,311,0.015,312,0.019,313,0.015,315,1.7,459,1.019,583,2.032,586,2.469,605,1.493,652,2.651,663,1.401,740,2.144,800,3.239,890,2.089,969,2.909,1194,2.435,1264,2.435,1288,2.651,1300,3.071,1490,2.651,1563,2.435,1572,3.233,1578,3.071,1613,3.233,1645,3.343,1646,2.651,1660,2.651,1873,3.667,1875,4.22,1876,4.22,1880,2.909,1881,2.909,1882,2.909,1883,2.909,1884,2.909,1885,2.909,1887,2.435,1888,2.909,1889,2.909,2298,3.233,2299,3.667,2300,3.667,2304,4.019,2308,5.484,2309,5.484,2310,5.484,2311,3.667,2312,4.325,2313,4.325,2314,4.325,2315,4.325,2316,4.325,2317,4.325]],["title/coverage.html",[2318,3.962]],["body/coverage.html",[0,0.401,1,1.036,8,0.168,9,3.494,11,1.517,17,0.025,33,2.04,35,4.765,139,1.253,140,1.104,145,0.382,180,1.855,206,1.62,212,0.147,251,0.971,267,1.247,272,1.036,274,1.33,276,1.33,279,1.036,281,1.036,284,0.971,285,0.595,287,0.851,289,1.036,291,1.036,295,0.971,297,1.247,299,1.33,301,1.036,304,0.971,307,0.91,309,0.91,311,0.014,312,0.018,313,0.014,314,1.991,316,3.494,320,2.145,388,2.526,420,3.242,421,2.526,423,3.494,444,3.929,585,2.772,586,2.55,587,3.954,595,1.833,660,2.145,662,3.494,688,2.321,736,2.145,759,2.145,848,2.526,849,3.494,859,4.485,906,4.287,909,2.772,961,2.772,975,2.772,983,2.145,1091,2.526,1214,4.485,1252,3.494,1254,3.494,1265,3.081,1267,4.485,1555,3.494,1615,3.494,1702,3.954,1743,3.081,1789,3.954,1821,3.494,1830,3.081,1870,2.772,1871,3.954,1887,2.321,1940,3.494,1950,3.494,1963,3.494,2150,4.607,2173,3.494,2257,3.494,2298,3.954,2304,2.772,2318,3.494,2319,4.122,2320,4.122,2321,5.29,2322,5.29,2323,4.122,2324,4.122,2325,4.122,2326,4.122,2327,5.842,2328,4.122,2329,4.122,2330,5.29,2331,4.122,2332,6.633,2333,6.718,2334,6.164,2335,4.122,2336,4.122,2337,4.122,2338,4.122,2339,4.122,2340,4.122,2341,4.122,2342,5.842,2343,4.122,2344,4.122,2345,4.122,2346,5.842,2347,5.29,2348,4.122,2349,4.122,2350,4.122,2351,4.122,2352,4.122,2353,4.122,2354,4.122,2355,4.122,2356,4.122,2357,4.122,2358,4.122,2359,4.122,2360,4.122,2361,4.122,2362,4.122,2363,4.122,2364,4.953,2365,3.494,2366,3.494,2367,4.122]],["title/dependencies.html",[888,2.317,2368,2.852]],["body/dependencies.html",[17,0.023,311,0.02,312,0.022,313,0.02,888,3.584,2369,5.595,2370,5.595,2371,5.595]],["title/index.html",[68,0.292,2372,2.418,2373,2.132]],["body/index.html",[0,0.39,2,1.496,5,2.232,8,0.123,10,0.919,14,0.624,15,0.919,16,1.229,17,0.024,18,1.852,41,3.636,42,3.636,54,1.442,107,1.188,108,2.033,117,1.962,118,0.979,139,1.742,141,0.398,143,0.471,144,0.611,151,1.686,155,1.852,156,0.339,199,0.443,212,0.141,250,2.232,251,0.712,252,2.562,265,0.863,272,1.364,285,0.783,287,0.886,292,1.264,293,0.81,297,1.175,302,1.454,311,0.011,312,0.015,313,0.015,315,2.458,320,1.573,323,2.407,325,2.259,327,1.93,330,3.636,356,3.636,363,1.852,391,3.055,396,2.259,448,1.702,449,1.27,450,1.852,453,1.702,455,2.033,459,1.175,462,1.36,463,1.36,465,2.232,466,1.573,480,2.232,481,2.885,484,2.033,491,1.852,504,2.033,519,1.573,565,1.36,567,1.46,568,2.132,604,1.852,641,2.259,643,2.863,647,1.802,651,2.259,660,2.982,664,2.259,665,3.636,667,4.39,668,5.302,671,3.446,672,3.433,673,4,677,3.649,678,2.562,685,2.562,691,2.259,699,1.852,702,1.852,710,2.807,712,3.055,715,3.647,721,2.259,722,2.415,736,3.396,737,1.852,740,2.406,745,1.852,747,3.768,754,3.206,781,1.852,860,2.259,885,1.46,886,3.226,887,1.573,891,1.46,892,1.852,898,3.325,899,3.854,905,2.259,908,4.756,909,2.885,922,1.852,925,3.353,926,3.649,934,2.259,944,2.259,945,2.885,946,2.259,948,3.055,958,3.726,973,2.033,974,2.033,982,4.283,983,2.823,987,3.206,990,3.206,994,2.259,996,2.033,1003,3.726,1016,2.259,1017,3.206,1018,2.259,1025,2.259,1041,2.259,1042,3.649,1043,2.033,1046,1.852,1047,2.259,1052,3.726,1056,3.649,1080,2.259,1089,2.259,1117,2.885,1131,3.206,1135,2.033,1138,2.259,1192,2.259,1213,4.449,1276,4.226,1277,2.562,1281,2.033,1292,3.636,1293,3.636,1294,2.562,1301,2.562,1310,2.562,1333,2.259,1390,2.562,1394,2.562,1423,2.562,1425,2.259,1428,2.562,1444,2.562,1483,2.562,1484,2.562,1504,2.562,1527,3.325,1560,2.033,1616,3.726,1731,2.562,1732,2.562,1739,2.562,1744,2.259,1747,2.259,1755,2.562,1862,3.325,1970,2.562,1994,3.636,2009,3.636,2373,2.259,2374,6.452,2375,3.022,2376,3.022,2377,3.022,2378,3.022,2379,4.985,2380,6.452,2381,6.121,2382,3.022,2383,4.289,2384,3.022,2385,4.289,2386,3.022,2387,5.729,2388,4.289,2389,4.289,2390,3.022,2391,5.426,2392,3.022,2393,3.022,2394,3.022,2395,3.022,2396,4.289,2397,4.289,2398,3.022,2399,3.022,2400,4.289,2401,4.985,2402,3.022,2403,3.022,2404,4.289,2405,4.289,2406,4.985,2407,4.289,2408,3.022,2409,3.022,2410,3.022,2411,3.022,2412,2.562,2413,4.985,2414,3.022,2415,4.289,2416,3.022,2417,6.121,2418,3.022,2419,3.022,2420,4.289,2421,3.022,2422,3.022,2423,3.022,2424,3.022,2425,3.022,2426,2.562,2427,4.289,2428,3.022,2429,3.022,2430,3.022,2431,4.289,2432,4.289,2433,3.022,2434,4.289,2435,3.022,2436,4.289,2437,3.022,2438,4.289,2439,3.022,2440,4.289,2441,4.985,2442,3.022,2443,3.022,2444,3.022,2445,3.022,2446,3.022,2447,4.289,2448,3.022,2449,4.289,2450,3.022,2451,3.022,2452,3.022,2453,3.022,2454,4.289,2455,3.022,2456,3.022,2457,3.022,2458,3.022,2459,3.022,2460,3.022,2461,4.985,2462,3.022,2463,3.022,2464,3.022,2465,3.022,2466,4.289,2467,3.022,2468,3.022,2469,3.022,2470,4.289,2471,3.022,2472,3.022,2473,3.022,2474,3.022,2475,3.022,2476,3.022,2477,3.022,2478,4.289,2479,3.022,2480,3.022,2481,4.289,2482,3.022,2483,3.022,2484,3.022,2485,3.022,2486,3.022,2487,3.022,2488,3.022,2489,3.022,2490,2.562,2491,2.562]],["title/license.html",[2372,2.418,2373,2.132,2492,2.418]],["body/license.html",[17,0.021,93,3.4,175,1.987,311,0.018,312,0.021,313,0.018,408,3.4,568,2.358,639,4.784,896,3.098,909,3.4,948,3.098,1281,3.4,1425,4.486,1626,4.285,1926,3.779,2002,4.285,2412,4.285,2426,4.285,2490,4.285,2491,4.285,2492,4.285,2493,5.055,2494,6.4,2495,5.055,2496,6.001,2497,5.055,2498,5.055,2499,5.055,2500,5.055,2501,5.055,2502,5.055,2503,7.023,2504,5.055,2505,5.055,2506,6.001,2507,5.055,2508,5.055,2509,5.055,2510,5.055,2511,5.055,2512,5.055,2513,5.055,2514,6.001,2515,5.055,2516,5.055,2517,5.055,2518,5.055,2519,5.055,2520,6.001,2521,6.001,2522,5.055,2523,5.055,2524,5.055,2525,5.055,2526,5.055,2527,5.055,2528,5.055,2529,5.055,2530,5.055,2531,5.055,2532,5.055,2533,5.055,2534,5.055,2535,5.055,2536,5.055,2537,5.055,2538,5.055,2539,5.055,2540,5.055,2541,5.055,2542,5.055,2543,5.055,2544,5.055,2545,5.055,2546,5.055,2547,5.055,2548,5.055]],["title/modules.html",[887,2.432]],["body/modules.html",[17,0.022,311,0.019,312,0.022,313,0.019,433,4.963,886,3.112,887,2.876,1496,5.629,1527,3.387,1862,3.387,2549,6.64,2550,6.64]],["title/overview.html",[2551,3.962]],["body/overview.html",[1,1.664,2,1.027,17,0.025,44,2.067,139,1.868,140,1.558,220,1.716,264,1.027,272,1.664,274,1.664,276,1.664,279,1.664,281,1.664,284,1.56,285,0.839,287,1.367,289,1.664,291,1.664,295,1.56,297,1.56,299,1.664,301,1.664,304,1.56,306,1.094,307,1.461,309,1.461,311,0.014,312,0.018,313,0.014,315,1.605,406,2.747,418,3.053,421,4.056,422,3.053,569,1.838,660,3.027,661,2.503,736,3.027,848,4.056,885,1.973,886,3.814,887,2.126,888,2.3,889,2.747,890,1.973,891,1.973,892,2.503,893,3.463,894,3.463,895,3.538,896,2.503,983,2.126,1527,4.461,1528,3.463,1529,3.463,1531,3.463,1862,4.239,1863,3.463,1864,3.463,1865,3.463,1866,3.463,2551,3.463,2552,4.085,2553,4.085]],["title/miscellaneous/variables.html",[519,2.141,2554,2.418]],["body/miscellaneous/variables.html",[17,0.025,68,0.499,107,2.308,145,0.607,148,0.981,149,1.001,151,1.916,156,0.659,180,2.643,184,1.392,228,1.213,232,1.799,311,0.017,312,0.02,313,0.017,323,2.468,383,3.28,434,2.988,437,3.599,519,2.538,567,2.356,586,2.162,647,2.468,740,1.916,906,3.28,960,3.28,961,3.95,962,4.39,963,3.645,964,3.645,965,3.645,966,3.645,967,3.645,968,3.645,972,3.645,973,3.28,974,3.28,975,3.95,976,4.39,977,3.645,978,3.645,979,3.645,980,3.645,1702,3.645,1743,4.39,1789,3.645,1830,4.39,1887,3.307,2364,4.134,2365,4.979,2366,4.979,2554,4.134,2555,6.303,2556,4.876,2557,4.876,2558,5.873,2559,4.876,2560,4.876]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":33,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["0.2s",{"_index":83,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["0/1",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2342,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["00000000",{"_index":1170,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["0123456789abcdef'.split",{"_index":1678,"title":{},"body":{"classes/MD5.html":{}}}],["0x010000",{"_index":2256,"title":{},"body":{"classes/Utf8.html":{}}}],["0x07",{"_index":1211,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x0800",{"_index":2254,"title":{},"body":{"classes/Utf8.html":{}}}],["0x0f",{"_index":1207,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x10000",{"_index":2215,"title":{},"body":{"classes/Utf8.html":{}}}],["0x1f",{"_index":1210,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3f",{"_index":414,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3ff",{"_index":2217,"title":{},"body":{"classes/Utf8.html":{}}}],["0x80",{"_index":1201,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0xc0",{"_index":2226,"title":{},"body":{"classes/Utf8.html":{}}}],["0xd800",{"_index":2213,"title":{},"body":{"classes/Utf8.html":{}}}],["0xdc00",{"_index":2218,"title":{},"body":{"classes/Utf8.html":{}}}],["0xe0",{"_index":2229,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf0",{"_index":2232,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf8",{"_index":2255,"title":{},"body":{"classes/Utf8.html":{}}}],["0xff",{"_index":2241,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffe00000",{"_index":2231,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff",{"_index":2214,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff0000",{"_index":2227,"title":{},"body":{"classes/Utf8.html":{}}}],["0xfffff800",{"_index":2224,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffffff80",{"_index":2219,"title":{},"body":{"classes/Utf8.html":{}}}],["1",{"_index":220,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["1.18.02.16a",{"_index":1636,"title":{},"body":{"components/LoginCmp.html":{}}}],["1.18.06.17a",{"_index":1392,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["1/1",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":418,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["10).replace",{"_index":1169,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["10/10",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":35,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/ModalConfig.html":{},"coverage.html":{}}}],["1063",{"_index":1640,"title":{},"body":{"components/LoginCmp.html":{}}}],["1070px",{"_index":1617,"title":{},"body":{"components/LoginCmp.html":{}}}],["10px",{"_index":58,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["12",{"_index":416,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["12/40",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2552,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":30,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["16",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["1732584193",{"_index":1195,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["1732584194",{"_index":1197,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["18",{"_index":413,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["18/09",{"_index":1373,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["181px",{"_index":90,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["1px",{"_index":74,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["2",{"_index":44,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["20",{"_index":2321,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1622,"title":{},"body":{"components/LoginCmp.html":{}}}],["2017",{"_index":2495,"title":{},"body":{"license.html":{}}}],["24px",{"_index":471,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["25px",{"_index":89,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["27",{"_index":1819,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["27/28",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["271733878",{"_index":1198,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["271733879",{"_index":1196,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["28/51",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":477,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["3",{"_index":406,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["3.2.1",{"_index":2371,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1182,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["33",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["34/39",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":253,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["350",{"_index":1582,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["3px",{"_index":75,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["4",{"_index":371,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["400",{"_index":1581,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["41",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["4c",{"_index":1133,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4d",{"_index":672,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["4d's",{"_index":1294,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["4daction",{"_index":1077,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4daction/rest_proxyhttpget",{"_index":1088,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["5/12",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1821,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{}}}],["54",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1202,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["570",{"_index":190,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["5px",{"_index":29,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["6",{"_index":388,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["6/18",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["630",{"_index":221,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["64",{"_index":1199,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["667",{"_index":1641,"title":{},"body":{"components/LoginCmp.html":{}}}],["670px",{"_index":1621,"title":{},"body":{"components/LoginCmp.html":{}}}],["7",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1206,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["87",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2553,"title":{},"body":{"overview.html":{}}}],["9/]/.test(input",{"_index":378,"title":{},"body":{"classes/Base64.html":{}}}],["93",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":69,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["__karma__",{"_index":2365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_attributes",{"_index":1308,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_backdropref",{"_index":613,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_bootstrapref",{"_index":612,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_config",{"_index":1743,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_defaultconfig",{"_index":1830,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_editwindowconfig",{"_index":1965,"title":{},"body":{"components/RecordList.html":{}}}],["_fourdurl",{"_index":999,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_listcache",{"_index":1033,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_modified",{"_index":1311,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_previousadvancedquery",{"_index":1966,"title":{},"body":{"components/RecordList.html":{}}}],["_previousquery",{"_index":1967,"title":{},"body":{"components/RecordList.html":{}}}],["_recnum",{"_index":1298,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_registrycache",{"_index":1034,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_resultdefered",{"_index":614,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_savedsearches",{"_index":2115,"title":{},"body":{"components/RecordList.html":{}}}],["_savedsets",{"_index":2125,"title":{},"body":{"components/RecordList.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":343,"title":{},"body":{"classes/Base64.html":{}}}],["ability",{"_index":2447,"title":{},"body":{"index.html":{}}}],["above",{"_index":93,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["absolute",{"_index":66,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["acceptheader",{"_index":1064,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["acceptheader:string",{"_index":1059,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["accepts",{"_index":1815,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["access",{"_index":448,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["accessing",{"_index":2430,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":135,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{}}}],["act",{"_index":1055,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["acting",{"_index":2446,"title":{},"body":{"index.html":{}}}],["action",{"_index":1926,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{},"license.html":{}}}],["actions",{"_index":1791,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["active",{"_index":2151,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["actual_component",{"_index":310,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["add",{"_index":250,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["add/edit",{"_index":1992,"title":{},"body":{"components/RecordList.html":{}}}],["add/edit/delete",{"_index":2474,"title":{},"body":{"index.html":{}}}],["add32",{"_index":1667,"title":{},"body":{"classes/MD5.html":{}}}],["add32(a",{"_index":1680,"title":{},"body":{"classes/MD5.html":{}}}],["added",{"_index":1041,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["adding",{"_index":2088,"title":{},"body":{"components/RecordList.html":{}}}],["additional",{"_index":1052,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["additionally",{"_index":2473,"title":{},"body":{"index.html":{}}}],["adds",{"_index":2438,"title":{},"body":{"index.html":{}}}],["addtab",{"_index":2166,"title":{},"body":{"components/Tabs.html":{}}}],["addtab(tab",{"_index":2162,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["adjust",{"_index":2073,"title":{},"body":{"components/RecordList.html":{}}}],["advanced",{"_index":15,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["advancedquery",{"_index":2029,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquery['dialogconfig",{"_index":2100,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquerycomponent",{"_index":1,"title":{"components/AdvancedQueryComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["aftercontentinit",{"_index":1964,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["afterviewinit",{"_index":12,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["alert('record",{"_index":2094,"title":{},"body":{"components/RecordList.html":{}}}],["alert(reason",{"_index":1960,"title":{},"body":{"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["algorithm",{"_index":362,"title":{},"body":{"classes/Base64.html":{}}}],["allow",{"_index":2487,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1729,"title":{},"body":{"injectables/Modal.html":{}}}],["allowmultiple",{"_index":1718,"title":{},"body":{"injectables/Modal.html":{}}}],["allows",{"_index":2470,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":1279,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["already",{"_index":2087,"title":{},"body":{"components/RecordList.html":{}}}],["and/or",{"_index":1626,"title":{},"body":{"components/LoginCmp.html":{},"license.html":{}}}],["angular",{"_index":898,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["angular/common",{"_index":1539,"title":{},"body":{"modules/JS44DModule.html":{}}}],["angular/common/http",{"_index":902,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["angular/core",{"_index":203,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["angular/forms",{"_index":1537,"title":{},"body":{"modules/JS44DModule.html":{},"components/QuickFindInput.html":{}}}],["angular/platform",{"_index":432,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["angular2",{"_index":204,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["angular5",{"_index":1039,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["answer",{"_index":1882,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["anyway",{"_index":401,"title":{},"body":{"classes/Base64.html":{}}}],["api",{"_index":603,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["app",{"_index":1003,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["appear",{"_index":50,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["applicable",{"_index":1284,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["application",{"_index":1744,"title":{},"body":{"injectables/Modal.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["application'},{'name",{"_index":303,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["application/x",{"_index":1061,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["applications",{"_index":1749,"title":{},"body":{"injectables/Modal.html":{}}}],["applied",{"_index":744,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["appref",{"_index":1711,"title":{},"body":{"injectables/Modal.html":{}}}],["appref.injector.get(app_component",{"_index":1753,"title":{},"body":{"injectables/Modal.html":{}}}],["apps",{"_index":2462,"title":{},"body":{"index.html":{}}}],["argument",{"_index":949,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["arising",{"_index":2546,"title":{},"body":{"license.html":{}}}],["array",{"_index":151,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(>config.keyboard",{"_index":1835,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["ascending",{"_index":735,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["ascii",{"_index":374,"title":{},"body":{"classes/Base64.html":{}}}],["assets",{"_index":2420,"title":{},"body":{"index.html":{}}}],["assets/main';and",{"_index":2424,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1281,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["associates",{"_index":2471,"title":{},"body":{"index.html":{}}}],["assume",{"_index":1513,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["astral",{"_index":394,"title":{},"body":{"classes/Base64.html":{}}}],["atk’s",{"_index":364,"title":{},"body":{"classes/Base64.html":{}}}],["atob",{"_index":355,"title":{},"body":{"classes/Base64.html":{}}}],["atob`/`btoa",{"_index":332,"title":{},"body":{"classes/Base64.html":{}}}],["attribute",{"_index":1327,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["attributes",{"_index":992,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["attributes/properties",{"_index":1451,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["audit",{"_index":1348,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["authenticate",{"_index":2466,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":2478,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":987,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["authors",{"_index":2536,"title":{},"body":{"license.html":{}}}],["auto",{"_index":22,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["automatically",{"_index":641,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["available",{"_index":2434,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":1083,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["b",{"_index":407,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["back",{"_index":1375,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["backdropref",{"_index":1844,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["backdropref(value",{"_index":617,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["backend",{"_index":982,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["backends",{"_index":2483,"title":{},"body":{"index.html":{}}}],["background",{"_index":1618,"title":{},"body":{"components/LoginCmp.html":{}}}],["background:#ddd",{"_index":71,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#f8f8f8",{"_index":37,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#fff",{"_index":40,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["band",{"_index":450,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["band'},{'name",{"_index":288,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["bar",{"_index":481,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["base",{"_index":2431,"title":{},"body":{"index.html":{}}}],["base64",{"_index":314,"title":{"classes/Base64.html":{}},"body":{"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["base64.encode(utf8.utf8encode((columns",{"_index":811,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify",{"_index":1127,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(recordlist",{"_index":845,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(values",{"_index":1471,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(pwd",{"_index":1101,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(record.recordtojson('update",{"_index":842,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(this.getcolumnlistjson",{"_index":1398,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('add",{"_index":1432,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('update",{"_index":1445,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(url",{"_index":1087,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(user",{"_index":1100,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.error",{"_index":379,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat((buffer",{"_index":419,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat(buffer",{"_index":415,"title":{},"body":{"classes/Base64.html":{}}}],["base64imageref",{"_index":421,"title":{"pipes/Base64ImageRef.html":{}},"body":{"pipes/Base64ImageRef.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":363,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["basic",{"_index":2454,"title":{},"body":{"index.html":{}}}],["basically",{"_index":2457,"title":{},"body":{"index.html":{}}}],["before",{"_index":970,"title":{},"body":{"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["beforeclose",{"_index":1255,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["beforedismiss",{"_index":1256,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["being",{"_index":47,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["belong",{"_index":1376,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["below",{"_index":1758,"title":{},"body":{"injectables/Modal.html":{}}}],["between",{"_index":929,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["binding",{"_index":1253,"title":{},"body":{"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{}}}],["bitcounter",{"_index":384,"title":{},"body":{"classes/Base64.html":{}}}],["bitstorage",{"_index":385,"title":{},"body":{"classes/Base64.html":{}}}],["blank",{"_index":703,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["blob",{"_index":109,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["block",{"_index":31,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["blocking",{"_index":1722,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["body",{"_index":800,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["body.action",{"_index":1430,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.callbackmethod",{"_index":1429,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.cascadedelete",{"_index":1450,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.columns",{"_index":810,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.filteroptions",{"_index":814,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.hash",{"_index":1074,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.numrecs",{"_index":807,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.orderby",{"_index":815,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.querystring",{"_index":808,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.recorddata",{"_index":1431,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordid",{"_index":1395,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordnum",{"_index":1396,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.registryvalue",{"_index":1156,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.sessionkey",{"_index":1072,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.startrec",{"_index":806,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.tablename",{"_index":804,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["body.variableslist",{"_index":1397,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["boolean",{"_index":583,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["booleanvalue",{"_index":1215,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["bootstrap",{"_index":890,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["bootstrapref",{"_index":1845,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["bootstrapref(value",{"_index":619,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["border",{"_index":97,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["border:0",{"_index":96,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["bottom",{"_index":531,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:10px",{"_index":475,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:1px",{"_index":98,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["box",{"_index":72,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["break",{"_index":1342,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["browse",{"_index":2550,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":433,"title":{},"body":{"pipes/Base64ImageRef.html":{},"components/RecordList.html":{},"modules.html":{}}}],["btn",{"_index":534,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["btoa",{"_index":389,"title":{},"body":{"classes/Base64.html":{}}}],["buffer",{"_index":386,"title":{},"body":{"classes/Base64.html":{}}}],["build",{"_index":835,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["builds",{"_index":2449,"title":{},"body":{"index.html":{}}}],["built",{"_index":2469,"title":{},"body":{"index.html":{}}}],["bulkdelete",{"_index":682,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["bulkdelete(query",{"_index":687,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["bulkupdate",{"_index":683,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["button",{"_index":480,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttonlabel",{"_index":1576,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["buttons",{"_index":491,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttontext",{"_index":1556,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["byte",{"_index":2220,"title":{},"body":{"classes/Utf8.html":{}}}],["byte1",{"_index":2246,"title":{},"body":{"classes/Utf8.html":{}}}],["byte2",{"_index":2247,"title":{},"body":{"classes/Utf8.html":{}}}],["byte3",{"_index":2248,"title":{},"body":{"classes/Utf8.html":{}}}],["byte4",{"_index":2249,"title":{},"body":{"classes/Utf8.html":{}}}],["bytearray",{"_index":2174,"title":{},"body":{"classes/Utf8.html":{}}}],["bytecount",{"_index":2175,"title":{},"body":{"classes/Utf8.html":{}}}],["byteindex",{"_index":2176,"title":{},"body":{"classes/Utf8.html":{}}}],["bytes",{"_index":2250,"title":{},"body":{"classes/Utf8.html":{}}}],["bytestring",{"_index":2205,"title":{},"body":{"classes/Utf8.html":{}}}],["c",{"_index":408,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["c9c9c9",{"_index":100,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cache",{"_index":1161,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cached",{"_index":1029,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculated",{"_index":1274,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["calculatehash",{"_index":975,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatehash(body",{"_index":1075,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculates",{"_index":972,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["calculation",{"_index":1665,"title":{},"body":{"classes/MD5.html":{}}}],["call",{"_index":565,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["call4drestmethod",{"_index":2435,"title":{},"body":{"index.html":{}}}],["call4drestmethod(fourdmethod",{"_index":1058,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["callback",{"_index":1303,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["called",{"_index":919,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["caller",{"_index":1053,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calling",{"_index":2437,"title":{},"body":{"index.html":{}}}],["calls",{"_index":2432,"title":{},"body":{"index.html":{}}}],["can't",{"_index":106,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["can\\'t",{"_index":270,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cancel",{"_index":652,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["cancelled",{"_index":640,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["carneiro",{"_index":2491,"title":{},"body":{"index.html":{},"license.html":{}}}],["cascade",{"_index":503,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["cascadedeleterecord",{"_index":505,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["case",{"_index":393,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["catch",{"_index":2296,"title":{},"body":{"components/WebAppContainer.html":{}}}],["catch((e",{"_index":1663,"title":{},"body":{"components/LoginCmp.html":{}}}],["catch((error",{"_index":1421,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["catch((reason",{"_index":884,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["catch(e",{"_index":2294,"title":{},"body":{"components/WebAppContainer.html":{}}}],["ccc",{"_index":76,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["cdata",{"_index":1383,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["changed",{"_index":1776,"title":{},"body":{"injectables/Modal.html":{}}}],["changes",{"_index":1162,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["changeselection",{"_index":1559,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changeselection(ev",{"_index":1569,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changing",{"_index":1329,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["character",{"_index":351,"title":{},"body":{"classes/Base64.html":{}}}],["characters",{"_index":375,"title":{},"body":{"classes/Base64.html":{}}}],["charge",{"_index":2500,"title":{},"body":{"license.html":{}}}],["check",{"_index":1487,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkbox",{"_index":1238,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["checked",{"_index":1777,"title":{},"body":{"injectables/Modal.html":{}}}],["checks",{"_index":1478,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkscalarvalue",{"_index":2177,"title":{},"body":{"classes/Utf8.html":{}}}],["checkscalarvalue(codepoint",{"_index":2189,"title":{},"body":{"classes/Utf8.html":{}}}],["choice",{"_index":1117,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["chromium",{"_index":334,"title":{},"body":{"classes/Base64.html":{}}}],["claim",{"_index":2539,"title":{},"body":{"license.html":{}}}],["class",{"_index":212,"title":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["class/parameter",{"_index":1147,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["classes",{"_index":315,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"overview.html":{}}}],["classname",{"_index":1220,"title":{},"body":{"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["clause",{"_index":732,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clean",{"_index":1096,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clear",{"_index":566,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["clear:both",{"_index":94,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["clearform",{"_index":561,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["clearquery",{"_index":1969,"title":{},"body":{"components/RecordList.html":{}}}],["clearrecord",{"_index":1339,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clearrecorddirtyflag",{"_index":1485,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clears",{"_index":1338,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clicking",{"_index":1809,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["clicks",{"_index":649,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["cliking",{"_index":1989,"title":{},"body":{"components/RecordList.html":{}}}],["closable",{"_index":1808,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["close",{"_index":622,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["close(result",{"_index":631,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["closed",{"_index":1259,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/ModalConfig.html":{}}}],["closedialog",{"_index":1706,"title":{},"body":{"injectables/Modal.html":{}}}],["closedialog(event",{"_index":1714,"title":{},"body":{"injectables/Modal.html":{}}}],["closing",{"_index":1260,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["cluster_fourdmodule",{"_index":893,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_fourdmodule_providers",{"_index":894,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_js44dmodule",{"_index":1528,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_declarations",{"_index":1529,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_exports",{"_index":1531,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_imports",{"_index":1530,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_js44dmodule_providers",{"_index":1532,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_modalmodule",{"_index":1863,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1864,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1865,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_providers",{"_index":1866,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cmn",{"_index":1668,"title":{},"body":{"classes/MD5.html":{}}}],["cmn(q",{"_index":1682,"title":{},"body":{"classes/MD5.html":{}}}],["code",{"_index":960,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["codepoint",{"_index":2191,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints",{"_index":2234,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints.length",{"_index":2236,"title":{},"body":{"classes/Utf8.html":{}}}],["col",{"_index":773,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.field",{"_index":788,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.formula",{"_index":790,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.indexof",{"_index":775,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.joinfk",{"_index":1501,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.joinpk",{"_index":1502,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.longname",{"_index":792,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.name",{"_index":791,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.substr(col.indexof",{"_index":778,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.subtable",{"_index":1491,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.fields",{"_index":1494,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.tablename",{"_index":1500,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["collection",{"_index":665,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["collist",{"_index":768,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["collist.push",{"_index":777,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["color",{"_index":469,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["color:#282828",{"_index":38,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cols",{"_index":1507,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col",{"_index":1509,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col.name",{"_index":1510,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["column",{"_index":723,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["columns",{"_index":674,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["combine",{"_index":460,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["combined",{"_index":927,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["combinesearches",{"_index":2138,"title":{},"body":{"components/RecordList.html":{}}}],["comes",{"_index":1277,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["commonmodule",{"_index":1538,"title":{},"body":{"modules/JS44DModule.html":{}}}],["companion",{"_index":2376,"title":{},"body":{"index.html":{}}}],["comparator",{"_index":157,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["comparatorlist",{"_index":131,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["compatible",{"_index":354,"title":{},"body":{"classes/Base64.html":{}}}],["complete",{"_index":1412,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["completion",{"_index":1057,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["component",{"_index":0,"title":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["component.dialogconfig",{"_index":1788,"title":{},"body":{"injectables/Modal.html":{}}}],["component_template",{"_index":269,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["componentfactoryresolver",{"_index":1710,"title":{},"body":{"injectables/Modal.html":{}}}],["componentref",{"_index":594,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{},"overview.html":{}}}],["components/widgets",{"_index":2415,"title":{},"body":{"index.html":{}}}],["componenttype",{"_index":1724,"title":{},"body":{"injectables/Modal.html":{}}}],["componenttype['name",{"_index":1782,"title":{},"body":{"injectables/Modal.html":{}}}],["conditions",{"_index":2519,"title":{},"body":{"license.html":{}}}],["config",{"_index":1557,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["config.isblocking",{"_index":1833,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard",{"_index":1834,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard).length",{"_index":1836,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.selfcentered",{"_index":1767,"title":{},"body":{"injectables/Modal.html":{}}}],["config.size",{"_index":1831,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["configuration",{"_index":1727,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["configured",{"_index":648,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["confirm((this.queryband.cascadedeleterecord",{"_index":2090,"title":{},"body":{"components/RecordList.html":{}}}],["connection",{"_index":2547,"title":{},"body":{"license.html":{}}}],["connector",{"_index":158,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["console.log('authenticated",{"_index":1658,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log('error",{"_index":829,"title":{},"body":{"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["console.log('hash",{"_index":979,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["console.log('oops",{"_index":1662,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(e",{"_index":1664,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(event",{"_index":1786,"title":{},"body":{"injectables/Modal.html":{}}}],["console.log(this.dialoginstance",{"_index":2061,"title":{},"body":{"components/RecordList.html":{}}}],["const",{"_index":232,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(@inject(httpclient",{"_index":1036,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["constructor(componentfactoryresolver",{"_index":1709,"title":{},"body":{"injectables/Modal.html":{}}}],["constructor(dialog",{"_index":1563,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(elementref",{"_index":1898,"title":{},"body":{"components/QueryBand.html":{}}}],["constructor(fourd",{"_index":138,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["constructor(modal",{"_index":1982,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["constructor(private",{"_index":442,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["constructor(public",{"_index":1607,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["constructor(tabs",{"_index":2152,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["constructor(title",{"_index":1873,"title":{},"body":{"classes/OKOnlyContent.html":{},"classes/YesNoModalContent.html":{}}}],["contain",{"_index":400,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["container",{"_index":2475,"title":{},"body":{"index.html":{}}}],["containers/advancedquery",{"_index":1542,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/queryband",{"_index":1541,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordeditwindow",{"_index":1544,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordlist",{"_index":1543,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/tabs",{"_index":1545,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/webappcontainer",{"_index":1546,"title":{},"body":{"modules/JS44DModule.html":{}}}],["contains",{"_index":402,"title":{},"body":{"classes/Base64.html":{}}}],["content",{"_index":305,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["content'},{'name",{"_index":286,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["contentchild",{"_index":447,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["contentchild('customqueryband",{"_index":451,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentchild(datagrid",{"_index":2024,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(queryband",{"_index":2022,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(querybanddirective",{"_index":526,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentheaders",{"_index":1060,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentheaders['accept",{"_index":1065,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentref",{"_index":606,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["contents",{"_index":1276,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["context",{"_index":1887,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.body",{"_index":1885,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.notext",{"_index":2300,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.oktext",{"_index":1886,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["context.title",{"_index":1884,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.yestext",{"_index":2299,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["continuation",{"_index":2245,"title":{},"body":{"classes/Utf8.html":{}}}],["continuationbyte",{"_index":2239,"title":{},"body":{"classes/Utf8.html":{}}}],["contract",{"_index":2543,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2489,"title":{},"body":{"index.html":{}}}],["control",{"_index":1732,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["controls/fourddropdown",{"_index":1547,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/fourdregistryinput",{"_index":1554,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/quickfindinput",{"_index":1548,"title":{},"body":{"modules/JS44DModule.html":{}}}],["convert",{"_index":434,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["converted",{"_index":1049,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["convertobjecttourl",{"_index":961,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertobjecttourl(body",{"_index":1078,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["converts",{"_index":1163,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["copies",{"_index":2514,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1425,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{},"license.html":{}}}],["copyright",{"_index":2494,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":382,"title":{},"body":{"classes/Base64.html":{}}}],["corresponding",{"_index":2043,"title":{},"body":{"components/RecordList.html":{}}}],["corresponds",{"_index":918,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cors",{"_index":1084,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["count",{"_index":1111,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["counter",{"_index":2210,"title":{},"body":{"classes/Utf8.html":{}}}],["coverage",{"_index":2318,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crap",{"_index":1067,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["create",{"_index":2448,"title":{},"body":{"index.html":{}}}],["createbyte",{"_index":2178,"title":{},"body":{"classes/Utf8.html":{}}}],["createbyte(codepoint",{"_index":2192,"title":{},"body":{"classes/Utf8.html":{}}}],["credentials",{"_index":2479,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1408,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["crud",{"_index":1293,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["css3",{"_index":77,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currectly",{"_index":2443,"title":{},"body":{"index.html":{}}}],["current",{"_index":463,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["currently",{"_index":1479,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["currentrecord",{"_index":675,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordEditWindow.html":{}}}],["currentrecordnumber",{"_index":1387,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["currenttable",{"_index":115,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currentuser",{"_index":994,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["currentuserid",{"_index":995,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["currentuserpassword",{"_index":997,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["custom",{"_index":449,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["custombuttonbar",{"_index":445,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["custombuttonbar'},{'name",{"_index":308,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["custombuttonbardirective",{"_index":307,"title":{"directives/CustomButtonBarDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["custome",{"_index":564,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["customstyle",{"_index":1792,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["d",{"_index":409,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["damages",{"_index":2540,"title":{},"body":{"license.html":{}}}],["data",{"_index":740,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data('kendowindow",{"_index":1766,"title":{},"body":{"injectables/Modal.html":{}}}],["data[field.name",{"_index":1461,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["database",{"_index":673,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["datagrid",{"_index":272,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["datagrid'},{'name",{"_index":273,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["datagrid/datagrid",{"_index":1549,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["datamodel",{"_index":782,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["date",{"_index":851,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["date')?element.value.replace",{"_index":241,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["date(0,0,0,hh,mm,ss",{"_index":1324,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["date(datevalue",{"_index":1175,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["date(value.replace",{"_index":854,"title":{},"body":{"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["date.tolocaledatestring",{"_index":855,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["dateto4dformat(thedate",{"_index":1167,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datetodomformat(thedate",{"_index":1172,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datevalue",{"_index":1173,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["datevalue.getfullyear().tostring",{"_index":1380,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["datevalue.getmonth",{"_index":1381,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dbl",{"_index":1988,"title":{},"body":{"components/RecordList.html":{}}}],["deal",{"_index":2002,"title":{},"body":{"components/RecordList.html":{},"license.html":{}}}],["dealings",{"_index":2548,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1945,"title":{},"body":{"components/QuickFindInput.html":{}}}],["declaration",{"_index":2413,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":889,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}],["declare",{"_index":971,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["declared",{"_index":2408,"title":{},"body":{"index.html":{}}}],["decode",{"_index":321,"title":{},"body":{"classes/Base64.html":{}}}],["decode(input",{"_index":345,"title":{},"body":{"classes/Base64.html":{}}}],["decoded",{"_index":381,"title":{},"body":{"classes/Base64.html":{}}}],["decodesymbol",{"_index":2179,"title":{},"body":{"classes/Utf8.html":{}}}],["decoding",{"_index":361,"title":{},"body":{"classes/Base64.html":{}}}],["decorators",{"_index":1938,"title":{},"body":{"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["default",{"_index":148,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["default=false",{"_index":1447,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["defaultconfig",{"_index":1712,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["defaultconfig.keyboard",{"_index":1837,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaultconfig.size",{"_index":1832,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaults",{"_index":1001,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["defaultvalue",{"_index":1154,"title":{},"body":{"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/MD5.html":{}}}],["deferred",{"_index":585,"title":{"classes/Deferred.html":{}},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["defined",{"_index":141,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["defines",{"_index":694,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["definition",{"_index":1300,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["del",{"_index":543,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["delete",{"_index":466,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["deleted",{"_index":700,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["deleterecord",{"_index":1970,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["deleterecord(cascade",{"_index":1448,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["deletes",{"_index":2456,"title":{},"body":{"index.html":{}}}],["depend",{"_index":2484,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":888,"title":{"dependencies.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":2458,"title":{},"body":{"index.html":{}}}],["descending",{"_index":796,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["described",{"_index":356,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["describes",{"_index":907,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["describing",{"_index":1301,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["description",{"_index":663,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["designed",{"_index":352,"title":{},"body":{"classes/Base64.html":{}}}],["detailed",{"_index":2385,"title":{},"body":{"index.html":{}}}],["determine",{"_index":923,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["determining",{"_index":1112,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["development",{"_index":1005,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["di",{"_index":1750,"title":{},"body":{"injectables/Modal.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["dialog.close",{"_index":637,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialog.resizing._draggable.userevents.bind('release",{"_index":2063,"title":{},"body":{"components/RecordList.html":{}}}],["dialog.title(title",{"_index":629,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialogcomponentref",{"_index":1771,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogcomponentref.changedetectorref.detectchanges",{"_index":1778,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogconfig",{"_index":119,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{}}}],["dialogid",{"_index":1719,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance",{"_index":1765,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["dialoginstance.contentref",{"_index":1770,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.kendodialog",{"_index":1772,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.result",{"_index":1784,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogs/listselectordialog",{"_index":1551,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["digest",{"_index":1092,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["directive",{"_index":267,"title":{"directives/CustomButtonBarDirective.html":{},"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{}}}],["directives",{"_index":306,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["directly",{"_index":1394,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["directory",{"_index":2422,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1357,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{}}}],["disabled",{"_index":1349,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dismiss",{"_index":624,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dismissal",{"_index":1263,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["dismissed",{"_index":1262,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["display",{"_index":2009,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["display:inline",{"_index":26,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["display:none",{"_index":472,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["displayed",{"_index":2472,"title":{},"body":{"index.html":{}}}],["displays",{"_index":2468,"title":{},"body":{"index.html":{}}}],["dispose",{"_index":656,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["distinctuntilchanged",{"_index":1946,"title":{},"body":{"components/QuickFindInput.html":{}}}],["distribute",{"_index":2511,"title":{},"body":{"license.html":{}}}],["divided",{"_index":2399,"title":{},"body":{"index.html":{}}}],["doaddrecord",{"_index":576,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doclear",{"_index":559,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["documentation",{"_index":909,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation](https://github.com/fourctv/fourdrestapi/wiki/the",{"_index":1212,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dodeleterecord",{"_index":580,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doeditrecord",{"_index":578,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doesn't",{"_index":1754,"title":{},"body":{"injectables/Modal.html":{}}}],["doexportgrid",{"_index":574,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["domanagesets",{"_index":1895,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{}}}],["domanagesets(action",{"_index":552,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["domsanitizer",{"_index":431,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["doqbe",{"_index":545,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doqff",{"_index":547,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doquery",{"_index":123,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["dorefresh",{"_index":554,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dosort",{"_index":557,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dot",{"_index":1282,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dowehaveaquery",{"_index":582,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["down",{"_index":42,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["drop",{"_index":41,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["dropdown",{"_index":860,"title":{},"body":{"components/FourDDropDown.html":{},"components/RecordList.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":275,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["dropdownisopen",{"_index":525,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["during",{"_index":1004,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dynamic",{"_index":984,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["each",{"_index":715,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["edit",{"_index":293,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["editing",{"_index":2074,"title":{},"body":{"components/RecordList.html":{}}}],["editwindow",{"_index":1978,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler",{"_index":1971,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler(result",{"_index":2000,"title":{},"body":{"components/RecordList.html":{}}}],["effect",{"_index":80,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element",{"_index":266,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["element.comparator",{"_index":236,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.connector",{"_index":244,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field",{"_index":238,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field.name",{"_index":235,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.split",{"_index":2280,"title":{},"body":{"components/WebAppContainer.html":{}}}],["elementref",{"_index":200,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["embedded",{"_index":436,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["emitted",{"_index":507,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["empty",{"_index":1287,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["enable",{"_index":484,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enableaddrecord",{"_index":500,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebutton",{"_index":1896,"title":{},"body":{"components/QueryBand.html":{}}}],["enablebutton(btn",{"_index":532,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebuttonbar",{"_index":499,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablecombisearch",{"_index":493,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enabled",{"_index":504,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enabledeleterecord",{"_index":502,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableeditrecord",{"_index":501,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableexportgrid",{"_index":498,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqbe",{"_index":486,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqff",{"_index":488,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesets",{"_index":492,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesort",{"_index":496,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["encapsulation",{"_index":2258,"title":{},"body":{"components/WebAppContainer.html":{}}}],["encode",{"_index":322,"title":{},"body":{"classes/Base64.html":{}}}],["encode(input",{"_index":347,"title":{},"body":{"classes/Base64.html":{}}}],["encodecodepoint",{"_index":2180,"title":{},"body":{"classes/Utf8.html":{}}}],["encodecodepoint(codepoint",{"_index":2196,"title":{},"body":{"classes/Utf8.html":{}}}],["encoded",{"_index":383,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(obj[p",{"_index":967,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2243,"title":{},"body":{"classes/Utf8.html":{}}}],["ensures",{"_index":2476,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2122,"title":{},"body":{"components/RecordList.html":{}}}],["entire",{"_index":2019,"title":{},"body":{"components/RecordList.html":{}}}],["entries",{"_index":1028,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["entry",{"_index":1047,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["entrycomponents",{"_index":1534,"title":{},"body":{"modules/JS44DModule.html":{},"modules/ModalModule.html":{}}}],["equivalent",{"_index":1475,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["error",{"_index":317,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/WebAppContainer.html":{}}}],["error('invalid",{"_index":2238,"title":{},"body":{"classes/Utf8.html":{}}}],["error/warning",{"_index":1780,"title":{},"body":{"injectables/Modal.html":{}}}],["essential",{"_index":2402,"title":{},"body":{"index.html":{}}}],["establish",{"_index":939,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["establishes",{"_index":932,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["etc",{"_index":2445,"title":{},"body":{"index.html":{}}}],["ev",{"_index":1571,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["ev.target.selectedindex",{"_index":1612,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["event",{"_index":175,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"license.html":{}}}],["event.preventdefault",{"_index":1652,"title":{},"body":{"components/LoginCmp.html":{},"components/Tab.html":{},"components/Tabs.html":{}}}],["event.stoppropagation",{"_index":1613,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["event.target.selectedindex",{"_index":225,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["event.target.textcontent",{"_index":258,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["eventemitter",{"_index":446,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/WebAppContainer.html":{}}}],["events",{"_index":506,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["example",{"_index":1483,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["excel",{"_index":497,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["excellent",{"_index":365,"title":{},"body":{"classes/Base64.html":{}}}],["execute",{"_index":1464,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["executed",{"_index":1304,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["exist",{"_index":2075,"title":{},"body":{"components/RecordList.html":{}}}],["existing",{"_index":1739,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["exists",{"_index":563,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["exit",{"_index":645,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["export",{"_index":211,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["exports",{"_index":892,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":2527,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1775,"title":{},"body":{"injectables/Modal.html":{}}}],["expresstion",{"_index":1275,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["extend",{"_index":2450,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":2453,"title":{},"body":{"index.html":{}}}],["extra",{"_index":2212,"title":{},"body":{"classes/Utf8.html":{}}}],["extractmodeldata",{"_index":1459,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["false",{"_index":186,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["fetching",{"_index":670,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["ff",{"_index":1669,"title":{},"body":{"classes/MD5.html":{}}}],["ff(a",{"_index":1184,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["field",{"_index":155,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["field's",{"_index":1511,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.formula",{"_index":1521,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.isrelated",{"_index":1516,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.longname",{"_index":104,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.name",{"_index":230,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.readonly",{"_index":1526,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.related",{"_index":213,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["field.subtable",{"_index":1524,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.type",{"_index":1340,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/attribute",{"_index":1297,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/column",{"_index":713,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["field/property",{"_index":1517,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fieldlist",{"_index":132,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["fieldname",{"_index":1334,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fields",{"_index":108,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fields/columns",{"_index":716,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2504,"title":{},"body":{"license.html":{}}}],["filter",{"_index":689,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["filtered",{"_index":1132,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["filteroptions",{"_index":676,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["first",{"_index":1407,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["fit",{"_index":2018,"title":{},"body":{"components/RecordList.html":{}}}],["fitness",{"_index":2532,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1314,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fld",{"_index":772,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.formula",{"_index":784,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.longname",{"_index":787,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.name",{"_index":785,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["float:left",{"_index":24,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["floating",{"_index":2405,"title":{},"body":{"index.html":{}}}],["folder",{"_index":2421,"title":{},"body":{"index.html":{}}}],["following",{"_index":948,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":862,"title":{},"body":{"components/FourDDropDown.html":{}}}],["foreign",{"_index":938,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["form",{"_index":567,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":733,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["formatted",{"_index":1166,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["formcontrol",{"_index":1943,"title":{},"body":{"components/QuickFindInput.html":{}}}],["formdata",{"_index":976,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata.hasownproperty(key",{"_index":977,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata[key",{"_index":978,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["forms",{"_index":2488,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":1535,"title":{},"body":{"modules/JS44DModule.html":{}}}],["formula",{"_index":786,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["formulas",{"_index":1468,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["found",{"_index":754,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fourd",{"_index":147,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["fourd.module",{"_index":1540,"title":{},"body":{"modules/JS44DModule.html":{}}}],["fourdapiversion",{"_index":1015,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdcollection",{"_index":660,"title":{"injectables/FourDCollection.html":{}},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourddatetolocalestring",{"_index":853,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["fourddatetostring",{"_index":848,"title":{"pipes/FourDDateToString.html":{}},"body":{"pipes/FourDDateToString.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["fourddeletecallbackmethod_",{"_index":1306,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourddropdown",{"_index":274,"title":{"components/FourDDropDown.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdinterface",{"_index":139,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdinterface._fourdurl",{"_index":1007,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._listcache[listname",{"_index":1119,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache",{"_index":1149,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache.push(body",{"_index":1157,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.authentication",{"_index":874,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["fourdinterface.currentuser",{"_index":802,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserid",{"_index":1099,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserpassword",{"_index":1095,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.fourdapiversion",{"_index":1012,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance",{"_index":765,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance.call4drestmethod('rest_getapiversion",{"_index":1009,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.sessionkey",{"_index":1073,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.emit(fourdinterface.currentuser",{"_index":1107,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.subscribe",{"_index":1236,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["fourdinterface.userhassignedin.subscribe(user",{"_index":877,"title":{},"body":{"components/FourDDropDown.html":{}}}],["fourdmethod",{"_index":1045,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdmodel",{"_index":736,"title":{},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"components/RecordEditWindow.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdmodels",{"_index":666,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fourdmodule",{"_index":886,"title":{"modules/FourDModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fourdquery",{"_index":688,"title":{"classes/FourDQuery.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["fourdregistryinput",{"_index":276,"title":{"components/FourDRegistryInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdrest",{"_index":1013,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdrestapi",{"_index":1044,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdsavecallbackmethod_",{"_index":1305,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourdurl",{"_index":1008,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdurl():string",{"_index":1006,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdversion",{"_index":1628,"title":{},"body":{"components/LoginCmp.html":{}}}],["free",{"_index":2499,"title":{},"body":{"license.html":{}}}],["fresh",{"_index":1424,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fully",{"_index":353,"title":{},"body":{"classes/Base64.html":{}}}],["funcionality",{"_index":2404,"title":{},"body":{"index.html":{}}}],["function",{"_index":323,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":668,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["functions",{"_index":958,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["furnished",{"_index":2517,"title":{},"body":{"license.html":{}}}],["further",{"_index":696,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["g",{"_index":341,"title":{},"body":{"classes/Base64.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["g,''):element.value",{"_index":242,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["generic",{"_index":1038,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["get(field",{"_index":1312,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["get4dlist(listname",{"_index":1118,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getcolumnlist(includesubtables",{"_index":1506,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson",{"_index":684,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson(columns",{"_index":706,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getfielddescription(fieldname",{"_index":1514,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfieldproperties(fieldname",{"_index":1335,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfiltered4dlist(listname",{"_index":1140,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getlength",{"_index":756,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getlongname(fieldname",{"_index":1512,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecord",{"_index":2455,"title":{},"body":{"index.html":{}}}],["getrecord(recordnumber",{"_index":1391,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecordcount(tablename:string",{"_index":1113,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getrecords",{"_index":685,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["getrecords(query",{"_index":717,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getregistryvalue(theclass",{"_index":1148,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getresult",{"_index":1860,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["gets",{"_index":1116,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["getselectedrecords",{"_index":2026,"title":{},"body":{"components/RecordList.html":{}}}],["getter/setter",{"_index":2452,"title":{},"body":{"index.html":{}}}],["getting",{"_index":2372,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvaluesfrom4d(values",{"_index":1469,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["gg",{"_index":1670,"title":{},"body":{"classes/MD5.html":{}}}],["gg(a",{"_index":1186,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["given",{"_index":1333,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["global",{"_index":985,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["glyphicon",{"_index":521,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["going",{"_index":2393,"title":{},"body":{"index.html":{}}}],["grab",{"_index":1423,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["granted",{"_index":2498,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1994,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["grid's",{"_index":2047,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows",{"_index":2033,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows.length",{"_index":2120,"title":{},"body":{"components/RecordList.html":{}}}],["groove",{"_index":478,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["gt;table.field",{"_index":794,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["h5",{"_index":27,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["h5:hover",{"_index":36,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["hack",{"_index":1757,"title":{},"body":{"injectables/Modal.html":{}}}],["handle",{"_index":857,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["handled",{"_index":411,"title":{},"body":{"classes/Base64.html":{}}}],["hash",{"_index":973,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1071,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["height",{"_index":191,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["height(v",{"_index":1593,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["height:40px",{"_index":474,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hello",{"_index":1875,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["here",{"_index":396,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"index.html":{}}}],["hereby",{"_index":2497,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1671,"title":{},"body":{"classes/MD5.html":{}}}],["hex(x",{"_index":1209,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hex_chr",{"_index":1666,"title":{},"body":{"classes/MD5.html":{}}}],["hh",{"_index":1318,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["hh(a",{"_index":1187,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hh:mm:ss",{"_index":1177,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hidden",{"_index":62,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hideno",{"_index":2308,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["hierarchical",{"_index":1137,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hierarchy",{"_index":1139,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["highlighted",{"_index":454,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hits",{"_index":2038,"title":{},"body":{"components/RecordList.html":{}}}],["hitting",{"_index":1991,"title":{},"body":{"components/RecordList.html":{}}}],["holders",{"_index":2537,"title":{},"body":{"license.html":{}}}],["holds",{"_index":742,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["horizontal",{"_index":2486,"title":{},"body":{"index.html":{}}}],["hostlistener",{"_index":2028,"title":{},"body":{"components/RecordList.html":{}}}],["hostlistener('window:resize",{"_index":2069,"title":{},"body":{"components/RecordList.html":{}}}],["hostlisteners",{"_index":1979,"title":{},"body":{"components/RecordList.html":{}}}],["hostviewref",{"_index":1703,"title":{},"body":{"injectables/Modal.html":{}}}],["hover",{"_index":51,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["html",{"_index":265,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["http",{"_index":1016,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["http://localhost:8080",{"_index":1000,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["http://whatwg.org/c#alphanumeric",{"_index":373,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/common",{"_index":349,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/webappapis.html#dom",{"_index":358,"title":{},"body":{"classes/Base64.html":{}}}],["httpclient",{"_index":900,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["httpclient:httpclient",{"_index":1037,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpclientmodule",{"_index":901,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{}}}],["httpheaders",{"_index":953,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpheaders(contentheaders",{"_index":1070,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["https://gist.github.com/atk/1020396",{"_index":366,"title":{},"body":{"classes/Base64.html":{}}}],["https://mths.be/punycode",{"_index":2209,"title":{},"body":{"classes/Utf8.html":{}}}],["i.e",{"_index":630,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["icon",{"_index":468,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["icustommodal",{"_index":206,"title":{"classes/ICustomModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModal.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["icustommodalcomponent",{"_index":11,"title":{"classes/ICustomModalComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["id",{"_index":153,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{}}}],["idattribute",{"_index":1299,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["identification",{"_index":1730,"title":{},"body":{"injectables/Modal.html":{}}}],["identifier",{"_index":2319,"title":{},"body":{"coverage.html":{}}}],["ifielddescription",{"_index":1265,"title":{"interfaces/IFieldDescription.html":{}},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["ignore",{"_index":1377,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["ii",{"_index":1672,"title":{},"body":{"classes/MD5.html":{}}}],["ii(a",{"_index":1189,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["image",{"_index":435,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["imagetype",{"_index":426,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["immediately",{"_index":2142,"title":{},"body":{"components/RecordList.html":{}}}],["implementation",{"_index":333,"title":{},"body":{"classes/Base64.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["implicitly",{"_index":1820,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["implied",{"_index":2528,"title":{},"body":{"license.html":{}}}],["import",{"_index":199,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["important",{"_index":46,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{}}}],["importing",{"_index":2414,"title":{},"body":{"index.html":{}}}],["imports",{"_index":905,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{}}}],["in'},{'name",{"_index":283,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["include",{"_index":2252,"title":{},"body":{"classes/Utf8.html":{}}}],["included",{"_index":2412,"title":{},"body":{"index.html":{},"license.html":{}}}],["includes",{"_index":1504,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["includesubtables",{"_index":1503,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["including",{"_index":2506,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2276,"title":{},"body":{"components/WebAppContainer.html":{}}}],["incorrect",{"_index":1627,"title":{},"body":{"components/LoginCmp.html":{}}}],["indeed",{"_index":1328,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["index",{"_index":68,"title":{"index.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1268,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["indicates",{"_index":1019,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["individual",{"_index":1290,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["inelement",{"_index":611,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["informed",{"_index":724,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["inherit",{"_index":861,"title":{},"body":{"components/FourDDropDown.html":{}}}],["initialization",{"_index":1484,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["initialize",{"_index":762,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["initialized",{"_index":2005,"title":{},"body":{"components/RecordList.html":{}}}],["initiator",{"_index":1002,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["inject",{"_index":763,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["injectable",{"_index":595,"title":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["injectables",{"_index":661,"title":{},"body":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"overview.html":{}}}],["injected",{"_index":746,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["input",{"_index":202,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{}}}],["input'},{'name",{"_index":278,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["input.charcodeat(position",{"_index":417,"title":{},"body":{"classes/Base64.html":{}}}],["input.length",{"_index":370,"title":{},"body":{"classes/Base64.html":{}}}],["input.replace",{"_index":372,"title":{},"body":{"classes/Base64.html":{}}}],["inputs",{"_index":130,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{}}}],["inputtype",{"_index":1221,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["insert",{"_index":1346,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["inserted",{"_index":1427,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["insertrecord",{"_index":1428,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["inside",{"_index":609,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["install",{"_index":2396,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2395,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2383,"title":{},"body":{"index.html":{}}}],["instance",{"_index":921,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["instances",{"_index":926,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["instead",{"_index":726,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["instruct",{"_index":2392,"title":{},"body":{"index.html":{}}}],["instruction",{"_index":1790,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["interact",{"_index":2461,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":2017,"title":{},"body":{"components/RecordList.html":{}}}],["interface",{"_index":983,"title":{"interfaces/IFieldDescription.html":{}},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaceinstance:fourdinterface",{"_index":986,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["interfaces",{"_index":1266,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["internal",{"_index":518,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["intersection",{"_index":910,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["invalid",{"_index":380,"title":{},"body":{"classes/Base64.html":{}}}],["invalidcharactererror",{"_index":318,"title":{},"body":{"classes/Base64.html":{}}}],["invoked",{"_index":642,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{}}}],["isblocking",{"_index":188,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["iscalculatedfield(field",{"_index":1520,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isdraggable",{"_index":1793,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isitemselected",{"_index":124,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["isitemselected(field",{"_index":167,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["isitemselected(item",{"_index":870,"title":{},"body":{"components/FourDDropDown.html":{}}}],["ismodal",{"_index":187,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["ismodifiedfield(field",{"_index":1518,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isnan(config.keyboard",{"_index":1838,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isnan(thedate",{"_index":1179,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isnan(thedate))?thedate.tojson().substr(0",{"_index":1168,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isreadonly(field",{"_index":1525,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrecordloaded",{"_index":1480,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelated",{"_index":1269,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelatedfield(field",{"_index":1515,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isresizable",{"_index":185,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["issubtable(field",{"_index":1523,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["issues",{"_index":1085,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["it's",{"_index":1410,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["item",{"_index":105,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["item.class",{"_index":1150,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.length",{"_index":2281,"title":{},"body":{"components/WebAppContainer.html":{}}}],["item.parameter",{"_index":1151,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.selector",{"_index":1152,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item[1",{"_index":2283,"title":{},"body":{"components/WebAppContainer.html":{}}}],["items",{"_index":945,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["itemslist",{"_index":1561,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["it’s",{"_index":2244,"title":{},"body":{"classes/Utf8.html":{}}}],["j",{"_index":1205,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["join",{"_index":911,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["joinfk",{"_index":912,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["joinpk",{"_index":913,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["jointable",{"_index":914,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["jpeg",{"_index":428,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["jquery",{"_index":2370,"title":{},"body":{"dependencies.html":{}}}],["js44d",{"_index":1213,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["js44d';they",{"_index":2411,"title":{},"body":{"index.html":{}}}],["js44d';you",{"_index":2418,"title":{},"body":{"index.html":{}}}],["js44d/jsfourdcollection",{"_index":904,"title":{},"body":{"modules/FourDModule.html":{}}}],["js44d/jsfourdinterface",{"_index":210,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["js44d/jsfourdmodel",{"_index":903,"title":{},"body":{"modules/FourDModule.html":{},"components/RecordEditWindow.html":{}}}],["js44dmodule",{"_index":1527,"title":{"modules/JS44DModule.html":{}},"body":{"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsfourdcollection",{"_index":1289,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["jsfourdinterface",{"_index":760,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["jsfourdmodel",{"_index":761,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json",{"_index":709,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.parse(atob(this.urlsearchparms['key",{"_index":2291,"title":{},"body":{"components/WebAppContainer.html":{}}}],["json.parse(localstorage.getitem(tablename",{"_index":2114,"title":{},"body":{"components/RecordList.html":{}}}],["json.parse(recorddata[field",{"_index":1458,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(collist",{"_index":793,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.stringify(error",{"_index":1110,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["json.stringify(query",{"_index":809,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["json.stringify(recorddata",{"_index":1384,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(savedsearches",{"_index":2118,"title":{},"body":{"components/RecordList.html":{}}}],["json.stringify(savedsets",{"_index":2146,"title":{},"body":{"components/RecordList.html":{}}}],["julio",{"_index":2490,"title":{},"body":{"index.html":{},"license.html":{}}}],["k",{"_index":1696,"title":{},"body":{"classes/MD5.html":{}}}],["keep",{"_index":1309,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["keeps",{"_index":1307,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["kendo.prompt('please",{"_index":2121,"title":{},"body":{"components/RecordList.html":{}}}],["kendo.ui.progress($(this.elementref.nativeelement",{"_index":2079,"title":{},"body":{"components/RecordList.html":{}}}],["kendodialog",{"_index":607,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["kendoui",{"_index":2467,"title":{},"body":{"index.html":{}}}],["key",{"_index":647,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.password",{"_index":2293,"title":{},"body":{"components/WebAppContainer.html":{}}}],["keyboard",{"_index":646,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["kind",{"_index":2526,"title":{},"body":{"license.html":{}}}],["last",{"_index":256,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["latest",{"_index":755,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["latin1",{"_index":404,"title":{},"body":{"classes/Base64.html":{}}}],["left",{"_index":57,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["left:5px",{"_index":476,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["legend",{"_index":264,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["length",{"_index":369,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["less",{"_index":112,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lesslines",{"_index":125,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lest",{"_index":1409,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["let's",{"_index":780,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["level",{"_index":1136,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["lg",{"_index":1827,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["li",{"_index":25,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["li:hover",{"_index":39,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["liability",{"_index":2541,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2538,"title":{},"body":{"license.html":{}}}],["library",{"_index":2374,"title":{},"body":{"index.html":{}}}],["license",{"_index":2492,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2507,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2529,"title":{},"body":{"license.html":{}}}],["line",{"_index":252,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["linear",{"_index":84,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lines",{"_index":947,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["links",{"_index":933,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["list",{"_index":54,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["list'},{'name",{"_index":296,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["listed",{"_index":725,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["listing",{"_index":711,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["listitems",{"_index":1126,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listname",{"_index":864,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listoffields",{"_index":160,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["listoptions",{"_index":865,"title":{},"body":{"components/FourDDropDown.html":{}}}],["lists",{"_index":1027,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listselectordialog",{"_index":279,"title":{"components/ListSelectorDialog.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["listselectordialog.dialogconfig",{"_index":1609,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listvalues",{"_index":1122,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["loaded",{"_index":758,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["loading",{"_index":2080,"title":{},"body":{"components/RecordList.html":{}}}],["loadlistfrom4d",{"_index":863,"title":{},"body":{"components/FourDDropDown.html":{}}}],["loadvaluefrom4d",{"_index":1218,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["locale",{"_index":852,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["localstorage.setitem(tablename",{"_index":2117,"title":{},"body":{"components/RecordList.html":{}}}],["log",{"_index":282,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["logged",{"_index":993,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["login",{"_index":1616,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["login/login",{"_index":1550,"title":{},"body":{"modules/JS44DModule.html":{},"components/WebAppContainer.html":{}}}],["logincmp",{"_index":281,"title":{"components/LoginCmp.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["logincmp.dialogconfig",{"_index":2287,"title":{},"body":{"components/WebAppContainer.html":{}}}],["long",{"_index":1283,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["longname",{"_index":776,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["look",{"_index":2428,"title":{},"body":{"index.html":{}}}],["loop",{"_index":412,"title":{},"body":{"classes/Base64.html":{}}}],["ls",{"_index":1840,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["lt;table.field",{"_index":795,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["made",{"_index":2433,"title":{},"body":{"index.html":{}}}],["main",{"_index":18,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["make",{"_index":49,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["makes",{"_index":1800,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid",{"_index":1796,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid(config",{"_index":1798,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["manage",{"_index":464,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["management",{"_index":2042,"title":{},"body":{"components/RecordList.html":{}}}],["managesearches",{"_index":2139,"title":{},"body":{"components/RecordList.html":{}}}],["managesets",{"_index":2144,"title":{},"body":{"components/RecordList.html":{}}}],["many",{"_index":1278,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["map",{"_index":1302,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["margin",{"_index":32,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["margin:0px",{"_index":21,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["mark",{"_index":1331,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["master",{"_index":1802,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["match",{"_index":329,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["matched",{"_index":398,"title":{},"body":{"classes/Base64.html":{}}}],["matching",{"_index":312,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["may/15/09",{"_index":1369,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["md5",{"_index":1091,"title":{"classes/MD5.html":{}},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["md5(s",{"_index":1690,"title":{},"body":{"classes/MD5.html":{}}}],["md5.cmn((b",{"_index":1185,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(b",{"_index":1188,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(c",{"_index":1190,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.hex_chr[(n",{"_index":1208,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.md5(this.password",{"_index":1654,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5.md5(value",{"_index":980,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["md5.md5cycle(state",{"_index":1203,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md51",{"_index":1673,"title":{},"body":{"classes/MD5.html":{}}}],["md51(s",{"_index":1191,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5blk",{"_index":1674,"title":{},"body":{"classes/MD5.html":{}}}],["md5blk(s",{"_index":1693,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle",{"_index":1675,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle(x",{"_index":1695,"title":{},"body":{"classes/MD5.html":{}}}],["md5pwd",{"_index":1653,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5pwd.touppercase",{"_index":1656,"title":{},"body":{"components/LoginCmp.html":{}}}],["mdi",{"_index":2407,"title":{},"body":{"index.html":{}}}],["me.clearrecorddirtyflag",{"_index":1441,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.primarykey_",{"_index":1438,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.recordnumber",{"_index":1416,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.refresh().then((rec",{"_index":1418,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me[me.primarykey_",{"_index":1439,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["means",{"_index":704,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["menu",{"_index":1999,"title":{},"body":{"components/RecordList.html":{}}}],["merchantability",{"_index":2531,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2509,"title":{},"body":{"license.html":{}}}],["message",{"_index":324,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["messages",{"_index":326,"title":{},"body":{"classes/Base64.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["method",{"_index":562,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["methods",{"_index":122,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["microsyntaxes.html#space",{"_index":350,"title":{},"body":{"classes/Base64.html":{}}}],["minheight",{"_index":1794,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["minwidth",{"_index":1795,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["miscellaneous",{"_index":2554,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":2493,"title":{},"body":{"license.html":{}}}],["mm",{"_index":1320,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["modal",{"_index":285,"title":{"injectables/Modal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["modal.hostviewref",{"_index":1762,"title":{},"body":{"injectables/Modal.html":{}}}],["modal.opendialoglist.push",{"_index":1783,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/commonmodals/okonlymodal",{"_index":1868,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/okonlymodal.ts",{"_index":1871,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["modal/commonmodals/okonlymodal.ts:10",{"_index":1874,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:12",{"_index":1879,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:13",{"_index":1877,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:14",{"_index":1878,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:33",{"_index":1893,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:34",{"_index":1892,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:36",{"_index":1894,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:40",{"_index":1890,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:45",{"_index":1891,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/yesnomodal",{"_index":1869,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/yesnomodal.ts",{"_index":2298,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["modal/commonmodals/yesnomodal.ts:11",{"_index":2312,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:13",{"_index":2316,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:14",{"_index":2313,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:15",{"_index":2314,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:16",{"_index":2317,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:17",{"_index":2315,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:37",{"_index":2306,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:38",{"_index":2305,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:40",{"_index":2307,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:44",{"_index":2301,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:50",{"_index":2303,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:55",{"_index":2302,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/models/icustommodal",{"_index":207,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{}}}],["modal/models/icustommodal.ts",{"_index":1252,"title":{},"body":{"classes/ICustomModal.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent",{"_index":208,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/icustommodalcomponent.ts",{"_index":1254,"title":{},"body":{"classes/ICustomModalComponent.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent.ts:13",{"_index":1261,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:18",{"_index":1258,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:8",{"_index":1257,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/modalconfig",{"_index":209,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{}}}],["modal/models/modalconfig.ts",{"_index":1789,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/models/modalconfig.ts:17",{"_index":1826,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:24",{"_index":1804,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:31",{"_index":1807,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:39",{"_index":1813,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:41",{"_index":1829,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:42",{"_index":1823,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:44",{"_index":1806,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:45",{"_index":1822,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:47",{"_index":1824,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:49",{"_index":1825,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:51",{"_index":1811,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:53",{"_index":1810,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:55",{"_index":1812,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:57",{"_index":1828,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:59",{"_index":1803,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:67",{"_index":1799,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:86",{"_index":1797,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modaldialoginstance",{"_index":205,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/modaldialoginstance.ts",{"_index":587,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["modal/models/modaldialoginstance.ts:22",{"_index":1853,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:24",{"_index":1855,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:28",{"_index":1854,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:30",{"_index":1852,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:31",{"_index":1851,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:32",{"_index":1846,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:38",{"_index":1857,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:41",{"_index":1859,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:49",{"_index":1861,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:56",{"_index":1850,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:6",{"_index":592,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:64",{"_index":1847,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:7",{"_index":593,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:8",{"_index":591,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:82",{"_index":1848,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:91",{"_index":1849,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/providers/modal",{"_index":1592,"title":{},"body":{"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["modal/providers/modal.ts",{"_index":1702,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/providers/modal.ts:121",{"_index":1716,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:144",{"_index":1735,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:20",{"_index":1740,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:21",{"_index":1741,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:23",{"_index":1713,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:43",{"_index":1720,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:63",{"_index":1738,"title":{},"body":{"injectables/Modal.html":{}}}],["modalconfig",{"_index":180,"title":{"injectables/ModalConfig.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalconfig.makevalid(defaultconfig",{"_index":1751,"title":{},"body":{"injectables/Modal.html":{}}}],["modaldialoginstance",{"_index":140,"title":{"injectables/ModalDialogInstance.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmodule",{"_index":1862,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mode",{"_index":1345,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["model",{"_index":677,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["modelcontentdata",{"_index":136,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{}}}],["modelcontentdata(parms",{"_index":1646,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modelcontentdata(v",{"_index":1599,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["modeldef",{"_index":769,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["models",{"_index":678,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["models/icustommodal",{"_index":1880,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/icustommodalcomponent",{"_index":1881,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/modalconfig",{"_index":1742,"title":{},"body":{"injectables/Modal.html":{}}}],["models/modaldialoginstance",{"_index":1264,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modified",{"_index":836,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["modify",{"_index":2426,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":885,"title":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":887,"title":{"modules.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":111,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["morelines",{"_index":126,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["moz",{"_index":86,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["multicolumn",{"_index":494,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["multiple",{"_index":925,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["multiples",{"_index":1781,"title":{},"body":{"injectables/Modal.html":{}}}],["n",{"_index":1192,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["name",{"_index":144,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["names",{"_index":714,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["native",{"_index":331,"title":{},"body":{"classes/Base64.html":{}}}],["nativescript",{"_index":2427,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":19,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["need",{"_index":391,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["new",{"_index":251,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{}}}],["newmodel",{"_index":803,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["newmodel.clearrecorddirtyflag",{"_index":826,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.populatemodeldata(record",{"_index":825,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.primarykey_",{"_index":2108,"title":{},"body":{"components/RecordList.html":{}}}],["newmodel.tablename",{"_index":805,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["next",{"_index":60,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ng2",{"_index":1779,"title":{},"body":{"injectables/Modal.html":{}}}],["ngaftercontentinit",{"_index":1972,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["ngafterviewinit",{"_index":127,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["ngmodule",{"_index":899,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["noaudit",{"_index":1347,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["non",{"_index":1370,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["none",{"_index":56,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["none')?'block':'none",{"_index":551,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["noninfringement",{"_index":2535,"title":{},"body":{"license.html":{}}}],["nope",{"_index":779,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["note",{"_index":325,"title":{},"body":{"classes/Base64.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["notext",{"_index":2310,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["notice",{"_index":2520,"title":{},"body":{"license.html":{}}}],["notification",{"_index":1818,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["nov",{"_index":1372,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["now",{"_index":1106,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["npm",{"_index":2397,"title":{},"body":{"index.html":{}}}],["null",{"_index":632,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["null/undefined",{"_index":858,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["number",{"_index":193,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"classes/Utf8.html":{}}}],["numeric",{"_index":1816,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["numofrecords",{"_index":719,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["o",{"_index":87,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["obj",{"_index":962,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["obj.hasownproperty(p",{"_index":965,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":107,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1465,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["observable",{"_index":954,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["obtained",{"_index":2480,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":2502,"title":{},"body":{"license.html":{}}}],["occurrences",{"_index":1733,"title":{},"body":{"injectables/Modal.html":{}}}],["ok",{"_index":1435,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["ok($event",{"_index":1572,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["okonlycontent",{"_index":1870,"title":{"classes/OKOnlyContent.html":{}},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["okonlymodal",{"_index":284,"title":{"components/OKOnlyModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["oktext",{"_index":1872,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["once",{"_index":1748,"title":{},"body":{"injectables/Modal.html":{}}}],["one",{"_index":1046,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["ones",{"_index":48,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["oninit",{"_index":1591,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["onresize",{"_index":2070,"title":{},"body":{"components/RecordList.html":{}}}],["opacity:0",{"_index":64,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["opacity:1",{"_index":53,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["open",{"_index":604,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"index.html":{}}}],["open(componenttype",{"_index":1717,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog",{"_index":1707,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog(component",{"_index":1734,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialoglist",{"_index":1704,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside",{"_index":1708,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside(componenttype",{"_index":1736,"title":{},"body":{"injectables/Modal.html":{}}}],["opens",{"_index":1721,"title":{},"body":{"injectables/Modal.html":{}}}],["openstateicon",{"_index":520,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["operation",{"_index":698,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimize",{"_index":1030,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimized",{"_index":360,"title":{},"body":{"classes/Base64.html":{}}}],["optimizing",{"_index":2078,"title":{},"body":{"components/RecordList.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["options",{"_index":1051,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["options.headers",{"_index":1069,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["order",{"_index":731,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["orderby",{"_index":679,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["originalvalue",{"_index":1216,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["otherwise",{"_index":2545,"title":{},"body":{"license.html":{}}}],["out",{"_index":896,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":387,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["outputs",{"_index":1897,"title":{},"body":{"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/WebAppContainer.html":{}}}],["outside",{"_index":403,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["overview",{"_index":2551,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":964,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2368,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":59,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["padding:5px",{"_index":28,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["page",{"_index":2391,"title":{},"body":{"index.html":{}}}],["pages",{"_index":2463,"title":{},"body":{"index.html":{}}}],["paging",{"_index":729,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["param",{"_index":766,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["parameter",{"_index":439,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["parameters",{"_index":143,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["parametervalue",{"_index":1222,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["params",{"_index":2278,"title":{},"body":{"components/WebAppContainer.html":{}}}],["parms",{"_index":1645,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["parms.hasownproperty('version",{"_index":1647,"title":{},"body":{"components/LoginCmp.html":{}}}],["parms['version",{"_index":1649,"title":{},"body":{"components/LoginCmp.html":{}}}],["parse",{"_index":2277,"title":{},"body":{"components/WebAppContainer.html":{}}}],["parseint(resultjson['selected",{"_index":822,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["part",{"_index":2482,"title":{},"body":{"index.html":{}}}],["particular",{"_index":2533,"title":{},"body":{"license.html":{}}}],["pascal's",{"_index":2375,"title":{},"body":{"index.html":{}}}],["passed",{"_index":1726,"title":{},"body":{"injectables/Modal.html":{}}}],["password",{"_index":996,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"index.html":{}}}],["payload",{"_index":1040,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["peer",{"_index":2369,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":920,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["permission",{"_index":2496,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2515,"title":{},"body":{"license.html":{}}}],["person",{"_index":2501,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2516,"title":{},"body":{"license.html":{}}}],["picture",{"_index":110,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["pipe",{"_index":420,"title":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["pipe({name",{"_index":440,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pipes",{"_index":422,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"overview.html":{}}}],["pipes/base64imageref.pipe",{"_index":1552,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipes/fourddatetostring.pipe",{"_index":1553,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipetransform",{"_index":430,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pk",{"_index":2107,"title":{},"body":{"components/RecordList.html":{}}}],["pkfield",{"_index":2147,"title":{},"body":{"components/RecordList.html":{}}}],["plan",{"_index":2419,"title":{},"body":{"index.html":{}}}],["please",{"_index":1624,"title":{},"body":{"components/LoginCmp.html":{}}}],["point",{"_index":1080,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["points",{"_index":1048,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["populate",{"_index":669,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populated",{"_index":739,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populatemodeldata(recorddata",{"_index":1452,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["populates",{"_index":1385,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["portions",{"_index":2523,"title":{},"body":{"license.html":{}}}],["position",{"_index":65,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/ModalConfig.html":{}}}],["position:absolute",{"_index":482,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["position:relative",{"_index":23,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["possible",{"_index":1288,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["post",{"_index":974,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["predefined",{"_index":2297,"title":{},"body":{"components/WebAppContainer.html":{}}}],["prepares",{"_index":708,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["present",{"_index":2444,"title":{},"body":{"index.html":{}}}],["presents",{"_index":2485,"title":{},"body":{"index.html":{}}}],["presses",{"_index":644,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["previous",{"_index":1098,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["previousquery",{"_index":2098,"title":{},"body":{"components/RecordList.html":{}}}],["primary",{"_index":941,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["primarykey_",{"_index":1296,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["private",{"_index":114,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["privileges",{"_index":991,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["procedure",{"_index":2390,"title":{},"body":{"index.html":{}}}],["process",{"_index":2442,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1467,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["programmatically",{"_index":1481,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["progress",{"_index":2081,"title":{},"body":{"components/RecordList.html":{}}}],["promise",{"_index":588,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise((resolve",{"_index":600,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["promiselike",{"_index":597,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promisewrapper.completer",{"_index":616,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise|any|*|promise",{"_index":625,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["properties",{"_index":113,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["property",{"_index":937,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["propriety",{"_index":1364,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["provide",{"_index":2401,"title":{},"body":{"index.html":{}}}],["provided",{"_index":2524,"title":{},"body":{"license.html":{}}}],["providers",{"_index":891,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":667,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"index.html":{}}}],["providing",{"_index":2451,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":1081,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["proxyurlthru4d(url",{"_index":1086,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["public",{"_index":116,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["publish",{"_index":2510,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2534,"title":{},"body":{"license.html":{}}}],["pwd",{"_index":1090,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["q",{"_index":1684,"title":{},"body":{"classes/MD5.html":{}}}],["qbe",{"_index":485,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["qff",{"_index":487,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queries",{"_index":745,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["query",{"_index":16,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["query'},{'name",{"_index":271,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["query+filter",{"_index":693,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["query0",{"_index":154,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryaddrecord",{"_index":515,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryband",{"_index":287,"title":{"components/QueryBand.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["queryband's",{"_index":514,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querybanddirective",{"_index":309,"title":{"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["querybandisopen",{"_index":524,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querydeleterecord",{"_index":517,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["queryeditrecord",{"_index":516,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryexportgrid",{"_index":512,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfield",{"_index":168,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.field",{"_index":226,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields",{"_index":262,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields[event.target.selectedindex",{"_index":227,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.name",{"_index":229,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.querytable",{"_index":257,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfieldlist",{"_index":133,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfields",{"_index":246,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfromfile",{"_index":509,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfromqbe",{"_index":508,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryid",{"_index":247,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querying",{"_index":1390,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["queryitems",{"_index":233,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["queryitems.push(tablename",{"_index":2149,"title":{},"body":{"components/RecordList.html":{}}}],["queryitems.push(thefield.longname",{"_index":243,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querymanagesets",{"_index":513,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryrefresh",{"_index":510,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querysortgrid",{"_index":511,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querystring",{"_index":680,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["querytable",{"_index":159,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["quick",{"_index":2388,"title":{},"body":{"index.html":{}}}],["quickfind",{"_index":290,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["quickfinder",{"_index":467,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["quickfindinput",{"_index":289,"title":{"components/QuickFindInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["radius",{"_index":479,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["range",{"_index":405,"title":{},"body":{"classes/Base64.html":{}}}],["raquo",{"_index":102,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["reactiveformsmodule",{"_index":1536,"title":{},"body":{"modules/JS44DModule.html":{}}}],["read",{"_index":1285,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["readcontinuationbyte",{"_index":2181,"title":{},"body":{"classes/Utf8.html":{}}}],["readonly",{"_index":1270,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["really",{"_index":2091,"title":{},"body":{"components/RecordList.html":{}}}],["reason",{"_index":598,"title":{},"body":{"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/ModalDialogInstance.html":{}}}],["rec.clearrecorddirtyflag",{"_index":1419,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["received",{"_index":988,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reclist",{"_index":823,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["reclist.foreach(record",{"_index":824,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recnum",{"_index":840,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["record",{"_index":292,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["record's",{"_index":1361,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["record(s",{"_index":1997,"title":{},"body":{"components/RecordList.html":{}}}],["record.recordisdirty",{"_index":837,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["record.recordnumber",{"_index":841,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["record.tablename",{"_index":839,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recorddata",{"_index":1351,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata.hasownproperty('_recnum",{"_index":1453,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['_recnum",{"_index":1454,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields",{"_index":1363,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields'][field.longname",{"_index":1379,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['noaudit",{"_index":1356,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['savecallback",{"_index":1355,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['timestamp",{"_index":1359,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata[field",{"_index":1457,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordeditwindow",{"_index":291,"title":{"components/RecordEditWindow.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordid",{"_index":1388,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordisdirty",{"_index":1488,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordlist",{"_index":295,"title":{"components/RecordList.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordlist.length",{"_index":843,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recordlist.push",{"_index":838,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recordnumber",{"_index":1386,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordnumber(v",{"_index":1477,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records",{"_index":671,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["records.foreach(id",{"_index":2148,"title":{},"body":{"components/RecordList.html":{}}}],["records.getrecords(query",{"_index":1413,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.model",{"_index":1406,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models.length",{"_index":1415,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models[0].recordnumber",{"_index":1417,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordsaved",{"_index":2096,"title":{},"body":{"components/RecordList.html":{}}}],["recordtojson(mode",{"_index":1350,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reference",{"_index":2410,"title":{},"body":{"index.html":{}}}],["reference/import",{"_index":2416,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1411,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["refreshgrid",{"_index":1973,"title":{},"body":{"components/RecordList.html":{}}}],["refreshgrid(query",{"_index":2006,"title":{},"body":{"components/RecordList.html":{}}}],["regex_space_characters",{"_index":319,"title":{},"body":{"classes/Base64.html":{}}}],["registry",{"_index":277,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reject",{"_index":589,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["reject('invalid",{"_index":1109,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reject('no",{"_index":1404,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject('recordnotfound",{"_index":1422,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(error",{"_index":830,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["reject(error.text",{"_index":1443,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(resultjson.message",{"_index":834,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reject(resultjson.returncode",{"_index":1442,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["rejected",{"_index":623,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["related",{"_index":92,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["relatedonetables",{"_index":134,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relatedtable",{"_index":103,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relates",{"_index":1286,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["relatesto",{"_index":1271,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["remove",{"_index":255,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["render",{"_index":1725,"title":{},"body":{"injectables/Modal.html":{}}}],["repeat",{"_index":1620,"title":{},"body":{"components/LoginCmp.html":{}}}],["replace",{"_index":1756,"title":{},"body":{"injectables/Modal.html":{}}}],["replace(base64.regex_space_characters",{"_index":368,"title":{},"body":{"classes/Base64.html":{}}}],["replicates",{"_index":1291,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["represent",{"_index":651,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["representation",{"_index":1344,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["representing",{"_index":1490,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["represents",{"_index":664,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["request",{"_index":1042,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["requests",{"_index":1017,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["require",{"_index":2366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1043,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["reset",{"_index":569,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"modules/ModalModule.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"overview.html":{}}}],["resize",{"_index":1986,"title":{},"body":{"components/RecordList.html":{}}}],["resolve",{"_index":590,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["resolve('no",{"_index":846,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolve(body.registryvalue",{"_index":1158,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface._listcache[listname",{"_index":1120,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface.authentication",{"_index":1108,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(item.registryvalue",{"_index":1153,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(listvalues",{"_index":1124,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(me",{"_index":1420,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(records",{"_index":1463,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(result",{"_index":1474,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(resultjson.deleted",{"_index":833,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolve(resultjson.seleted",{"_index":1115,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(resultjson.values",{"_index":1142,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(this",{"_index":1403,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(this.models",{"_index":828,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolved",{"_index":621,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["response",{"_index":1131,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["responsetype",{"_index":1129,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["responsetype:'text",{"_index":1010,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rest_authenticate",{"_index":2441,"title":{},"body":{"index.html":{}}}],["rest_getrecords",{"_index":2460,"title":{},"body":{"index.html":{}}}],["rest_proxyhttpget",{"_index":1079,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["restapi",{"_index":908,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["restore",{"_index":458,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["restoreset",{"_index":1974,"title":{},"body":{"components/RecordList.html":{}}}],["restoreset(records",{"_index":2010,"title":{},"body":{"components/RecordList.html":{}}}],["restriction",{"_index":2505,"title":{},"body":{"license.html":{}}}],["result",{"_index":311,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.query",{"_index":2105,"title":{},"body":{"components/RecordList.html":{}}}],["result.query.length",{"_index":2102,"title":{},"body":{"components/RecordList.html":{}}}],["result.queryfields",{"_index":2103,"title":{},"body":{"components/RecordList.html":{}}}],["resulting",{"_index":730,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["resultjson",{"_index":819,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.fieldlist",{"_index":263,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["resultjson.returncode",{"_index":1434,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson.session",{"_index":1103,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.key",{"_index":1105,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.options._userid",{"_index":1104,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.valid",{"_index":832,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.values",{"_index":1123,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson['_recnum",{"_index":1437,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['recordid",{"_index":1440,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['records",{"_index":821,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resultjson['selected",{"_index":820,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["results",{"_index":313,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1336,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["retrieve",{"_index":712,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["retrieved",{"_index":697,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["retrieves",{"_index":721,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["retrieving",{"_index":695,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["return",{"_index":228,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"miscellaneous/variables.html":{}}}],["returna",{"_index":1522,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["returned",{"_index":737,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["returns",{"_index":165,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reuse",{"_index":455,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["rhex",{"_index":1676,"title":{},"body":{"classes/MD5.html":{}}}],["rhex(n",{"_index":1698,"title":{},"body":{"classes/MD5.html":{}}}],["right",{"_index":523,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["right:20px",{"_index":483,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["rights",{"_index":2508,"title":{},"body":{"license.html":{}}}],["row",{"_index":1990,"title":{},"body":{"components/RecordList.html":{}}}],["rowid",{"_index":1476,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["run",{"_index":1747,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["running",{"_index":1020,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runninginsideworkspace",{"_index":1023,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runquickfinder",{"_index":1941,"title":{},"body":{"components/QuickFindInput.html":{}}}],["runs",{"_index":2477,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":955,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rxjs/operators",{"_index":1947,"title":{},"body":{"components/QuickFindInput.html":{}}}],["s",{"_index":1183,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.charcodeat(i",{"_index":1200,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.length",{"_index":1193,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["saferesourceurl",{"_index":429,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["same",{"_index":1728,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["sanitizer",{"_index":443,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["save",{"_index":462,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["save/load",{"_index":489,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["saved",{"_index":456,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["savedsearches",{"_index":2110,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.foreach(element",{"_index":2141,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.push",{"_index":2116,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.splice(result",{"_index":2143,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches[result].search",{"_index":2130,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets",{"_index":2111,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.foreach(element",{"_index":2132,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.splice(result",{"_index":2145,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets[result].set",{"_index":2136,"title":{},"body":{"components/RecordList.html":{}}}],["saverecord",{"_index":1951,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["saveset",{"_index":2119,"title":{},"body":{"components/RecordList.html":{}}}],["saveusage",{"_index":2398,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1723,"title":{},"body":{"injectables/Modal.html":{}}}],["search",{"_index":457,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["searches",{"_index":461,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searches/set",{"_index":490,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searchlist",{"_index":2140,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.length",{"_index":2127,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.push(element.name",{"_index":2126,"title":{},"body":{"components/RecordList.html":{}}}],["searchname",{"_index":2113,"title":{},"body":{"components/RecordList.html":{}}}],["see",{"_index":781,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["select",{"_index":453,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["selected",{"_index":231,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["selectedindex",{"_index":1558,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["selectedrecords",{"_index":1981,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrecords():array",{"_index":2030,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrows",{"_index":2035,"title":{},"body":{"components/RecordList.html":{}}}],["selectedvalue",{"_index":866,"title":{},"body":{"components/FourDDropDown.html":{}}}],["selectfield",{"_index":128,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selectfield(event",{"_index":173,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selecthighlited",{"_index":2112,"title":{},"body":{"components/RecordList.html":{}}}],["selection",{"_index":691,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{},"index.html":{}}}],["selectlist",{"_index":1983,"title":{},"body":{"components/RecordList.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["selector'},{'name",{"_index":280,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["selectorvalue",{"_index":1223,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["selecttab",{"_index":2167,"title":{},"body":{"components/Tabs.html":{}}}],["selecttab(event",{"_index":2156,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selectthistab",{"_index":2168,"title":{},"body":{"components/Tabs.html":{}}}],["selectthistab(tab",{"_index":2158,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selfcentered",{"_index":183,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["sell",{"_index":2513,"title":{},"body":{"license.html":{}}}],["send",{"_index":710,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["sends",{"_index":2465,"title":{},"body":{"index.html":{}}}],["sent",{"_index":922,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["separate",{"_index":2409,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":2221,"title":{},"body":{"classes/Utf8.html":{}}}],["serializes",{"_index":1343,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["series",{"_index":2378,"title":{},"body":{"index.html":{}}}],["server",{"_index":998,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["service",{"_index":747,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["service/component",{"_index":2386,"title":{},"body":{"index.html":{}}}],["services",{"_index":2379,"title":{},"body":{"index.html":{}}}],["serving",{"_index":2384,"title":{},"body":{"index.html":{}}}],["session",{"_index":990,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sessionkey",{"_index":1018,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["set",{"_index":459,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["set(field",{"_index":1315,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["setbackdropref(value",{"_index":1856,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setbootstrapref(value",{"_index":1858,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setheight(v",{"_index":1584,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setlist",{"_index":2131,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.length",{"_index":2134,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.push(element.name",{"_index":2133,"title":{},"body":{"components/RecordList.html":{}}}],["setmodelcontentdata(parms",{"_index":1643,"title":{},"body":{"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["setmodelcontentdata(v",{"_index":196,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["setname",{"_index":2124,"title":{},"body":{"components/RecordList.html":{}}}],["setregistryvalue(theclass",{"_index":1159,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["sets",{"_index":465,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["setting",{"_index":1332,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["settitle",{"_index":1843,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["settitle(title",{"_index":627,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["settitle(v",{"_index":1588,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setwidth(v",{"_index":1586,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["shadow:1px",{"_index":73,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["shall",{"_index":2521,"title":{},"body":{"license.html":{}}}],["shift",{"_index":2193,"title":{},"body":{"classes/Utf8.html":{}}}],["show",{"_index":1560,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"index.html":{}}}],["show(list",{"_index":1574,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["showadvancedquery",{"_index":1975,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow",{"_index":1976,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow(mode",{"_index":2013,"title":{},"body":{"components/RecordList.html":{}}}],["showerror",{"_index":1630,"title":{},"body":{"components/LoginCmp.html":{}}}],["showlogindialog",{"_index":2261,"title":{},"body":{"components/WebAppContainer.html":{}}}],["showrelatedtable",{"_index":129,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["showrelatedtable(event",{"_index":176,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["side",{"_index":951,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["sides",{"_index":2394,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1089,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sign's",{"_index":989,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["signed",{"_index":1025,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["signin",{"_index":2440,"title":{},"body":{"index.html":{}}}],["signin(user",{"_index":1094,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["similar",{"_index":946,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["simple",{"_index":944,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["single",{"_index":1135,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["singleton",{"_index":1746,"title":{},"body":{"injectables/Modal.html":{}}}],["size",{"_index":181,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["sm",{"_index":182,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["smooth",{"_index":79,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["software",{"_index":2503,"title":{},"body":{"license.html":{}}}],["solid",{"_index":99,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["something",{"_index":2429,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1625,"title":{},"body":{"components/LoginCmp.html":{}}}],["sort",{"_index":495,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["spec\\.ts",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":392,"title":{},"body":{"classes/Base64.html":{}}}],["specific",{"_index":610,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["specified",{"_index":1389,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sql",{"_index":915,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["src/.../jsfourdinterface.ts",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modal.ts",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modalconfig.ts",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/angular2",{"_index":586,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/main.scss",{"_index":2425,"title":{},"body":{"index.html":{}}}],["src/containers/advancedquery.ts",{"_index":9,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"coverage.html":{}}}],["src/containers/advancedquery.ts:152",{"_index":192,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:162",{"_index":152,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:163",{"_index":150,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:164",{"_index":162,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:165",{"_index":163,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:167",{"_index":178,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:168",{"_index":194,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:169",{"_index":195,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:171",{"_index":197,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:190",{"_index":142,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:192",{"_index":179,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:195",{"_index":172,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:202",{"_index":174,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:210",{"_index":169,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:214",{"_index":164,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:227",{"_index":171,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:235",{"_index":170,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:242",{"_index":177,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/queryband.ts",{"_index":444,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"coverage.html":{}}}],["src/containers/queryband.ts:10",{"_index":1939,"title":{},"body":{"directives/QueryBandDirective.html":{}}}],["src/containers/queryband.ts:104",{"_index":1908,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:109",{"_index":1909,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:114",{"_index":1903,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:119",{"_index":1910,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:124",{"_index":1906,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:129",{"_index":1902,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:134",{"_index":1901,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:139",{"_index":1905,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:144",{"_index":1904,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:149",{"_index":1900,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:154",{"_index":1916,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:155",{"_index":1915,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:156",{"_index":1918,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:157",{"_index":1919,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:158",{"_index":1914,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:160",{"_index":1917,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:165",{"_index":1911,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:166",{"_index":1913,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:167",{"_index":1912,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:172",{"_index":1936,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:174",{"_index":1937,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:176",{"_index":1935,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:181",{"_index":1899,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:187",{"_index":1933,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:192",{"_index":1932,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:222",{"_index":1927,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:226",{"_index":1928,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:230",{"_index":1934,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:234",{"_index":1925,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:239",{"_index":1929,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:243",{"_index":1930,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:247",{"_index":1921,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:257",{"_index":1924,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:261",{"_index":1920,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:265",{"_index":1923,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:269",{"_index":1922,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:273",{"_index":1931,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:99",{"_index":1907,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/recordeditwindow.ts",{"_index":1950,"title":{},"body":{"components/RecordEditWindow.html":{},"coverage.html":{}}}],["src/containers/recordeditwindow.ts:15",{"_index":1952,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:18",{"_index":1954,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:21",{"_index":1955,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:25",{"_index":1953,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordlist.ts",{"_index":1963,"title":{},"body":{"components/RecordList.html":{},"coverage.html":{}}}],["src/containers/recordlist.ts:115",{"_index":1995,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:125",{"_index":2007,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:134",{"_index":1993,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:142",{"_index":2016,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:149",{"_index":2014,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:179",{"_index":1996,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:192",{"_index":2001,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:199",{"_index":2012,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:216",{"_index":1998,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:25",{"_index":1985,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:30",{"_index":1987,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:344",{"_index":2011,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:35",{"_index":2023,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:36",{"_index":2025,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:41",{"_index":2027,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:57",{"_index":2020,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:59",{"_index":2021,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:60",{"_index":1984,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:71",{"_index":2003,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/tabs.ts",{"_index":2150,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["src/containers/tabs.ts:18",{"_index":2172,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:20",{"_index":2170,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:27",{"_index":2171,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:33",{"_index":2169,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:51",{"_index":2154,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/tabs.ts:52",{"_index":2153,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/webappcontainer.ts",{"_index":2257,"title":{},"body":{"components/WebAppContainer.html":{},"coverage.html":{}}}],["src/containers/webappcontainer.ts:17",{"_index":2265,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:19",{"_index":2266,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:21",{"_index":2264,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:23",{"_index":2269,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:38",{"_index":2268,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:48",{"_index":2267,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/controls/fourddropdown.ts",{"_index":859,"title":{},"body":{"components/FourDDropDown.html":{},"coverage.html":{}}}],["src/controls/fourddropdown.ts:26",{"_index":868,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:27",{"_index":869,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:28",{"_index":867,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:32",{"_index":873,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:42",{"_index":871,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:46",{"_index":872,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourdregistryinput.ts",{"_index":1214,"title":{},"body":{"components/FourDRegistryInput.html":{},"coverage.html":{}}}],["src/controls/fourdregistryinput.ts:19",{"_index":1225,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:20",{"_index":1228,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:21",{"_index":1229,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:22",{"_index":1226,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:23",{"_index":1227,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:25",{"_index":1234,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:26",{"_index":1233,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:27",{"_index":1224,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:31",{"_index":1231,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:41",{"_index":1232,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:51",{"_index":1230,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/quickfindinput.ts",{"_index":1940,"title":{},"body":{"components/QuickFindInput.html":{},"coverage.html":{}}}],["src/controls/quickfindinput.ts:16",{"_index":1944,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:18",{"_index":1942,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/datagrid/datagrid.ts",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["src/dialogs/listselectordialog.ts",{"_index":1555,"title":{},"body":{"components/ListSelectorDialog.html":{},"coverage.html":{}}}],["src/dialogs/listselectordialog.ts:25",{"_index":1583,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:35",{"_index":1566,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:36",{"_index":1568,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:37",{"_index":1565,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:38",{"_index":1567,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:40",{"_index":1585,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:41",{"_index":1587,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:42",{"_index":1589,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:45",{"_index":1590,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:52",{"_index":1579,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:54",{"_index":1564,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:57",{"_index":1580,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:64",{"_index":1577,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:70",{"_index":1570,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:74",{"_index":1573,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/fourd.module.ts",{"_index":897,"title":{},"body":{"modules/FourDModule.html":{}}}],["src/js44d.module.ts",{"_index":1533,"title":{},"body":{"modules/JS44DModule.html":{}}}],["src/js44d/base64.ts",{"_index":316,"title":{},"body":{"classes/Base64.html":{},"coverage.html":{}}}],["src/js44d/base64.ts:12",{"_index":337,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:18",{"_index":344,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:20",{"_index":342,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:26",{"_index":346,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:64",{"_index":348,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:8",{"_index":339,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/jsfourdcollection.ts",{"_index":662,"title":{},"body":{"injectables/FourDCollection.html":{},"coverage.html":{}}}],["src/js44d/jsfourdcollection.ts:103",{"_index":720,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:166",{"_index":690,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:18",{"_index":748,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:195",{"_index":701,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:20",{"_index":749,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:22",{"_index":750,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:235",{"_index":757,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:24",{"_index":751,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:26",{"_index":743,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:29",{"_index":738,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:32",{"_index":741,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:34",{"_index":752,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:37",{"_index":686,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:54",{"_index":707,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdinterface.ts",{"_index":906,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/js44d/jsfourdinterface.ts:487",{"_index":1679,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:489",{"_index":1697,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:567",{"_index":1683,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:572",{"_index":1685,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:576",{"_index":1686,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:580",{"_index":1688,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:584",{"_index":1689,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:588",{"_index":1692,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:623",{"_index":1694,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:634",{"_index":1699,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:643",{"_index":1687,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:648",{"_index":1691,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:658",{"_index":1681,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:667",{"_index":1701,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:708",{"_index":943,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:710",{"_index":950,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:712",{"_index":952,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:714",{"_index":924,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:716",{"_index":917,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:718",{"_index":928,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:720",{"_index":942,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:722",{"_index":940,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:724",{"_index":936,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdmodel.ts",{"_index":1267,"title":{},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts",{"_index":2173,"title":{},"body":{"classes/Utf8.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts:102",{"_index":2198,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:118",{"_index":2195,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:181",{"_index":2186,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:182",{"_index":2187,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:183",{"_index":2188,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:185",{"_index":2204,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:34",{"_index":2202,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:51",{"_index":2190,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:61",{"_index":2194,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:65",{"_index":2197,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:7",{"_index":2200,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:87",{"_index":2207,"title":{},"body":{"classes/Utf8.html":{}}}],["src/login/login.ts",{"_index":1615,"title":{},"body":{"components/LoginCmp.html":{},"coverage.html":{}}}],["src/login/login.ts:45",{"_index":1642,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:55",{"_index":1635,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:56",{"_index":1633,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:57",{"_index":1634,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:58",{"_index":1632,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:59",{"_index":1637,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:62",{"_index":1644,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:68",{"_index":1631,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:70",{"_index":1639,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:77",{"_index":1638,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/modal.module.ts",{"_index":1867,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/pipes/base64imageref.pipe.ts",{"_index":423,"title":{},"body":{"pipes/Base64ImageRef.html":{},"coverage.html":{}}}],["src/pipes/base64imageref.pipe.ts:13",{"_index":427,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["src/pipes/fourddatetostring.pipe.ts",{"_index":849,"title":{},"body":{"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["src/pipes/fourddatetostring.pipe.ts:11",{"_index":850,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["src/test.ts",{"_index":2364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":1322,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["standalone",{"_index":1021,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["standard",{"_index":357,"title":{},"body":{"classes/Base64.html":{}}}],["started",{"_index":2373,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":728,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["startrec",{"_index":718,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["state",{"_index":1194,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["statements",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":608,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["static",{"_index":118,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{}}}],["stay",{"_index":61,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["step",{"_index":2389,"title":{},"body":{"index.html":{}}}],["str",{"_index":963,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.join",{"_index":968,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.push(encodeuricomponent(p",{"_index":966,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str2rstr_utf8",{"_index":1677,"title":{},"body":{"classes/MD5.html":{}}}],["str2rstr_utf8(input",{"_index":1700,"title":{},"body":{"classes/MD5.html":{}}}],["string",{"_index":156,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string(input",{"_index":367,"title":{},"body":{"classes/Base64.html":{}}}],["string.fromcharcode(((codepoint",{"_index":2225,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode((codepoint",{"_index":2233,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(codepoint",{"_index":2222,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(value",{"_index":2216,"title":{},"body":{"classes/Utf8.html":{}}}],["string.length",{"_index":2211,"title":{},"body":{"classes/Utf8.html":{}}}],["stroke",{"_index":1817,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["strong",{"_index":91,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["structure",{"_index":1280,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["style",{"_index":55,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["styles.scss",{"_index":2423,"title":{},"body":{"index.html":{}}}],["sub",{"_index":1493,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.formula",{"_index":1495,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.longname",{"_index":1499,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.name",{"_index":1498,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields",{"_index":1492,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields.push",{"_index":1497,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subject",{"_index":2518,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2512,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1054,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["subscribe((v",{"_index":1011,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["subscribe(result",{"_index":1473,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subscribe(resultjson",{"_index":261,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["subscribed",{"_index":1093,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["substantial",{"_index":2522,"title":{},"body":{"license.html":{}}}],["subtable",{"_index":1272,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subtables",{"_index":1505,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["successfully",{"_index":1024,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["supplied",{"_index":692,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["support",{"_index":1496,"title":{},"body":{"interfaces/IFieldDescription.html":{},"modules.html":{}}}],["supposed",{"_index":399,"title":{},"body":{"classes/Base64.html":{}}}],["sure",{"_index":410,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["surrogates",{"_index":397,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["svg",{"_index":2549,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":533,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["switchstate",{"_index":528,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["symbol",{"_index":2223,"title":{},"body":{"classes/Utf8.html":{}}}],["symbols",{"_index":395,"title":{},"body":{"classes/Base64.html":{}}}],["t",{"_index":596,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["t\\n\\f\\r",{"_index":340,"title":{},"body":{"classes/Base64.html":{}}}],["tab",{"_index":297,"title":{"components/Tab.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["tab'},{'name",{"_index":298,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tab.active",{"_index":2161,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tab.title",{"_index":2155,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tabitem.active",{"_index":2160,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["table",{"_index":320,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{}}}],["table's",{"_index":1292,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["table.field",{"_index":734,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["tabled",{"_index":930,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablename",{"_index":260,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["tablenumber",{"_index":1295,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["tables",{"_index":935,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":299,"title":{"components/Tabs.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["tabs'},{'name",{"_index":300,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tabs.addtab(this",{"_index":2165,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tail",{"_index":1204,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["take",{"_index":2459,"title":{},"body":{"index.html":{}}}],["taken",{"_index":2208,"title":{},"body":{"classes/Utf8.html":{}}}],["takes",{"_index":2464,"title":{},"body":{"index.html":{}}}],["teh",{"_index":2008,"title":{},"body":{"components/RecordList.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["terms",{"_index":931,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["text",{"_index":1130,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8",{"_index":1066,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["textvalue",{"_index":1217,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["theclass",{"_index":1143,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thecustomquery",{"_index":452,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thedate",{"_index":1165,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.gethours",{"_index":1181,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.substr(0,4)+'/'+thedate.substr(4,2)+'/'+thedate.substr(6,2",{"_index":1174,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedefaultvalue",{"_index":1145,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedialog",{"_index":1705,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance",{"_index":1715,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance:modaldialoginstance",{"_index":1785,"title":{},"body":{"injectables/Modal.html":{}}}],["thefield",{"_index":237,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["thefield.type",{"_index":240,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["theform",{"_index":570,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform.length",{"_index":572,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform[0].reset",{"_index":573,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thegrid",{"_index":1968,"title":{},"body":{"components/RecordList.html":{}}}],["themodel",{"_index":771,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["themodel.getfieldproperties(col",{"_index":783,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["themodel.getfieldproperties(col.field",{"_index":789,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["then((authentication",{"_index":1657,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["then((message",{"_index":2093,"title":{},"body":{"components/RecordList.html":{}}}],["then((reclist",{"_index":1414,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["then((recnum",{"_index":1962,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["then((result",{"_index":2101,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["then((setname",{"_index":2123,"title":{},"body":{"components/RecordList.html":{}}}],["then((value",{"_index":1248,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["then((values",{"_index":881,"title":{},"body":{"components/FourDDropDown.html":{}}}],["then(result",{"_index":2085,"title":{},"body":{"components/RecordList.html":{}}}],["theparameter",{"_index":1144,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thequeryband",{"_index":527,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theselector",{"_index":1146,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thetime:string",{"_index":1180,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thevalue",{"_index":239,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this._attributes.hasownproperty(field",{"_index":1325,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._attributes[field",{"_index":1313,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._backdropref",{"_index":618,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._backdropref.destroy",{"_index":658,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref",{"_index":620,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref.destroy",{"_index":657,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._editwindowconfig",{"_index":2059,"title":{},"body":{"components/RecordList.html":{}}}],["this._modified",{"_index":1486,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field",{"_index":1519,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field.name",{"_index":1489,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified[field",{"_index":1330,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._previousadvancedquery",{"_index":2065,"title":{},"body":{"components/RecordList.html":{}}}],["this._previousquery",{"_index":2066,"title":{},"body":{"components/RecordList.html":{}}}],["this._recnum",{"_index":1460,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._resultdefered",{"_index":615,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.promise",{"_index":626,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.reject",{"_index":655,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.resolve(result",{"_index":638,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.appref",{"_index":1763,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref.element.nativeelement.location",{"_index":1759,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref['_rootcomponents'][0].location",{"_index":1760,"title":{},"body":{"injectables/Modal.html":{}}}],["this.booleanvalue",{"_index":1249,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.booleanvalue)?'y':'n",{"_index":1240,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.buttontext",{"_index":1605,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.call4drestmethod('rest_authenticate",{"_index":1102,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_countrecords",{"_index":1114,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_get4dlist",{"_index":1121,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getfiltered4dlist",{"_index":1141,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getregistryvalue",{"_index":1155,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_setregistryvalue",{"_index":1160,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_update4dlist",{"_index":1128,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.classname",{"_index":1245,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.clearrecord",{"_index":1400,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.clearrecorddirtyflag",{"_index":1402,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.closedialog(event",{"_index":1764,"title":{},"body":{"injectables/Modal.html":{}}}],["this.columns",{"_index":767,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.config",{"_index":1608,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.height",{"_index":1594,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.title",{"_index":1598,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.width",{"_index":1596,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.constructor.valueof",{"_index":1405,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.contentref",{"_index":633,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.destroy",{"_index":659,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance",{"_index":634,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforeclose",{"_index":635,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforedismiss",{"_index":654,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.location.nativeelement).data('kendowindow",{"_index":628,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.context",{"_index":1888,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.currentrecord",{"_index":1956,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.insertrecord",{"_index":1961,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.isrecordloaded",{"_index":1957,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.updaterecord",{"_index":1958,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currenttable",{"_index":215,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.defaultvalue",{"_index":1247,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.deleterecord",{"_index":2056,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialog",{"_index":1660,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close",{"_index":245,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialog.close('loggedin",{"_index":1661,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.dialog.close('recordsaved",{"_index":1959,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.dialog.close(false",{"_index":2311,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close(this.selectedindex",{"_index":1614,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.dialog.close(true",{"_index":1889,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.kendodialog.setoptions",{"_index":222,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialoginstance",{"_index":2060,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialoginstance.contentref.location.nativeelement).data('kendowindow",{"_index":2062,"title":{},"body":{"components/RecordList.html":{}}}],["this.dispose",{"_index":636,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.domanagesets(action",{"_index":2046,"title":{},"body":{"components/RecordList.html":{}}}],["this.dropdownisopen",{"_index":550,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.editwindow",{"_index":2050,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindow['dialogconfig",{"_index":2058,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindowhandler(result",{"_index":2086,"title":{},"body":{"components/RecordList.html":{}}}],["this.elementref",{"_index":2286,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.elementref.nativeelement.getelementsbytagname('form",{"_index":571,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableaddrecord",{"_index":541,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablebuttonbar",{"_index":540,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enabledeleterecord",{"_index":544,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableeditrecord",{"_index":542,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableexportgrid",{"_index":539,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqbe",{"_index":535,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqff",{"_index":536,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesets",{"_index":537,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesort",{"_index":538,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.fieldlist",{"_index":161,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fieldlist.push(field",{"_index":214,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fields",{"_index":1337,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.filteroptions",{"_index":798,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd",{"_index":764,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_bulkdelete",{"_index":831,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_bulkupdate",{"_index":844,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getapplicationversion",{"_index":1650,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourd.call4drestmethod('rest_getfieldsintable",{"_index":259,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fourd.call4drestmethod('rest_getrecords",{"_index":816,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getvalues",{"_index":1472,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_loaddata",{"_index":1399,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_postdata",{"_index":1433,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.get4dlist(this.listname",{"_index":880,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.fourd.getregistryvalue(this.classname",{"_index":1246,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.setregistryvalue(this.classname",{"_index":1242,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.signin(key.username",{"_index":2292,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.fourd.signin(this.username",{"_index":1655,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourddeletecallbackmethod_",{"_index":1449,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdsavecallbackmethod_",{"_index":1354,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdversion",{"_index":1651,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.getcolumnlist",{"_index":1462,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getcolumnlistjson(columns",{"_index":812,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getcolumnlistjson(newmodel.getcolumnlist",{"_index":813,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getfielddescription(field).type",{"_index":1317,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field",{"_index":1316,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field).type",{"_index":1455,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getrecord(this.recordnumber",{"_index":1426,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.hasownproperty('timestamp",{"_index":1358,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.httpclient.post(fourdinterface.fourdurl",{"_index":1076,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.inputtype",{"_index":1237,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.invalidcharactererror(message",{"_index":336,"title":{},"body":{"classes/Base64.html":{}}}],["this.isblocking",{"_index":1841,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.iscalculatedfield(field",{"_index":1365,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.ismodifiedfield(fieldname",{"_index":1371,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isreadonly(field",{"_index":1368,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isrelatedfield(field",{"_index":1367,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(col",{"_index":1508,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(field",{"_index":1366,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.itemslist",{"_index":1600,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.keyboard",{"_index":1842,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.listname",{"_index":879,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.listoptions",{"_index":882,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadlistfrom4d",{"_index":876,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadvaluefrom4d",{"_index":1235,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.message",{"_index":338,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["this.modal.open(listselectordialog",{"_index":1610,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.modal.openinside(advancedquerycomponent",{"_index":2097,"title":{},"body":{"components/RecordList.html":{}}}],["this.modal.openinside(logincmp",{"_index":2285,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.modal.openinside(this.editwindow",{"_index":2083,"title":{},"body":{"components/RecordList.html":{}}}],["this.model",{"_index":770,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models",{"_index":818,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.length",{"_index":847,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.push(newmodel",{"_index":827,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.open(component",{"_index":1787,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openinside(componenttype",{"_index":1761,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openstateicon",{"_index":530,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.orderby",{"_index":799,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.originalvalue",{"_index":1241,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.parametervalue",{"_index":1243,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.populatemodeldata(resultjson",{"_index":1401,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.primarykey_",{"_index":1393,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.promise",{"_index":599,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.queryaddrecord.emit(null",{"_index":577,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryband.enableqbe",{"_index":2039,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.enablesets",{"_index":2044,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryaddrecord.subscribe",{"_index":2051,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querydeleterecord.subscribe",{"_index":2055,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryeditrecord.subscribe",{"_index":2053,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryexportgrid.subscribe",{"_index":2048,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryfromqbe.subscribe((query",{"_index":2040,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querymanagesets.subscribe((action",{"_index":2045,"title":{},"body":{"components/RecordList.html":{}}}],["this.querybandisopen",{"_index":529,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querydeleterecord.emit(null",{"_index":581,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryeditrecord.emit(null",{"_index":579,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryexportgrid.emit(null",{"_index":575,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfieldlist",{"_index":218,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.foreach(element",{"_index":234,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.length",{"_index":248,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.pop",{"_index":254,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.push",{"_index":249,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfromfile.emit(null",{"_index":548,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfromqbe.emit",{"_index":546,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querymanagesets.emit(action",{"_index":553,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryrefresh.emit(this.thequeryband.thecustomquery.currentquery",{"_index":556,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querysortgrid.emit(null",{"_index":558,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querystring",{"_index":797,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.quickfind.valuechanges.pipe(distinctuntilchanged(),debouncetime(1500)).subscribe(query",{"_index":1948,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.recordnumber",{"_index":1353,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.refreshgrid",{"_index":2104,"title":{},"body":{"components/RecordList.html":{}}}],["this.refreshgrid(query",{"_index":2037,"title":{},"body":{"components/RecordList.html":{}}}],["this.reject",{"_index":602,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.relatedonetables",{"_index":219,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.resolve",{"_index":601,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.restoreset(set",{"_index":2137,"title":{},"body":{"components/RecordList.html":{}}}],["this.runquickfinder.emit(query",{"_index":1949,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('data:image/'+imagetype+';base64,'+value",{"_index":441,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["this.selectedindex",{"_index":1611,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.selectedvalue",{"_index":878,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.selectlist.show(searchlist",{"_index":2129,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.show(setlist",{"_index":2135,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.title",{"_index":2128,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectorvalue",{"_index":1244,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.selectthistab(tab",{"_index":2157,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.showadvancedquery",{"_index":2041,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('add",{"_index":2052,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('edit",{"_index":2054,"title":{},"body":{"components/RecordList.html":{}}}],["this.showerror",{"_index":1659,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.showlogindialog",{"_index":2295,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.size",{"_index":1839,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.tablename",{"_index":1352,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.tabs.foreach((tabitem",{"_index":2159,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.length",{"_index":2163,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.push(tab",{"_index":2164,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.textvalue",{"_index":1239,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.thedialog",{"_index":1773,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.center().open",{"_index":1768,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.open",{"_index":1769,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thegrid",{"_index":2031,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord",{"_index":2076,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.deleterecord(this.queryband.cascadedeleterecord",{"_index":2092,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.refresh().then",{"_index":2082,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.exportgridtoexcel",{"_index":2049,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider",{"_index":2032,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider().models",{"_index":2034,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.loaddata(query",{"_index":2068,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model",{"_index":2089,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype",{"_index":2099,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.primarykey_",{"_index":2109,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.tablename",{"_index":2106,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.optimizegridloading",{"_index":2077,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.recordselected.subscribe((record",{"_index":2057,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.refresh",{"_index":2095,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.resize",{"_index":2072,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.selectedrows",{"_index":2036,"title":{},"body":{"components/RecordList.html":{}}}],["this.thequeryband.thecustomquery",{"_index":555,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.clearqueryform",{"_index":560,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.currentquery",{"_index":584,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.tipslist",{"_index":1602,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.totalrecordcount",{"_index":817,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.urlsearchparms.hasownproperty('key",{"_index":2290,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[element",{"_index":2284,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[item[0",{"_index":2282,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userhasloggedin.emit(fourdinterface.currentuser",{"_index":2289,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userisloggedin",{"_index":2288,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.viewref",{"_index":2084,"title":{},"body":{"components/RecordList.html":{}}}],["this.webappversion",{"_index":1648,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.windowheight",{"_index":223,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.windowresized(event",{"_index":2064,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowresized(null",{"_index":2071,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowwidth",{"_index":224,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this['timestamp",{"_index":1360,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field",{"_index":1456,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field.name",{"_index":1341,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[fieldname",{"_index":1374,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["those",{"_index":330,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["three",{"_index":2400,"title":{},"body":{"index.html":{}}}],["throughout",{"_index":328,"title":{},"body":{"classes/Base64.html":{}}}],["throw",{"_index":335,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["thru",{"_index":1082,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["time",{"_index":1176,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["timestamp",{"_index":1362,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["timeto4dformat(thedate",{"_index":1178,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tips",{"_index":1575,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["tipslist",{"_index":1562,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["title",{"_index":189,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["title(v",{"_index":1597,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["to/from",{"_index":1032,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["todo",{"_index":1752,"title":{},"body":{"injectables/Modal.html":{}}}],["toggledropdown",{"_index":549,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["token",{"_index":1731,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["tokens",{"_index":2439,"title":{},"body":{"index.html":{}}}],["top",{"_index":88,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["top:5px",{"_index":473,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tort",{"_index":2544,"title":{},"body":{"license.html":{}}}],["total",{"_index":753,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["totalrecordcount",{"_index":681,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["traffic",{"_index":1031,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["transform",{"_index":424,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transform(value",{"_index":425,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transition:opacity",{"_index":82,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transitions",{"_index":78,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transparent",{"_index":470,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["triangle",{"_index":522,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["trick",{"_index":1774,"title":{},"body":{"injectables/Modal.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":1883,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["true|false",{"_index":1446,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["try",{"_index":2067,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["tslint",{"_index":981,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tslint:disable",{"_index":969,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["tv",{"_index":1134,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["two",{"_index":934,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["type",{"_index":145,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":774,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["typeof(this[fieldname",{"_index":1378,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["typescript",{"_index":2377,"title":{},"body":{"index.html":{}}}],["ucs2decode",{"_index":2182,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2decode(string",{"_index":2199,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode",{"_index":2183,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode(array",{"_index":2201,"title":{},"body":{"classes/Utf8.html":{}}}],["ui",{"_index":2380,"title":{},"body":{"index.html":{}}}],["ul",{"_index":43,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ul#navigation",{"_index":20,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["undefined",{"_index":875,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["under",{"_index":1138,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["union",{"_index":916,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["unique",{"_index":1273,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["unpaired",{"_index":2253,"title":{},"body":{"classes/Utf8.html":{}}}],["up",{"_index":1097,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["update",{"_index":702,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["update4dlist(listname",{"_index":1125,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["updated",{"_index":705,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["updaterecord",{"_index":1444,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updates",{"_index":1310,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updating",{"_index":1326,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["upon",{"_index":1056,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["url",{"_index":437,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["url(\"/assets/login_splash.png",{"_index":1619,"title":{},"body":{"components/LoginCmp.html":{}}}],["url.split('&').foreach(element",{"_index":2279,"title":{},"body":{"components/WebAppContainer.html":{}}}],["urlencoded",{"_index":1063,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparams",{"_index":1050,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparms",{"_index":2260,"title":{},"body":{"components/WebAppContainer.html":{}}}],["usage",{"_index":438,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["use",{"_index":568,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["useb",{"_index":959,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["used",{"_index":327,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["useful",{"_index":2403,"title":{},"body":{"index.html":{}}}],["user",{"_index":643,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["userhasloggedin",{"_index":2263,"title":{},"body":{"components/WebAppContainer.html":{}}}],["userhassignedin",{"_index":1026,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["userisloggedin",{"_index":2262,"title":{},"body":{"components/WebAppContainer.html":{}}}],["username",{"_index":801,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["using",{"_index":722,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["usually",{"_index":650,"title":{},"body":{"classes/Deferred.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{}}}],["utf8",{"_index":759,"title":{"classes/Utf8.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["utf8.bytearray[utf8.byteindex",{"_index":2240,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.bytecount",{"_index":2237,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.byteindex",{"_index":2242,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.checkscalarvalue(codepoint",{"_index":2228,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.createbyte(codepoint",{"_index":2230,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.readcontinuationbyte",{"_index":2251,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.ucs2decode(string",{"_index":2235,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode",{"_index":2184,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode(bytestring",{"_index":2203,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode",{"_index":2185,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode(string",{"_index":2206,"title":{},"body":{"classes/Utf8.html":{}}}],["utility",{"_index":957,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["v",{"_index":198,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordEditWindow.html":{}}}],["v.buttonlabel",{"_index":1604,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.list",{"_index":1601,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.message",{"_index":1606,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.model.tablename",{"_index":216,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.previousquery",{"_index":217,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.tips",{"_index":1603,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v15",{"_index":1068,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["valid",{"_index":1801,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["validation",{"_index":1805,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value",{"_index":149,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["value.substr(0,2",{"_index":1319,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(3,2",{"_index":1321,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(6,2",{"_index":1323,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.tolocaledatestring",{"_index":856,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["value.touppercase",{"_index":1250,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["value/s",{"_index":1814,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value:'the",{"_index":1466,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["valuechanged",{"_index":1219,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["values",{"_index":883,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["var",{"_index":268,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["variable",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":519,"title":{"miscellaneous/variables.html":{}},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variableslist",{"_index":1470,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["various",{"_index":956,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["version",{"_index":1014,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["very",{"_index":45,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["via",{"_index":2382,"title":{},"body":{"index.html":{}}}],["view",{"_index":2004,"title":{},"body":{"components/RecordList.html":{}}}],["viewcontainerref",{"_index":201,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["viewencapsulation",{"_index":2270,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewencapsulation.none",{"_index":2259,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewref",{"_index":1737,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["visibility",{"_index":85,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:hidden",{"_index":63,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:visible",{"_index":52,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["void",{"_index":166,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["want",{"_index":1482,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["warranties",{"_index":2530,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2525,"title":{},"body":{"license.html":{}}}],["we'll",{"_index":1035,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["web",{"_index":302,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["webappcontainer",{"_index":301,"title":{"components/WebAppContainer.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["webappversion",{"_index":1629,"title":{},"body":{"components/LoginCmp.html":{}}}],["webkit",{"_index":81,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["welcome",{"_index":1623,"title":{},"body":{"components/LoginCmp.html":{}}}],["went",{"_index":1436,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["whether",{"_index":2542,"title":{},"body":{"license.html":{}}}],["whole",{"_index":727,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["whose",{"_index":699,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["wide",{"_index":1745,"title":{},"body":{"injectables/Modal.html":{}}}],["widget",{"_index":2417,"title":{},"body":{"index.html":{}}}],["widgets",{"_index":2381,"title":{},"body":{"index.html":{}}}],["widgets/services",{"_index":2481,"title":{},"body":{"index.html":{}}}],["width",{"_index":34,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width(v",{"_index":1595,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["width:100",{"_index":95,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width:180px",{"_index":70,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["wiki",{"_index":2387,"title":{},"body":{"index.html":{}}}],["win",{"_index":2272,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location",{"_index":2273,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search",{"_index":2274,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search.substr(1",{"_index":2275,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win:windowservice",{"_index":2271,"title":{},"body":{"components/WebAppContainer.html":{}}}],["window",{"_index":605,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["window'},{'name",{"_index":294,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["window:resize",{"_index":1980,"title":{},"body":{"components/RecordList.html":{}}}],["windowbase64",{"_index":359,"title":{},"body":{"classes/Base64.html":{}}}],["windowheight",{"_index":120,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["windowresized",{"_index":1977,"title":{},"body":{"components/RecordList.html":{}}}],["windowresized(event",{"_index":2015,"title":{},"body":{"components/RecordList.html":{}}}],["windows",{"_index":2406,"title":{},"body":{"index.html":{}}}],["windowwidth",{"_index":121,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["without",{"_index":639,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"license.html":{}}}],["work",{"_index":1755,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["workspace",{"_index":1022,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["world",{"_index":1876,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["wrap",{"_index":1382,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["wrapper",{"_index":2436,"title":{},"body":{"index.html":{}}}],["www",{"_index":1062,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["x",{"_index":653,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["xff]/.test(input",{"_index":390,"title":{},"body":{"classes/Base64.html":{}}}],["y",{"_index":1251,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["yes",{"_index":1578,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["yesnomodal",{"_index":304,"title":{"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["yesnomodalcontent",{"_index":2304,"title":{"classes/YesNoModalContent.html":{}},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["yestext",{"_index":2309,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["ymd",{"_index":1171,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["yyyymmdd",{"_index":1164,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["z",{"_index":67,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["z0",{"_index":377,"title":{},"body":{"classes/Base64.html":{}}}],["za",{"_index":376,"title":{},"body":{"classes/Base64.html":{}}}],["zoom",{"_index":895,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdvancedQueryComponent.html":{"url":"components/AdvancedQueryComponent.html","title":"component - AdvancedQueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdvancedQueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/advancedQuery.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                advanced-query\n            \n\n\n            \n                styles\n                \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n            \n\n            \n                template\n                    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n            \n        \n        \n            \n                {{item}}\n            \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n            \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTable\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                windowHeight\n                            \n                            \n                                    Private\n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doQuery\n                            \n                            \n                                isItemSelected\n                            \n                            \n                                lessLines\n                            \n                            \n                                moreLines\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectField\n                            \n                            \n                                showRelatedTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparatorList\n                            \n                            \n                                fieldList\n                            \n                            \n                                queryFieldList\n                            \n                            \n                                relatedOneTables\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface, dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/containers/advancedQuery.ts:190\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparatorList\n                    \n                \n                \n                    \n                        Default value : ['=', '!=', '>', '>=', '\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:163\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldList\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:162\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFieldList\n                    \n                \n                \n                    \n                        Default value : [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }]\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:164\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relatedOneTables\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:165\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doQuery\n                        \n                        \n                    \n                \n            \n            \n                \ndoQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(field: any, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lessLines\n                        \n                        \n                    \n                \n            \n            \n                \nlessLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moreLines\n                        \n                        \n                    \n                \n            \n            \n                \nmoreLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectField\n                        \n                        \n                    \n                \n            \n            \n                \nselectField(event, queryField)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRelatedTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowRelatedTable(event, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:152\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 570\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:169\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/advancedQuery.ts:171\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, ViewContainerRef, AfterViewInit, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'advanced-query',\n    template: `\n    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n                   \n        \n        \n            \n                {{item}}\n                   \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n                   \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n    `,\n    styles: [`\n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    `]\n})\n\nexport class AdvancedQueryComponent implements ICustomModalComponent, AfterViewInit {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    };\n\n    @Input() public fieldList: Array = [];\n    @Input() public comparatorList = ['=', '!=', '>', '>=', ' {\n            if (!field.related && field.longname && field.longname !== '') { this.fieldList.push(field) }\n        });\n        this.currentTable = v.model.tableName;\n        if (v.previousQuery) {\n            this.queryFieldList = v.previousQuery;\n        } else {\n            this.queryFieldList = [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }];\n        }\n        this.relatedOneTables = [this.currentTable];\n        for (let index = 0; index  1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    selectField(event, queryField) {\n        if (event.target.selectedIndex > 0) {\n            queryField.field = queryField.listOfFields[event.target.selectedIndex - 1];\n        } else {\n            queryField.field = { type: 'string', name: '' };\n        }\n    }\n\n    isItemSelected(field: any, queryField: any): string {\n        return (queryField.name === field.name) ? 'selected' : '';\n    }\n\n    doQuery() {\n        const queryItems = [];\n        this.queryFieldList.forEach(element => {\n            if (element.field.name !== '' && element.comparator !== '') {\n                const theField: any = element.field;\n                if (element.comparator === '!=') { element.comparator = '#'; }\n                const theValue = (theField.type === 'Date')?element.value.replace(/-/g,''):element.value;\n                queryItems.push(theField.longname + ';' + element.comparator + ';' + theValue + ';' + element.connector);\n            }\n        });\n        this.dialog.close({ query: queryItems, queryFields: this.queryFieldList });\n    }\n\n    moreLines() {\n        const queryID = 'query' + this.queryFieldList.length;\n        this.queryFieldList.push({ id: queryID, field: { type: 'string', name: '' }, comparator: '=', value: '', connector: ' And', queryTable: this.currentTable, listOfFields: this.fieldList }); // add a new query line\n        this.windowHeight += 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    lessLines() {\n        this.queryFieldList.pop(); // remove last item\n        this.windowHeight -= 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    showRelatedTable(event, queryField: any) {\n        queryField.queryTable = event.target.textContent;\n        this.fourD.call4DRESTMethod('REST_GetFieldsInTable', { TableName: queryField.queryTable })\n            .subscribe(resultJSON => {\n                queryField.listOfFields = resultJSON.fieldList;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                »                                                    {{relatedTable}}                                                                                                                                    {{field.longname}}                                                        {{item}}                                                                                                                                        Can\\'t query on Object fields            Can\\'t query on Object fields            Can\\'t query on Blob fields            Can\\'t query on Blob fields            Can\\'t query on Picture fields                                                And                Or                                                 More...            Less...                Query    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'AdvancedQueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base64.html":{"url":"classes/Base64.html","title":"class - Base64","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base64\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/base64.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                error\n                            \n                            \n                                InvalidCharacterError\n                            \n                            \n                                    Private\n                                    Static\n                                REGEX_SPACE_CHARACTERS\n                            \n                            \n                                    Private\n                                    Static\n                                TABLE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decode\n                            \n                            \n                                    Static\n                                encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InvalidCharacterError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\tthis.message = message;\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            REGEX_SPACE_CHARACTERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[\\t\\n\\f\\r ]/g\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            TABLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Base64 {\n\n\n\t/*--------------------------------------------------------------------------*/\n\n\tInvalidCharacterError = function (message) {\n\t\tthis.message = message;\n\t};\n\n\tprivate static error = function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t};\n\n\tprivate static TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tprivate static REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tpublic static decode(input): string {\n\t\tinput = String(input)\n\t\t\t.replace(Base64.REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\tBase64.error(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position > (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tpublic static encode(input): string {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\tBase64.error(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position > 18 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) > 10) +\n\t\t\t\tBase64.TABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt((buffer > 2) +\n\t\t\t\tBase64.TABLE.charAt((buffer \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Base64ImageRef.html":{"url":"pipes/Base64ImageRef.html","title":"pipe - Base64ImageRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Base64ImageRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/Base64ImageRef.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        base64ImageRef\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, imageType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/Base64ImageRef.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    imageType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'jpeg'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n/*\n * Convert a Base64 Image string into an embedded Image URL \n * Usage:\n *   value | base64ImageRef {:type}\n * Parameters:\n *   optional image type parameter, default is \"jpeg\"\n*/\n@Pipe({name: 'base64ImageRef'})\nexport class Base64ImageRef implements PipeTransform {\n  transform(value: string, imageType: string = 'jpeg'): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('data:image/'+imageType+';base64,'+value);\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CustomButtonBarDirective.html":{"url":"directives/CustomButtonBarDirective.html","title":"directive - CustomButtonBarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CustomButtonBarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        custombuttonbar\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deferred.html":{"url":"classes/Deferred.html","title":"class - Deferred","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deferred\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promise\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FourDCollection.html":{"url":"injectables/FourDCollection.html","title":"injectable - FourDCollection","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FourDCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDCollection.ts\n        \n\n            \n                Description\n            \n            \n                This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                currentRecord\n                            \n                            \n                                    Public\n                                filterOptions\n                            \n                            \n                                    Private\n                                fourD\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                models\n                            \n                            \n                                    Public\n                                orderBy\n                            \n                            \n                                    Public\n                                queryString\n                            \n                            \n                                    Public\n                                totalRecordCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bulkDelete\n                            \n                            \n                                    Public\n                                bulkUpdate\n                            \n                            \n                                    Public\n                                getColumnListJSON\n                            \n                            \n                                    Public\n                                getRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bulkDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkDelete(query: FourDQuery, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:166\n                \n            \n\n\n            \n                \n                    Delete a selection of records based on a supplied query+filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FourDQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional, FourDQuery to further filter records to he retrieved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns a Promise for the database operation, whose result is the # of records deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bulkUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:195\n                \n            \n\n\n            \n                \n                    Update a selection of records on a FourDCollection\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns a Promise for the database operation, blank means all records have been updated\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnListJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnListJSON(columns: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:54\n                \n            \n\n\n            \n                \n                    prepares the JSON field description to send to 4D, listing the columns to retrieve\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a JSON string listing the fields/columns to retrieve for each record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecords(query: FourDQuery, columns: Array, startRec: number, numOfRecords: number, filter: string, orderby: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:103\n                \n            \n\n\n            \n                \n                    Retrieves a list of records using a query string \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FourDQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n\n                                    \n                                \n                                \n                                    startRec\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        the starting record number to retrieve, used for paging.\n\n                                    \n                                \n                                \n                                    numOfRecords\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        -1\n                                    \n\n                                    \n                                        the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional, FourDQuery to further filter records to he retrieved\n\n                                    \n                                \n                                \n                                    orderby\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional order By clause to retrieve records in a set order.  in the format:    >table.field : to sort records by table.field in ascending order    \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:29\n                            \n                        \n\n                \n                    \n                        the default list of field/column names to be populated on each Collection record data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRecord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:32\n                            \n                        \n\n                \n                    \n                        holds current record from the current selection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:26\n                            \n                        \n\n                \n                    \n                        default filter to be applied on all queries \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fourD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n                \n                    \n                        injected FourDInterface service \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:18\n                            \n                        \n\n                \n                    \n                        the model this collection is based on \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:20\n                            \n                        \n\n                \n                    \n                        array of models in the collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:22\n                            \n                        \n\n                \n                    \n                        default order by string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDQuery\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:24\n                            \n                        \n\n                \n                    \n                        default query string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalRecordCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:34\n                            \n                        \n\n                \n                    \n                        holds the total # of records found on the latest query \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/js44D/JSFourDCollection.ts:235\n                                \n                            \n                    \n                        \n                                returns the length of the Collection, or the # of records loaded in\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDModel } from './JSFourDModel';\n\n/**\n * This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n */\n@Injectable()\nexport class FourDCollection {\n\n    //\n    // FourDCollection properties\n    //\n    /** the model this collection is based on */\n    public model: any;\n    /** array of models in the collection */\n    public models: Array = [];\n    /** default order by string */\n    public orderBy: string;\n    /** default query string */\n    public queryString: FourDQuery = null;\n    /** default filter to be applied on all queries */\n    public filterOptions: string;\n\n    /** the default list of field/column names to be populated on each Collection record data */\n    public columns: Array = [];\n\n    /** holds current record from the current selection */\n    public currentRecord: FourDModel;\n    /** holds the total # of records found on the latest query */\n    public totalRecordCount = 0;\n\n    /** injected FourDInterface service */\n    private fourD: FourDInterface;\n\n    //\n    // constructor: initialize collection properties\n    //\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n    /**\n     * prepares the JSON field description to send to 4D, listing the columns to retrieve\n     * \n     *  @param columns a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n     * \n     *  @returns a JSON string listing the fields/columns to retrieve for each record\n     */\n    public getColumnListJSON(columns: Array): string {\n        if (!columns) { columns = this.columns; }\n        const colList: Array = [];\n        const modelDef = (this.model);\n        let theModel: FourDModel = (new modelDef());\n        let fld: any;\n        for (const col of columns) {\n            if (typeof (col) === 'string') {\n                if (col.indexOf('.') > 0) { // is this a longname field?\n                    colList.push({ name: col.substr(col.indexOf('.') + 1), field: col });\n                } else { // nope, so let's see if we have it in our datamodel\n                    fld = theModel.getFieldProperties(col);\n                    if (fld) { // field in our datamodel, use its properties\n                        if (fld.formula) {\n                            colList.push({ name: fld.name, formula: fld.formula });\n                        } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                    }\n                }\n            } else if (col.field) {\n                theModel = (new modelDef());\n                fld = theModel.getFieldProperties(col.field);\n                if (fld) {\n                    if (fld.formula) {\n                        colList.push({ name: fld.name, formula: fld.formula });\n                    } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                }\n            } else {\n                if (col.formula) {\n                    colList.push({ name: col.name, formula: col.formula });\n                } else if (col.name && col.longname) { colList.push({ name: col.name, field: col.longname }); }\n            }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Retrieves a list of records using a query string \n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *  \n     * @returns returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n     */\n    public getRecords(query: FourDQuery = null, columns: Array = null, startRec: number = 0, numOfRecords: number = -1, filter: string = null, orderby: string = null): Promise> {\n        if (!query) {\n            query = this.queryString;\n        }\n        if (columns) {\n            this.columns = columns;\n        }\n        if (!filter || filter === '') {\n            filter = this.filterOptions;\n        }\n        if (!orderby || orderby === '') {\n            orderby = this.orderBy;\n        }\n\n        const body: any = { Username: FourDInterface.currentUser };\n        const modelDef = (this.model);\n        let newModel: FourDModel = (new modelDef());\n        body.TableName = newModel.tableName;\n        body.StartRec = startRec;\n        body.NumRecs = numOfRecords;\n\n        body.QueryString = JSON.stringify(query);\n        body.Columns = Base64.encode(Utf8.utf8encode((columns) ? this.getColumnListJSON(columns) : this.getColumnListJSON(newModel.getColumnList())));\n\n        if (filter) { body.FilterOptions = filter; }\n        if (orderby) { body.OrderBy = orderby; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetRecords', body)\n                .subscribe(resultJSON => {\n                    this.totalRecordCount = 0;\n                    this.models = [];\n                    if (resultJSON && resultJSON['selected'] && resultJSON['records']) {\n                        this.totalRecordCount = parseInt(resultJSON['selected']);\n                        const recList: Array = resultJSON['records'];\n                        recList.forEach(record => {\n                            newModel = (new modelDef());\n                            newModel.populateModelData(record);\n                            newModel.clearRecordDirtyFlag();\n                            this.models.push(newModel);\n                        });\n                    }\n\n                    resolve(this.models);\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n\n    /**\n     * Delete a selection of records based on a supplied query+filter\n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *\n     * @returns returns a Promise for the database operation, whose result is the # of records deleted\n     */\n    public bulkDelete(query: FourDQuery, filter: string = null): Promise {\n        const modelDef = (this.model);\n        const newModel: FourDModel = (new modelDef());\n        let body: any = { TableName: newModel.tableName };\n        body.QueryString = JSON.stringify(query);\n        if (filter) { body.FilterOptions = filter; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_BulkDelete', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON && resultJSON.valid) {\n                        resolve(resultJSON.deleted);\n                    } else reject(resultJSON.message)\n\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n    /**\n    * Update a selection of records on a FourDCollection\n    *\n    * @returns returns a Promise for the database operation, blank means all records have been updated\n    */\n    public bulkUpdate(): Promise {\n        let recordList = [];\n        //\n        // build list of records to update, with the modified fields data\n        //\n        for (const record of (this.models as Array)) {\n            if (record.recordIsDirty()) {\n                recordList.push({ table: record.tableName, recnum: record.recordNumber, fields: Base64.encode(Utf8.utf8encode(record.recordToJSON('update', false)))});\n            }\n        }\n\n        if (recordList.length > 0) { // do we have any record to update?\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_BulkUpdate', { recordList: Base64.encode(Utf8.utf8encode(JSON.stringify(recordList)))})\n                    .subscribe(resultJSON => {\n                        if (resultJSON && resultJSON.valid) {\n                            resolve('');\n                        } else reject(resultJSON.message)\n\n                    },\n                        error => {\n                            console.log('error:' + error);\n                            reject(error);\n                        });\n            });\n        \n        } else {\n            return new Promise((resolve, reject) => {\n                resolve('No records have been modified!');\n            });\n        }\n\n    }\n\n\n    /**\n     * returns the length of the Collection, or the # of records loaded in\n     */\n    public get length(): number {\n        return this.models.length;\n    }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FourDDateToString.html":{"url":"pipes/FourDDateToString.html","title":"pipe - FourDDateToString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FourDDateToString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/FourDDateToString.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fourDDateToString\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/FourDDateToString.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/*\n * Convert a 4D Date string into Locale Date String \n * Usage:\n *   value | fourDDateToLocaleString \n * \n*/\n@Pipe({name: 'fourDDateToString'})\nexport class FourDDateToString implements PipeTransform {\n    transform(value): string {\n        if (value) {\n            if (typeof (value) === 'string' && value !== '') {\n                const date = new Date(value.replace(/-/g, '\\/'));\n                return date.toLocaleDateString();\n            } else return value.toLocaleDateString();\n        } else return ''; // handle case where date field is null/undefined\n      }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDDropDown.html":{"url":"components/FourDDropDown.html","title":"component - FourDDropDown","body":"\n                   \n\n\n\n\n\n  Components\n  FourDDropDown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDDropDown.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-dropdown\n            \n\n\n            \n                styles\n                .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n            \n\n            \n                template\n                \n    {{item}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isItemSelected\n                            \n                            \n                                    Private\n                                loadListFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listName\n                            \n                            \n                                listOptions\n                            \n                            \n                                selectedValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listOptions\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(item: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadListFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadListFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-dropdown',\n    styles: [`.fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            `],\n    template: `\n        \n            {{item}}\n        \n       `\n})\n\n@Injectable()\nexport class FourDDropDown implements AfterViewInit {\n    @Input() public listName: string;\n    @Input() public selectedValue: string;\n    @Input() public listOptions: Array = [];\n\n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadListFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(user => {\n                this.loadListFrom4D();\n            })\n        }\n    }\n\n    isItemSelected(item: string): string {\n        return (item === this.selectedValue) ? 'selected' : '';\n    }\n\n    private loadListFrom4D() {\n        if (this.listName) {\n            this.fourD.get4DList(this.listName)\n                .then((values) => {\n                    this.listOptions = ['', ...values];\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n    \n            .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{item}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDDropDown'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FourDModule.html":{"url":"modules/FourDModule.html","title":"module - FourDModule","body":"\n                   \n\n\n\n\n    Modules\n    FourDModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fourD.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FourDCollection\n                        \n                        \n                            FourDInterface\n                        \n                        \n                            FourDModel\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDInterface } from './js44D/JSFourDInterface';\nimport { FourDModel } from './js44D/JSFourDModel';\nimport { FourDCollection } from './js44D/JSFourDCollection';\n\n@NgModule({\n      imports: [HttpClientModule],\n      providers: [HttpClient, FourDInterface, FourDModel, FourDCollection],\n      exports: [HttpClientModule]\n})\nexport class FourDModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FourDQuery.html":{"url":"classes/FourDQuery.html","title":"class - FourDQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FourDQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                Describes the properties of a 4D Query String  - see RESTApi documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                custom\n                            \n                            \n                                    Optional\n                                intersection\n                            \n                            \n                                    Optional\n                                join\n                            \n                            \n                                    Optional\n                                joinFK\n                            \n                            \n                                    Optional\n                                joinPK\n                            \n                            \n                                    Optional\n                                joinTable\n                            \n                            \n                                    Optional\n                                query\n                            \n                            \n                                    Optional\n                                sql\n                            \n                            \n                                    Optional\n                                union\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:716\n                            \n                        \n\n                \n                    \n                        Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            intersection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:714\n                            \n                        \n\n                \n                    \n                        An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            join\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:718\n                            \n                        \n\n                \n                    \n                        Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinFK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:724\n                            \n                        \n\n                \n                    \n                        A join query property. The main table foreign key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinPK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:722\n                            \n                        \n\n                \n                    \n                        A join query property. The join table primary key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:720\n                            \n                        \n\n                \n                    \n                        A join query property. This is the join table, a table name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:708\n                            \n                        \n\n                \n                    \n                        Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:710\n                            \n                        \n\n                \n                    \n                        Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            union\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:712\n                            \n                        \n\n                \n                    \n                        An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n\n    /**\n     * Get Record count based on a supplied query+filter\n     * \n     *  @param tableName the table to get the resulting record count\n     *  @param query the FourDQuery object that defines the query to be used for determining\n     *  @param filter optional, FourDQuery to further filter records\n     *\n     * @returns returns a Promise for the database operation, whose result is the # of records selected\n     */\n    public getRecordCount(tableName:string, query: FourDQuery, filter: string = null): Promise {\n        let body: any = { TableName: tableName, QueryString: JSON.stringify(query)};\n        if (filter) { body.FilterOptions = filter; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.call4DRESTMethod('REST_CountRecords', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON && resultJSON.valid) {\n                        resolve(resultJSON.seleted);\n                    } else reject(resultJSON.message)\n\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDRegistryInput.html":{"url":"components/FourDRegistryInput.html","title":"component - FourDRegistryInput","body":"\n                   \n\n\n\n\n\n  Components\n  FourDRegistryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDRegistryInput.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-registry-input\n            \n\n\n\n            \n                template\n                \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanValue\n                            \n                            \n                                    Private\n                                originalValue\n                            \n                            \n                                    Public\n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadValueFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                defaultValue\n                            \n                            \n                                inputType\n                            \n                            \n                                parameterValue\n                            \n                            \n                                selectorValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        className\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parameterValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectorValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadValueFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadValueFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            originalValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            textValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-registry-input',\n    template: `\n        \n            \n            \n        \n       `\n})\n\n@Injectable()\nexport class FourDRegistryInput implements AfterViewInit {\n\n    @Input() public className: string;\n    @Input() public parameterValue: string;\n    @Input() public selectorValue: string;\n    @Input() public defaultValue: string;\n    @Input() public inputType: string;\n    \n    public textValue: string = '';\n    public booleanValue: boolean = false;\n    private originalValue: string = '';\n    \n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadValueFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(() => {\n                this.loadValueFrom4D();\n            })\n        }\n    }\n\n    public valueChanged() {\n        if (this.inputType === 'checkbox') {\n            this.textValue = (this.booleanValue)?'Y':'N';\n        }\n        if (this.originalValue != this.textValue) {\n            this.fourD.setRegistryValue(this.className, this.parameterValue, this.textValue, this.selectorValue)\n                .then (v => {this.originalValue = this.textValue;});\n        }\n    }\n\n    private loadValueFrom4D() {\n        if (this.className && this.className != '' && this.parameterValue && this.parameterValue != '') {\n            this.fourD.getRegistryValue(this.className, this.parameterValue, this.defaultValue, this.selectorValue)\n                .then((value) => {\n                    this.originalValue = this.textValue = value;\n                    this.booleanValue = (value.toUpperCase() == \"Y\");\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDRegistryInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModal.html":{"url":"classes/ICustomModal.html","title":"class - ICustomModal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModal.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ICustomModal { }\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModalComponent.html":{"url":"classes/ICustomModalComponent.html","title":"class - ICustomModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModalComponent.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                beforeClose\n                            \n                            \n                                    Optional\n                                beforeDismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeClose\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeClose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:18\n                \n            \n\n\n            \n                \n                    Invoked before a modal is closed, return true to cancel closing.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeDismiss\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:13\n                \n            \n\n\n            \n                \n                    Invoked before a modal is dismissed, return true to cancel dismissal.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * A Type used as a binding key for dialog window Components\n */\n\nexport class ICustomModalComponent {\n    dialog: ModalDialogInstance;\n\n    /**\n     * Invoked before a modal is dismissed, return true to cancel dismissal.\n     */\n    beforeDismiss?(): boolean;\n\n    /**\n     * Invoked before a modal is closed, return true to cancel closing.\n     */\n    beforeClose?(): boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldDescription.html":{"url":"interfaces/IFieldDescription.html","title":"interface - IFieldDescription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFieldDescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDModel.ts\n        \n\n            \n                Description\n            \n            \n                This is the description for each field in a Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        formula\n                                \n                                \n                                        indexed\n                                \n                                \n                                        isrelated\n                                \n                                \n                                        joinFK\n                                \n                                \n                                        joinPK\n                                \n                                \n                                        length\n                                \n                                \n                                        list\n                                \n                                \n                                        longname\n                                \n                                \n                                        name\n                                \n                                \n                                        readonly\n                                \n                                \n                                        relatesTo\n                                \n                                \n                                        required\n                                \n                                \n                                        subTable\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    not used \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formula\n                                    \n                                \n                                \n                                    \n                                        formula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a calculated value, this is a 4D expresstion that returns the field contents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexed\n                                    \n                                \n                                \n                                    \n                                        indexed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates that the field is indexed on 4D side \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isrelated\n                                    \n                                \n                                \n                                    \n                                        isrelated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field comes from a related table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinFK\n                                    \n                                \n                                \n                                    \n                                        joinFK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the foreign key field in the main table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinPK\n                                    \n                                \n                                \n                                    \n                                        joinPK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the primary key field in the related many table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if an alpha field, the field length as defined in the 4D Structure \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the choice list associated to the field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longname\n                                    \n                                \n                                \n                                    \n                                        longname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field dot long name, in the format 'table.field', applicable if a database field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field name, must be unique in the Data Model \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field is read only, and can't me modified \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatesTo\n                                    \n                                \n                                \n                                    \n                                        relatesTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a foreign key that relates to a one table, this is the related one field name in dot long format \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is a required field, cannot be empty or null \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTable\n                                    \n                                \n                                \n                                    \n                                        subTable:         FourDModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FourDModel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable (related many table), this is the FourDModel that represents records in that table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is unique \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDCollection } from './JSFourDCollection';\n\n/**\n * This is the description for each field in a Data Model\n */\nexport interface IFieldDescription {\n    /** the field name, must be unique in the Data Model */\n    name: string;\n    /** the field dot long name, in the format 'table.field', applicable if a database field */\n    longname: string;\n    /** the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture */\n    type: string;\n    /** if field is a calculated value, this is a 4D expresstion that returns the field contents */\n    formula: string;\n    /** if field is a subtable (related many table), this is the FourDModel that represents records in that table */\n    subTable: FourDModel;\n    /** not used */\n    className: string;\n    /** if field is a subtable, this is the foreign key field in the main table */\n    joinFK: string;\n    /** if field is a subtable, this is the primary key field in the related many table */\n    joinPK: string;\n    /** indicates field comes from a related table */\n    isrelated: boolean;\n    /** if field is a foreign key that relates to a one table, this is the related one field name in dot long format */\n    relatesTo: string;\n    /** indicates field is read only, and can't me modified */\n    readonly: boolean;\n    /** the choice list associated to the field */\n    list: string;\n    /** field is a required field, cannot be empty or null */\n    required: boolean;\n    /** indicates that the field is indexed on 4D side */\n    indexed: boolean;\n    /** field is unique */\n    unique: boolean;\n    /** if an alpha field, the field length as defined in the 4D Structure */\n    length: number;\n}\n\n/**\n * Individual 4D Datamodel that replicates a 4D Table's structure and provides a CRUD API to 4D data\n */\n@Injectable()\nexport class FourDModel {\n    /** 4D's Table name */\n    public tableName = '';\n    /** 4D's table number */\n    public tableNumber = 0;\n    /** Table's primary key field name */\n    public primaryKey_: string;\n\n    /** record number field/attribute name, usually '_recnum' */\n    public idAttribute = '_recnum';\n\n    /** Table definition, array describing all fields in the Data Model and how they map to the 4D Structure */\n    public fields: Array = [];\n\n    /** callback method to be executed on 4D side before a Save operation */\n    public fourdSaveCallbackMethod_: string;\n    /** callback method to be executed on 4D side before a Delete operation */\n    public fourdDeleteCallbackMethod_: string;\n\n    // injected FourDInterface service\n    public fourD: FourDInterface;\n\n    // -----------------------\n    // Private variables\n    // -----------------------\n    // current record number\n    private _recnum = -3;\n    // keeps all attributes for the current model\n    private _attributes: Object = {};\n    // keep a list of modified fields, to optimize Updates, only modified data is set to 4D\n    private _modified: Object = {};\n\n\n    /** \n     * constructor: initialize model properties\n    */\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n\n    /**\n     * Get a field value\n     */\n    get(field: string): any {\n        return this._attributes[field];\n    }\n\n    /**\n     * Set a field value, updates field modified flag\n     */\n    set(field: string, value: any) {\n        if (this.getFieldProperties(field)) {\n            if (this.getFieldDescription(field).type === 'Date') {\n                if (typeof (value) === 'string' && value !== '') {\n                    value = new Date(value.replace(/-/g, '\\/'));\n                }\n            } else if (this.getFieldDescription(field).type === 'Time') {\n                if (typeof (value) === 'string' && value !== '') {\n                    const hh = +value.substr(0,2);\n                    const mm = +value.substr(3,2);\n                    const ss = +value.substr(6,2);\n                    value = new Date(0,0,0,hh,mm,ss);\n                }\n            }\n            if (this._attributes.hasOwnProperty(field)) {\n                // we are updating an attribute\n                if (this._attributes[field] !== value) {\n                    // make sure value is indeed changing...\n                    this._attributes[field] = value;\n                    this._modified[field] = true; // mark field as modified\n                }\n            } else {\n                // setting a new attribute\n                this._attributes[field] = value;\n                this._modified[field] = true; // mark field as modified\n            }\n        } else {\n            this._attributes[field] = value;\n        }\n    }\n\n    /**\n     * Returns the description for a given field\n     * \n     * @param fieldName the field name to get properties for\n     * \n     * @returns the field name properties, an IFieldDescription instance\n     * \n     */\n    getFieldProperties(fieldName): IFieldDescription {\n        let ret: IFieldDescription = null;\n        for (const col of this.fields) {\n            if (col.name === fieldName) { ret = col; }\n        };\n        return ret;\n    }\n\n\n    /**\n     * Clears up all record fields\n     */\n    clearRecord() {\n        for (const field of this.fields) {\n            switch (field.type) {\n                case 'date':\n                case 'Date':\n                    this[field.name] = null;\n                    break;\n\n                case 'time':\n                case 'Time':\n                    this[field.name] = null;\n                    break;\n\n                case 'boolean':\n                    this[field.name] = false;\n                    break;\n\n                case 'string':\n                case 'text':\n                    this[field.name] = '';\n                    break;\n\n                case 'number':\n                    this[field.name] = 0;\n                    break;\n\n                case 'json':\n                    this[field.name] = {};\n                    break;\n\n                case 'blob':\n                case 'picture':\n                    this[field.name] = null;\n                    break;\n\n                default:\n                    this[field.name] = '';\n                    break;\n            }\n        };\n\n    }\n\n    /**\n     * Serializes record data into its JSON representation as used in 4D\n     *\n     * @param mode can be 'insert' or 'update', if mode is 'update' the JSON string will contain only fields that have been modified\n     * @param noAudit 'no audit' flag to be sent to 4D, if 'true' record audit log will be disabled \n     * \n     * @returns record contents as JSON string\n     *\n     */\n    recordToJSON(mode: string, noAudit: boolean): string {\n        const recordData: Object = { table: this.tableName, recnum: this.recordNumber };\n        // set callback methods\n        if (this.fourdSaveCallbackMethod_) {\n            recordData['saveCallback'] = this.fourdSaveCallbackMethod_; // set save callback method if set\n        }\n\n        recordData['noAudit'] = noAudit;    // disable audit log for this record\n\n        if ((mode === 'update') && this.hasOwnProperty('TimeStamp')) {\n            recordData['timeStamp'] = this['TimeStamp'];\n        } // if updating, add current record's timestamp attribute\n\n        recordData['fields'] = {}; // initialize fields propriety\n        for (const field of this.fields) {\n            const fieldName: string = field.name;\n            if (!this.isCalculatedField(field) &&\n                !this.isSubtable(field) &&\n                !this.isRelatedField(field) &&\n                (!this.isReadOnly(field) || (mode === 'insert')) &&\t\t\t// May/15/09 send all non-read only fields, empty or not\n                (this.isModifiedField(fieldName) || (mode === 'insert'))) { \t// Nov 18/09 send ONLY fields that have indeed been modified\n                let value = '';\n                if (((this[fieldName] !== null) && (this[fieldName] !== undefined)) || (field.type === 'boolean')) {\n                    // send back only fields that do have some value and that belong to the table\n                    // ignore calculated or related fields\n                    switch (field.type) {\n                        case 'Date':\n                        case 'date':\n                            if (typeof(this[fieldName]) === 'string') {\n                                recordData['fields'][field.longname] = this[fieldName]; \n                            } else {\n                                const dateValue: Date = this[fieldName];\n                                value = dateValue.getFullYear().toString();\n                                if (dateValue.getMonth() '; // if blob, wrap data inside a cdata\n                             }\n                             */\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n\n                        default:\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n                    }\n                }\n\n\n            }\n        };\n\n        return JSON.stringify(recordData);\n\n    }\n\n\n    /**\n     * Retrieve a record from 4D and populates the Data Model.\n     *\n     * @param recordNumber the record # to retrieve (optional, it defaults to the currentRecordNumber property)\n     * @param recordID primary key value for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     *    if specified the record is retrieved by querying on its primary key field\n     * @param query query string for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     * \n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     *\n     */\n    public getRecord(recordNumber: number = null, recordID: string = null, query: FourDQuery = null): Promise {\n        if (query) {\n            // if we have a query, use it...\n        } else if (recordID && FourDInterface.fourdAPIVersion = 0 || this.recordNumber >= 0 || (recordID && FourDInterface.fourdAPIVersion >= '1.18.06.17a' && this.primaryKey_)) {\n            // if we have a record number, use it directly then\n            if (recordNumber >= 0) { this.recordNumber = recordNumber; }\n\n            // build request body with record number to retrieve\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            if (recordID) {\n                body.RecordID = recordID; // if querying record using record ID...             \n            } else {\n                body.RecordNum = this.recordNumber;\n            }\n            body.VariablesList = Base64.encode(Utf8.utf8encode(this.getColumnListJSON()));\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_LoadData', body)\n                    .subscribe(resultJSON => {\n                        this.clearRecord();\n                        this.populateModelData(resultJSON);\n                        this.clearRecordDirtyFlag();\n                        resolve(this);\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n        } else { \n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n\n        }\n\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        const me = this;\n\n        // first we send to query to 4D to get all records that match the query criteria\n        // then if at lest 1 record is returned by 4D, we use it's record number to refresh to complete record contents\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, [this.primaryKey_])\n                .then((reclist) => {\n                    if (records.models.length > 0) {\n                        me.recordNumber = records.models[0].recordNumber; // set the record number and refresh it\n                        me.refresh().then((rec) => { rec.clearRecordDirtyFlag(); resolve(me); }).catch((error) => { reject(error); });\n                    } else { reject('recordNotFound'); }\n                })\n                .catch((error) => { reject(error); });\n        });\n\n\n    }\n\n    /**\n     * Refresh current record, grab a fresh copy from 4D\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public refresh(): Promise {\n        if (this.recordNumber >= 0) {\n            return this.getRecord(this.recordNumber);\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n\n    }\n\n\n    /**\n     * Insert a new record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance. the primary key property is set after the record is inserted\n     *\n     */\n    public insertRecord(): Promise {\n        const body: any = { Username: FourDInterface.currentUser };\n        body.TableName = this.tableName;\n        body.RecordNum = this.recordNumber;\n        if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n        body.Action = 'add';\n        body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('add', false)));\n\n        return new Promise((resolve, reject) => {\n            const me = this;\n            this.fourD.call4DRESTMethod('REST_PostData', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.returnCode === 'OK') {\n                        // insert record went OK, retrieve calculated return code & record ID\n                        me.recordNumber = resultJSON['_recnum'];\n                        if (me.primaryKey_ && me.primaryKey_ !== '') { me[me.primaryKey_] = resultJSON['recordID']; }\n                        me.clearRecordDirtyFlag(); // clean up modified fields\n                        resolve(me);\n                    } else { reject(resultJSON.returnCode); }\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error.text());\n                    });\n        });\n\n\n    }\n\n    /**\n     * Update record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public updateRecord(): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n            body.Action = 'update';\n            body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('update', false)));\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // update record went OK\n                            me.clearRecordDirtyFlag(); // clean up modified fields\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n    }\n\n    /**\n     * Delete record from the database\n     *\n     * @param cascade true|false indicates if 4D should perform a cascade delete (optional, default=false)\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public deleteRecord(cascade: boolean = false): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdDeleteCallbackMethod_) { body.CallBackMethod = this.fourdDeleteCallbackMethod_; }\n            body.Action = 'delete';\n            if (cascade) { body.cascadeDelete = cascade; }\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // delete record went OK\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n        }\n\n    }\n\n    /**\n     * Populates model with attributes/properties from a json Object\n     *\n     *  @param recordData json object whose properties will be used to populate the Data Model\n     */\n    public populateModelData(recordData: Object) {\n        if (recordData.hasOwnProperty('_recnum')) { this.recordNumber = recordData['_recnum']; }\n        for (const field in recordData) {\n            if (field !== '_recnum' && this.getFieldProperties(field)) {\n                switch (this.getFieldProperties(field).type ) {\n                    case 'json':\n                        this[field] = (recordData[field] && recordData[field] != '')?JSON.parse(recordData[field]):{}; \n                        break;\n                \n                    default:\n                        this[field] = recordData[field];\n                        break;\n                }\n            }\n        }\n\n    }\n\n    public extractModelData(): Object {\n        let data = { _recnum: this._recnum };\n        for (const field of this.fields) {\n            data[field.name] = this[field.name];\n        }\n\n        return data;\n    }\n\n    /**\n     * Retrieves a list of records using a query string\n     *\n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *\n     *\n     * @returns returns a Promise for the database operation, whose result is a FourDCollection with the query results\n     */\n    public getRecords(query: FourDQuery = null,\n        columns: Array = null,\n        startRec: number = 0, numOfRecords: number = -1,\n        filter: string = null,\n        orderby: string = null): Promise {\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, (columns) ? columns : this.getColumnList(), startRec, numOfRecords, filter, orderby)\n                .then((reclist) => { resolve(records); })\n                .catch((error) => { reject(error); });\n        });\n\n    }\n\n    /**\n     * Retrieves a set of variables or 4D execute formula values\n     * \n     * @param values an Array of objects with the following format: {formula: 'a 4d formula', value:'the resulting value returned by 4D'}\n     * @param method the name of a 4D method to be called before processing the formulas\n     *\n     * @returns returns a Promise for the database operation, whose result is the values Array populated by 4D\n     */\n    public getValuesFrom4D(values: Array, method: string = ''): Promise> {\n        const body: any = { VariablesList: Base64.encode(Utf8.utf8encode(JSON.stringify(values))) };\n        if (method && method != '') {\n            body.CallbackMethod = method;\n        }\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetValues', body)\n                .subscribe(result => {\n                    resolve(result);\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error);\n                    });\n        });\n\n    }\n    /**\n     * Get the current record's record number\n     * \n     *  @returns current record number (4D's record number, equivalent to ROWID)\n     *\n     */\n    public get recordNumber(): number {\n        return this._recnum;\n    }\n    public set recordNumber(v: number) { this._recnum = v; }\n\n    /**\n     * Checks to see if a record is currently loaded\n     *\n     * @returns true if a record is loaded into this FourDModel instance\n     *\n     */\n    public isRecordLoaded(): boolean {\n        return (this.recordNumber >= 0);\n    }\n\n\n    /**\n     * Clears record modified flag.\n     * \n     * This can be used when one changes a record programmatically, but does not want to set the record modified flag.\n     * For example on record initialization.\n     *\n     */\n    public clearRecordDirtyFlag() {\n        this._modified = {};\t\t\t\t\t// clear modified fields list\n    }\n\n\n    /**\n     * Check if current record has been modified.\n     *\n     * @returns true indicates that record contents have been modified.\n     *\n     */\n    public recordIsDirty(): boolean {\n        for (const field of this.fields) {\n            if (this._modified.hasOwnProperty(field.name)) { return true; }\n        }\n        return false;\n    }\n\n\n    /**\n     * Prepares the record's JSON field description to send to 4D\n     * \n     * @returns JSON string representing all fields in the Data Model\n     */\n    public getColumnListJSON(): string {\n        const colList: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (col.formula) {\n                colList.push({ name: col.name, formula: col.formula });\n            } else if (col.subTable) {\n                const subFields: Array = [];\n                for (const sub of col.subTable.fields) {\n                    if (sub.formula) { // add support for formulas in subfields\n                        subFields.push({ name: sub.name, formula: sub.formula });\n                    } else {\n                        subFields.push({ name: sub.name, field: sub.longname });\n                    }\n                };\n                colList.push({\n                    name: col.name,\n                    subTable: col.subTable.tableName,\n                    joinFK: col.joinFK,\n                    joinPK: col.joinPK,\n                    subFields: subFields\n                });\n\n            } else if (col.longname) { colList.push({ name: col.name, field: col.longname }); }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Gets a list of fields in the Data Model\n     * \n     * @param includeSubTables if 'true', includes fields in subtables defined in the Data Model\n     * \n     * @returns an array with all fields defined for this data model\n     */\n    public getColumnList(includeSubTables: boolean = false): Array {\n        const cols: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (!this.isSubtable(col) || includeSubTables) {\n                if (col.formula) {\n                    cols.push(col);\n                } else { cols.push(col.name); }\n            }\n        };\n        return cols;\n    }\n\n    /**\n     * Returns a field's longname, given its field name\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field dot longname, as 'table.field'\n     */\n    public getLongname(fieldName: string): string {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field.longname; }\n        }\n\n        // not found, assume table.field\n        return this.tableName + '.' + fieldName;\n    }\n\n    // -----------------------\n    // Private methods\n    // -----------------------\n\n    /**\n     * Returns a field's data model description\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field's iFieldDescription\n     */\n    private getFieldDescription(fieldName: string): IFieldDescription {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field; }\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks to see if a field is from a related table\n     *\n     * @param field field description for the Class definition\n     * @return true if field is on a related table\n     *\n     */\n    private isRelatedField(field: IFieldDescription): boolean {\n        return field.isrelated;\n    }\n\n    /**\n     * Checks to see if a field contents have been modified\n     *\n     * @param field field/property name\n     * @returns true if field has been modified\n     *\n     */\n    private isModifiedField(field: string): boolean {\n        return this._modified.hasOwnProperty(field);\n    }\n\n    /**\n     * Checks to see if a field is a calculated field\n     *\n     * @param field field description from the Data Model\n     * \n     * @returns true if field is formula, a calculated field\n     *\n     */\n    private isCalculatedField(field: IFieldDescription): boolean {\n        return (field.formula !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is a related many subtable\n     *\n     * @param field field description from the Data Model\n     * @returna true if field is a related many subtable\n     *\n     */\n    private isSubtable(field: IFieldDescription): boolean {\n        return (field.subTable !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is read only\n     *\n     * @param field field description from the Data Model\n     * @returns true if field is read only\n     *\n     */\n    private isReadOnly(field: IFieldDescription): boolean {\n        return field.readonly;\n    }\n\n\n\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JS44DModule.html":{"url":"modules/JS44DModule.html","title":"module - JS44DModule","body":"\n                   \n\n\n\n\n    Modules\n    JS44DModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_imports\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_JS44DModule_providers\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nFourDModule\n\nFourDModule\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/js44D.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FourDInterface\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FourDModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDModule } from './fourD.module';\nimport { FourDInterface } from './js44D/JSFourDInterface';\n\nimport { QueryBand, CustomButtonBarDirective, QueryBandDirective } from './containers/queryBand';\nimport { AdvancedQueryComponent } from './containers/advancedQuery';\nimport { RecordList } from './containers/recordList';\nimport { RecordEditWindow } from './containers/recordEditWindow';\nimport { Tabs, Tab } from './containers/tabs';\nimport { WebAppContainer } from './containers/webAppContainer';\nimport { FourDDropDown } from './controls/fourDDropDown';\nimport { QuickFindInput } from './controls/quickFindInput';\nimport { DataGrid } from './dataGrid/dataGrid';\nimport { LoginCmp } from './login/login';\nimport { ListSelectorDialog } from './dialogs/listSelectorDialog';\n\nimport { Base64ImageRef } from './pipes/Base64ImageRef.pipe';\nimport { FourDDateToString } from './pipes/FourDDateToString.pipe';\nimport { FourDRegistryInput } from './controls/fourDRegistryInput';\n\n\n@NgModule({\n      imports: [FormsModule, ReactiveFormsModule, CommonModule, HttpClientModule, FourDModule],\n      declarations: [ \n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      providers: [HttpClient, FourDInterface],\n      exports: [\n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      entryComponents: [LoginCmp, AdvancedQueryComponent, ListSelectorDialog]\n})\nexport class JS44DModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSelectorDialog.html":{"url":"components/ListSelectorDialog.html","title":"component - ListSelectorDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ListSelectorDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/listSelectorDialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                list-selector\n            \n\n\n\n            \n                template\n                \n    \n        {{item}}\n    \n    \n        {{message}}\n        {{buttonText}}\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelection\n                            \n                            \n                                ok\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                itemsList\n                            \n                            \n                                message\n                            \n                            \n                                tipsList\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                                \n                                    width\n                                \n                                \n                                    title\n                                \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, modal: Modal)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : 'Select'\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tipsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelection\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelection(ev)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(list: string[], tips?: string[], message?: string, buttonLabel?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:64\n                \n            \n\n\n            \n                \n                    Show Me - show the list selector dialog and return a Promise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tips\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    buttonLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n\n                \n                    \n                        setheight(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n\n                \n                    \n                        settitle(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, OnInit, Input } from '@angular/core';\n\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\n@Component({\n    selector: 'list-selector',\n    template: `\n        \n            \n                {{item}}\n            \n            \n                {{message}}\n                {{buttonText}}\n            \n        \n   `,\n    providers: [Modal]\n})\n\nexport class ListSelectorDialog implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    };\n\n    @Input() public itemsList: string[] = [];\n    @Input() public tipsList: string[] = [];\n    @Input() public buttonText = 'Select';\n    @Input() public message = '';\n\n    public set height(v) { this.config.height = v };\n    public set width(v) { this.config.width = v };\n    public set title(v) { this.config.title = v };\n\n\n    public set modelContentData(v) {\n        this.itemsList = v.list;\n        this.tipsList = v.tips;\n        if (v.buttonLabel) { this.buttonText = v.buttonLabel; }\n        if (v.message) { this.message = v.message; }\n    }\n\n    private config: ModalConfig;\n\n    private selectedIndex = -1;\n\n\n    constructor(public dialog: ModalDialogInstance, private modal: Modal) {\n        this.config = ListSelectorDialog.dialogConfig;\n    }\n\n    /**\n     * Show Me - show the list selector dialog and return a Promise\n     */\n    public show(list: string[], tips?: string[], message?: string, buttonLabel?: string): Promise {\n        if (!tips) { tips = list; }\n\n        return this.modal.open(ListSelectorDialog, { list: list, tips: tips, message: message, buttonLabel: buttonLabel }, this.config);\n    }\n\n    changeSelection(ev) {\n        this.selectedIndex = ev.target.selectedIndex;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(this.selectedIndex);\n    }\n\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item}}                {{message}}        {{buttonText}}    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSelectorDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginCmp.html":{"url":"components/LoginCmp.html","title":"component - LoginCmp","body":"\n                   \n\n\n\n\n\n  Components\n  LoginCmp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/login/login.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                log-in\n            \n\n\n            \n                styles\n                \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n            \n\n            \n                template\n                    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fourDVersion\n                            \n                            \n                                password\n                            \n                            \n                                showError\n                            \n                            \n                                username\n                            \n                            \n                                webAppVersion\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fourDVersion\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        webAppVersion\n                    \n                \n                \n                    \n                        Default value : '1.18.02.16a'\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/login/login.ts:62\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\nimport { FourDInterface, MD5 } from '../js44D/JSFourDInterface';\n\n\n@Component({\n    selector: 'log-in',\n    template: `\n    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n    `,\n    styles: [`\n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    `]\n})\nexport class LoginCmp implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    };\n\n    @Input() public username = '';\n    @Input() public password = '';\n    @Input() public showError = false;\n    @Input() public fourDVersion = '';\n    @Input() public webAppVersion = '1.18.02.16a';\n\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            if (parms.hasOwnProperty('version')) {\n                this.webAppVersion = parms['version'];\n            }\n        }\n    }\n\n    constructor(public dialog: ModalDialogInstance, private fourD: FourDInterface) {\n        this.fourD.call4DRESTMethod('REST_GetApplicationVersion', {}, { responseType: 'text' })\n            .subscribe((v) => {\n                this.fourDVersion = v;\n            });\n    }\n\n    login() {\n        // event.preventDefault();\n        const md5pwd: string = MD5.md5(this.password);\n        this.fourD.signIn(this.username, md5pwd.toUpperCase())\n            .then((authentication) => {\n                if (FourDInterface.authentication) {\n                    //  console.log('authenticated');\n\n                    this.showError = false;\n                    if (this.dialog) { this.dialog.close('loggedin'); }\n                } else {\n                    console.log('oops');\n                    this.showError = true;\n                }\n            })\n            .catch((e) => {\n                //console.log(e);\n                this.showError = true;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Welcome, Please Login                    User Name                                        Password                            Login        Sorry, the username and/or password was incorrect    4D: {{fourDVersion}}, web: {{webAppVersion}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginCmp'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MD5.html":{"url":"classes/MD5.html","title":"class - MD5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MD5\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                MD5 has calculation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hex_chr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add32\n                            \n                            \n                                    Static\n                                cmn\n                            \n                            \n                                    Static\n                                ff\n                            \n                            \n                                    Static\n                                gg\n                            \n                            \n                                    Static\n                                hex\n                            \n                            \n                                    Static\n                                hh\n                            \n                            \n                                    Static\n                                ii\n                            \n                            \n                                    Static\n                                md5\n                            \n                            \n                                    Static\n                                md51\n                            \n                            \n                                    Static\n                                md5blk\n                            \n                            \n                                    Static\n                                md5cycle\n                            \n                            \n                                    Static\n                                rhex\n                            \n                            \n                                    Static\n                                str2rstr_utf8\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hex_chr\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : '0123456789abcdef'.split('')\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:487\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            add32\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add32(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:658\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            cmn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cmn(q, a, b, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:567\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    q\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ff\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ff(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:572\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            gg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gg(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:576\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hex(x)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:643\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hh(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:580\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ii\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ii(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:584\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:648\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md51\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md51(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:588\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5blk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5blk(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:623\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5cycle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5cycle(x, k)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:489\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            rhex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rhex(n)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:634\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2rstr_utf8\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2rstr_utf8(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:667\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n\n    /**\n     * Get Record count based on a supplied query+filter\n     * \n     *  @param tableName the table to get the resulting record count\n     *  @param query the FourDQuery object that defines the query to be used for determining\n     *  @param filter optional, FourDQuery to further filter records\n     *\n     * @returns returns a Promise for the database operation, whose result is the # of records selected\n     */\n    public getRecordCount(tableName:string, query: FourDQuery, filter: string = null): Promise {\n        let body: any = { TableName: tableName, QueryString: JSON.stringify(query)};\n        if (filter) { body.FilterOptions = filter; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.call4DRESTMethod('REST_CountRecords', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON && resultJSON.valid) {\n                        resolve(resultJSON.seleted);\n                    } else reject(resultJSON.message)\n\n                },\n                    error => {\n                        console.log('error:' + error);\n                        reject(error);\n                    });\n        });\n\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Modal.html":{"url":"injectables/Modal.html","title":"injectable - Modal","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Modal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/providers/Modal.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostViewRef\n                            \n                            \n                                    Static\n                                openDialogList\n                            \n                            \n                                    Public\n                                theDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openInside\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ViewContainerRef, defaultConfig: ModalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultConfig\n                                                  \n                                                        \n                                                                        ModalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog(event, theDialogInstance: ModalDialogInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    theDialogInstance\n                                    \n                                                ModalDialogInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(componentType: any, parameters?: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:43\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDialog(component: any, parameters: any, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:144\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openInside\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openInside(componentType: Type, viewRef: ViewContainerRef, parameters: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:63\n                \n            \n\n\n            \n                \n                    Opens a modal window inside an existing component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    viewRef\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to block using the modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hostViewRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            openDialogList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Type,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    Injectable,\n    Optional\n} from '@angular/core';\n\n\nimport { ModalConfig } from '../models/ModalConfig';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n\nlet _config: ModalConfig;\n\n// @dynamic\n@Injectable()\nexport class Modal {\n\n    public static hostViewRef: ViewContainerRef;\n    public static openDialogList = [];\n\n    public theDialog: any;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ViewContainerRef,\n        @Optional() defaultConfig: ModalConfig) {\n        // The Modal class should be an application wide service (i.e: singleton).\n        // This will run once in most applications...\n        // If the user provides a ModalConfig instance to the DI,\n        // the custom config will be the default one.\n        _config = (defaultConfig) ? ModalConfig.makeValid(defaultConfig) : new ModalConfig();\n    }\n\n    /**\n     * Opens a modal window blocking the whole screen.\n     * @param componentType The angular Component to render as modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public open(componentType: any, parameters?: any,\n        config?: ModalConfig, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n        // TODO: appRef.injector.get(APP_COMPONENT) Doesn't work.\n        // When it does replace with the hack below.\n        // let viewRef = this.appRef.element.nativeElement.location;\n        // let viewRef: viewRef = this.appRef['_rootComponents'][0].location;\n\n        return this.openInside(componentType, (Modal.hostViewRef) ? Modal.hostViewRef : this.appRef, parameters, config, allowMultiple, dialogID);\n    }\n\n    /**\n     * Opens a modal window inside an existing component.\n     * @param componentType The angular Component to render as modal.\n     * @param viewRef The element to block using the modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public openInside(componentType: Type, viewRef: ViewContainerRef,\n        parameters: any,\n        config?: ModalConfig,\n        allowMultiple: boolean = false,\n        dialogID: string = ''): Promise {\n\n        if (!allowMultiple) {\n            for (let index = 0; index  { this.closeDialog(event, dialogInstance); }\n        }).data('kendoWindow');\n        if (config.selfCentered) {\n            this.theDialog.center().open();\n        } else { this.theDialog.open(); }\n\n        dialogInstance.contentRef = dialogComponentRef;\n        dialogInstance.kendoDialog = this.theDialog;\n\n        // trick to avoid angular2 error \"Expression has changed after it was checked\"\n        dialogComponentRef.changeDetectorRef.detectChanges(); // need this to avoid NG2 error/warning\n\n        // if multiples not allowed, save this instance\n        if (!allowMultiple) {\n            const id = (dialogID && dialogID !== '') ? dialogID : componentType['name'];\n            Modal.openDialogList.push({ component: id, dialog: dialogInstance });\n        }\n\n        return dialogInstance.result;\n\n    }\n\n    public closeDialog(event, theDialogInstance:ModalDialogInstance) {\n        // console.log(event, theDialog);\n        for (let index = 0; index \n     */\n    public openDialog(component: any, parameters: any, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n\n        return this.open(component, parameters, component.dialogConfig, allowMultiple, dialogID);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalConfig.html":{"url":"injectables/ModalConfig.html","title":"injectable - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalConfig.ts\n        \n\n            \n                Description\n            \n            \n                A configuration definition object.\nInstruction for how to show a modal.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                customStyle\n                            \n                            \n                                height\n                            \n                            \n                                isBlocking\n                            \n                            \n                                isDraggable\n                            \n                            \n                                isModal\n                            \n                            \n                                isResizable\n                            \n                            \n                                keyboard\n                            \n                            \n                                minHeight\n                            \n                            \n                                minWidth\n                            \n                            \n                                position\n                            \n                            \n                                selfCentered\n                            \n                            \n                                size\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                makeValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalConfig.ts:86\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeValid(config: ModalConfig, defaultConfig?: ModalConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalConfig.ts:67\n                \n            \n\n\n            \n                \n                    Makes a ModalConfig instance valid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    defaultConfig\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A Default config to use as master, optional.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModalConfig\n\n                    \n                    \n                        ModalConfig The same config instance sent.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Close']\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:24\n                            \n                        \n\n                \n                    \n                        Width of the modal.\nused only if size is 'custom'.\nNOTE: No validation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:31\n                            \n                        \n\n                \n                    \n                        Describes if the modal is blocking modal.\nA Blocking modal is not closable by clicking outside of the modal window.\nDefaults to false.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDraggable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResizable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:39\n                            \n                        \n\n                \n                    \n                        Keyboard value/s that close the modal.\nAccepts either a single numeric value or an array of numeric values.\nA modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\nDefaults to 27, set null implicitly to disable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 100, left: 100 }\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selfCentered\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:17\n                            \n                        \n\n                \n                    \n                        Size of the modal.\n'lg', 'sm' or 'custom'.\nNOTE: No validation.\nDefault to 'lg'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nlet _defaultConfig: ModalConfig;\n\n\n/**\n * A configuration definition object.\n * Instruction for how to show a modal.\n */\n@Injectable()\nexport class ModalConfig {\n    /**\n     * Size of the modal.\n     * 'lg', 'sm' or 'custom'.\n     * NOTE: No validation.\n     * Default to 'lg'\n     */\n    size: string;\n\n    /**\n     * Width of the modal.\n     * used only if size is 'custom'.\n     * NOTE: No validation.\n     */\n    customStyle: string;\n\n    /**\n     * Describes if the modal is blocking modal.\n     * A Blocking modal is not closable by clicking outside of the modal window.\n     * Defaults to false.\n     */\n    isBlocking: boolean;\n\n    /**\n     * Keyboard value/s that close the modal.\n     * Accepts either a single numeric value or an array of numeric values.\n     * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n     * Defaults to 27, set `null` implicitly to disable.\n     */\n    keyboard: Array | number;\n\n    width: number = null;\n    minWidth = 50;\n\n    height: number = null;\n    minHeight = 50;\n\n    position = { top: 100, left: 100 };\n\n    selfCentered = true;\n\n    isModal = true;\n\n    isDraggable = true;\n\n    isResizable = true;\n\n    title = '';\n\n    actions: Array = ['Close'];\n\n    /**\n      * Makes a ModalConfig instance valid.\n      * @param config\n      * @param defaultConfig A Default config to use as master, optional.\n      * @returns ModalConfig The same config instance sent.\n      */\n    static makeValid(config: ModalConfig, defaultConfig?: ModalConfig) {\n        defaultConfig = (defaultConfig) ? defaultConfig : _defaultConfig;\n\n        if (!config.size) { config.size = defaultConfig.size; }\n\n        if (config.isBlocking !== false) { config.isBlocking = true; }\n\n        if (config.keyboard !== null) {\n            if (Array.isArray(>config.keyboard)) {\n                config.keyboard = (>config.keyboard).length === 0\n                    ? defaultConfig.keyboard : config.keyboard;\n            } else if (!isNaN(config.keyboard)) {\n                config.keyboard = [config.keyboard];\n            } else {\n                config.keyboard = defaultConfig.keyboard;\n            }\n        }\n\n        return config;\n    }\n\n    constructor() {\n        this.size = 'ls';\n        this.isBlocking = true;\n        this.keyboard = [27];\n    }\n\n\n}\n\n_defaultConfig = new ModalConfig();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalDialogInstance.html":{"url":"injectables/ModalDialogInstance.html","title":"injectable - ModalDialogInstance","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalDialogInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n            \n                Description\n            \n            \n                API to an open modal window.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _backdropRef\n                            \n                            \n                                    Private\n                                _bootstrapRef\n                            \n                            \n                                    Private\n                                _resultDefered\n                            \n                            \n                                contentRef\n                            \n                            \n                                    Public\n                                inElement\n                            \n                            \n                                kendoDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismiss\n                            \n                            \n                                    Private\n                                dispose\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    backdropRef\n                                \n                                \n                                    bootstrapRef\n                                \n                                \n                                    result\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(result: any)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:64\n                \n            \n\n\n            \n                \n                    Close the modal with a return value, i.e: result.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:82\n                \n            \n\n\n            \n                \n                    Close the modal without a return value, i.e: cancelled.\nThis call is automatically invoked when a user either:\n\nPresses an exit keyboard key (if configured).\nClicks outside of the modal window (if configured).\nUsually, dismiss represent a Cancel button or a X button.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:56\n                \n            \n\n\n            \n                \n                    set the dialog title\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _backdropRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bootstrapRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resultDefered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:28\n                            \n                        \n\n                \n                    \n                        States if the modal is inside a specific element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kendoDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        backdropRef\n                    \n                \n\n\n                \n                    \n                        setbackdropRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bootstrapRef\n                    \n                \n\n\n                \n                    \n                        setbootstrapRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n\n                \n                    \n                        getresult()\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:49\n                                \n                            \n                    \n                        \n                                A Promise that is resolved on a close event and rejected on a dismiss event.\n\n\n                                \n                                \n                                \n                                    Returns :     Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Modal\n                        \n                        \n                            ModalDialogInstance\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\n\nimport { ModalDialogInstance } from './angular2-modal/models/ModalDialogInstance';\nimport { Modal } from './angular2-modal/providers/Modal';\nimport { OKOnlyModal } from './angular2-modal/commonModals/okOnlyModal';\nimport { YesNoModal } from './angular2-modal/commonModals/yesNoModal';\nimport { ICustomModal } from './angular2-modal/models/ICustomModal';\n\n@NgModule({\n      declarations: [\n            OKOnlyModal, YesNoModal\n      ],\n      exports: [\n            OKOnlyModal, YesNoModal\n      ],\n      entryComponents: [OKOnlyModal, YesNoModal],\n      providers: [Modal, ModalDialogInstance, ICustomModal]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OKOnlyContent.html":{"url":"classes/OKOnlyContent.html","title":"class - OKOnlyContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OKOnlyContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/okOnlyModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                okText\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, okText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        okText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            okText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OKOnlyModal.html":{"url":"components/OKOnlyModal.html","title":"component - OKOnlyModal","body":"\n                   \n\n\n\n\n\n  Components\n  OKOnlyModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/okOnlyModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OKOnlyContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.okText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'OKOnlyModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryBand.html":{"url":"components/QueryBand.html","title":"component - QueryBand","body":"\n                   \n\n\n\n\n\n  Components\n  QueryBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/queryBand.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                query-band\n            \n\n\n            \n                styles\n                \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n            \n\n            \n                template\n                \n    \n        \n        \n        \n        \n            \n                Select Highlighted\n                \n                Reuse a Saved Search\n                Restore a Saved Record Set\n                Combine Searches -->\n                \n                Save Current Search\n                Save Record Set\n                \n                Manage Saved Searches\n                Manage Saved Sets\n            \n        \n         -->\n        \n        \n    \n\n    \n        \n        Add\n        Edit\n        Delete\n    \n\n\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dropDownIsOpen\n                            \n                            \n                                    Public\n                                openStateIcon\n                            \n                            \n                                    Public\n                                queryBandIsOpen\n                            \n                            \n                                theQueryBand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doAddRecord\n                            \n                            \n                                    Public\n                                doClear\n                            \n                            \n                                    Public\n                                doDeleteRecord\n                            \n                            \n                                    Public\n                                doEditRecord\n                            \n                            \n                                    Public\n                                doExportGrid\n                            \n                            \n                                    Public\n                                doManageSets\n                            \n                            \n                                    Public\n                                doQBE\n                            \n                            \n                                    Public\n                                doQFF\n                            \n                            \n                                    Public\n                                doRefresh\n                            \n                            \n                                    Public\n                                doSort\n                            \n                            \n                                    Public\n                                doWehaveAQuery\n                            \n                            \n                                    Public\n                                enableButton\n                            \n                            \n                                    Public\n                                switchState\n                            \n                            \n                                    Public\n                                toggleDropDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cascadeDeleteRecord\n                            \n                            \n                                enableAddRecord\n                            \n                            \n                                enableButtonBar\n                            \n                            \n                                enableCombiSearch\n                            \n                            \n                                enableDeleteRecord\n                            \n                            \n                                enableEditRecord\n                            \n                            \n                                enableExportGrid\n                            \n                            \n                                enableQBE\n                            \n                            \n                                enableQFF\n                            \n                            \n                                enableSETS\n                            \n                            \n                                enableSort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryAddRecord\n                            \n                            \n                                queryDeleteRecord\n                            \n                            \n                                queryEditRecord\n                            \n                            \n                                queryExportGrid\n                            \n                            \n                                queryFromFile\n                            \n                            \n                                queryFromQBE\n                            \n                            \n                                queryManageSets\n                            \n                            \n                                queryRefresh\n                            \n                            \n                                querySortGrid\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cascadeDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:149\n                            \n                        \n                \n                    \n                        Cascade Delete record if Delete is enabled, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:134\n                            \n                        \n                \n                    \n                        Enable Add record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableButtonBar\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:129\n                            \n                        \n                \n                    \n                        Enable Record Edit Button bar, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableCombiSearch\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:114\n                            \n                        \n                \n                    \n                        enable Combine Searches buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:144\n                            \n                        \n                \n                    \n                        Enable Delete record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditRecord\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:139\n                            \n                        \n                \n                    \n                        Enable Edit record button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableExportGrid\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:124\n                            \n                        \n                \n                    \n                        enable Export To Excel button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQBE\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:99\n                            \n                        \n                \n                    \n                        enable QBE button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQFF\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:104\n                            \n                        \n                \n                    \n                        enable QFF (query from file) button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSETS\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:109\n                            \n                        \n                \n                    \n                        enable Save/Load Searches/Set buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSort\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:119\n                            \n                        \n                \n                    \n                        enable Multicolumn Sort button, default is false\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        queryAddRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryDeleteRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:167\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryEditRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryExportGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromFile\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:155\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromQBE\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryManageSets\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:160\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryRefresh\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:156\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        querySortGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:157\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doAddRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doAddRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doClear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doClear()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doDeleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doDeleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doEditRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doEditRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doExportGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doExportGrid()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQBE\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQBE()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQFF\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQFF()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doRefresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doRefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doSort()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doWehaveAQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doWehaveAQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableButton(btn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    btn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            switchState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    switchState()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleDropDown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDown()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropDownIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:176\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openStateIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'glyphicon-triangle-right'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryBandIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theQueryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBandDirective, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n    \n            \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Select Highlighted                                Reuse a Saved Search                Restore a Saved Record Set                Combine Searches -->                                Save Current Search                Save Record Set                                Manage Saved Searches                Manage Saved Sets                             -->                                        Add        Edit        Delete        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryBand'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBandDirective.html":{"url":"directives/QueryBandDirective.html","title":"directive - QueryBandDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBandDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        queryband\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                theCustomQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theCustomQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('customQueryBand', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:10\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand', { static: false }) theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective, { static: false }) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickFindInput.html":{"url":"components/QuickFindInput.html","title":"component - QuickFindInput","body":"\n                   \n\n\n\n\n\n  Components\n  QuickFindInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/quickFindInput.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                quickfind-input\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                quickFind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                runQuickFinder\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        quickFind\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        runQuickFinder\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n\n\n\n@Component({\n    selector: 'quickfind-input',\n    template: ``\n})\n\nexport class QuickFindInput {\n\n    @Input() public quickFind = new FormControl();\n\n    @Output() public runQuickFinder: EventEmitter = new EventEmitter();\n\n    constructor() {\n        this.quickFind.valueChanges.pipe(distinctUntilChanged(),debounceTime(1500)).subscribe(query => {\n            this.runQuickFinder.emit(query);\n        });\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QuickFindInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordEditWindow.html":{"url":"components/RecordEditWindow.html","title":"component - RecordEditWindow","body":"\n                   \n\n\n\n\n\n  Components\n  RecordEditWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordEditWindow.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-edit-window\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                saveRecord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentRecord\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentRecord\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveRecord\n                        \n                        \n                    \n                \n            \n            \n                \nsaveRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordEditWindow.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordEditWindow.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FourDModel } from '../js44D/JSFourDModel';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\n\n@Component({\n    selector: 'record-edit-window',\n    template: ''\n})\n\nexport class RecordEditWindow implements ICustomModalComponent {\n\n    @Input() public currentRecord: any; // the Record Edit Window FourDModel\n\n\n    public dialog: ModalDialogInstance;\n\n\n    public set modelContentData(v: ICustomModal) {\n        this.currentRecord = v;\n    }\n\n    saveRecord() {\n        if (this.currentRecord.isRecordLoaded()) {\n            this.currentRecord.updateRecord()\n                .then(() => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        } else {\n            this.currentRecord.insertRecord()\n                .then((recnum) => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        };\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordEditWindow'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordList.html":{"url":"components/RecordList.html","title":"component - RecordList","body":"\n                   \n\n\n\n\n\n  Components\n  RecordList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordList.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                HttpClient\n                                FourDInterface\n                                ListSelectorDialog\n                                Modal\n                \n            \n\n\n            \n                selector\n                record-list\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editWindowConfig\n                            \n                            \n                                    Private\n                                _previousAdvancedQuery\n                            \n                            \n                                    Private\n                                _previousQuery\n                            \n                            \n                                queryBand\n                            \n                            \n                                theGrid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearQuery\n                            \n                            \n                                    Public\n                                deleteRecord\n                            \n                            \n                                    Private\n                                doManageSets\n                            \n                            \n                                    Private\n                                editWindowHandler\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                refreshGrid\n                            \n                            \n                                    Private\n                                restoreSet\n                            \n                            \n                                    Private\n                                showAdvancedQuery\n                            \n                            \n                                    Public\n                                showEditWindow\n                            \n                            \n                                    Public\n                                windowResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dialogInstance\n                            \n                            \n                                editWindow\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedRecords\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ElementRef, viewRef: ViewContainerRef, selectList: ListSelectorDialog)\n                    \n                \n                        \n                            \n                                Defined in src/containers/recordList.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectList\n                                                  \n                                                        \n                                                                        ListSelectorDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dialogInstance\n                    \n                \n                \n                    \n                        Type :         ModalDialogInstance\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:25\n                            \n                        \n                \n                    \n                        this is the associated record list dialog, if set we use it to handle window resize\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editWindow\n                    \n                \n                \n                    \n                        Type :         ICustomModalComponent\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:30\n                            \n                        \n                \n                    \n                        this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n\n                    \n                \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:134\n                \n            \n\n\n            \n                \n                    Handle browser window resize and resize grid\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:115\n                \n            \n\n\n            \n                \n                    Clear all previous queries\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:179\n                \n            \n\n\n            \n                \n                    Delete Selected Record(s)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:216\n                \n            \n\n\n            \n                \n                    Handle Manage Sets dropdown menu and act upon user selected action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editWindowHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editWindowHandler(result: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:192\n                \n            \n\n\n            \n                \n                    private method to deal with edit window close\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:71\n                \n            \n\n\n            \n                \n                    AFter our view gets initialized, subscribe to various events on the Query band and the Grid\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshGrid(query?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:125\n                \n            \n\n\n            \n                \n                    Refresh teh Grid, run query on 4D side and get records to display\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : the query string to send to 4D to select records to display on the grid\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            restoreSet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSet(records: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    records\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showAdvancedQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAdvancedQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:199\n                \n            \n\n\n            \n                \n                    deal with advanced Query dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showEditWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showEditWindow(mode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:149\n                \n            \n\n\n            \n                \n                    Show record edit window, to either edit or add a new record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            windowResized\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    windowResized(event)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:142\n                \n            \n\n\n            \n                \n                    Intercept Dialog Window resize event and resize the Grid to fit the entire window\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editWindowConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:57\n                            \n                        \n\n                \n                    \n                        Save Edit Window Configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousAdvancedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryBand\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBand, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:35\n                            \n                        \n\n                \n                    \n                        get the associated Query band and Datagrid object instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theGrid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataGrid\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(DataGrid, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedRecords\n                    \n                \n\n                \n                    \n                        getselectedRecords()\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordList.ts:41\n                                \n                            \n                    \n                        \n                                return the currently selected records from the grid\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, AfterContentInit, Input, HostListener } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\nimport { QueryBand } from './queryBand';\nimport { AdvancedQueryComponent } from './advancedQuery';\nimport { DataGrid } from '../dataGrid/dataGrid';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { ListSelectorDialog } from '../dialogs/listSelectorDialog';\n\n@Component({\n    selector: 'record-list',\n    template: '',\n    providers: [HttpClient, FourDInterface, ListSelectorDialog, Modal]\n})\n\nexport class RecordList implements AfterContentInit {\n\n    /**\n     * this is the associated record list dialog, if set we use it to handle window resize\n     */\n    @Input() public dialogInstance: ModalDialogInstance = null;\n\n    /**\n     * this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n     */\n    @Input() public editWindow: ICustomModalComponent = null;\n\n    /**\n     * get the associated Query band and Datagrid object instances\n     */\n    @ContentChild(QueryBand, {static: false}) queryBand: QueryBand;\n    @ContentChild(DataGrid, {static: false}) theGrid: DataGrid;\n\n    /**\n     * return the currently selected records from the grid\n     */\n    public get selectedRecords():Array {\n        let selection = [];\n        if (this.theGrid && this.theGrid.getDataProvider()) {\n            const gridRows = this.theGrid.getDataProvider().models;\n            const selectedRows = this.theGrid.selectedRows();\n            for (let index = 0; index  { this.refreshGrid(query); });\n            // if user hits Advanced Query button, call advanced query method\n            if (this.queryBand.enableQBE) {\n                this.queryBand.queryFromQBE.subscribe((query: Object) => { this.showAdvancedQuery(); });\n            }\n            // if user hits Set Management button, call corresponding method method\n            if (this.queryBand.enableSETS) {\n                this.queryBand.queryManageSets.subscribe((action: string) => { this.doManageSets(action); });\n            }\n            // if user hits Export to Excel, call grid's excel export method\n            this.queryBand.queryExportGrid.subscribe(() => { if (this.theGrid) { this.theGrid.exportGridToExcel(); } });\n\n            if (this.editWindow) {\n                this.queryBand.queryAddRecord.subscribe(() => { this.showEditWindow('add'); });\n                this.queryBand.queryEditRecord.subscribe(() => { this.showEditWindow('edit'); });\n            }\n\n            this.queryBand.queryDeleteRecord.subscribe(() => { this.deleteRecord(); });\n\n        }\n\n        // if we have a grid and an associated edit record form, subscribe to the record select event\n        if (this.theGrid && this.editWindow) {\n            this.theGrid.recordSelected.subscribe((record: any) => { this.showEditWindow('edit'); });\n        }\n\n        if (this.editWindow && this.editWindow['dialogConfig']) {\n            this._editWindowConfig = this.editWindow['dialogConfig'];\n        }\n\n        if (this.dialogInstance) {\n            //            console.log(this.dialogInstance)\n            const dialog: any = $(this.dialogInstance.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.resizing._draggable.userEvents.bind('release', (event) => { this.windowResized(event) });\n        }\n    }\n\n    /**\n     * Clear all previous queries\n     */\n    public clearQuery() {\n        this._previousAdvancedQuery = null;\n        this._previousQuery = null;\n    }\n\n\n    /**\n     * Refresh teh Grid, run query on 4D side and get records to display\n     * @param query: the query string to send to 4D to select records to display on the grid\n     */\n    public refreshGrid(query?: Object) {\n        if (!query) { query = this._previousQuery; } // if no query given, try previous\n        if (query && this.theGrid) { this.theGrid.loadData(query); }\n        this._previousQuery = query; // save last queryDeleteRecord\n    }\n\n    /**\n     * Handle browser window resize and resize grid\n     */\n    @HostListener('window:resize') onResize() {\n        this.windowResized(null);\n    }\n\n    /**\n     * Intercept Dialog Window resize event and resize the Grid to fit the entire window\n     * @param event \n     */\n    public windowResized(event) {\n        this.theGrid.resize(); // refresh datagrid to adjust it to the window size\n    }\n\n    /**\n     * Show record edit window, to either edit or add a new record\n     */\n    public showEditWindow(mode: string) {\n        // if editing a record, and we do have a record selected and an edit dialog does exist\n        if (this.theGrid && this.editWindow && mode === 'edit' && this.theGrid.currentRecord) {\n            if (this.theGrid.optimizeGridLoading) { // if we are optimizing the grid, then we need to refresh selected record\n                kendo.ui.progress($(this.elementRef.nativeElement), true); // show loading progress icon\n                this.theGrid.currentRecord.refresh().then(() => { // refresh current record\n                    kendo.ui.progress($(this.elementRef.nativeElement), false); // clear loading progress icon\n                    this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                        .then(result => { this.editWindowHandler(result); }); // open edit dialog\n                });\n            } else {\n                // if not optimizing the grid loading, then we have a complete record loaded already\n                this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                    .then(result => { this.editWindowHandler(result); }); // open edit dialog\n            }\n        }\n\n        if (this.theGrid && this.editWindow && mode === 'add') {\n            // if we are adding a new record\n            const modelDef = (this.theGrid.model);\n            const newModel = (new modelDef());\n            // show edit dialog to insert new record\n            this.modal.openInside(this.editWindow, this.viewRef, newModel, this._editWindowConfig, true)\n                .then(result => { this.editWindowHandler(result); }); // open edit dialog\n        }\n    }\n\n    /** \n     * Delete Selected Record(s)\n     */\n    public deleteRecord() {\n        if (this.theGrid && this.theGrid.currentRecord) {\n            if (confirm((this.queryBand.cascadeDeleteRecord) ? 'Really delete selected record and all its associated data records?' : 'Really delete selected record?')) {\n                this.theGrid.currentRecord.deleteRecord(this.queryBand.cascadeDeleteRecord)\n                    .then((message) => { alert('Record Deleted'); this.theGrid.refresh(); })\n                    .catch((reason) => { alert(reason); });\n            }\n        }\n    }\n\n    /**\n     * private method to deal with edit window close\n     */\n    private editWindowHandler(result: string) {\n        if (result === 'recordSaved') { this.theGrid.refresh(); }\n    }\n\n    /**\n     * deal with advanced Query dialog\n     */\n    private showAdvancedQuery() {\n        const advancedQuery = AdvancedQueryComponent;\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        this.modal.openInside(AdvancedQueryComponent, this.viewRef, { previousQuery: this._previousAdvancedQuery, model: (newModel.tableName !== '') ? newModel : (this.theGrid.model).prototype }, advancedQuery['dialogConfig'])\n            .then((result: any) => {\n                if (result.query.length > 0) {\n                    this._previousAdvancedQuery = result.queryFields;\n                    this.refreshGrid({ query: result.query }); // open edit dialog\n                }\n            });\n\n    }\n\n    /**\n     * Handle Manage Sets dropdown menu and act upon user selected action\n     */\n    private doManageSets(action: string) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pk = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        let gridRows = this.theGrid.getDataProvider().models;\n        let savedSearches: Array;\n        let savedSets: Array;\n        let selectedRecords = [];\n\n        switch (action) {\n            case 'selectHighlited':\n                if (pk && pk !== '') {\n                    const selectedRows = this.theGrid.selectedRows();\n                    selectedRecords = [];\n                    for (let index = 0; index  {\n                    if (searchName !== '') {\n                        savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                        savedSearches.push({ name: searchName, search: this._previousQuery });\n                        localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                    }\n                }, function () {\n                    // cancelled...\n                })\n                break;\n\n            case 'saveSet':\n                if (pk && pk !== '' && gridRows.length > 0) {\n                    kendo.prompt('Please, enter a name for this Record Set:', '').then((setName) => {\n                        if (setName !== '') {\n                            savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n\n                            gridRows = this.theGrid.getDataProvider().models;\n                            selectedRecords = [];\n                            for (let row = 0; row  {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Select Saved Search';\n                    this.selectList.show(searchList)\n                        .then(result => {\n                            const query = savedSearches[result].search;\n                            this.refreshGrid(query);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'restoreSet':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                let setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Select Saved Set';\n                    this.selectList.show(setList)\n                        .then(result => {\n                            const set = savedSets[result].set;\n                            this.restoreSet(set);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'combineSearches':\n\n                break;\n\n            case 'manageSearches':\n                savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                searchList = [];\n                savedSearches.forEach(element => {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Delete Saved Search';\n                    this.selectList.show(searchList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSearches.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                        }); // open list selector dialog\n                }\n\n                break;\n\n            case 'manageSets':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Delete Saved Set';\n                    this.selectList.show(setList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSets.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSets', JSON.stringify(savedSets));\n                        }); // open list selector dialog\n                }\n                break;\n        }\n    }\n\n    private restoreSet(records: Array) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pkField = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        if (pkField && pkField !== '' && tableName && tableName !== '') {\n            const queryItems = [];\n            records.forEach(id => {\n                queryItems.push(tableName + '.' + pkField + ';=;' + id + ';OR');\n            });\n            this.refreshGrid({ query: queryItems });\n        }\n\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordList'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab.html":{"url":"components/Tab.html","title":"component - Tab","body":"\n                   \n\n\n\n\n\n  Components\n  Tab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tab\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tabs: Tabs)\n                    \n                \n                        \n                            \n                                Defined in src/containers/tabs.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabs\n                                                  \n                                                        \n                                                                        Tabs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:51\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tab'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tabs.html":{"url":"components/Tabs.html","title":"component - Tabs","body":"\n                   \n\n\n\n\n\n  Components\n  Tabs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabs\n            \n\n\n\n            \n                template\n                \n  \n    {{tab.title}}\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTab\n                            \n                            \n                                selectTab\n                            \n                            \n                                selectThisTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTab\n                        \n                        \n                    \n                \n            \n            \n                \naddTab(tab: Tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                Tab\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTab\n                        \n                        \n                    \n                \n            \n            \n                \nselectTab(event, tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectThisTab\n                        \n                        \n                    \n                \n            \n            \n                \nselectThisTab(tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tab[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/tabs.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{tab.title}}  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tabs'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utf8.html":{"url":"classes/Utf8.html","title":"class - Utf8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utf8\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/utf8.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                byteArray\n                            \n                            \n                                    Private\n                                    Static\n                                byteCount\n                            \n                            \n                                    Private\n                                    Static\n                                byteIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                checkScalarValue\n                            \n                            \n                                    Private\n                                    Static\n                                createByte\n                            \n                            \n                                    Private\n                                    Static\n                                decodeSymbol\n                            \n                            \n                                    Private\n                                    Static\n                                encodeCodePoint\n                            \n                            \n                                    Private\n                                    Static\n                                readContinuationByte\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2decode\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2encode\n                            \n                            \n                                    Static\n                                utf8decode\n                            \n                            \n                                    Static\n                                utf8encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteArray\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:181\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteCount\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteIndex\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:183\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            checkScalarValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScalarValue(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createByte(codePoint, shift)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shift\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            decodeSymbol\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeSymbol()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            encodeCodePoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeCodePoint(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            readContinuationByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readContinuationByte()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2decode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2encode(array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8decode(byteString)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    byteString\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8encode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utf8 {\n\n\n\t// Taken from https://mths.be/punycode\n\tprivate static ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter = 0xD800 && value  0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += String.fromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tprivate static checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint > shift) & 0x3F) | 0x80);\n\t}\n\n\tprivate static encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn String.fromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 12);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += String.fromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tpublic static utf8encode(string) {\n\t\tvar codePoints = Utf8.ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index = Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tprivate static decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (Utf8.byteIndex > Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (Utf8.byteIndex == Utf8.byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) = 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) = 0x0800) {\n\t\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tbyte4 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) = 0x010000 && codePoint \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebAppContainer.html":{"url":"components/WebAppContainer.html","title":"component - WebAppContainer","body":"\n                   \n\n\n\n\n\n  Components\n  WebAppContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/webAppContainer.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                web-application\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                            \n                                    Private\n                                urlSearchParms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                showLoginDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userIsLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                userHasLoggedIn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ViewContainerRef, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userIsLoggedIn\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        userHasLoggedIn\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nshowLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Modal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlSearchParms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation, ViewContainerRef, EventEmitter, AfterContentInit, Input, Output } from '@angular/core';\n\nimport { LoginCmp } from '../login/login';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'web-application',\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    providers: [Modal]\n})\n\n\nexport class WebAppContainer implements AfterContentInit {\n\n    @Input() public userIsLoggedIn = false;\n\n    @Output() public userHasLoggedIn: EventEmitter = new EventEmitter();\n\n    private urlSearchParms: Object = {};\n\n    constructor(public modal: Modal, private elementRef: ViewContainerRef, private fourD: FourDInterface/*, private win:WindowService*/) {\n        const win = window;\n        if (win && win.location && win.location.search) {\n            const url = win.location.search.substr(1); // get incoming url and parse search params\n            url.split('&').forEach(element => {\n                const item = element.split('=');\n                if (item.length === 2) {\n                    this.urlSearchParms[item[0]] = item[1];\n                } else {\n                    this.urlSearchParms[element] = true;\n                }\n            });\n        }\n    }\n\n    showLoginDialog() {\n        this.modal.openInside(LoginCmp, this.elementRef, null, LoginCmp.dialogConfig)\n            .then((result) => {\n                this.userIsLoggedIn = true;\n                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n            });\n\n\n    }\n\n    ngAfterContentInit() {\n        if (!FourDInterface.authentication) {\n            if (this.urlSearchParms.hasOwnProperty('key')) {\n                try {\n                    const key = JSON.parse(atob(this.urlSearchParms['key']));\n                    this.fourD.signIn(key.username, key.password)\n                        .then((authentication) => {\n                            if (FourDInterface.authentication) {\n                                this.userIsLoggedIn = true;\n                                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n                            }\n                        })\n                        .catch(e => { this.showLoginDialog(); });\n                } catch (error) {\n                    this.showLoginDialog();\n                }\n            } else {\n                // no predefined user, login...\n                this.showLoginDialog();\n            }\n        } else {\n            this.userIsLoggedIn = true;\n            this.userHasLoggedIn.emit(FourDInterface.currentUser);\n        }\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'WebAppContainer'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/YesNoModal.html":{"url":"components/YesNoModal.html","title":"component - YesNoModal","body":"\n                   \n\n\n\n\n\n  Components\n  YesNoModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/yesNoModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         YesNoModalContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.yesText}}            {{context.noText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'YesNoModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/YesNoModalContent.html":{"url":"classes/YesNoModalContent.html","title":"class - YesNoModalContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  YesNoModalContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/yesNoModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                hideNo\n                            \n                            \n                                    Public\n                                noText\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                yesText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, hideNo: boolean, yesText: string, noText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hideNo\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideNo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NO'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YES'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            component\n            OKOnlyModal\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            class\n            OKOnlyContent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            component\n            YesNoModal\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            class\n            YesNoModalContent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModal.ts\n            \n            class\n            ICustomModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModalComponent.ts\n            \n            class\n            ICustomModalComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            injectable\n            ModalConfig\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            variable\n            _defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            class\n            Deferred\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            injectable\n            ModalDialogInstance\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            injectable\n            Modal\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            variable\n            _config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/advancedQuery.ts\n            \n            component\n            AdvancedQueryComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            component\n            QueryBand\n            \n                30 %\n                (12/40)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            CustomButtonBarDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            QueryBandDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/containers/recordEditWindow.ts\n            \n            component\n            RecordEditWindow\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/recordList.ts\n            \n            component\n            RecordList\n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tab\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tabs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tab\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tabs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/webAppContainer.ts\n            \n            component\n            WebAppContainer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            component\n            FourDDropDown\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            injectable\n            FourDDropDown\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            component\n            FourDRegistryInput\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            injectable\n            FourDRegistryInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/quickFindInput.ts\n            \n            component\n            QuickFindInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dataGrid/dataGrid.ts\n            \n            component\n            DataGrid\n            \n                54 %\n                (28/51)\n            \n        \n        \n            \n                \n                src/dialogs/listSelectorDialog.ts\n            \n            component\n            ListSelectorDialog\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDCollection.ts\n            \n            injectable\n            FourDCollection\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            FourDQuery\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            MD5\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            injectable\n            FourDInterface\n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            calculateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            convertObjectToURL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            injectable\n            FourDModel\n            \n                87 %\n                (34/39)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            interface\n            IFieldDescription\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/js44D/base64.ts\n            \n            class\n            Base64\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/js44D/utf8.ts\n            \n            class\n            Utf8\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/login/login.ts\n            \n            component\n            LoginCmp\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/pipes/Base64ImageRef.pipe.ts\n            \n            pipe\n            Base64ImageRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/FourDDateToString.pipe.ts\n            \n            pipe\n            FourDDateToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            __karma__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            jquery : >=3.2.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJS44D Library\nPascal's 4D RESTApi companion Angular Typescript library.\n\n\n\n\n\n\nThis library includes a series of Angular services, components and UI widgets, that interface to a 4D Database backend via 4D RESTApi component. The 4D RESTApi Component must be installed in the 4D Database, and Web Serving must be enabled.\nDetailed documentation for each service/component in this library can be found on the wiki here. Following is a quick run down of the library contents.\nThere is a step by step procedure to get started with the 4D RESTApi component and this library at this wiki page. That page will instruct you on how to get going on the 4D and Angular sides.\nInstallation\nInstall js44d library using npm, as:\nnpm install js44d --saveUsage\nThe library can be divided into three sets of components: 4D Service classes, UI widgets and a Modal Dialog Service class. The 4D Service Classes provide the interface to a 4D backend. The UI widgets are not essential, but do provide some useful UI Components that use the Services Classes. The Modal Dialog provides funcionality to open multiple floating Dialog windows, similar to Windows MDI funcionality.\nEach of the three sets are declared in a separate NgModule: FourDModule, JS44DModule and ModalModule.\nYou reference the 4D Interface Service Classes as:\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';They need to be included in your main NgModule declaration, by importing the FourDModule.\nAs for UI components/widgets and the Modal dialog service, you reference/import them as:\nimport { ..widget.. } from 'js44d';You need to import the modules in your NgModule declaration, where you use them, as in:\n...\nimport { FourDModule, JS44DModule, ModalModule } from 'js44d';\n...\n@NgModule({\n  imports: [\n    ...,\n    FourDModule, JS44DModule, ModalModule\n  ]\n  ],\n  exports: [FourDModule, JS44DModule, ModalModule],\nIf you plan on using any of the UI widgets, then you need to grab a copy of the assets folder contents and drop all that in your own assets directory. You need to also add the following line to your styles.scss file:\n@import './assets/main';And you can edit src/assets/main.scss at will, to add you own styles or modify the existing styles that are used by JS44D UI Widgets.\nA quick note, the UI components/widgets are WEB ONLY, they do not work under Nativescript, so for {N} you can only use the 4D Service Classes. For NativeScript your module declaration should look something like this:\n...\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';\n...\n\n@NgModule({\n    ...\n    providers: [\n        ...,\n        FourDInterface, FourDModel, FourDCollection\n    ],\n...4D Interface Service Classes\nThe library provides a set of service classes for accessing a 4D Database backend that has the 4D RESTApi Component installed.\nFourDInterface\nThis is the base service class that implements most of the calls to 4D RESTApi.\nThe two key functions made available by this class are:\n\ncall4DRESTMethod: a wrapper function to enable calling any 4D RESTApi entry point; it automatically adds a Session Key and a hash tokens to each HTTP POST request sent to 4D, which are required by the 4D RESTApi Component; this function is used by all other services and components to send requests to 4D.\nsignin: a function that will send a REST_Authenticate sign in request to 4D and process 4D's response.\n\nThis class also provides some static variables:\n\ncurrentUser: the name of the currectly signed in user\nauthentication: the authentication response object, returned by the REST_Authenticate call (see)\nsessionKey: the current session token, that must be present in all requests to 4D\netc..\n\nFourDModel\nThis is a service class that provides CRUD functionality, acting as a Data Model base class. It provides the ability to retrieve, create, update or delete records from any 4D table.\nThis class builds upon the Data Model functionality, as described in the Data Model wiki page. \nAll 4D table's Data Models extend the FourDModel class, describing each of the table's fields and providing getter/setter for each field.\nInstances of the FourDModel class, and its extensions, represent a record in the database. This service provides basic CRUD functions to access those records:\n\ngetRecord: retrieves a single record from the database\ninsertRecord: adds a new record to the database\nupdateRecord: updates a record in the database\ndeleteRecord: deletes a record from the database\n\nAdditional functions are described in the FourDModel wiki page.\nFourDCollection\nA service class that represents a collection of 4D records. It is basically an Array of FourDModel derived instances.\nThis class provides a function to retrieve a set of records from a 4D Database:\n\ngetRecords: will take a Query String and send a REST_GetRecords request to 4D to retrieve a collection of 4D records. Record data comes as an Array of Data Model (FourDModel) instances.\n\nUI Widgets\nThe following UI widgets and components, which also interact with a 4D backend, are available for use in Angular apps. Detailed documentation for each widget is found on the wiki pages.\nLogin Component\nA basic Login dialog that takes a user name and password. It calls FourDInterface signin function, that sends a REST_Authenticate request to 4D to authenticate the given user.\n\nDatagrid Component\nThis Component provides Data Grid functionality, to display and interact with a list of records from a 4D Database.\n\nThe component is based on a KendoUI Grid widget, and displays contents of FourDModel instances, from a FourDCollection. \nQuery Band Component\nA query widget that provides functionality for querying a 4D Database, built upon a FourDModel.\n\nIt allows for a user defined query form, advanced query functionality and the ability to save and reuse queries.\nRecord List Component\nThis widget builds upon the QueryBand and DataGrid components. It associates a QueryBand to a DataGrid, so the results of a query are displayed on the associated DataGrid.\n\nAdditionally the widget provides a button bar with functionality to add/edit/delete records. It also allows for user defined custom buttons added to the button bar.\nWeb App Container Component\nThis is a Web App wrapper component, that ensures that the application component runs authenticated. If upon app initialization, it is not yet authenticated to a 4D backend, this component will display a Login dialog to get user credentials and authenticate the user.\n4D List DropDown Control\nThis is an HTML select drop down whose items are obtained directly from a 4D Choice List. One of the parameters to this widget is the choice list name.\nExample:\n  Additional Widgets/Services\nSome additional widgets/services are also part of the library, but those do not interact with 4D backends and do not depend on the 4D RESTApi.\nMDI Dialog Service\nA set of service classes that provide functionality to show multiple floating dialog windows, which can be modal or not.\n\nList Selector Dialog\nA component that presents a dialog with a list of items for user selection.\n\nTab Component\nA simple horizontal tab component, that provides functionality to allow user to tab among multiple forms.\n\nContributors\n\n\n\n\n\n\n\n\nJulio Carneiro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Julio Carneiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FourDModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JS44DModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __karma__   (src/.../test.ts)\n                        \n                        \n                            _config   (src/.../Modal.ts)\n                        \n                        \n                            _defaultConfig   (src/.../ModalConfig.ts)\n                        \n                        \n                            calculateHash   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            convertObjectToURL   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            __karma__\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/providers/Modal.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/models/ModalConfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/js44D/JSFourDInterface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateHash\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n}\n                        \n                    \n\n                \n                    \n                        Calculates hash code from URL string or POST form data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertObjectToURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n}\n                        \n                    \n\n                \n                    \n                        convert object to encoded url string\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AdvancedQueryComponent.html",[0,0.089,1,0.836]],["body/components/AdvancedQueryComponent.html",[0,0.124,1,1.076,2,0.117,3,0.117,4,3.093,5,0.52,6,0.632,7,0.067,8,1.676,9,0.874,10,1.403,11,2.876,12,0.487,13,1.381,14,1.423,15,1.429,16,0.026,17,2.585,18,5.054,19,6.776,20,3.856,21,3.856,22,3.856,23,5.054,24,6.374,25,3.388,26,3.856,27,3.856,28,3.779,29,3.856,30,2.159,31,3.083,32,1.892,33,2.627,34,3.769,35,3.856,36,3.856,37,3.856,38,5.054,39,3.856,40,4.773,41,4.773,42,6.589,43,2.103,44,5.054,45,0.46,46,5.054,47,3.083,48,3.388,49,3.856,50,5.054,51,3.856,52,3.856,53,1.076,54,3.388,55,4.204,56,5.054,57,1.994,58,3.856,59,3.856,60,2.585,61,3.856,62,3.856,63,2.876,64,3.856,65,3.856,66,0.536,67,3.856,68,5.054,69,3.856,70,3.856,71,3.856,72,3.265,73,3.856,74,3.265,75,3.856,76,3.856,77,3.856,78,3.856,79,3.856,80,5.983,81,6.589,82,6.589,83,5.983,84,3.856,85,3.856,86,3.769,87,3.856,88,3.856,89,3.856,90,2.876,91,2.876,92,3.856,93,2.585,94,3.856,95,2.353,96,3.856,97,3.265,98,3.856,99,0.767,100,3.117,101,3.856,102,4.029,103,2.262,104,4.886,105,2.103,106,3.915,107,4.279,108,3.265,109,3.856,110,3.856,111,0.467,112,1.512,113,3.856,114,0.77,115,1.423,116,1.72,117,3.262,118,3.856,119,3.856,120,0.467,121,4.375,122,2.639,123,4.375,124,4.375,125,2.876,126,3.117,127,3.117,128,1.423,129,3.856,130,3.856,131,3.117,132,3.117,133,1.391,134,1.746,135,0.426,136,1.476,137,1.231,138,1.25,139,0.612,140,1.98,141,0.713,142,0.76,143,0.59,144,0.658,145,1.081,146,0.886,147,0.881,148,1.98,149,1.297,150,1.98,151,2.353,152,3.117,153,0.638,154,3.265,155,3.856,156,3.856,157,3.856,158,3.856,159,1.98,160,1.98,161,1.98,162,0.656,163,1.483,164,3.117,165,5.771,166,1.98,167,1.98,168,1.98,169,1.98,170,3.117,171,1.98,172,0.995,173,3.117,174,1.98,175,1.98,176,1.98,177,1.951,178,1.746,179,2.09,180,2.09,181,1.417,182,2.09,183,0.819,184,2.09,185,2.09,186,1.134,187,5.054,188,2.281,189,1.98,190,2.669,191,1.98,192,1.98,193,1.476,194,1.98,195,1.023,196,1.023,197,1.208,198,0.171,199,2.097,200,1.108,201,0.77,202,1.327,203,1.208,204,1.327,205,0.949,206,0.083,207,0.044,208,1.98,209,1.98,210,3.856,211,1.98,212,3.117,213,3.856,214,1.98,215,1.951,216,3.856,217,3.856,218,4.758,219,4.758,220,1.98,221,3.117,222,1.98,223,1.98,224,1.676,225,0.883,226,1.154,227,2.639,228,1.98,229,1.98,230,4.375,231,1.98,232,1.98,233,1.98,234,1.98,235,1.98,236,1.98,237,3.117,238,3.856,239,1.98,240,1.023,241,0.487,242,1.476,243,3.117,244,1.98,245,1.98,246,1.676,247,3.117,248,1.98,249,1.98,250,1.476,251,1.327,252,1.98,253,1.98,254,0.487,255,0.874,256,0.819,257,0.671,258,1.227,259,0.632,260,4.758,261,0.632,262,0.487,263,0.632,264,0.487,265,0.632,266,0.487,267,0.592,268,0.995,269,0.487,270,0.632,271,0.487,272,0.555,273,0.632,274,0.456,275,0.431,276,0.632,277,0.626,278,0.632,279,0.487,280,0.555,281,0.487,282,0.718,283,0.52,284,0.632,285,0.487,286,0.632,287,0.671,288,0.632,289,0.632,290,0.487,291,0.555,292,0.632,293,0.456,294,0.456,295,0.426,296,0.632,297,0.426,298,0.632,299,0.011,300,0.011]],["title/classes/Base64.html",[207,0.076,301,1.756]],["body/classes/Base64.html",[2,0.212,3,0.212,7,0.185,9,1.526,16,0.026,32,1.628,43,2.264,48,2.408,57,3.008,63,4.338,66,0.381,111,0.722,112,1.966,114,0.78,116,3.058,120,0.722,128,1.869,139,0.6,141,0.722,142,0.613,143,0.345,144,0.666,146,0.941,147,0.871,153,0.755,162,0.633,206,0.151,207,0.107,215,2.428,241,1.186,255,1.352,258,1.922,299,0.017,300,0.022,301,2.814,302,3.042,303,3.498,304,5.817,305,5.817,306,3.549,307,6.068,308,4.525,309,2.42,310,5.493,311,4.059,312,1.937,313,4.822,314,4.083,315,4.822,316,4.822,317,4.822,318,4.083,319,4.822,320,3.592,321,4.083,322,3.592,323,4.822,324,3.232,325,3.592,326,4.822,327,3.592,328,4.822,329,3.592,330,4.822,331,3.592,332,3.592,333,3.592,334,5.817,335,4.822,336,4.822,337,4.822,338,4.822,339,2.942,340,4.822,341,4.822,342,4.822,343,2.408,344,3.592,345,2.679,346,3.592,347,2.192,348,3.592,349,4.822,350,3.592,351,4.067,352,5.817,353,4.059,354,3.592,355,3.592,356,4.822,357,3.592,358,3.592,359,3.592,360,4.822,361,3.592,362,3.592,363,4.822,364,3.592,365,4.822,366,2.814,367,3.232,368,4.822,369,3.592,370,2.192,371,3.592,372,1.722,373,3.592,374,3.042,375,2.679,376,3.042,377,3.592,378,3.596,379,3.592,380,3.232,381,3.592,382,3.592,383,2.408,384,3.042,385,2.679,386,3.042,387,3.042,388,2.408,389,3.592,390,2.679,391,4.525,392,5.443,393,2.679,394,3.592,395,2.679,396,5.443]],["title/pipes/Base64ImageRef.html",[397,1.902,398,2.072]],["body/pipes/Base64ImageRef.html",[2,0.293,3,0.293,7,0.169,9,1.391,12,1.221,16,0.026,45,0.455,120,0.743,139,0.476,141,0.947,142,0.752,143,0.607,144,0.818,146,0.957,147,0.947,153,0.799,162,0.689,198,0.428,206,0.209,207,0.11,299,0.021,300,0.021,301,2.565,397,3.313,398,4.082,399,4.2,400,4.2,401,5.01,402,6.324,403,4.961,404,6.324,405,6.324,406,5.01,407,5.917,408,4.961,409,3.7,410,3.325,411,6.324,412,3.325,413,3.325,414,4.2,415,4.2,416,4.961,417,2.565,418,4.961]],["title/directives/CustomButtonBarDirective.html",[257,0.731,295,0.731]],["body/directives/CustomButtonBarDirective.html",[0,0.113,2,0.18,3,0.18,4,2.231,5,0.803,7,0.147,12,0.752,13,1.169,15,1.343,16,0.026,25,2.049,28,2.892,30,1.712,31,3.051,32,0.915,33,1.466,45,0.235,54,2.892,57,2.231,60,4.253,93,2.049,95,3.314,99,0.752,114,1.129,120,0.646,128,1.964,146,1.052,153,0.502,162,0.748,172,1.377,181,1.803,183,1.739,188,1.466,196,2.585,198,0.264,206,0.241,207,0.111,225,1.364,226,0.915,240,2.585,241,1.561,257,1.169,277,1.005,280,0.857,282,1.407,283,1.427,295,0.929,297,0.658,299,0.016,300,0.016,309,1.272,312,0.976,347,1.865,366,3.325,372,2.992,412,2.892,417,1.581,419,2.049,420,3.218,421,3.824,422,1.865,423,2.633,424,2.556,425,3.627,426,2.28,427,2.28,428,2.28,429,2.049,430,2.851,431,3.495,432,2.28,433,1.337,434,2.892,435,1.466,436,2.892,437,3.042,438,2.049,439,2.28,440,2.28,441,3.218,442,2.28,443,3.218,444,2.28,445,2.28,446,2.28,447,2.28,448,2.28,449,2.28,450,3.395,451,3.352,452,2.28,453,2.28,454,4.36,455,3.218,456,2.28,457,3.218,458,2.28,459,2.28,460,2.28,461,2.28,462,2.28,463,2.28,464,2.633,465,2.28,466,2.28,467,2.28,468,2.28,469,2.28,470,2.28,471,2.049,472,2.28,473,2.892,474,2.28,475,2.28,476,2.28,477,2.28,478,2.28,479,2.28,480,2.28,481,2.28,482,2.28,483,2.049,484,2.28,485,1.466,486,2.28,487,3.729,488,3.729,489,2.892,490,2.28,491,2.28,492,2.28,493,2.28,494,2.28,495,3.729,496,2.28,497,2.28,498,2.28,499,1.865,500,2.28,501,2.28,502,2.28,503,2.28,504,2.28,505,2.28,506,3.729,507,2.28,508,2.28,509,2.28,510,2.28,511,2.28,512,2.28,513,2.28,514,2.28,515,2.28,516,3.729,517,2.28,518,2.049,519,2.28,520,2.28,521,2.28,522,2.28,523,2.28,524,2.28,525,2.28,526,3.218,527,2.28,528,2.416,529,1.364,530,2.633,531,2.585,532,1.581,533,3.218,534,2.28,535,2.28,536,2.28,537,2.28,538,2.28,539,2.28,540,2.28,541,2.28,542,2.28,543,2.28,544,2.28,545,2.28,546,0.976,547,3.218]],["title/classes/Deferred.html",[207,0.076,548,2.277]],["body/classes/Deferred.html",[2,0.239,3,0.239,7,0.138,16,0.026,45,0.312,66,0.429,111,0.781,112,1.824,114,0.655,115,1.824,135,1.312,138,1.064,139,0.585,143,0.554,147,0.945,153,0.471,162,0.752,163,1.463,172,1.665,181,1.463,186,1.473,198,0.35,206,0.171,207,0.128,226,1.727,241,1.284,256,1.064,275,0.872,299,0.022,300,0.019,309,2.536,380,2.715,433,1.42,450,2.697,529,1.806,546,1.293,548,3.869,549,2.294,550,3.02,551,3.224,552,3.679,553,4.816,554,5.217,555,4.05,556,4.05,557,5.469,558,1.371,559,3.02,560,3.429,561,2.715,562,3.429,563,2.471,564,3.429,565,3.429,566,2.715,567,2.471,568,1.665,569,3.429,570,3.429,571,2.094,572,2.471,573,3.429,574,3.429,575,3.429,576,3.429,577,3.429,578,3.429,579,3.429,580,3.429,581,4.417,582,3.429,583,4.417,584,3.521,585,4.304,586,3.429,587,3.429,588,3.429,589,4.887,590,3.429,591,3.891,592,3.429,593,1.685,594,4.417,595,3.429,596,4.417,597,4.417,598,4.417,599,3.429,600,3.02,601,2.921,602,3.02,603,3.02,604,1.942,605,3.429,606,3.429,607,3.02,608,1.806,609,3.183,610,3.02,611,3.02,612,1.806,613,3.02,614,4.417,615,3.429,616,3.429,617,3.429,618,3.429,619,3.429]],["title/injectables/FourDCollection.html",[558,0.892,620,1.756]],["body/injectables/FourDCollection.html",[2,0.141,3,0.141,7,0.081,15,1.397,16,0.026,32,1.631,45,0.399,53,1.597,66,0.253,105,1.499,106,3.554,111,0.777,112,1.298,114,1.112,120,0.54,133,1.608,135,1.04,137,1.806,139,0.628,141,0.54,142,0.804,143,0.592,144,0.753,145,1.355,146,1.057,147,0.777,149,2.788,153,0.788,162,0.743,190,3.897,198,0.206,206,0.101,207,0.097,215,2.313,225,1.608,226,1.693,241,1.276,251,1.602,282,1.588,299,0.02,300,0.013,301,1.863,303,2.018,309,1.499,312,1.806,345,2.688,351,3.476,424,1.608,433,0.887,435,2.317,464,2.647,551,2.317,552,1.338,558,1.432,563,1.458,593,2.601,612,1.608,620,2.243,621,2.023,622,1.766,623,5.455,624,3.141,625,1.311,626,4.092,627,3.604,628,3.012,629,3.239,630,5.733,631,4.092,632,4.832,633,4.192,634,5.355,635,4.832,636,4.832,637,3.052,638,3.052,639,3.604,640,3.604,641,2.389,642,3.052,643,4.616,644,2.199,645,4.576,646,4.832,647,3.654,648,3.604,649,3.052,650,3.765,651,4.391,652,4.391,653,4.716,654,2.389,655,3.052,656,3.052,657,2.688,658,2.199,659,2.688,660,3.052,661,4.445,662,2.688,663,2.688,664,3.604,665,3.052,666,2.688,667,2.416,668,2.389,669,1.499,670,2.389,671,4.092,672,2.389,673,3.052,674,2.199,675,2.389,676,2.389,677,2.389,678,2.389,679,2.389,680,3.604,681,2.688,682,3.604,683,2.389,684,2.389,685,2.688,686,2.018,687,2.023,688,2.389,689,1.458,690,2.023,691,1.782,692,2.926,693,3.604,694,2.023,695,4.616,696,4.339,697,3.052,698,5.186,699,3.674,700,1.782,701,2.389,702,2.023,703,4.791,704,2.389,705,2.389,706,2.389,707,1.602,708,3.052,709,2.389,710,4.832,711,4.832,712,3.674,713,5.186,714,2.389,715,2.389,716,3.052,717,3.052,718,2.023,719,2.023,720,2.023,721,2.023,722,2.023,723,2.389,724,2.389,725,2.389,726,1.863,727,1.602,728,1.782,729,3.052,730,2.023,731,2.023,732,2.389,733,2.389,734,2.389,735,2.389,736,2.389,737,2.389,738,2.389,739,2.389,740,2.389,741,2.389,742,2.389,743,3.604,744,2.023,745,3.604,746,3.604,747,2.389,748,2.389,749,2.389,750,2.389,751,2.389,752,2.389,753,1.458,754,1.782,755,2.389]],["title/pipes/FourDDateToString.html",[397,1.902,756,2.072]],["body/pipes/FourDDateToString.html",[2,0.295,3,0.295,7,0.17,9,1.399,12,1.228,16,0.026,45,0.384,106,3.045,120,0.747,139,0.479,141,0.747,142,0.755,144,0.69,147,1.004,153,0.78,162,0.764,198,0.431,206,0.21,207,0.111,226,1.493,241,1.228,299,0.021,300,0.021,324,3.345,372,2.393,388,3.345,397,3.325,400,4.226,401,5.028,406,5.028,410,3.345,414,4.226,415,4.226,628,2.58,700,3.722,756,4.003,757,4.226,758,4.991,759,4.893,760,4.991,761,4.991,762,4.226,763,4.991,764,4.991,765,4.991]],["title/components/FourDDropDown.html",[0,0.089,264,0.836]],["body/components/FourDDropDown.html",[0,0.162,1,0.942,2,0.226,3,0.226,4,2.904,5,1.005,6,1.221,7,0.13,9,1.41,11,4.188,12,0.942,13,1.505,14,1.145,15,0.824,16,0.026,31,3.426,33,2.693,45,0.387,53,0.942,57,2.904,66,0.406,72,4.755,74,4.755,95,3.426,97,4.755,99,1.237,103,3.203,112,1.68,114,0.908,120,0.753,122,4.258,125,4.448,128,1.903,135,0.824,136,2.854,137,1.904,139,0.622,141,0.753,142,0.787,143,0.595,144,0.695,145,1.783,146,0.619,147,0.753,149,2.092,153,0.774,162,0.694,163,1.41,178,3.145,188,2.693,198,0.33,205,1.835,206,0.161,207,0.085,225,1.707,254,0.942,255,1.41,256,1.321,257,1.082,258,1.673,259,1.221,261,1.221,262,0.942,263,1.221,264,1.595,265,1.221,266,0.942,267,1.145,268,1.605,269,0.942,270,1.221,271,0.942,272,1.073,273,1.221,274,0.881,275,0.695,276,1.221,277,1.01,278,1.221,279,0.942,280,1.073,281,0.942,282,1.158,283,1.005,284,1.221,285,0.942,286,1.221,287,1.082,288,1.221,289,1.221,290,0.942,291,1.073,292,1.221,293,0.881,294,0.881,295,0.824,296,1.221,297,0.824,298,1.221,299,0.018,300,0.018,417,1.978,558,1.321,561,2.565,593,1.592,753,2.335,766,3.24,767,3.75,768,6.909,769,5.616,770,5.965,771,4.755,772,5.616,773,5.616,774,5.028,775,3.827,776,3.827,777,5.028,778,3.827,779,3.827,780,3.827,781,3.068,782,2.854,783,5.028,784,3.827,785,3.827,786,3.827,787,3.827,788,3.24,789,3.827,790,2.565]],["title/modules/FourDModule.html",[791,1.413,792,1.902]],["body/modules/FourDModule.html",[2,0.296,3,0.296,7,0.17,16,0.026,45,0.524,137,2.172,198,0.432,205,2.401,206,0.267,207,0.111,254,1.232,299,0.021,300,0.021,532,2.59,620,3.518,624,3.518,625,2.309,791,2.476,792,3.923,793,2.59,794,2.805,795,2.401,796,4.241,797,4.241,798,3.989,799,3.056,800,5.009,801,3.056,802,3.989,803,3.989,804,5.376,805,3.357,806,4.241,807,5.009]],["title/classes/FourDQuery.html",[207,0.076,650,2.072]],["body/classes/FourDQuery.html",[2,0.093,3,0.093,5,1.198,7,0.054,13,1.156,15,1.429,16,0.026,17,2.571,32,1.148,43,1.377,45,0.326,47,0.963,53,1.384,66,0.167,90,1.937,91,1.177,103,2.358,105,1.764,111,0.857,112,1.148,114,1.017,116,2.766,120,0.722,137,0.504,139,0.516,141,0.574,142,0.683,143,0.516,144,0.896,146,0.42,147,0.975,149,2.662,151,1.585,153,0.792,154,2.199,162,0.78,172,0.504,183,0.415,195,0.816,198,0.136,206,0.162,207,0.112,215,0.704,226,1.74,241,1.384,242,1.937,251,2.219,267,1.764,272,0.928,291,0.728,294,0.363,299,0.018,300,0.009,301,1.343,303,2.554,306,3.549,308,1.177,309,1.596,312,1.795,324,1.058,339,1.585,343,2.842,353,1.177,366,0.816,367,2.219,370,0.963,372,0.757,384,4.662,385,3.595,386,4.418,388,1.058,390,1.177,391,3.401,393,1.937,410,2.842,413,3.601,421,1.853,423,0.963,424,1.711,430,0.757,433,1.384,434,2.571,435,2.187,473,1.058,529,1.891,531,1.343,551,2.64,552,2.82,553,1.937,558,1.008,559,3.756,563,3.073,566,1.058,571,0.816,572,0.963,593,1.081,604,2.576,608,2.328,613,4.453,622,0.538,628,3.523,629,2.842,644,0.963,645,2.842,647,2.842,650,3.073,653,1.177,661,1.177,662,1.937,663,3.756,664,1.937,666,3.162,667,1.058,669,1.081,671,1.336,673,2.199,674,0.963,686,1.454,689,0.963,691,1.937,692,3.251,707,1.741,726,3.087,727,1.741,728,1.937,744,1.336,753,2.782,754,3.401,759,4.106,771,4.264,781,1.585,794,0.884,803,2.571,805,1.058,808,1.177,809,2.199,810,1.058,811,5.036,812,6.289,813,3.862,814,3.862,815,3.836,816,5.036,817,5.036,818,1.578,819,3.248,820,3.248,821,2.554,822,1.741,823,2.598,824,1.578,825,2.861,826,1.578,827,3.836,828,3.836,829,4.561,830,2.598,831,2.199,832,1.578,833,2.199,834,1.578,835,2.199,836,1.578,837,1.578,838,2.199,839,2.199,840,1.741,841,2.598,842,1.578,843,2.219,844,1.578,845,1.578,846,4.24,847,1.336,848,1.336,849,1.578,850,1.578,851,2.861,852,1.177,853,2.199,854,1.336,855,1.336,856,1.336,857,1.336,858,1.336,859,1.336,860,1.177,861,1.177,862,1.177,863,1.937,864,1.937,865,1.177,866,2.199,867,1.336,868,1.336,869,1.336,870,1.336,871,1.578,872,3.248,873,0.884,874,1.336,875,1.578,876,1.578,877,3.59,878,1.578,879,1.578,880,3.248,881,1.578,882,1.336,883,1.336,884,1.578,885,2.861,886,1.578,887,1.578,888,1.578,889,1.578,890,1.058,891,2.199,892,1.578,893,1.578,894,1.578,895,2.598,896,1.578,897,1.578,898,1.578,899,1.336,900,1.336,901,1.578,902,1.336,903,1.578,904,1.336,905,3.595,906,1.336,907,1.177,908,1.058,909,1.578,910,1.578,911,1.578,912,1.578,913,2.199,914,1.578,915,4.549,916,4.24,917,4.24,918,4.24,919,1.578,920,1.578,921,2.598,922,1.578,923,1.578,924,1.578,925,1.578,926,1.578,927,1.177,928,0.963,929,2.598,930,2.598,931,2.199,932,1.578,933,1.336,934,1.578,935,3.59,936,1.177,937,1.177,938,1.937,939,1.578,940,1.578,941,1.578,942,1.578,943,1.578,944,1.578,945,2.598,946,2.598,947,1.578,948,1.578,949,1.578,950,1.578,951,2.598,952,1.578,953,2.598,954,3.836,955,2.598,956,2.598,957,2.598,958,1.578,959,2.598,960,1.578,961,2.598,962,2.598,963,1.336,964,1.578,965,1.578,966,1.578,967,1.578,968,1.578,969,3.836,970,1.177,971,1.578,972,1.578,973,2.598,974,1.336,975,1.177,976,1.336,977,2.598,978,1.578,979,1.578,980,1.578,981,1.578,982,1.578,983,1.578,984,1.578,985,1.578,986,1.578,987,1.578,988,1.578,989,3.862,990,2.019,991,3.162,992,1.578,993,2.598,994,1.578,995,1.578,996,3.836,997,1.578,998,1.578,999,1.937,1000,1.578,1001,2.598,1002,1.578,1003,1.578,1004,2.802,1005,2.468,1006,3.248,1007,1.578,1008,1.578,1009,1.177,1010,1.578,1011,2.598,1012,1.336,1013,1.578,1014,1.578,1015,1.578,1016,1.578,1017,4.24,1018,4.821,1019,2.598,1020,3.31,1021,4.821,1022,1.578,1023,1.578,1024,1.578,1025,1.578,1026,1.578,1027,1.578,1028,1.578,1029,1.336,1030,1.578,1031,1.578,1032,1.578,1033,1.578,1034,3.31,1035,1.578,1036,1.578,1037,3.31,1038,3.31,1039,1.578,1040,1.578,1041,1.578,1042,1.578,1043,1.578,1044,1.336,1045,1.578,1046,1.578,1047,2.199,1048,2.598,1049,1.578,1050,1.578,1051,1.578,1052,1.578,1053,5.373,1054,1.578,1055,2.598,1056,1.578,1057,1.578,1058,1.578,1059,1.578,1060,1.578,1061,1.578,1062,1.336,1063,1.578,1064,1.578,1065,1.578,1066,1.578,1067,1.578,1068,1.578,1069,3.31,1070,4.082,1071,1.578,1072,1.578,1073,1.578,1074,2.598,1075,2.598,1076,2.802,1077,1.578,1078,1.578,1079,1.336,1080,1.336,1081,1.578,1082,1.336]],["title/components/FourDRegistryInput.html",[0,0.089,266,0.836]],["body/components/FourDRegistryInput.html",[0,0.16,1,0.903,2,0.217,3,0.217,5,0.965,6,1.172,7,0.125,9,1.372,11,4.103,12,0.903,13,1.499,14,1.098,15,0.79,16,0.026,45,0.377,53,0.903,66,0.389,99,1.204,111,0.733,112,1.881,114,1.107,120,0.733,125,4.376,128,1.994,135,0.79,136,2.738,137,1.873,139,0.65,141,0.55,142,0.746,143,0.634,144,0.507,145,1.763,146,0.89,147,0.879,153,0.803,162,0.64,163,1.543,183,1.285,195,1.898,198,0.317,205,1.76,206,0.155,207,0.082,254,0.903,255,1.372,256,1.285,257,1.053,258,1.645,259,1.172,261,1.172,262,0.903,263,1.172,264,0.903,265,1.172,266,1.444,267,1.646,268,1.562,269,0.903,270,1.172,271,0.903,272,1.029,273,1.172,274,0.845,275,0.676,276,1.172,277,0.983,278,1.172,279,0.903,280,1.029,281,0.903,282,1.127,283,0.965,284,1.172,285,0.903,286,1.172,287,1.053,288,1.172,289,1.172,290,0.903,291,1.029,292,1.172,293,0.845,294,0.845,295,0.79,296,1.172,297,0.79,298,1.172,299,0.018,300,0.018,417,1.898,546,1.756,558,1.285,561,2.461,593,1.527,753,2.24,781,2.985,782,2.738,788,3.109,790,2.461,1029,4.659,1083,3.109,1084,5.869,1085,5.869,1086,5.869,1087,5.869,1088,5.869,1089,4.659,1090,5.503,1091,5.503,1092,5.503,1093,4.893,1094,3.671,1095,3.671,1096,3.671,1097,3.671,1098,3.671,1099,3.671,1100,3.671,1101,3.671,1102,3.671,1103,3.671,1104,4.893,1105,3.671,1106,3.671,1107,3.671,1108,6.112,1109,3.671,1110,5.503,1111,3.671,1112,5.869,1113,4.893,1114,4.893,1115,3.671,1116,3.671,1117,3.671,1118,3.671,1119,3.671]],["title/classes/ICustomModal.html",[201,1.32,207,0.076]],["body/classes/ICustomModal.html",[0,0.142,2,0.322,3,0.322,7,0.185,16,0.024,115,1.63,143,0.523,201,2.43,206,0.229,207,0.139,299,0.022,300,0.022,312,1.739,549,1.981,568,1.739,608,2.43,622,1.855,1120,4.612,1121,4.612]],["title/classes/ICustomModalComponent.html",[10,1.235,207,0.076]],["body/classes/ICustomModalComponent.html",[0,0.152,2,0.286,3,0.286,7,0.165,10,2.121,16,0.026,45,0.372,66,0.513,111,0.873,115,2.02,120,0.873,138,1.706,139,0.601,143,0.601,144,0.898,162,0.786,181,1.821,206,0.204,207,0.13,275,0.898,299,0.021,300,0.021,312,1.861,546,2.073,549,2.362,568,1.861,584,3.963,585,4.844,601,3.637,603,4.844,608,2.601,622,1.649,861,4.844,1121,4.937,1122,4.098,1123,6.495,1124,6.495,1125,4.84,1126,4.84,1127,4.84,1128,2.71]],["title/interfaces/IFieldDescription.html",[873,1.902,1129,2.533]],["body/interfaces/IFieldDescription.html",[2,0.072,3,0.072,7,0.042,15,1.202,16,0.026,17,1.405,32,1.508,45,0.282,47,2.237,48,0.82,53,1.274,66,0.454,90,4.101,102,1.035,104,1.775,105,1.961,106,4.285,107,2.76,108,2.329,111,0.732,112,1.508,114,0.988,120,0.755,135,0.451,137,1.04,139,0.352,142,0.771,143,0.574,144,0.553,145,0.343,146,0.692,147,0.921,149,2.248,151,1.279,153,0.782,162,0.793,181,1.485,183,1.051,190,3.815,195,0.632,198,0.106,206,0.088,207,0.047,215,1.227,224,2.329,226,1.932,240,1.084,241,1.394,250,0.912,251,2.185,272,0.588,282,1.554,294,0.921,299,0.019,300,0.01,301,1.084,303,2.053,306,3.541,312,1.652,324,0.82,339,0.746,343,0.82,351,2.681,372,2.59,378,0.912,383,0.82,387,1.035,424,0.545,430,1.005,433,1.375,435,2.482,437,2.053,464,1.279,471,2.185,485,1.005,499,1.678,529,0.545,530,1.678,546,1.996,551,2.59,552,2.823,558,0.856,563,3.076,566,0.82,572,0.746,593,2.288,608,2.181,611,0.912,612,1.227,620,2.068,622,1.665,624,2.676,625,0.445,626,2.76,628,3.198,629,3.47,630,3.622,633,3.846,634,2.329,637,1.035,642,1.035,643,4.383,644,2.237,645,3.846,647,1.405,649,1.035,650,2.237,651,2.329,652,2.329,653,2.431,655,1.035,656,1.035,657,0.912,658,0.746,659,0.912,660,1.035,661,2.431,662,0.912,663,2.983,664,2.983,665,1.035,666,3.515,667,3.025,669,2.464,674,0.746,681,0.912,685,1.563,686,1.174,687,1.035,689,1.678,690,1.035,691,0.912,692,3.137,694,1.035,697,2.76,699,3.387,700,1.563,702,3.387,703,2.329,707,2.681,708,1.035,712,4.139,716,2.329,717,2.76,718,1.775,719,1.035,720,1.035,721,1.035,722,1.035,726,2.606,727,2.185,728,2.431,730,2.76,753,2.237,754,3.19,759,3.365,762,1.035,782,2.051,813,3.105,814,3.105,820,1.035,821,2.395,822,0.82,833,2.76,835,3.387,840,0.82,843,2.185,851,0.912,861,2.051,862,2.983,873,1.174,882,2.76,890,3.846,900,1.775,905,0.912,907,3.365,928,2.44,938,0.912,974,1.775,975,2.051,989,3.105,990,0.746,991,1.563,999,3.646,1005,0.912,1044,1.035,1047,3.105,1089,2.76,1129,3.759,1130,1.035,1131,3.26,1132,3.26,1133,3.26,1134,5.403,1135,4.513,1136,2.096,1137,1.775,1138,4,1139,2.096,1140,3.26,1141,1.405,1142,3.667,1143,3.26,1144,1.405,1145,3.105,1146,2.751,1147,1.279,1148,1.223,1149,1.223,1150,1.223,1151,1.775,1152,1.035,1153,2.329,1154,1.223,1155,1.223,1156,1.223,1157,3.667,1158,1.223,1159,1.174,1160,1.223,1161,3.26,1162,2.751,1163,1.223,1164,1.223,1165,2.096,1166,1.223,1167,1.223,1168,1.223,1169,3.667,1170,3.26,1171,1.223,1172,2.096,1173,2.096,1174,1.223,1175,1.223,1176,1.223,1177,1.223,1178,1.223,1179,1.223,1180,1.223,1181,1.223,1182,2.096,1183,1.775,1184,2.096,1185,2.096,1186,1.563,1187,4.513,1188,1.223,1189,2.751,1190,4.714,1191,1.223,1192,2.751,1193,4.714,1194,4.383,1195,1.223,1196,1.223,1197,3.105,1198,4,1199,2.751,1200,2.751,1201,1.775,1202,1.223,1203,2.751,1204,4,1205,1.223,1206,5.176,1207,4,1208,1.223,1209,1.223,1210,1.223,1211,1.223,1212,1.223,1213,2.751,1214,1.223,1215,1.223,1216,1.223,1217,1.223,1218,1.223,1219,1.223,1220,1.223,1221,1.223,1222,1.223,1223,1.223,1224,1.223,1225,1.223,1226,4,1227,1.223,1228,1.223,1229,1.223,1230,1.223,1231,2.751,1232,1.223,1233,1.223,1234,1.223,1235,1.223,1236,1.223,1237,3.26,1238,2.751,1239,4,1240,2.751,1241,1.223,1242,1.223,1243,2.096,1244,1.035,1245,1.035,1246,1.223,1247,3.26,1248,1.223,1249,1.223,1250,1.223,1251,1.223,1252,1.223,1253,1.223,1254,1.223,1255,3.26,1256,2.096,1257,2.096,1258,1.035,1259,1.223,1260,1.223,1261,1.223,1262,2.76,1263,2.096,1264,2.096,1265,1.223,1266,2.096,1267,1.223,1268,1.223,1269,1.223,1270,3.26,1271,2.751,1272,1.223,1273,1.035,1274,1.223,1275,0.912,1276,1.223,1277,1.035,1278,3.26,1279,2.751,1280,2.096,1281,1.223,1282,2.751,1283,2.751,1284,2.44,1285,2.751,1286,1.223,1287,2.096,1288,1.223,1289,1.223,1290,2.096,1291,2.751,1292,1.223,1293,1.035,1294,1.223,1295,1.223,1296,1.223,1297,1.223,1298,2.096,1299,1.223,1300,1.223,1301,1.223,1302,1.223,1303,1.223,1304,1.223,1305,2.096,1306,2.751,1307,1.223,1308,1.223,1309,2.751,1310,1.223,1311,1.223,1312,1.223,1313,1.223,1314,1.035,1315,1.223,1316,1.223,1317,1.223,1318,1.223,1319,1.223,1320,1.223,1321,1.223,1322,1.223,1323,1.223,1324,3.622,1325,1.223,1326,1.223,1327,1.223,1328,1.035,1329,1.223,1330,1.223,1331,1.223,1332,1.223,1333,1.223,1334,2.751,1335,1.223,1336,1.223,1337,1.223,1338,1.223,1339,1.223,1340,1.223,1341,1.223,1342,1.223,1343,2.096,1344,0.82,1345,1.223,1346,1.223,1347,1.223,1348,1.223,1349,2.751,1350,1.223,1351,1.223,1352,1.223,1353,1.223,1354,1.223,1355,1.223,1356,1.223,1357,1.223,1358,1.223,1359,1.223,1360,1.223,1361,1.223,1362,1.223,1363,1.223,1364,1.223]],["title/modules/JS44DModule.html",[791,1.413,1365,2.072]],["body/modules/JS44DModule.html",[1,1.672,2,0.206,3,0.206,7,0.119,16,0.026,45,0.537,137,1.977,198,0.301,205,1.673,206,0.242,207,0.078,254,0.859,262,1.652,264,1.652,266,1.652,269,1.672,271,1.672,277,1.349,279,1.652,281,1.652,285,1.652,287,1.509,290,1.652,295,1.445,297,1.445,299,0.017,300,0.017,398,4.097,532,1.804,625,1.951,756,4.097,791,1.967,792,3.469,793,1.804,794,3.003,795,1.673,798,3.17,799,2.129,801,2.129,802,3.17,803,3.17,804,4.004,805,2.339,1365,4.391,1366,2.955,1367,2.955,1368,3.49,1369,2.955,1370,3.49,1371,3.49,1372,4.004,1373,4.729,1374,2.955,1375,4.729,1376,3.49,1377,3.49,1378,3.49,1379,3.49,1380,3.49,1381,3.49,1382,3.49,1383,3.49,1384,3.49,1385,3.49,1386,2.955,1387,2.955,1388,2.955,1389,3.49,1390,3.49,1391,3.49]],["title/components/ListSelectorDialog.html",[0,0.089,269,0.836]],["body/components/ListSelectorDialog.html",[0,0.151,1,0.777,2,0.186,3,0.186,5,0.829,6,1.008,7,0.107,9,1.237,10,1.851,12,0.777,13,1.492,14,0.944,15,0.68,16,0.026,33,2.642,45,0.446,53,1.573,66,0.335,99,1.086,103,2.631,111,0.661,112,1.845,114,1.083,115,1.845,116,2.27,117,4.109,120,0.661,128,1.845,133,1.969,134,2.471,135,0.68,138,1.578,139,0.65,141,0.942,142,0.832,143,0.592,144,0.869,145,1.237,146,0.972,147,0.9,153,0.788,162,0.753,163,1.684,172,1.008,177,2.751,178,2.471,179,2.958,180,2.958,181,1.764,182,2.958,184,2.958,185,2.958,186,2.004,188,2.642,193,2.354,195,3.188,196,1.632,197,1.926,198,0.273,199,2.642,200,1.768,203,1.926,204,2.116,206,0.133,207,0.07,215,1.969,225,2.458,254,0.777,255,1.237,256,1.16,257,0.95,258,1.545,259,1.008,261,1.008,262,0.777,263,1.008,264,0.777,265,1.008,266,0.777,267,0.944,268,1.409,269,1.356,270,1.008,271,0.777,272,0.885,273,1.008,274,0.727,275,0.904,276,1.008,277,0.887,278,1.008,279,0.777,280,0.885,281,0.777,282,1.016,283,0.829,284,1.008,285,0.777,286,1.008,287,0.95,288,1.008,289,1.008,290,0.777,291,0.885,292,1.008,293,0.727,294,0.727,295,0.68,296,1.008,297,0.68,298,1.008,299,0.016,300,0.016,310,5.541,321,2.673,422,1.926,433,1.356,551,2.642,625,1.605,1284,2.692,1392,2.673,1393,6.007,1394,4.109,1395,5.51,1396,4.413,1397,4.027,1398,5.088,1399,5.088,1400,1.768,1401,4.413,1402,3.157,1403,3.157,1404,3.157,1405,3.157,1406,4.413,1407,3.157,1408,3.157,1409,3.291,1410,3.157,1411,4.413,1412,6.166,1413,5.798,1414,3.157,1415,2.849,1416,3.157,1417,3.157,1418,4.413,1419,4.413,1420,3.157,1421,3.157,1422,3.157,1423,3.157,1424,3.157,1425,3.157,1426,3.157,1427,3.157,1428,3.157,1429,2.116,1430,3.157,1431,3.157,1432,3.157,1433,3.157,1434,3.157,1435,3.157,1436,2.673,1437,3.157,1438,3.157,1439,3.157,1440,3.157,1441,4.413,1442,3.157,1443,4.413,1444,2.354,1445,4.413,1446,3.157,1447,3.157,1448,3.157,1449,3.157,1450,2.354,1451,3.157]],["title/components/LoginCmp.html",[0,0.089,271,0.836]],["body/components/LoginCmp.html",[0,0.154,1,0.81,2,0.194,3,0.194,4,2.69,5,0.865,6,1.051,7,0.112,9,1.274,10,1.892,12,0.81,13,1.482,14,0.985,15,0.708,16,0.026,33,2.822,45,0.512,53,0.81,55,3.88,57,3.147,66,0.349,86,3.88,99,1.118,111,0.68,112,0.985,114,1.044,115,1.761,116,2.321,117,4.183,120,0.68,128,1.901,133,2.027,134,2.544,135,0.708,137,1.79,138,1.599,139,0.627,141,0.68,142,0.808,143,0.5,144,0.628,145,1.65,146,0.984,147,0.911,153,0.383,162,0.529,163,1.274,177,2.502,178,2.544,179,3.045,180,3.045,181,1.782,182,3.045,183,1.546,184,3.045,185,3.045,186,1.652,188,2.822,195,1.702,198,0.284,199,2.69,200,1.843,201,1.766,202,2.206,203,2.008,204,2.206,205,1.578,206,0.139,207,0.073,226,0.985,254,0.81,255,1.274,256,1.194,257,0.978,258,1.573,259,1.051,261,1.051,262,0.81,263,1.051,264,0.81,265,1.051,266,0.81,267,0.985,268,1.45,269,0.81,270,1.051,271,1.38,272,1.459,273,1.051,274,0.758,275,0.628,276,1.051,277,0.913,278,1.051,279,0.81,280,0.923,281,0.81,282,1.046,283,0.865,284,1.051,285,0.81,286,1.051,287,0.978,288,1.051,289,1.051,290,0.81,291,1.573,292,1.051,293,0.758,294,0.758,295,0.708,296,1.051,297,0.708,298,1.051,299,0.016,300,0.016,433,0.81,604,2.494,628,2.69,727,4.08,781,2.008,885,4.811,899,2.787,970,2.455,1004,2.787,1005,2.455,1400,1.843,1444,2.455,1452,2.787,1453,5.053,1454,5.203,1455,6.086,1456,5.203,1457,6.086,1458,5.203,1459,6.086,1460,5.203,1461,5.203,1462,5.203,1463,4.405,1464,5.203,1465,6.086,1466,6.086,1467,5.203,1468,3.292,1469,3.292,1470,3.292,1471,3.292,1472,3.292,1473,4.543,1474,3.292,1475,3.292,1476,3.292,1477,4.543,1478,4.543,1479,3.292,1480,2.455,1481,3.292,1482,2.772,1483,2.008,1484,3.292,1485,3.292,1486,3.292,1487,3.292,1488,3.292,1489,2.455,1490,3.292,1491,3.292,1492,3.292,1493,3.292,1494,2.787,1495,3.292,1496,5.203,1497,2.008,1498,3.292,1499,3.292,1500,3.292,1501,3.292]],["title/injectables/Modal.html",[275,0.469,558,0.892]],["body/injectables/Modal.html",[0,0.162,2,0.177,3,0.177,7,0.102,16,0.026,30,3.186,32,1.274,45,0.381,47,1.832,66,0.603,105,2.242,111,0.638,112,0.898,114,1.093,115,2.012,116,2.636,120,0.638,135,0.646,138,1.301,139,0.596,141,1.033,142,0.723,143,0.628,144,0.84,146,0.92,147,0.807,151,2.599,153,0.735,162,0.735,163,0.842,172,0.958,177,2.944,183,1.553,197,3.909,198,0.259,199,1.439,206,0.126,207,0.095,226,0.898,241,0.739,256,1.119,275,0.938,299,0.015,300,0.015,303,1.681,312,1.36,370,1.832,417,1.552,424,1.339,430,1.439,528,2.385,546,2.017,549,2.298,551,3.107,558,1.301,567,3.709,568,1.816,572,2.599,591,2.239,604,1.439,609,3.287,622,1.686,625,1.092,657,3.692,674,1.832,692,3.351,801,3.287,821,3.404,825,4.833,874,2.542,902,4.818,907,4.243,908,2.012,963,3.607,1128,1.681,1144,2.855,1183,2.542,1324,2.542,1394,4.778,1415,2.772,1502,2.239,1503,5.389,1504,5.389,1505,5.69,1506,4.26,1507,4.26,1508,4.26,1509,3.002,1510,5.911,1511,4.951,1512,4.562,1513,4.26,1514,4.26,1515,4.26,1516,3.002,1517,4.26,1518,6.688,1519,6.725,1520,3.002,1521,4.951,1522,5.389,1523,5.389,1524,5.69,1525,4.818,1526,5.004,1527,5.69,1528,4.818,1529,4.818,1530,5.69,1531,4.26,1532,3.002,1533,4.26,1534,5.147,1535,3.002,1536,3.002,1537,3.002,1538,3.002,1539,3.177,1540,3.002,1541,3.002,1542,3.002,1543,3.002,1544,3.002,1545,3.002,1546,3.002,1547,3.002,1548,2.542,1549,3.002,1550,3.002,1551,3.002,1552,3.002,1553,3.002,1554,3.002,1555,4.26,1556,3.002,1557,3.002,1558,3.607,1559,3.002,1560,3.002,1561,3.002,1562,3.002,1563,3.002,1564,3.002,1565,3.002,1566,3.002,1567,3.002,1568,2.542,1569,3.002,1570,3.002,1571,3.002,1572,3.002,1573,3.002,1574,3.002,1575,3.002,1576,3.002,1577,3.002,1578,3.002]],["title/injectables/ModalConfig.html",[177,1.515,558,0.892]],["body/injectables/ModalConfig.html",[2,0.19,3,0.19,7,0.109,16,0.026,30,3.108,32,0.96,33,2.895,34,4.139,45,0.247,48,2.993,55,3.33,63,4.139,66,0.34,86,3.33,105,2.309,111,0.669,116,2.29,120,0.669,135,1.105,139,0.654,141,0.481,142,0.408,143,0.636,144,0.71,146,1.111,147,1.011,149,2.628,153,0.735,162,0.597,177,3.012,178,3.537,179,2.993,180,3.72,181,1.822,182,3.72,183,1.349,184,3.72,185,3.72,186,2.019,188,2.661,190,4.071,198,0.277,206,0.135,207,0.071,241,0.79,275,0.946,299,0.02,300,0.016,311,4.139,312,1.771,339,2.724,380,2.993,424,2.476,433,1.099,546,1.639,549,2.489,551,2.141,552,2.5,558,1.349,568,1.425,584,3.684,593,2.577,607,4.711,609,2.724,610,3.33,622,1.521,692,2.309,821,3.108,822,2.993,1009,3.33,1159,2.5,1201,3.781,1394,4.62,1397,2.993,1415,1.798,1512,5.245,1525,3.781,1579,2.394,1580,3.781,1581,3.72,1582,5.55,1583,5.55,1584,5.55,1585,5.55,1586,4.465,1587,3.21,1588,4.465,1589,3.21,1590,6.039,1591,4.465,1592,3.21,1593,3.21,1594,3.21,1595,3.21,1596,4.465,1597,3.21,1598,3.21,1599,3.21,1600,3.21,1601,4.465,1602,4.465,1603,5.55,1604,4.465,1605,4.465,1606,5.134,1607,4.465,1608,4.699,1609,3.21,1610,3.21,1611,3.21,1612,3.21,1613,3.21,1614,5.55,1615,3.21,1616,3.21,1617,3.829,1618,4.465,1619,3.21,1620,4.465,1621,6.039,1622,3.21,1623,3.21,1624,4.465,1625,3.21,1626,3.21,1627,3.21,1628,3.21,1629,3.21]],["title/injectables/ModalDialogInstance.html",[138,0.892,558,0.892]],["body/injectables/ModalDialogInstance.html",[2,0.203,3,0.203,7,0.117,16,0.026,45,0.264,66,0.364,111,0.701,112,2.004,114,0.861,115,1.788,120,0.701,133,2.087,135,1.229,138,1.229,139,0.651,141,0.855,142,0.726,143,0.616,144,0.789,146,0.556,147,0.986,153,0.619,162,0.793,163,1.8,172,1.823,181,1.312,186,1.935,198,0.297,206,0.145,207,0.104,226,1.591,241,1.151,256,1.229,275,0.91,299,0.023,300,0.017,380,3.136,433,1.405,450,2.953,529,2.087,546,1.698,548,3.136,549,2.479,550,2.562,551,2.956,552,3.346,553,4.259,557,5.671,558,1.398,559,2.562,560,2.909,561,2.303,562,2.909,563,2.096,564,2.909,565,2.909,566,3.136,567,2.854,568,1.823,569,4.836,570,4.836,571,2.419,572,2.854,573,3.961,574,4.836,575,4.836,576,4.836,577,4.836,578,2.909,579,2.909,580,2.909,581,3.961,582,2.909,583,3.961,584,3.917,585,4.788,586,2.909,587,2.909,588,3.961,589,4.504,590,2.909,591,4.259,592,3.961,593,1.946,594,3.961,595,2.909,596,3.961,597,3.961,598,3.961,599,2.909,600,3.489,601,3.198,602,3.489,603,3.489,604,2.243,605,3.961,606,3.961,607,3.489,608,2.087,609,3.485,610,3.489,611,3.489,612,2.087,613,3.489,614,3.961,615,2.909,616,4.836,617,2.909,618,2.909,619,2.909,622,1.17,1630,4.678,1631,4.678,1632,4.678,1633,4.678,1634,3.435,1635,3.435,1636,3.435,1637,3.435,1638,3.435,1639,3.435,1640,3.435,1641,3.435,1642,3.435,1643,3.435,1644,3.435,1645,3.435,1646,3.435,1647,3.435,1648,3.435]],["title/modules/ModalModule.html",[791,1.413,1649,2.072]],["body/modules/ModalModule.html",[2,0.281,3,0.281,7,0.162,16,0.026,45,0.517,138,1.766,198,0.41,199,3.171,200,2.661,201,2.241,202,3.185,206,0.272,207,0.106,254,1.169,274,1.625,275,0.929,293,1.625,299,0.021,300,0.021,532,2.457,625,2.258,791,2.399,793,2.457,794,3.476,795,2.278,798,3.865,799,2.899,801,2.899,802,3.865,1372,4.882,1429,3.185,1649,4.306,1650,4.023,1651,4.023,1652,4.023,1653,4.023,1654,4.752,1655,4.752,1656,4.752]],["title/classes/OKOnlyContent.html",[207,0.076,1657,2.277]],["body/classes/OKOnlyContent.html",[0,0.144,2,0.261,3,0.261,7,0.15,9,1.24,10,2.007,13,0.952,16,0.026,43,2.296,45,0.485,66,0.469,99,1.088,111,0.826,114,1.113,115,1.651,135,1.188,138,1.58,139,0.605,141,0.662,142,0.562,143,0.605,144,0.611,146,0.973,147,0.901,153,0.817,186,2.437,198,0.382,201,2.145,206,0.232,207,0.134,274,1.019,275,0.763,294,1.019,299,0.02,300,0.02,433,1.088,549,2.357,568,1.412,571,2.287,612,1.973,622,1.507,669,2.296,726,3.502,795,2.121,1128,2.477,1147,2.699,1159,3.09,1284,3.669,1400,2.477,1482,3.366,1483,2.699,1497,2.699,1657,4.031,1658,3.299,1659,5.594,1660,3.746,1661,4.424,1662,4.221,1663,4.221,1664,4.424,1665,4.424,1666,4.424,1667,2.965,1668,2.965,1669,2.965,1670,2.965,1671,2.965,1672,2.965,1673,3.746,1674,2.477,1675,2.965,1676,2.965]],["title/components/OKOnlyModal.html",[0,0.089,274,0.782]],["body/components/OKOnlyModal.html",[0,0.164,1,0.984,2,0.236,3,0.236,5,1.051,6,1.276,7,0.136,9,1.451,10,2.087,12,0.984,13,1.512,14,1.196,15,0.861,16,0.026,43,2.524,45,0.467,53,0.984,66,0.424,99,1.273,111,0.775,114,0.981,115,1.926,120,0.775,133,2.308,134,2.898,135,1.114,138,1.721,139,0.603,141,0.775,142,0.799,143,0.551,144,0.715,145,1.451,153,0.668,162,0.602,163,1.451,186,1.882,198,0.345,201,2.012,206,0.218,207,0.115,254,0.984,255,1.451,256,1.36,257,1.114,258,1.701,259,1.276,261,1.276,262,0.984,263,1.276,264,0.984,265,1.276,266,0.984,267,1.196,268,1.652,269,0.984,270,1.276,271,0.984,272,1.121,273,1.276,274,1.397,275,0.89,276,1.276,277,1.04,278,1.276,279,0.984,280,1.121,281,0.984,282,1.192,283,1.051,284,1.276,285,0.984,286,1.276,287,1.114,288,1.276,289,1.276,290,0.984,291,1.121,292,1.276,293,0.921,294,1.321,295,0.861,296,1.276,297,0.861,298,1.276,299,0.019,300,0.019,433,0.984,549,2.341,568,1.652,571,2.676,612,2.308,622,1.362,669,1.664,726,2.676,795,2.481,1128,2.239,1147,3.157,1159,2.239,1284,3.834,1400,2.898,1480,2.982,1482,3.5,1483,2.44,1497,2.44,1657,4.067,1658,2.982,1659,3.386,1662,3.469,1663,3.469,1667,2.681,1668,2.681,1669,3.469,1670,3.469,1671,3.846,1672,3.846,1673,4.858,1674,3.397,1675,2.681,1676,2.681,1677,3.999,1678,3.999,1679,3.999,1680,3.999,1681,3.999]],["title/components/QueryBand.html",[0,0.089,277,0.683]],["body/components/QueryBand.html",[0,0.125,1,0.495,2,0.119,3,0.119,4,2.63,5,0.829,6,0.642,7,0.132,12,0.495,13,1.401,14,0.602,15,1.354,16,0.026,25,2.611,28,3.41,30,2.181,31,3.457,32,0.602,33,1.868,45,0.155,53,0.495,54,2.611,57,2.63,60,3.961,66,0.213,93,2.611,95,3.665,99,0.777,111,0.473,114,1.137,120,0.661,128,1.845,135,0.433,139,0.659,141,0.583,142,0.647,143,0.592,144,0.538,145,0.885,146,1.105,147,0.923,153,0.659,162,0.768,163,1.684,172,1.886,181,1.815,183,1.748,188,1.868,196,2.63,198,0.174,206,0.214,207,0.087,225,1.738,226,0.602,240,2.63,241,1.394,254,0.495,255,0.885,256,0.829,257,1.032,258,1.237,259,0.642,261,0.642,262,0.495,263,0.642,264,0.495,265,0.642,266,0.495,267,0.602,268,1.007,269,0.495,270,0.642,271,0.495,272,0.564,273,0.642,274,0.463,275,0.436,276,0.642,277,1.069,278,0.642,279,0.495,280,1.237,281,0.495,282,1.472,283,1.489,284,0.642,285,0.495,286,0.642,287,0.679,288,0.642,289,0.642,290,0.495,291,0.564,292,0.642,293,0.463,294,0.463,295,0.679,296,0.642,297,0.679,298,0.642,299,0.011,300,0.011,309,0.837,312,0.642,347,1.926,366,3.106,372,2.641,412,2.611,417,1.04,419,1.348,420,1.5,421,3.751,422,1.227,423,2.377,424,2.586,425,3.665,426,1.5,427,1.5,428,2.905,429,2.611,430,3.064,431,3.762,432,2.905,433,1.426,434,3.214,435,1.868,436,3.41,437,3.172,438,2.611,439,2.905,440,2.905,441,3.794,442,2.905,443,3.794,444,2.905,445,2.905,446,2.905,447,2.905,448,2.905,449,2.905,450,3.414,451,3.41,452,2.905,453,2.905,454,4.386,455,2.905,456,2.905,457,2.905,458,2.905,459,2.354,460,2.354,461,2.905,462,2.905,463,2.354,464,2.377,465,2.905,466,2.905,467,2.905,468,2.905,469,2.905,470,2.905,471,2.116,472,2.905,473,2.116,474,2.905,475,2.905,476,2.905,477,2.905,478,2.905,479,2.905,480,1.5,481,2.905,482,2.905,483,2.611,484,1.5,485,0.964,486,3.291,487,3.291,488,3.291,489,2.611,490,3.291,491,3.291,492,2.354,493,3.291,494,3.291,495,2.905,496,1.5,497,1.5,498,2.354,499,1.227,500,2.354,501,1.5,502,1.5,503,1.5,504,1.5,505,1.5,506,2.905,507,1.5,508,1.5,509,1.5,510,1.5,511,3.291,512,1.5,513,3.291,514,1.5,515,3.291,516,2.905,517,1.5,518,2.116,519,1.5,520,3.291,521,1.5,522,1.5,523,3.291,524,1.5,525,3.291,526,2.354,527,1.5,528,1.767,529,0.897,530,1.926,531,2.014,532,1.04,533,2.354,534,1.5,535,1.5,536,1.5,537,3.291,538,1.5,539,3.291,540,1.5,541,3.291,542,1.5,543,3.291,544,1.5,545,3.291,546,1.007,547,2.354,1581,1.348,1682,2.672,1683,3.156,1684,2.011,1685,3.156,1686,2.011,1687,2.011,1688,2.011,1689,2.011,1690,2.011,1691,2.011,1692,2.011,1693,2.011,1694,2.011,1695,2.011,1696,2.011,1697,2.011,1698,2.011,1699,2.011,1700,2.011,1701,2.011,1702,2.011,1703,2.011,1704,2.011,1705,2.011,1706,2.011,1707,2.011,1708,2.011,1709,2.011,1710,2.011,1711,2.011,1712,2.011,1713,2.011,1714,2.011,1715,2.011,1716,2.011,1717,2.011,1718,2.011,1719,2.011,1720,2.011,1721,2.011,1722,2.011,1723,1.5]],["title/directives/QueryBandDirective.html",[257,0.731,297,0.731]],["body/directives/QueryBandDirective.html",[0,0.112,2,0.178,3,0.178,4,2.21,5,0.793,7,0.145,12,0.742,13,1.162,15,1.362,16,0.026,25,2.023,28,2.866,30,1.69,31,3.029,32,0.903,33,1.447,45,0.232,54,2.866,57,2.21,60,4.24,66,0.32,93,2.023,95,3.295,99,0.742,111,0.64,114,1.128,120,0.64,128,1.96,139,0.29,143,0.29,146,1.049,153,0.497,162,0.746,172,1.364,181,1.798,183,1.735,188,1.447,196,2.567,198,0.261,206,0.24,207,0.11,225,1.346,226,0.903,240,2.567,241,1.557,257,1.162,277,1.085,280,0.846,282,1.402,283,1.419,295,0.649,297,0.92,299,0.015,300,0.015,309,1.255,312,0.963,347,1.841,366,3.316,372,2.982,412,3.328,417,1.56,419,2.023,420,2.25,421,3.818,422,1.841,423,3.029,424,2.641,425,3.714,426,3.188,427,4.027,428,2.25,429,2.023,430,2.838,431,3.478,432,2.25,433,1.329,434,2.866,435,1.447,436,2.866,437,3.024,438,2.023,439,2.25,440,2.25,441,3.188,442,2.25,443,3.188,444,2.25,445,2.25,446,2.25,447,2.25,448,2.25,449,2.25,450,3.387,451,3.328,452,2.25,453,2.25,454,4.349,455,3.188,456,2.25,457,3.188,458,2.25,459,2.25,460,2.25,461,2.25,462,2.25,463,2.25,464,2.608,465,2.25,466,2.25,467,2.25,468,2.25,469,2.25,470,2.25,471,2.023,472,2.25,473,2.866,474,2.25,475,2.25,476,2.25,477,2.25,478,2.25,479,2.25,480,2.25,481,2.25,482,2.25,483,2.023,484,2.25,485,1.447,486,2.25,487,3.703,488,3.703,489,2.866,490,2.25,491,2.25,492,2.25,493,2.25,494,2.25,495,3.703,496,2.25,497,2.25,498,2.25,499,1.841,500,2.25,501,2.25,502,2.25,503,2.25,504,2.25,505,2.25,506,3.703,507,2.25,508,2.25,509,2.25,510,2.25,511,2.25,512,2.25,513,2.25,514,2.25,515,2.25,516,3.703,517,2.25,518,2.023,519,2.25,520,2.25,521,2.25,522,2.25,523,2.25,524,2.25,525,2.25,526,3.188,527,2.25,528,2.394,529,1.346,530,2.608,531,2.567,532,1.56,533,3.188,534,2.25,535,2.25,536,2.25,537,2.25,538,2.25,539,2.25,540,2.25,541,2.25,542,2.25,543,2.25,544,2.25,545,2.25,546,0.963,547,3.188,1723,2.25,1724,3.017]],["title/components/QuickFindInput.html",[0,0.089,279,0.836]],["body/components/QuickFindInput.html",[0,0.169,1,1.085,2,0.26,3,0.26,5,1.159,6,1.407,7,0.15,12,1.085,13,1.525,14,1.319,15,0.949,16,0.026,45,0.462,53,1.085,66,0.468,99,1.355,111,0.825,114,1.047,128,2.003,135,1.293,139,0.604,142,0.763,143,0.529,145,1.544,146,0.971,147,0.989,198,0.381,206,0.186,207,0.098,241,1.548,254,1.085,255,1.544,256,1.447,257,1.185,258,1.763,259,1.407,261,1.407,262,1.085,263,1.407,264,1.085,265,1.407,266,1.085,267,1.319,268,1.758,269,1.085,270,1.407,271,1.085,272,1.236,273,1.407,274,1.015,275,0.761,276,1.407,277,1.107,278,1.407,279,1.548,280,1.851,281,1.085,282,1.268,283,1.159,284,1.407,285,1.085,286,1.407,287,1.185,288,1.407,289,1.407,290,1.085,291,1.236,292,1.407,293,1.015,294,1.015,295,0.949,296,1.407,297,0.949,298,1.407,299,0.02,300,0.02,421,3.697,1374,3.734,1725,3.734,1726,6.289,1727,5.507,1728,6.289,1729,4.41,1730,4.41,1731,4.41,1732,4.41,1733,4.41,1734,4.41,1735,4.41]],["title/components/RecordEditWindow.html",[0,0.089,281,0.836]],["body/components/RecordEditWindow.html",[0,0.167,1,1.037,2,0.249,3,0.249,5,1.107,6,1.345,7,0.143,9,1.5,10,2.139,12,1.037,13,1.519,14,1.26,15,0.907,16,0.026,45,0.491,53,1.037,66,0.447,99,1.037,111,0.801,114,1.033,115,1.851,120,0.801,128,1.851,133,2.387,134,2.996,138,1.625,139,0.594,141,0.631,142,0.786,143,0.514,144,0.582,145,1.5,162,0.623,163,1.5,193,3.142,195,2.767,198,0.364,199,2.819,200,2.359,201,2.08,202,2.824,203,2.571,206,0.177,207,0.094,254,1.037,255,1.5,256,1.406,257,1.152,258,1.735,259,1.345,261,1.345,262,1.037,263,1.345,264,1.037,265,1.345,266,1.037,267,1.26,268,1.708,269,1.037,270,1.345,271,1.037,272,1.181,273,1.345,274,0.97,275,0.74,276,1.345,277,1.075,278,1.345,279,1.037,280,1.181,281,1.522,282,1.47,283,1.625,284,1.345,285,1.037,286,1.345,287,1.152,288,1.345,289,1.345,290,1.037,291,1.181,292,1.345,293,0.97,294,0.97,295,0.907,296,1.345,297,0.907,298,1.345,299,0.019,300,0.019,433,1.037,568,1.877,624,2.767,631,4.979,790,3.587,806,3.568,1436,3.568,1736,3.568,1737,6.187,1738,4.214,1739,4.214,1740,4.214,1741,4.214,1742,4.214,1743,4.214,1744,4.214,1745,5.351,1746,4.531,1747,4.214,1748,4.214]],["title/components/RecordList.html",[0,0.089,285,0.836]],["body/components/RecordList.html",[0,0.119,1,0.898,2,0.107,3,0.107,5,0.478,6,0.581,7,0.062,9,0.818,10,1.327,12,0.448,13,1.394,14,1.366,15,1.401,16,0.026,32,1.641,45,0.442,53,1.35,66,0.484,99,0.718,103,1.508,105,2.213,111,0.437,112,1.905,114,1.015,115,1.877,120,0.796,128,1.366,133,1.301,135,0.392,137,1.165,138,0.959,139,0.611,141,0.766,142,0.744,143,0.571,144,0.707,145,0.818,146,0.472,147,0.437,149,2.027,151,1.111,153,0.681,162,0.692,163,1.578,172,1.633,177,1.628,178,1.019,181,1.17,183,0.478,196,2.361,197,2.226,198,0.157,199,2.001,200,1.019,203,1.111,204,1.22,205,0.873,206,0.154,207,0.04,215,1.301,225,2.75,226,1.905,227,2.47,240,1.887,241,1.259,246,1.541,250,3.112,254,0.448,255,0.818,256,0.766,257,0.628,258,1.17,259,0.581,261,0.581,262,1.309,263,0.581,264,0.448,265,0.581,266,0.448,267,0.545,268,0.931,269,1.199,270,0.581,271,0.448,272,0.51,273,0.581,274,0.419,275,0.735,276,0.581,277,1.155,278,0.581,279,0.448,280,0.51,281,0.448,282,1.538,283,1.649,284,0.581,285,1.027,286,0.581,287,0.628,288,0.581,289,0.581,290,0.448,291,0.51,292,0.581,293,0.419,294,0.419,295,0.392,296,0.581,297,0.392,298,0.581,299,0.015,300,0.01,309,0.757,312,0.931,343,1.955,347,1.779,370,1.111,372,2.336,388,3.266,409,2.175,422,1.111,425,2.226,430,2.336,431,2.226,433,1.415,435,1.75,436,2.446,437,3.219,438,1.955,450,2.157,483,1.22,499,1.111,518,1.955,528,1.019,529,1.628,530,2.226,531,0.941,567,3.433,568,1.924,584,1.779,593,2.213,601,1.019,604,2.189,609,1.111,622,0.62,625,1.061,628,2.157,633,1.22,644,1.779,669,0.757,685,3.112,689,1.111,692,1.508,695,4.503,729,4.126,731,4.333,767,2.175,790,1.22,803,2.446,805,1.22,819,1.541,821,1.633,843,1.955,848,1.541,908,1.955,927,1.358,935,2.47,936,2.175,937,2.175,938,1.358,976,3.09,990,1.111,1141,3.565,1186,1.358,1194,4.126,1197,3.09,1262,3.866,1386,1.541,1388,1.541,1397,2.446,1415,1.019,1429,1.22,1534,2.47,1558,3.09,1581,2.797,1682,2.47,1723,2.175,1746,1.541,1749,1.541,1750,3.09,1751,3.649,1752,3.649,1753,3.649,1754,4.173,1755,4.173,1756,3.533,1757,2.917,1758,3.09,1759,2.917,1760,3.649,1761,4.173,1762,2.917,1763,2.917,1764,3.649,1765,3.649,1766,3.649,1767,4.566,1768,1.541,1769,2.917,1770,2.917,1771,5.627,1772,1.82,1773,2.917,1774,2.917,1775,4.173,1776,4.566,1777,2.917,1778,1.82,1779,1.82,1780,5.104,1781,1.82,1782,1.82,1783,2.917,1784,1.82,1785,2.917,1786,2.917,1787,1.82,1788,3.533,1789,1.82,1790,1.82,1791,2.917,1792,1.82,1793,2.917,1794,3.533,1795,2.917,1796,1.82,1797,1.82,1798,2.917,1799,1.82,1800,2.917,1801,1.82,1802,2.917,1803,2.47,1804,2.917,1805,1.82,1806,1.82,1807,2.917,1808,1.82,1809,2.917,1810,1.82,1811,1.82,1812,1.82,1813,2.917,1814,1.82,1815,5.118,1816,1.82,1817,3.649,1818,3.649,1819,2.917,1820,2.917,1821,2.917,1822,1.82,1823,1.82,1824,1.82,1825,1.82,1826,1.82,1827,1.82,1828,1.82,1829,1.82,1830,1.82,1831,4.566,1832,1.82,1833,1.82,1834,1.82,1835,2.917,1836,1.82,1837,1.82,1838,1.82,1839,2.917,1840,4.173,1841,1.82,1842,1.82,1843,1.82,1844,1.82,1845,1.82,1846,3.649,1847,4.173,1848,1.541,1849,1.82,1850,1.82,1851,1.82,1852,1.82,1853,1.82,1854,1.82,1855,4.173,1856,1.82,1857,2.917,1858,2.917,1859,1.82,1860,3.649,1861,4.173,1862,4.873,1863,2.917,1864,1.82,1865,4.173,1866,1.82,1867,2.917,1868,1.82,1869,1.82,1870,1.82,1871,2.917,1872,1.82,1873,1.82,1874,1.82,1875,1.82,1876,1.82,1877,1.541,1878,1.82,1879,1.82,1880,2.917,1881,1.82,1882,2.917,1883,4.566,1884,2.917,1885,2.917,1886,3.649,1887,4.173,1888,1.82,1889,2.917,1890,4.566,1891,4.173,1892,1.82,1893,3.649,1894,2.917,1895,1.82,1896,1.82,1897,1.82,1898,1.82,1899,1.82,1900,1.82,1901,4.173,1902,2.917,1903,2.917,1904,4.173,1905,2.917,1906,1.82,1907,2.917,1908,2.917,1909,2.917,1910,2.917,1911,2.917,1912,1.82,1913,1.82,1914,1.82,1915,1.82,1916,1.82,1917,1.82,1918,2.917,1919,1.82,1920,1.82,1921,1.82,1922,1.82,1923,4.173,1924,1.82,1925,1.82]],["title/components/Tab.html",[0,0.089,287,0.731]],["body/components/Tab.html",[0,0.171,1,1.063,2,0.255,3,0.255,5,1.135,6,1.378,7,0.147,12,1.063,13,1.525,14,1.292,15,0.93,16,0.026,32,1.292,45,0.332,53,1.063,66,0.458,99,1.463,128,1.925,135,0.93,139,0.571,141,0.647,142,0.793,143,0.571,144,0.597,145,1.524,146,0.699,147,0.647,153,0.632,181,1.524,183,1.563,186,2.163,198,0.373,206,0.229,207,0.121,254,1.063,255,1.524,256,1.428,257,1.17,258,1.75,259,1.378,261,1.378,262,1.063,263,1.378,264,1.063,265,1.378,266,1.063,267,1.292,268,1.735,269,1.063,270,1.378,271,1.063,272,1.211,273,1.378,274,0.994,275,0.751,276,1.378,277,1.092,278,1.378,279,1.063,280,1.211,281,1.063,282,1.251,283,1.135,284,1.378,285,1.063,286,1.378,287,1.516,288,1.378,289,1.378,290,1.063,291,1.211,292,1.378,293,0.994,294,0.994,295,0.93,296,1.378,297,0.93,298,1.378,299,0.02,300,0.02,546,1.735,558,1.563,1489,3.22,1926,3.22,1927,5.036,1928,4.602,1929,5.435,1930,4.602,1931,4.318,1932,3.656,1933,3.656,1934,3.656,1935,3.656,1936,3.656,1937,3.656,1938,4.602,1939,3.656,1940,3.656,1941,3.656,1942,3.656]],["title/components/Tabs.html",[0,0.089,287,0.731]],["body/components/Tabs.html",[0,0.17,1,1.032,2,0.247,3,0.247,5,1.101,6,1.338,7,0.143,12,1.032,13,1.521,14,1.254,15,0.902,16,0.026,32,1.254,45,0.323,53,1.032,66,0.444,99,1.444,111,0.799,120,0.799,128,1.755,139,0.593,141,0.879,142,0.828,143,0.512,144,0.811,145,1.496,146,0.678,147,0.628,153,0.488,162,0.683,163,1.645,172,1.338,181,1.496,183,1.401,186,1.525,198,0.362,206,0.225,207,0.119,254,1.032,255,1.496,256,1.401,257,1.148,258,1.731,259,1.338,261,1.338,262,1.032,263,1.338,264,1.032,265,1.338,266,1.032,267,1.254,268,1.702,269,1.032,270,1.338,271,1.032,272,1.175,273,1.338,274,0.965,275,0.737,276,1.338,277,1.072,278,1.338,279,1.032,280,1.175,281,1.032,282,1.228,283,1.101,284,1.338,285,1.032,286,1.338,287,1.532,288,1.338,289,1.338,290,1.032,291,1.175,292,1.338,293,0.965,294,0.965,295,0.902,296,1.338,297,0.902,298,1.338,299,0.019,300,0.019,546,1.338,558,1.541,1489,3.126,1926,3.126,1927,3.55,1928,3.55,1930,3.55,1932,4.967,1933,4.516,1934,3.55,1935,4.516,1936,3.55,1937,3.55,1938,4.516,1939,4.516,1940,3.55,1941,3.55,1942,3.55,1943,5.334,1944,5.334,1945,5.334,1946,4.192,1947,4.192,1948,4.192,1949,4.192]],["title/classes/Utf8.html",[207,0.076,686,1.902]],["body/classes/Utf8.html",[2,0.187,3,0.187,7,0.108,16,0.026,32,1.799,43,1.841,66,0.616,111,0.663,112,2.079,114,0.513,116,3.128,120,0.663,139,0.634,141,0.924,142,0.784,144,0.853,147,0.869,149,1.318,153,0.676,162,0.792,163,0.889,183,0.833,190,1.933,206,0.133,207,0.098,215,2.274,258,1.908,299,0.016,300,0.016,318,4.916,351,2.966,353,3.3,366,2.853,367,3.418,374,5.417,375,2.363,376,2.683,383,2.966,390,2.363,391,3.802,393,3.3,395,2.363,686,2.478,975,2.363,1070,4.916,1076,3.747,1079,3.747,1080,3.747,1145,2.683,1258,2.683,1344,2.124,1950,2.683,1951,5.099,1952,5.099,1953,5.099,1954,4.425,1955,4.425,1956,5.519,1957,4.425,1958,5.099,1959,4.425,1960,4.425,1961,4.425,1962,4.425,1963,3.169,1964,3.169,1965,3.169,1966,4.425,1967,3.169,1968,6.832,1969,3.169,1970,5.099,1971,3.169,1972,3.169,1973,4.425,1974,3.169,1975,3.169,1976,4.425,1977,3.169,1978,3.169,1979,3.169,1980,3.169,1981,3.169,1982,4.425,1983,4.425,1984,3.169,1985,3.169,1986,3.169,1987,4.425,1988,3.169,1989,3.169,1990,5.099,1991,3.169,1992,3.169,1993,4.425,1994,4.425,1995,3.169,1996,3.169,1997,6.775,1998,6.297,1999,3.169,2000,3.169,2001,5.099,2002,5.099,2003,3.169,2004,4.425,2005,5.099,2006,5.099,2007,3.169,2008,5.099,2009,3.169,2010,3.169,2011,3.169,2012,5.099,2013,5.806,2014,5.099,2015,4.425,2016,4.425,2017,5.519,2018,3.169,2019,3.169,2020,5.806,2021,6.48,2022,5.519,2023,5.099,2024,4.425,2025,6.014,2026,3.169,2027,3.169,2028,3.169,2029,3.169]],["title/components/WebAppContainer.html",[0,0.089,290,0.836]],["body/components/WebAppContainer.html",[0,0.16,1,0.913,2,0.219,3,0.219,5,0.975,6,1.184,7,0.126,9,1.382,12,0.913,13,1.501,14,1.11,15,0.799,16,0.026,43,1.544,45,0.454,53,0.913,66,0.393,99,1.212,103,1.918,105,2.301,111,0.738,112,1.886,114,0.953,120,0.738,128,1.763,135,0.799,137,1.881,139,0.618,141,0.556,142,0.749,143,0.566,144,0.513,145,1.72,146,0.797,147,0.738,162,0.573,163,1.382,172,1.184,181,1.652,183,1.295,196,2.86,197,3.596,198,0.32,199,1.779,205,1.779,206,0.156,207,0.083,226,1.763,241,0.913,254,0.913,255,1.382,256,1.295,257,1.061,258,1.652,259,1.184,261,1.184,262,0.913,263,1.184,264,0.913,265,1.184,266,0.913,267,1.11,268,1.573,269,0.913,270,1.184,271,1.212,272,1.04,273,1.184,274,0.854,275,0.951,276,1.184,277,0.99,278,1.184,279,0.913,280,1.04,281,0.913,282,1.135,283,0.975,284,1.184,285,0.913,286,1.184,287,1.061,288,1.184,289,1.184,290,1.45,291,1.551,292,1.184,293,0.854,294,0.854,295,0.799,296,1.184,297,0.799,298,1.184,299,0.018,300,0.018,303,2.078,366,3.047,413,3.303,421,3.3,431,2.264,568,1.184,593,1.544,604,1.779,608,1.655,625,1.792,692,1.918,781,3.006,1144,3.303,1387,3.142,1429,2.487,1444,2.767,1453,2.767,1494,3.142,1750,4.684,1758,4.99,1768,3.142,1848,3.142,1877,3.142,2030,3.142,2031,4.927,2032,4.927,2033,5.893,2034,5.893,2035,5.532,2036,5.532,2037,4.927,2038,3.711,2039,3.711,2040,3.711,2041,3.711,2042,3.711,2043,3.711,2044,3.711,2045,4.927,2046,3.711,2047,3.711,2048,3.711,2049,3.711,2050,3.711,2051,3.711,2052,3.711,2053,3.711,2054,3.711,2055,3.711,2056,3.711,2057,3.711,2058,3.711,2059,3.711,2060,5.532,2061,5.532,2062,3.711,2063,3.711,2064,3.711,2065,3.711,2066,3.711,2067,5.532,2068,3.711,2069,3.711]],["title/components/YesNoModal.html",[0,0.089,293,0.782]],["body/components/YesNoModal.html",[0,0.162,1,0.952,2,0.228,3,0.228,5,1.017,6,1.235,7,0.132,9,1.42,10,2.054,12,0.952,13,1.507,14,1.157,15,0.833,16,0.026,43,2.492,45,0.461,53,0.952,66,0.41,99,1.246,111,0.758,114,1.032,115,1.908,120,0.758,133,2.259,134,2.836,135,1.09,138,1.708,139,0.613,141,0.846,142,0.811,143,0.542,144,0.78,145,1.42,153,0.697,162,0.657,163,1.583,172,1.235,183,1.017,186,1.842,198,0.334,201,1.969,206,0.213,207,0.113,254,0.952,255,1.42,256,1.331,257,1.09,258,1.68,259,1.235,261,1.235,262,0.952,263,1.235,264,0.952,265,1.235,266,0.952,267,1.157,268,1.617,269,0.952,270,1.235,271,0.952,272,1.085,273,1.235,274,0.891,275,0.882,276,1.235,277,1.018,278,1.235,279,0.952,280,1.085,281,0.952,282,1.166,283,1.017,284,1.235,285,0.952,286,1.235,287,1.09,288,1.235,289,1.235,290,0.952,291,1.085,292,1.235,293,1.379,294,1.3,295,0.833,296,1.235,297,0.833,298,1.235,299,0.018,300,0.018,433,0.952,546,1.235,549,2.364,568,1.617,571,2.619,601,3.355,612,2.259,622,1.318,669,1.61,726,2.619,795,2.428,860,2.885,1128,2.167,1147,3.09,1159,2.167,1284,3.09,1400,2.836,1409,3.777,1415,2.167,1450,2.885,1480,2.885,1482,3.445,1483,2.361,1497,2.361,1662,3.395,1663,3.395,1667,2.594,1668,2.594,1669,3.395,1670,3.395,1671,3.785,1672,3.785,1674,3.355,1675,2.594,1676,2.594,2070,2.885,2071,4.781,2072,4.781,2073,3.869,2074,3.869,2075,3.869,2076,4.016,2077,3.869,2078,3.869,2079,3.869,2080,3.276,2081,3.276,2082,3.276,2083,3.276]],["title/classes/YesNoModalContent.html",[207,0.076,2076,2.277]],["body/classes/YesNoModalContent.html",[0,0.139,2,0.246,3,0.246,7,0.142,9,1.168,10,1.933,13,0.897,16,0.026,43,2.211,45,0.474,66,0.442,99,1.025,111,0.796,114,1.132,115,1.59,135,1.144,138,1.537,139,0.625,141,0.624,142,0.53,143,0.625,144,0.576,146,1.029,147,0.953,153,0.822,183,1.396,186,2.405,198,0.36,201,2.066,206,0.224,207,0.13,275,0.734,293,0.96,294,0.96,299,0.019,300,0.019,433,1.025,546,2.031,549,2.405,568,1.33,571,2.154,601,2.333,612,1.859,622,1.419,669,2.211,726,3.462,795,1.998,860,3.108,1128,2.333,1147,2.542,1159,2.975,1400,2.333,1409,3.108,1415,2.975,1450,3.108,1482,3.242,1483,2.542,1497,2.542,1660,3.528,1662,4.13,1663,4.13,1667,2.793,1668,2.793,1669,2.793,1670,2.793,1671,2.793,1672,2.793,1674,2.333,1675,2.793,1676,2.793,2070,3.108,2071,3.528,2072,3.528,2076,3.922,2080,5.51,2081,5.51,2082,5.51,2083,3.528,2084,4.167,2085,4.167,2086,4.167,2087,4.167,2088,4.167,2089,4.167]],["title/coverage.html",[2090,3.931]],["body/coverage.html",[0,0.181,1,0.984,7,0.136,8,3.386,10,1.455,16,0.026,32,2.119,34,4.686,137,1.276,138,1.051,143,0.384,177,1.784,201,1.555,207,0.149,241,0.984,257,1.114,262,0.984,264,1.273,266,1.273,269,0.984,271,0.984,274,0.921,275,0.553,277,0.804,279,0.984,281,0.984,285,0.984,287,1.306,290,0.984,293,0.921,295,0.861,297,0.861,299,0.019,300,0.019,301,2.068,302,3.386,306,2.44,367,2.681,397,2.898,398,2.44,399,3.386,419,3.846,485,3.141,548,2.681,549,2.493,550,3.859,558,1.778,620,2.068,621,3.386,624,2.068,650,2.44,686,2.239,756,2.44,757,3.386,766,4.382,808,4.686,810,2.681,852,2.982,865,2.982,873,2.239,928,2.44,970,2.982,1083,4.382,1120,3.386,1122,3.386,1129,2.982,1130,4.382,1392,3.386,1452,3.386,1502,3.859,1539,2.982,1579,3.859,1608,3.386,1617,2.982,1657,2.681,1658,3.859,1674,2.239,1725,3.386,1736,3.386,1749,3.386,1926,4.524,1950,3.386,2030,3.386,2070,3.859,2076,2.681,2090,3.386,2091,3.999,2092,3.999,2093,5.175,2094,5.175,2095,3.999,2096,3.999,2097,3.999,2098,3.999,2099,5.738,2100,3.999,2101,3.999,2102,5.175,2103,3.999,2104,6.639,2105,6.284,2106,3.999,2107,3.999,2108,3.999,2109,3.999,2110,3.999,2111,3.999,2112,3.999,2113,5.175,2114,3.999,2115,3.999,2116,3.999,2117,5.738,2118,5.175,2119,3.999,2120,3.999,2121,3.999,2122,3.999,2123,3.999,2124,3.999,2125,3.999,2126,3.999,2127,3.999,2128,3.999,2129,3.999,2130,3.999,2131,3.999,2132,3.999,2133,3.999,2134,3.999,2135,4.858,2136,3.386,2137,3.999]],["title/dependencies.html",[793,2.113,2138,2.833]],["body/dependencies.html",[16,0.025,198,0.473,299,0.023,300,0.023,793,3.244,847,4.643,2139,5.483,2140,5.483,2141,5.483,2142,5.483,2143,5.483,2144,5.483,2145,5.483]],["title/index.html",[66,0.3,658,1.729,990,1.729]],["body/index.html",[0,0.18,4,2.141,7,0.098,9,0.809,13,0.621,14,0.863,15,1.323,16,0.025,17,1.934,40,3.506,41,3.506,45,0.473,47,1.761,53,1.478,103,2.141,105,1.201,106,2.527,115,1.9,116,1.287,137,1.789,139,0.398,141,0.432,142,0.616,149,1.723,153,0.336,162,0.336,206,0.122,207,0.151,225,1.847,240,2.736,241,0.71,242,2.152,255,0.809,262,1.302,275,0.731,277,0.832,282,1.521,283,0.758,287,1.043,291,1.484,294,1.115,299,0.017,300,0.015,306,1.761,309,2.782,311,2.152,312,1.998,314,3.506,339,2.955,345,3.612,370,3.229,375,2.152,378,2.152,423,2.527,424,1.287,425,1.761,429,1.934,430,1.384,433,1.379,435,1.384,437,2.319,450,2.504,451,2.776,454,2.776,485,1.384,528,1.616,529,2.361,531,2.141,567,1.761,568,1.546,602,2.152,604,3.001,608,1.847,612,1.847,620,2.897,623,3.506,624,3.325,625,2.432,628,3.639,629,4.31,633,3.757,638,3.506,644,3.229,645,3.548,647,3.91,658,1.761,659,4.179,667,1.934,669,2.5,674,4.101,681,3.088,689,1.761,707,1.934,767,2.152,791,1.723,792,3.138,793,1.492,794,2.964,801,3.229,802,3.757,809,5.3,810,2.776,821,2.964,822,1.934,825,3.612,831,2.443,838,2.443,839,2.443,840,3.247,843,1.934,863,2.152,864,2.152,872,4.939,873,2.964,877,4.939,880,3.506,883,2.443,885,2.152,890,1.934,891,4.481,904,2.443,905,4.35,906,2.443,908,2.776,913,3.506,915,2.443,927,2.152,928,1.761,931,2.443,933,4.101,936,2.152,937,3.947,991,3.088,999,3.088,1006,3.506,1009,2.152,1012,2.443,1062,2.443,1082,4.939,1137,2.443,1141,2.776,1144,1.934,1151,3.506,1152,3.506,1153,2.443,1186,2.152,1244,2.443,1245,3.506,1273,2.443,1275,2.152,1277,2.443,1293,2.443,1314,2.443,1328,2.443,1344,2.776,1365,3.229,1397,1.934,1453,3.612,1526,4.101,1528,3.506,1529,2.443,1548,2.443,1580,2.443,1649,3.229,1756,2.443,1780,3.506,1794,4.481,2146,6.352,2147,2.886,2148,2.886,2149,2.886,2150,2.886,2151,6.352,2152,6.604,2153,2.886,2154,5.604,2155,2.886,2156,4.141,2157,2.886,2158,5.604,2159,4.141,2160,4.141,2161,2.886,2162,2.886,2163,4.141,2164,2.886,2165,2.886,2166,4.141,2167,2.886,2168,4.141,2169,4.141,2170,4.141,2171,2.886,2172,2.886,2173,2.886,2174,4.141,2175,2.886,2176,2.886,2177,2.886,2178,4.141,2179,2.886,2180,2.886,2181,2.886,2182,2.886,2183,2.886,2184,4.141,2185,2.886,2186,2.886,2187,2.886,2188,4.141,2189,2.886,2190,4.141,2191,4.141,2192,4.844,2193,2.886,2194,4.141,2195,2.886,2196,4.141,2197,2.886,2198,2.886,2199,2.886,2200,2.886,2201,4.844,2202,2.886,2203,4.141,2204,2.886,2205,4.844,2206,2.886,2207,2.886,2208,2.886,2209,2.886,2210,2.886,2211,2.886,2212,2.443,2213,4.141,2214,2.886,2215,2.886,2216,2.886,2217,2.443,2218,2.443]],["title/license.html",[658,1.729,990,1.729,2219,2.399]],["body/license.html",[7,0.169,16,0.021,91,3.708,172,1.587,299,0.021,300,0.021,312,1.891,385,3.708,489,3.333,600,4.721,625,1.809,799,3.034,810,3.333,840,3.333,890,3.333,1141,3.333,1275,4.887,1344,4.243,1463,4.211,1568,4.211,1581,3.333,1788,5.017,1803,4.211,2212,4.211,2217,4.211,2218,4.211,2219,4.211,2220,4.973,2221,6.33,2222,4.973,2223,5.926,2224,4.973,2225,4.973,2226,4.973,2227,4.973,2228,5.926,2229,6.964,2230,4.973,2231,5.926,2232,4.973,2233,4.973,2234,4.973,2235,4.973,2236,4.973,2237,4.973,2238,4.973,2239,4.973,2240,4.973,2241,5.926,2242,5.926,2243,4.973,2244,4.973,2245,5.926,2246,4.973,2247,4.973,2248,4.973,2249,4.973,2250,4.973,2251,4.973,2252,4.973,2253,4.973,2254,4.973,2255,4.973,2256,4.973,2257,4.973,2258,4.973,2259,4.973,2260,4.973,2261,4.973,2262,4.973,2263,4.973]],["title/modules.html",[791,1.931]],["body/modules.html",[16,0.023,299,0.023,300,0.023,409,4.912,791,2.278,792,3.066,1365,3.341,1649,3.341,2264,6.587,2265,6.587,2266,6.587]],["title/overview.html",[2267,3.931]],["body/overview.html",[0,0.103,1,1.608,16,0.026,43,2.14,137,1.929,138,1.501,206,0.167,207,0.088,215,1.767,254,0.975,257,0.853,262,1.608,264,1.608,266,1.608,269,1.608,271,1.608,274,1.505,275,0.789,277,1.314,279,1.608,281,1.608,285,1.608,287,1.488,290,1.608,293,1.505,295,1.407,297,1.407,299,0.018,300,0.018,383,2.655,395,2.954,397,2.218,398,3.988,532,2.048,558,1.041,620,2.953,624,2.953,625,1.441,756,3.988,791,2.14,792,3.75,793,2.048,794,2.218,795,1.899,796,3.354,797,3.354,798,3.448,799,2.417,873,2.218,1365,4.407,1366,3.354,1367,3.354,1369,3.354,1649,4.176,1650,3.354,1651,3.354,1652,3.354,1653,3.354,2267,3.354,2268,3.961,2269,3.961]],["title/miscellaneous/variables.html",[485,1.96,2270,2.399]],["body/miscellaneous/variables.html",[16,0.026,66,0.502,105,2.394,143,0.619,146,1.003,147,1.027,149,1.97,153,0.67,162,0.67,177,2.876,181,1.328,226,1.854,299,0.021,300,0.021,308,3.531,309,2.394,410,3.174,413,3.857,485,2.27,531,2.448,549,2.093,608,2.567,669,1.97,808,3.531,851,3.531,852,4.622,853,4.872,854,4.01,855,4.01,856,4.01,857,4.01,858,4.01,859,4.01,862,3.531,863,3.531,864,3.531,865,4.622,866,4.872,867,4.01,868,4.01,869,4.01,870,4.01,928,3.782,1502,3.531,1539,4.622,1579,3.531,1617,4.622,1674,3.471,2135,4.01,2136,5.248,2270,4.01,2271,6.198,2272,4.735,2273,4.735,2274,5.754,2275,4.735,2276,4.735]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":32,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["0.2",{"_index":81,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["0.8.5",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2104,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2109,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2105,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["0x010000",{"_index":2029,"title":{},"body":{"classes/Utf8.html":{}}}],["0x07",{"_index":1080,"title":{},"body":{"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["0x0800",{"_index":2027,"title":{},"body":{"classes/Utf8.html":{}}}],["0x0f",{"_index":1076,"title":{},"body":{"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["0x10000",{"_index":1992,"title":{},"body":{"classes/Utf8.html":{}}}],["0x1f",{"_index":1079,"title":{},"body":{"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["0x3f",{"_index":391,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["0x3ff",{"_index":1994,"title":{},"body":{"classes/Utf8.html":{}}}],["0x80",{"_index":1070,"title":{},"body":{"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["0xc0",{"_index":2002,"title":{},"body":{"classes/Utf8.html":{}}}],["0xd800",{"_index":1990,"title":{},"body":{"classes/Utf8.html":{}}}],["0xdc00",{"_index":1995,"title":{},"body":{"classes/Utf8.html":{}}}],["0xe0",{"_index":2005,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf0",{"_index":2008,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf8",{"_index":2028,"title":{},"body":{"classes/Utf8.html":{}}}],["0xff",{"_index":2016,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffe00000",{"_index":2007,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff",{"_index":1991,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff0000",{"_index":2003,"title":{},"body":{"classes/Utf8.html":{}}}],["0xfffff800",{"_index":2000,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffffff80",{"_index":1996,"title":{},"body":{"classes/Utf8.html":{}}}],["1",{"_index":215,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["1.18.02.16a",{"_index":1473,"title":{},"body":{"components/LoginCmp.html":{}}}],["1.18.06.17a",{"_index":1242,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["1/1",{"_index":2099,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2094,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":395,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["10).replac",{"_index":1041,"title":{},"body":{"classes/FourDQuery.html":{}}}],["10/10",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":34,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/ModalConfig.html":{},"coverage.html":{}}}],["1063",{"_index":1477,"title":{},"body":{"components/LoginCmp.html":{}}}],["1070px",{"_index":1454,"title":{},"body":{"components/LoginCmp.html":{}}}],["10px",{"_index":56,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["12",{"_index":393,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["12/13",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["12/40",{"_index":2111,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2268,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":29,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["16",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["1732584193",{"_index":1064,"title":{},"body":{"classes/FourDQuery.html":{}}}],["1732584194",{"_index":1066,"title":{},"body":{"classes/FourDQuery.html":{}}}],["18",{"_index":390,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["18/09",{"_index":1225,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["181px",{"_index":88,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["1px",{"_index":72,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["2",{"_index":43,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["20",{"_index":2093,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1459,"title":{},"body":{"components/LoginCmp.html":{}}}],["2017",{"_index":2222,"title":{},"body":{"license.html":{}}}],["24px",{"_index":441,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["25/48",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":87,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["26/27",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1606,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["271733878",{"_index":1067,"title":{},"body":{"classes/FourDQuery.html":{}}}],["271733879",{"_index":1065,"title":{},"body":{"classes/FourDQuery.html":{}}}],["2px",{"_index":447,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["3",{"_index":383,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["3.2.1",{"_index":2142,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2110,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1052,"title":{},"body":{"classes/FourDQuery.html":{}}}],["33",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["34/39",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":243,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["350",{"_index":1419,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["3px",{"_index":73,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["4",{"_index":353,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/Utf8.html":{}}}],["400",{"_index":1418,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["41",{"_index":2106,"title":{},"body":{"coverage.html":{}}}],["4c",{"_index":1007,"title":{},"body":{"classes/FourDQuery.html":{}}}],["4d",{"_index":628,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{},"index.html":{}}}],["4d'",{"_index":1153,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["4daction",{"_index":958,"title":{},"body":{"classes/FourDQuery.html":{}}}],["4daction/rest_proxyhttpget",{"_index":968,"title":{},"body":{"classes/FourDQuery.html":{}}}],["5/12",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1608,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{}}}],["52",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1071,"title":{},"body":{"classes/FourDQuery.html":{}}}],["570",{"_index":187,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["5px",{"_index":28,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["6",{"_index":367,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["6.1.0",{"_index":2143,"title":{},"body":{"dependencies.html":{}}}],["6/18",{"_index":2103,"title":{},"body":{"coverage.html":{}}}],["630",{"_index":216,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["64",{"_index":1068,"title":{},"body":{"classes/FourDQuery.html":{}}}],["667",{"_index":1478,"title":{},"body":{"components/LoginCmp.html":{}}}],["670px",{"_index":1458,"title":{},"body":{"components/LoginCmp.html":{}}}],["7",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["7.1.0",{"_index":2140,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2100,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1075,"title":{},"body":{"classes/FourDQuery.html":{}}}],["87",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2269,"title":{},"body":{"overview.html":{}}}],["9/]/.test(input",{"_index":359,"title":{},"body":{"classes/Base64.html":{}}}],["92",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":67,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["__karma__",{"_index":2136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_attribut",{"_index":1166,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_backdropref",{"_index":576,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_bootstrapref",{"_index":575,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_config",{"_index":1539,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_defaultconfig",{"_index":1617,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_editwindowconfig",{"_index":1751,"title":{},"body":{"components/RecordList.html":{}}}],["_fourdurl",{"_index":888,"title":{},"body":{"classes/FourDQuery.html":{}}}],["_listcach",{"_index":919,"title":{},"body":{"classes/FourDQuery.html":{}}}],["_modifi",{"_index":1167,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_previousadvancedqueri",{"_index":1752,"title":{},"body":{"components/RecordList.html":{}}}],["_previousqueri",{"_index":1753,"title":{},"body":{"components/RecordList.html":{}}}],["_recnum",{"_index":1157,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_registrycach",{"_index":920,"title":{},"body":{"classes/FourDQuery.html":{}}}],["_resultdef",{"_index":577,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_savedsearch",{"_index":1891,"title":{},"body":{"components/RecordList.html":{}}}],["_savedset",{"_index":1901,"title":{},"body":{"components/RecordList.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":326,"title":{},"body":{"classes/Base64.html":{}}}],["abil",{"_index":2196,"title":{},"body":{"index.html":{}}}],["abov",{"_index":91,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"license.html":{}}}],["absolut",{"_index":64,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["accept",{"_index":1602,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["accepthead",{"_index":945,"title":{},"body":{"classes/FourDQuery.html":{}}}],["acceptheader:str",{"_index":940,"title":{},"body":{"classes/FourDQuery.html":{}}}],["access",{"_index":423,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["accessor",{"_index":133,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{}}}],["act",{"_index":936,"title":{},"body":{"classes/FourDQuery.html":{},"components/RecordList.html":{},"index.html":{}}}],["action",{"_index":1581,"title":{},"body":{"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"components/RecordList.html":{},"license.html":{}}}],["activ",{"_index":1927,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["actual_compon",{"_index":298,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["ad",{"_index":927,"title":{},"body":{"classes/FourDQuery.html":{},"components/RecordList.html":{},"index.html":{}}}],["add",{"_index":240,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["add/edit",{"_index":1777,"title":{},"body":{"components/RecordList.html":{}}}],["add/edit/delet",{"_index":2209,"title":{},"body":{"index.html":{}}}],["addit",{"_index":933,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["addition",{"_index":2208,"title":{},"body":{"index.html":{}}}],["addtab",{"_index":1943,"title":{},"body":{"components/Tabs.html":{}}}],["addtab(tab",{"_index":1939,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["adjust",{"_index":1854,"title":{},"body":{"components/RecordList.html":{}}}],["advanc",{"_index":14,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["advancedqueri",{"_index":1813,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquery['dialogconfig",{"_index":1876,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquerycompon",{"_index":1,"title":{"components/AdvancedQueryComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["aftercontentinit",{"_index":1750,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["afterviewinit",{"_index":11,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["alert('record",{"_index":1870,"title":{},"body":{"components/RecordList.html":{}}}],["alert(reason",{"_index":1746,"title":{},"body":{"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["algorithm",{"_index":344,"title":{},"body":{"classes/Base64.html":{}}}],["allow",{"_index":1526,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["allowmultipl",{"_index":1518,"title":{},"body":{"injectables/Modal.html":{}}}],["alpha",{"_index":1139,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["alreadi",{"_index":1864,"title":{},"body":{"components/RecordList.html":{}}}],["and/or",{"_index":1463,"title":{},"body":{"components/LoginCmp.html":{},"license.html":{}}}],["angular",{"_index":801,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["angular/common",{"_index":1376,"title":{},"body":{"modules/JS44DModule.html":{}}}],["angular/common/http",{"_index":805,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["angular/cor",{"_index":198,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1374,"title":{},"body":{"modules/JS44DModule.html":{},"components/QuickFindInput.html":{}}}],["angular/platform",{"_index":408,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["angular2",{"_index":199,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["angular5",{"_index":925,"title":{},"body":{"classes/FourDQuery.html":{}}}],["answer",{"_index":1669,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["anyway",{"_index":379,"title":{},"body":{"classes/Base64.html":{}}}],["api",{"_index":566,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{}}}],["app",{"_index":891,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["appear",{"_index":49,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["appli",{"_index":673,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{}}}],["applic",{"_index":1144,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["application'},{'nam",{"_index":292,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["application/x",{"_index":942,"title":{},"body":{"classes/FourDQuery.html":{}}}],["appref",{"_index":1511,"title":{},"body":{"injectables/Modal.html":{}}}],["appref.injector.get(app_compon",{"_index":1546,"title":{},"body":{"injectables/Modal.html":{}}}],["argument",{"_index":841,"title":{},"body":{"classes/FourDQuery.html":{}}}],["aris",{"_index":2262,"title":{},"body":{"license.html":{}}}],["array",{"_index":149,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(>config.keyboard",{"_index":1622,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["ascend",{"_index":665,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["ascii",{"_index":356,"title":{},"body":{"classes/Base64.html":{}}}],["asset",{"_index":2178,"title":{},"body":{"index.html":{}}}],["assets/main';and",{"_index":2182,"title":{},"body":{"index.html":{}}}],["associ",{"_index":1141,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["assum",{"_index":1351,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["astral",{"_index":373,"title":{},"body":{"classes/Base64.html":{}}}],["atk’",{"_index":346,"title":{},"body":{"classes/Base64.html":{}}}],["atob",{"_index":338,"title":{},"body":{"classes/Base64.html":{}}}],["atob`/`btoa",{"_index":316,"title":{},"body":{"classes/Base64.html":{}}}],["attribut",{"_index":882,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["attributes/properti",{"_index":1300,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["audit",{"_index":1200,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["authent",{"_index":877,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["author",{"_index":2252,"title":{},"body":{"license.html":{}}}],["auto",{"_index":21,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["automat",{"_index":602,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["avail",{"_index":2188,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":963,"title":{},"body":{"classes/FourDQuery.html":{},"injectables/Modal.html":{}}}],["b",{"_index":384,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{}}}],["back",{"_index":1227,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["backdropref",{"_index":1631,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["backdropref(valu",{"_index":580,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["backend",{"_index":872,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["background",{"_index":1455,"title":{},"body":{"components/LoginCmp.html":{}}}],["background:#ddd",{"_index":69,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#f8f8f8",{"_index":36,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#fff",{"_index":39,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["band",{"_index":425,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["band'},{'nam",{"_index":278,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["bar",{"_index":451,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["base",{"_index":345,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"index.html":{}}}],["base64",{"_index":301,"title":{"classes/Base64.html":{}},"body":{"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["base64.encode(utf8.utf8encode((column",{"_index":737,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringifi",{"_index":1002,"title":{},"body":{"classes/FourDQuery.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(valu",{"_index":1317,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(pwd",{"_index":979,"title":{},"body":{"classes/FourDQuery.html":{}}}],["base64.encode(utf8.utf8encode(this.getcolumnlistjson",{"_index":1249,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('add",{"_index":1281,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('upd",{"_index":1294,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(url",{"_index":967,"title":{},"body":{"classes/FourDQuery.html":{}}}],["base64.encode(utf8.utf8encode(us",{"_index":978,"title":{},"body":{"classes/FourDQuery.html":{}}}],["base64.error",{"_index":360,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat((buff",{"_index":396,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat(buff",{"_index":392,"title":{},"body":{"classes/Base64.html":{}}}],["base64imageref",{"_index":398,"title":{"pipes/Base64ImageRef.html":{}},"body":{"pipes/Base64ImageRef.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["basic",{"_index":2201,"title":{},"body":{"index.html":{}}}],["be",{"_index":46,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["befor",{"_index":861,"title":{},"body":{"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["beforeclos",{"_index":1123,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["beforedismiss",{"_index":1124,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["belong",{"_index":1228,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["below",{"_index":1551,"title":{},"body":{"injectables/Modal.html":{}}}],["between",{"_index":827,"title":{},"body":{"classes/FourDQuery.html":{}}}],["bind",{"_index":1121,"title":{},"body":{"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{}}}],["bitcount",{"_index":363,"title":{},"body":{"classes/Base64.html":{}}}],["bitstorag",{"_index":364,"title":{},"body":{"classes/Base64.html":{}}}],["blank",{"_index":1019,"title":{},"body":{"classes/FourDQuery.html":{}}}],["blob",{"_index":107,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["block",{"_index":30,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bodi",{"_index":726,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["body.act",{"_index":1279,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.callbackmethod",{"_index":1278,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.cascadedelet",{"_index":1299,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.column",{"_index":736,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.filteropt",{"_index":740,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.hash",{"_index":955,"title":{},"body":{"classes/FourDQuery.html":{}}}],["body.numrec",{"_index":733,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.orderbi",{"_index":741,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.querystr",{"_index":734,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.recorddata",{"_index":1280,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordid",{"_index":1246,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordnum",{"_index":1247,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.registryvalu",{"_index":1031,"title":{},"body":{"classes/FourDQuery.html":{}}}],["body.sessionkey",{"_index":953,"title":{},"body":{"classes/FourDQuery.html":{}}}],["body.startrec",{"_index":732,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.tablenam",{"_index":730,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["body.variableslist",{"_index":1248,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["boolean",{"_index":546,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["booleanvalu",{"_index":1084,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["bootstrap",{"_index":795,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["bootstrapref",{"_index":1632,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["bootstrapref(valu",{"_index":582,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["border",{"_index":95,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["border:0",{"_index":94,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["bottom",{"_index":497,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:10px",{"_index":445,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:1px",{"_index":96,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["box",{"_index":70,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["break",{"_index":1194,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["brows",{"_index":2266,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":409,"title":{},"body":{"pipes/Base64ImageRef.html":{},"components/RecordList.html":{},"modules.html":{}}}],["btn",{"_index":500,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["btoa",{"_index":368,"title":{},"body":{"classes/Base64.html":{}}}],["buffer",{"_index":365,"title":{},"body":{"classes/Base64.html":{}}}],["build",{"_index":1245,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["built",{"_index":2207,"title":{},"body":{"index.html":{}}}],["button",{"_index":450,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttonlabel",{"_index":1413,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["buttontext",{"_index":1393,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["byte",{"_index":1997,"title":{},"body":{"classes/Utf8.html":{}}}],["byte1",{"_index":2021,"title":{},"body":{"classes/Utf8.html":{}}}],["byte2",{"_index":2022,"title":{},"body":{"classes/Utf8.html":{}}}],["byte3",{"_index":2023,"title":{},"body":{"classes/Utf8.html":{}}}],["byte4",{"_index":2024,"title":{},"body":{"classes/Utf8.html":{}}}],["bytearray",{"_index":1951,"title":{},"body":{"classes/Utf8.html":{}}}],["bytecount",{"_index":1952,"title":{},"body":{"classes/Utf8.html":{}}}],["byteindex",{"_index":1953,"title":{},"body":{"classes/Utf8.html":{}}}],["bytestr",{"_index":1982,"title":{},"body":{"classes/Utf8.html":{}}}],["c",{"_index":385,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"license.html":{}}}],["c9c9c9",{"_index":98,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cach",{"_index":916,"title":{},"body":{"classes/FourDQuery.html":{}}}],["calcul",{"_index":862,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"miscellaneous/variables.html":{}}}],["calculatehash",{"_index":865,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatehash(bodi",{"_index":956,"title":{},"body":{"classes/FourDQuery.html":{}}}],["call",{"_index":529,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["call4drestmethod",{"_index":2189,"title":{},"body":{"index.html":{}}}],["call4drestmethod(fourdmethod",{"_index":939,"title":{},"body":{"classes/FourDQuery.html":{}}}],["callback",{"_index":1161,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["caller",{"_index":934,"title":{},"body":{"classes/FourDQuery.html":{}}}],["can't",{"_index":104,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["can\\'t",{"_index":260,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cancel",{"_index":601,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["carneiro",{"_index":2218,"title":{},"body":{"index.html":{},"license.html":{}}}],["cascad",{"_index":471,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["cascadedeleterecord",{"_index":472,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["case",{"_index":372,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["catch",{"_index":2068,"title":{},"body":{"components/WebAppContainer.html":{}}}],["catch(",{"_index":2066,"title":{},"body":{"components/WebAppContainer.html":{}}}],["catch((",{"_index":1500,"title":{},"body":{"components/LoginCmp.html":{}}}],["catch((error",{"_index":1271,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["catch((reason",{"_index":790,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["ccc",{"_index":74,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["cdata",{"_index":1235,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["chang",{"_index":1183,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["changeselect",{"_index":1396,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changeselection(ev",{"_index":1406,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["charact",{"_index":334,"title":{},"body":{"classes/Base64.html":{}}}],["charg",{"_index":2227,"title":{},"body":{"license.html":{}}}],["check",{"_index":1324,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["checkbox",{"_index":1107,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["checkscalarvalu",{"_index":1954,"title":{},"body":{"classes/Utf8.html":{}}}],["checkscalarvalue(codepoint",{"_index":1966,"title":{},"body":{"classes/Utf8.html":{}}}],["choic",{"_index":991,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["chromium",{"_index":317,"title":{},"body":{"classes/Base64.html":{}}}],["claim",{"_index":2255,"title":{},"body":{"license.html":{}}}],["class",{"_index":207,"title":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["class/paramet",{"_index":1022,"title":{},"body":{"classes/FourDQuery.html":{}}}],["classnam",{"_index":1089,"title":{},"body":{"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["claus",{"_index":662,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["clean",{"_index":974,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["clear",{"_index":530,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["clear:both",{"_index":92,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["clearform",{"_index":527,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["clearqueri",{"_index":1755,"title":{},"body":{"components/RecordList.html":{}}}],["clearrecord",{"_index":1191,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clearrecorddirtyflag",{"_index":1329,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["click",{"_index":610,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["clike",{"_index":1774,"title":{},"body":{"components/RecordList.html":{}}}],["closabl",{"_index":1596,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["close",{"_index":584,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["close(result",{"_index":592,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["closedialog",{"_index":1506,"title":{},"body":{"injectables/Modal.html":{}}}],["closedialog(ev",{"_index":1514,"title":{},"body":{"injectables/Modal.html":{}}}],["cluster_fourdmodul",{"_index":796,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_fourdmodule_provid",{"_index":797,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_js44dmodul",{"_index":1366,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_declar",{"_index":1367,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_export",{"_index":1369,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_import",{"_index":1368,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_js44dmodule_provid",{"_index":1370,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_modalmodul",{"_index":1650,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declar",{"_index":1651,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_export",{"_index":1652,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_provid",{"_index":1653,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["code",{"_index":851,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"miscellaneous/variables.html":{}}}],["codepoint",{"_index":1968,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints.length",{"_index":2011,"title":{},"body":{"classes/Utf8.html":{}}}],["col",{"_index":699,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.field",{"_index":714,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.formula",{"_index":716,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.indexof",{"_index":701,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.joinfk",{"_index":1341,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.joinpk",{"_index":1342,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.longnam",{"_index":718,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.nam",{"_index":717,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.substr(col.indexof",{"_index":704,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.subt",{"_index":1333,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.field",{"_index":1336,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.tablenam",{"_index":1340,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["collect",{"_index":623,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["collist",{"_index":694,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["collist.push",{"_index":703,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["color",{"_index":439,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["color:#282828",{"_index":37,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cols.push(col",{"_index":1347,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col.nam",{"_index":1348,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["column",{"_index":630,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["combin",{"_index":434,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["combinesearch",{"_index":1914,"title":{},"body":{"components/RecordList.html":{}}}],["come",{"_index":1137,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["commonmodul",{"_index":1375,"title":{},"body":{"modules/JS44DModule.html":{}}}],["companion",{"_index":2148,"title":{},"body":{"index.html":{}}}],["compar",{"_index":154,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{}}}],["comparatorlist",{"_index":129,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["compat",{"_index":337,"title":{},"body":{"classes/Base64.html":{}}}],["complet",{"_index":938,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["compon",{"_index":0,"title":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.dialogconfig",{"_index":1578,"title":{},"body":{"injectables/Modal.html":{}}}],["component_templ",{"_index":259,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["componentfactoryresolv",{"_index":1510,"title":{},"body":{"injectables/Modal.html":{}}}],["componentref",{"_index":557,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["components/widget",{"_index":2174,"title":{},"body":{"index.html":{}}}],["componenttyp",{"_index":1522,"title":{},"body":{"injectables/Modal.html":{}}}],["componenttype['nam",{"_index":1572,"title":{},"body":{"injectables/Modal.html":{}}}],["condit",{"_index":2240,"title":{},"body":{"license.html":{}}}],["config",{"_index":1394,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["config.isblock",{"_index":1620,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard",{"_index":1621,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard).length",{"_index":1623,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.s",{"_index":1618,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.selfcent",{"_index":1560,"title":{},"body":{"injectables/Modal.html":{}}}],["configur",{"_index":609,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["confirm((this.queryband.cascadedeleterecord",{"_index":1866,"title":{},"body":{"components/RecordList.html":{}}}],["connect",{"_index":2263,"title":{},"body":{"license.html":{}}}],["connector",{"_index":155,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["console.log(",{"_index":1501,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log('authent",{"_index":1495,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log('error",{"_index":753,"title":{},"body":{"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["console.log('hash",{"_index":869,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["console.log('oop",{"_index":1499,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(ev",{"_index":1576,"title":{},"body":{"injectables/Modal.html":{}}}],["console.log(this.dialoginst",{"_index":1842,"title":{},"body":{"components/RecordList.html":{}}}],["const",{"_index":226,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(@inject(httpcli",{"_index":922,"title":{},"body":{"classes/FourDQuery.html":{}}}],["constructor(componentfactoryresolv",{"_index":1509,"title":{},"body":{"injectables/Modal.html":{}}}],["constructor(dialog",{"_index":1400,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(elementref",{"_index":1684,"title":{},"body":{"components/QueryBand.html":{}}}],["constructor(fourd",{"_index":136,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["constructor(mod",{"_index":1768,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["constructor(priv",{"_index":417,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["constructor(publ",{"_index":1444,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["constructor(tab",{"_index":1928,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["constructor(titl",{"_index":1660,"title":{},"body":{"classes/OKOnlyContent.html":{},"classes/YesNoModalContent.html":{}}}],["contain",{"_index":378,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["containers/advancedqueri",{"_index":1379,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/queryband",{"_index":1378,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordeditwindow",{"_index":1381,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordlist",{"_index":1380,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/tab",{"_index":1382,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/webappcontain",{"_index":1383,"title":{},"body":{"modules/JS44DModule.html":{}}}],["content",{"_index":294,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["content'},{'nam",{"_index":276,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["contentchild",{"_index":422,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["contentchild('customqueryband",{"_index":426,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentchild(datagrid",{"_index":1809,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(queryband",{"_index":1807,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(querybanddirect",{"_index":492,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contenthead",{"_index":941,"title":{},"body":{"classes/FourDQuery.html":{}}}],["contentheaders['accept",{"_index":946,"title":{},"body":{"classes/FourDQuery.html":{}}}],["contentref",{"_index":569,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["context",{"_index":1674,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.bodi",{"_index":1672,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.notext",{"_index":2072,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.oktext",{"_index":1673,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["context.titl",{"_index":1671,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.yestext",{"_index":2071,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["continu",{"_index":2020,"title":{},"body":{"classes/Utf8.html":{}}}],["continuationbyt",{"_index":2014,"title":{},"body":{"classes/Utf8.html":{}}}],["contract",{"_index":2259,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2216,"title":{},"body":{"index.html":{}}}],["control",{"_index":1529,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["controls/fourddropdown",{"_index":1384,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/fourdregistryinput",{"_index":1391,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/quickfindinput",{"_index":1385,"title":{},"body":{"modules/JS44DModule.html":{}}}],["convert",{"_index":410,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["convertobjecttourl",{"_index":852,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertobjecttourl(bodi",{"_index":959,"title":{},"body":{"classes/FourDQuery.html":{}}}],["copi",{"_index":1275,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{},"license.html":{}}}],["copyright",{"_index":2221,"title":{},"body":{"license.html":{}}}],["cor",{"_index":964,"title":{},"body":{"classes/FourDQuery.html":{}}}],["correctli",{"_index":362,"title":{},"body":{"classes/Base64.html":{}}}],["correspond",{"_index":819,"title":{},"body":{"classes/FourDQuery.html":{},"components/RecordList.html":{}}}],["counter",{"_index":1987,"title":{},"body":{"classes/Utf8.html":{}}}],["coverag",{"_index":2090,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crap",{"_index":948,"title":{},"body":{"classes/FourDQuery.html":{}}}],["creat",{"_index":2197,"title":{},"body":{"index.html":{}}}],["createbyt",{"_index":1955,"title":{},"body":{"classes/Utf8.html":{}}}],["createbyte(codepoint",{"_index":1969,"title":{},"body":{"classes/Utf8.html":{}}}],["credenti",{"_index":2211,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1259,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["crud",{"_index":1152,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["css3",{"_index":75,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currectli",{"_index":2193,"title":{},"body":{"index.html":{}}}],["current",{"_index":435,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["currentrecord",{"_index":631,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordEditWindow.html":{}}}],["currentrecordnumb",{"_index":1238,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["currentt",{"_index":113,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currentus",{"_index":883,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["currentuserid",{"_index":884,"title":{},"body":{"classes/FourDQuery.html":{}}}],["currentuserpassword",{"_index":886,"title":{},"body":{"classes/FourDQuery.html":{}}}],["custom",{"_index":424,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["custombuttonbar",{"_index":420,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["custombuttonbar'},{'nam",{"_index":296,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["custombuttonbardirect",{"_index":295,"title":{"directives/CustomButtonBarDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["customstyl",{"_index":1582,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["d",{"_index":386,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{}}}],["damag",{"_index":2256,"title":{},"body":{"license.html":{}}}],["data",{"_index":669,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data('kendowindow",{"_index":1559,"title":{},"body":{"injectables/Modal.html":{}}}],["data[field.nam",{"_index":1310,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["databas",{"_index":629,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["datagrid",{"_index":262,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["datagrid'},{'nam",{"_index":263,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["datagrid/datagrid",{"_index":1386,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["datamodel",{"_index":708,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["date",{"_index":759,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["date(0,0,0,hh,mm,ss",{"_index":1180,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["date(datevalu",{"_index":1046,"title":{},"body":{"classes/FourDQuery.html":{}}}],["date(value.replac",{"_index":762,"title":{},"body":{"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["date.tolocaledatestr",{"_index":763,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["dateto4dformat(thed",{"_index":1039,"title":{},"body":{"classes/FourDQuery.html":{}}}],["datetodomformat(thed",{"_index":1043,"title":{},"body":{"classes/FourDQuery.html":{}}}],["datevalu",{"_index":1044,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["datevalue.getfullyear().tostr",{"_index":1232,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["datevalue.getmonth",{"_index":1233,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dbl",{"_index":1773,"title":{},"body":{"components/RecordList.html":{}}}],["deal",{"_index":1788,"title":{},"body":{"components/RecordList.html":{},"license.html":{}}}],["debouncetim",{"_index":1731,"title":{},"body":{"components/QuickFindInput.html":{}}}],["declar",{"_index":794,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["decod",{"_index":307,"title":{},"body":{"classes/Base64.html":{}}}],["decode(input",{"_index":328,"title":{},"body":{"classes/Base64.html":{}}}],["decodesymbol",{"_index":1956,"title":{},"body":{"classes/Utf8.html":{}}}],["decor",{"_index":1723,"title":{},"body":{"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["default",{"_index":146,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["default=fals",{"_index":1296,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["defaultconfig",{"_index":1512,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["defaultconfig.keyboard",{"_index":1624,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaultconfig.s",{"_index":1619,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaultvalu",{"_index":1029,"title":{},"body":{"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{}}}],["defer",{"_index":548,"title":{"classes/Deferred.html":{}},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["defin",{"_index":139,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["definit",{"_index":1159,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["del",{"_index":509,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["delet",{"_index":437,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["deleterecord",{"_index":1756,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["deleterecord(cascad",{"_index":1297,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["depend",{"_index":793,"title":{"dependencies.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deriv",{"_index":2202,"title":{},"body":{"index.html":{}}}],["descend",{"_index":722,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["describ",{"_index":339,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["descript",{"_index":622,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["design",{"_index":335,"title":{},"body":{"classes/Base64.html":{}}}],["detail",{"_index":2156,"title":{},"body":{"index.html":{}}}],["determin",{"_index":823,"title":{},"body":{"classes/FourDQuery.html":{}}}],["develop",{"_index":893,"title":{},"body":{"classes/FourDQuery.html":{}}}],["di",{"_index":1543,"title":{},"body":{"injectables/Modal.html":{}}}],["dialog",{"_index":115,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["dialog.clos",{"_index":598,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialog.resizing._draggable.userevents.bind('releas",{"_index":1844,"title":{},"body":{"components/RecordList.html":{}}}],["dialog.title(titl",{"_index":590,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialogcomponentref",{"_index":1564,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogcomponentref.changedetectorref.detectchang",{"_index":1569,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogconfig",{"_index":117,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{}}}],["dialogid",{"_index":1519,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginst",{"_index":1558,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["dialoginstance.contentref",{"_index":1563,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.kendodialog",{"_index":1565,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.result",{"_index":1574,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogs/listselectordialog",{"_index":1388,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["digest",{"_index":971,"title":{},"body":{"classes/FourDQuery.html":{}}}],["direct",{"_index":257,"title":{"directives/CustomButtonBarDirective.html":{},"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["directli",{"_index":1244,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["directori",{"_index":2180,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1201,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{}}}],["dismiss",{"_index":585,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{}}}],["display",{"_index":1794,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["display:inlin",{"_index":25,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["display:non",{"_index":442,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dispos",{"_index":616,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["distinctuntilchang",{"_index":1732,"title":{},"body":{"components/QuickFindInput.html":{}}}],["distribut",{"_index":2234,"title":{},"body":{"license.html":{}}}],["divid",{"_index":2165,"title":{},"body":{"index.html":{}}}],["doaddrecord",{"_index":539,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doclear",{"_index":525,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["document",{"_index":810,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation](https://github.com/fourctv/fourdrestapi/wiki/th",{"_index":1081,"title":{},"body":{"classes/FourDQuery.html":{}}}],["dodeleterecord",{"_index":543,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doeditrecord",{"_index":541,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doesn't",{"_index":1547,"title":{},"body":{"injectables/Modal.html":{}}}],["doexportgrid",{"_index":537,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["domanageset",{"_index":1682,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{}}}],["domanagesets(act",{"_index":518,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["domsanit",{"_index":407,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["doqb",{"_index":511,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doqff",{"_index":513,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doqueri",{"_index":121,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["dorefresh",{"_index":520,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dosort",{"_index":523,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dot",{"_index":1142,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dowehaveaqueri",{"_index":545,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["down",{"_index":41,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["drop",{"_index":40,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["dropdown",{"_index":767,"title":{},"body":{"components/FourDDropDown.html":{},"components/RecordList.html":{},"index.html":{}}}],["dropdown'},{'nam",{"_index":265,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["dropdownisopen",{"_index":491,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dure",{"_index":892,"title":{},"body":{"classes/FourDQuery.html":{}}}],["dynam",{"_index":874,"title":{},"body":{"classes/FourDQuery.html":{},"injectables/Modal.html":{}}}],["each",{"_index":647,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["edit",{"_index":283,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["editwindow",{"_index":1764,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandl",{"_index":1757,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler(result",{"_index":1786,"title":{},"body":{"components/RecordList.html":{}}}],["effect",{"_index":78,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element",{"_index":256,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["element.compar",{"_index":230,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.connector",{"_index":235,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field",{"_index":232,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field.nam",{"_index":229,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.split",{"_index":2052,"title":{},"body":{"components/WebAppContainer.html":{}}}],["element.valu",{"_index":234,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["elementref",{"_index":196,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["embed",{"_index":412,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["emit",{"_index":473,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["empti",{"_index":1146,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["enabl",{"_index":454,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enableaddrecord",{"_index":468,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebutton",{"_index":1683,"title":{},"body":{"components/QueryBand.html":{}}}],["enablebutton(btn",{"_index":498,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebuttonbar",{"_index":467,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablecombisearch",{"_index":462,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enabledeleterecord",{"_index":470,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableeditrecord",{"_index":469,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableexportgrid",{"_index":466,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqb",{"_index":456,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqff",{"_index":458,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableset",{"_index":461,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesort",{"_index":465,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["encapsul",{"_index":2031,"title":{},"body":{"components/WebAppContainer.html":{}}}],["encod",{"_index":308,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["encode(input",{"_index":330,"title":{},"body":{"classes/Base64.html":{}}}],["encodecodepoint",{"_index":1957,"title":{},"body":{"classes/Utf8.html":{}}}],["encodecodepoint(codepoint",{"_index":1973,"title":{},"body":{"classes/Utf8.html":{}}}],["encodeuricomponent(obj[p",{"_index":858,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2018,"title":{},"body":{"classes/Utf8.html":{}}}],["ensur",{"_index":2210,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1898,"title":{},"body":{"components/RecordList.html":{}}}],["entir",{"_index":1804,"title":{},"body":{"components/RecordList.html":{}}}],["entri",{"_index":915,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["entrycompon",{"_index":1372,"title":{},"body":{"modules/JS44DModule.html":{},"modules/ModalModule.html":{}}}],["equival",{"_index":1321,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["error",{"_index":303,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"components/WebAppContainer.html":{}}}],["error('invalid",{"_index":2013,"title":{},"body":{"classes/Utf8.html":{}}}],["error/warn",{"_index":1571,"title":{},"body":{"injectables/Modal.html":{}}}],["essenti",{"_index":2167,"title":{},"body":{"index.html":{}}}],["establish",{"_index":829,"title":{},"body":{"classes/FourDQuery.html":{}}}],["etc",{"_index":2195,"title":{},"body":{"index.html":{}}}],["ev",{"_index":1408,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["ev.target.selectedindex",{"_index":1449,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["event",{"_index":172,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"license.html":{}}}],["event.preventdefault",{"_index":1489,"title":{},"body":{"components/LoginCmp.html":{},"components/Tab.html":{},"components/Tabs.html":{}}}],["event.stoppropag",{"_index":1450,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["event.target.selectedindex",{"_index":220,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["event.target.textcont",{"_index":248,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["eventemitt",{"_index":421,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/WebAppContainer.html":{}}}],["exampl",{"_index":1328,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["excel",{"_index":347,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["execut",{"_index":1162,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["exist",{"_index":528,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["exit",{"_index":606,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["export",{"_index":206,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":1568,"title":{},"body":{"injectables/Modal.html":{},"license.html":{}}}],["expresst",{"_index":1136,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["extend",{"_index":2198,"title":{},"body":{"index.html":{}}}],["extens",{"_index":2200,"title":{},"body":{"index.html":{}}}],["extra",{"_index":1989,"title":{},"body":{"classes/Utf8.html":{}}}],["extractmodeldata",{"_index":1308,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fals",{"_index":183,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["fetch",{"_index":627,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["ff(a",{"_index":1054,"title":{},"body":{"classes/FourDQuery.html":{}}}],["field",{"_index":106,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["field'",{"_index":1349,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.formula",{"_index":1359,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.isrel",{"_index":1354,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.longnam",{"_index":102,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.nam",{"_index":224,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.readonli",{"_index":1364,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.rel",{"_index":208,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["field.subt",{"_index":1362,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.typ",{"_index":1192,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/attribut",{"_index":1156,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/column",{"_index":646,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["field/properti",{"_index":1355,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fieldlist",{"_index":130,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["fieldnam",{"_index":1187,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fields/column",{"_index":648,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":653,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["filteropt",{"_index":632,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["first",{"_index":1258,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["fit",{"_index":1803,"title":{},"body":{"components/RecordList.html":{},"license.html":{}}}],["flag",{"_index":1170,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fld",{"_index":698,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.formula",{"_index":710,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.longnam",{"_index":713,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.name",{"_index":711,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["float",{"_index":2169,"title":{},"body":{"index.html":{}}}],["float:left",{"_index":23,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["folder",{"_index":2179,"title":{},"body":{"index.html":{}}}],["follow",{"_index":840,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":769,"title":{},"body":{"components/FourDDropDown.html":{}}}],["foreign",{"_index":833,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["form",{"_index":531,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":663,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["formcontrol",{"_index":1728,"title":{},"body":{"components/QuickFindInput.html":{}}}],["formdata",{"_index":866,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["formdata.hasownproperty(key",{"_index":867,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["formdata[key",{"_index":868,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["formsmodul",{"_index":1373,"title":{},"body":{"modules/JS44DModule.html":{}}}],["formula",{"_index":712,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["found",{"_index":681,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fourd",{"_index":145,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["fourd.modul",{"_index":1377,"title":{},"body":{"modules/JS44DModule.html":{}}}],["fourdapivers",{"_index":903,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdcollect",{"_index":620,"title":{"injectables/FourDCollection.html":{}},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourddatetolocalestr",{"_index":761,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["fourddatetostr",{"_index":756,"title":{"pipes/FourDDateToString.html":{}},"body":{"pipes/FourDDateToString.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["fourddeletecallbackmethod_",{"_index":1164,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourddropdown",{"_index":264,"title":{"components/FourDDropDown.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdinterfac",{"_index":137,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdinterface._fourdurl",{"_index":895,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface._listcache[listnam",{"_index":993,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface._registrycach",{"_index":1024,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface._registrycache.push(bodi",{"_index":1032,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface.authent",{"_index":781,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["fourdinterface.currentus",{"_index":728,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["fourdinterface.currentuserid",{"_index":977,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface.currentuserpassword",{"_index":973,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface.fourdapivers",{"_index":900,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["fourdinterface.interfaceinst",{"_index":691,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["fourdinterface.interfaceinstance.call4drestmethod('rest_getapivers",{"_index":897,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface.sessionkey",{"_index":954,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface.userhassignedin.emit(fourdinterface.currentus",{"_index":986,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdinterface.userhassignedin.subscrib",{"_index":1105,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["fourdinterface.userhassignedin.subscribe(us",{"_index":784,"title":{},"body":{"components/FourDDropDown.html":{}}}],["fourdmethod",{"_index":930,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdmodel",{"_index":624,"title":{},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"components/RecordEditWindow.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdmodul",{"_index":792,"title":{"modules/FourDModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fourdqueri",{"_index":650,"title":{"classes/FourDQuery.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["fourdregistryinput",{"_index":266,"title":{"components/FourDRegistryInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdrest",{"_index":901,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdrestapi",{"_index":929,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdsavecallbackmethod_",{"_index":1163,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourdurl",{"_index":896,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdurl():str",{"_index":894,"title":{},"body":{"classes/FourDQuery.html":{}}}],["fourdvers",{"_index":1465,"title":{},"body":{"components/LoginCmp.html":{}}}],["free",{"_index":2226,"title":{},"body":{"license.html":{}}}],["fresh",{"_index":1274,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fulli",{"_index":336,"title":{},"body":{"classes/Base64.html":{}}}],["funcion",{"_index":2168,"title":{},"body":{"index.html":{}}}],["function",{"_index":309,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["furnish",{"_index":2238,"title":{},"body":{"license.html":{}}}],["further",{"_index":660,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["g",{"_index":324,"title":{},"body":{"classes/Base64.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["gener",{"_index":924,"title":{},"body":{"classes/FourDQuery.html":{}}}],["get",{"_index":990,"title":{"index.html":{},"license.html":{}},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["get(field",{"_index":1168,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["get4dlist(listnam",{"_index":992,"title":{},"body":{"classes/FourDQuery.html":{}}}],["getcolumnlist(includesubt",{"_index":1345,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson",{"_index":637,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson(column",{"_index":640,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getfielddescription(fieldnam",{"_index":1352,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfieldproperties(fieldnam",{"_index":1188,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfiltered4dlist(listnam",{"_index":1014,"title":{},"body":{"classes/FourDQuery.html":{}}}],["getlength",{"_index":683,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getlongname(fieldnam",{"_index":1350,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecord",{"_index":638,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["getrecord(recordnumb",{"_index":1241,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecords(queri",{"_index":649,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getregistryvalue(theclass",{"_index":1023,"title":{},"body":{"classes/FourDQuery.html":{}}}],["getresult",{"_index":1647,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["getselectedrecord",{"_index":1811,"title":{},"body":{"components/RecordList.html":{}}}],["getter/sett",{"_index":2199,"title":{},"body":{"index.html":{}}}],["getvaluesfrom4d(valu",{"_index":1315,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["gg(a",{"_index":1056,"title":{},"body":{"classes/FourDQuery.html":{}}}],["given",{"_index":1186,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["global",{"_index":875,"title":{},"body":{"classes/FourDQuery.html":{}}}],["glyphicon",{"_index":487,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["go",{"_index":2162,"title":{},"body":{"index.html":{}}}],["grab",{"_index":1273,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["grant",{"_index":2225,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1780,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["grid'",{"_index":1828,"title":{},"body":{"components/RecordList.html":{}}}],["gridrow",{"_index":1817,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows.length",{"_index":1896,"title":{},"body":{"components/RecordList.html":{}}}],["groov",{"_index":448,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["gt;table.field",{"_index":720,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["h5",{"_index":26,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["h5:hover",{"_index":35,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["hack",{"_index":1550,"title":{},"body":{"injectables/Modal.html":{}}}],["handl",{"_index":388,"title":{},"body":{"classes/Base64.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"components/RecordList.html":{}}}],["hash",{"_index":863,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":952,"title":{},"body":{"classes/FourDQuery.html":{}}}],["height",{"_index":188,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["height(v",{"_index":1430,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["height:40px",{"_index":444,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hello",{"_index":1662,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["here",{"_index":375,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"index.html":{}}}],["herebi",{"_index":2224,"title":{},"body":{"license.html":{}}}],["hex(x",{"_index":1078,"title":{},"body":{"classes/FourDQuery.html":{}}}],["hh",{"_index":1174,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["hh(a",{"_index":1057,"title":{},"body":{"classes/FourDQuery.html":{}}}],["hh:mm:ss",{"_index":1048,"title":{},"body":{"classes/FourDQuery.html":{}}}],["hidden",{"_index":60,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hideno",{"_index":2080,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["hierarch",{"_index":1011,"title":{},"body":{"classes/FourDQuery.html":{}}}],["hierarchi",{"_index":1013,"title":{},"body":{"classes/FourDQuery.html":{}}}],["highlight",{"_index":428,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hit",{"_index":1776,"title":{},"body":{"components/RecordList.html":{}}}],["hold",{"_index":671,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{}}}],["holder",{"_index":2253,"title":{},"body":{"license.html":{}}}],["horizont",{"_index":2215,"title":{},"body":{"index.html":{}}}],["hostlisten",{"_index":1765,"title":{},"body":{"components/RecordList.html":{}}}],["hostlistener('window:res",{"_index":1850,"title":{},"body":{"components/RecordList.html":{}}}],["hostviewref",{"_index":1503,"title":{},"body":{"injectables/Modal.html":{}}}],["hover",{"_index":50,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["html",{"_index":255,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["http",{"_index":904,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["http://localhost:8080",{"_index":889,"title":{},"body":{"classes/FourDQuery.html":{}}}],["http://whatwg.org/c#alphanumer",{"_index":355,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/common",{"_index":332,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/webappapis.html#dom",{"_index":341,"title":{},"body":{"classes/Base64.html":{}}}],["httpclient",{"_index":803,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["httpclient:httpclient",{"_index":923,"title":{},"body":{"classes/FourDQuery.html":{}}}],["httpclientmodul",{"_index":804,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{}}}],["httpheader",{"_index":845,"title":{},"body":{"classes/FourDQuery.html":{}}}],["httpheaders(contenthead",{"_index":951,"title":{},"body":{"classes/FourDQuery.html":{}}}],["https://gist.github.com/atk/1020396",{"_index":348,"title":{},"body":{"classes/Base64.html":{}}}],["https://mths.be/punycod",{"_index":1986,"title":{},"body":{"classes/Utf8.html":{}}}],["i.",{"_index":591,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["icon",{"_index":438,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["icustommod",{"_index":201,"title":{"classes/ICustomModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModal.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["icustommodalcompon",{"_index":10,"title":{"classes/ICustomModalComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["id",{"_index":151,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"components/RecordList.html":{}}}],["idattribut",{"_index":1158,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["identif",{"_index":1527,"title":{},"body":{"injectables/Modal.html":{}}}],["identifi",{"_index":2091,"title":{},"body":{"coverage.html":{}}}],["ifielddescript",{"_index":1129,"title":{"interfaces/IFieldDescription.html":{}},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["ignor",{"_index":1229,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["ii(a",{"_index":1059,"title":{},"body":{"classes/FourDQuery.html":{}}}],["imag",{"_index":411,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["imagetyp",{"_index":402,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["immedi",{"_index":1918,"title":{},"body":{"components/RecordList.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["impli",{"_index":2247,"title":{},"body":{"license.html":{}}}],["implicitli",{"_index":1607,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["import",{"_index":45,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["in'},{'nam",{"_index":273,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["includ",{"_index":1344,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{},"index.html":{},"license.html":{}}}],["includesubt",{"_index":1343,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["incom",{"_index":2049,"title":{},"body":{"components/WebAppContainer.html":{}}}],["incorrect",{"_index":1464,"title":{},"body":{"components/LoginCmp.html":{}}}],["inde",{"_index":1182,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["index",{"_index":66,"title":{"index.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":907,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["individu",{"_index":1149,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["inel",{"_index":574,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["inform",{"_index":655,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["inherit",{"_index":768,"title":{},"body":{"components/FourDDropDown.html":{}}}],["initi",{"_index":689,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["inject",{"_index":558,"title":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":128,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{}}}],["input'},{'nam",{"_index":268,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["input.charcodeat(posit",{"_index":394,"title":{},"body":{"classes/Base64.html":{}}}],["input.length",{"_index":352,"title":{},"body":{"classes/Base64.html":{}}}],["input.replac",{"_index":354,"title":{},"body":{"classes/Base64.html":{}}}],["inputtyp",{"_index":1090,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["insert",{"_index":1198,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["insertrecord",{"_index":1277,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["insid",{"_index":572,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["instal",{"_index":2154,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":821,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"index.html":{}}}],["instead",{"_index":656,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["instruct",{"_index":1580,"title":{},"body":{"injectables/ModalConfig.html":{},"index.html":{}}}],["interact",{"_index":2205,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1802,"title":{},"body":{"components/RecordList.html":{}}}],["interfac",{"_index":873,"title":{"interfaces/IFieldDescription.html":{}},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaceinstance:fourdinterfac",{"_index":876,"title":{},"body":{"classes/FourDQuery.html":{}}}],["intern",{"_index":484,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["intersect",{"_index":811,"title":{},"body":{"classes/FourDQuery.html":{}}}],["invalid",{"_index":361,"title":{},"body":{"classes/Base64.html":{}}}],["invalidcharactererror",{"_index":304,"title":{},"body":{"classes/Base64.html":{}}}],["invok",{"_index":603,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{}}}],["isblock",{"_index":185,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["iscalculatedfield(field",{"_index":1358,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isdragg",{"_index":1583,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isitemselect",{"_index":122,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["isitemselected(field",{"_index":164,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["isitemselected(item",{"_index":777,"title":{},"body":{"components/FourDDropDown.html":{}}}],["ismod",{"_index":184,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["ismodifiedfield(field",{"_index":1356,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isnan(config.keyboard",{"_index":1625,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isreadonly(field",{"_index":1363,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrecordload",{"_index":1325,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrel",{"_index":1131,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelatedfield(field",{"_index":1353,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isresiz",{"_index":182,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["issu",{"_index":965,"title":{},"body":{"classes/FourDQuery.html":{}}}],["issubtable(field",{"_index":1361,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["it'",{"_index":1261,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["item",{"_index":103,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["item.class",{"_index":1025,"title":{},"body":{"classes/FourDQuery.html":{}}}],["item.length",{"_index":2053,"title":{},"body":{"components/WebAppContainer.html":{}}}],["item.paramet",{"_index":1026,"title":{},"body":{"classes/FourDQuery.html":{}}}],["item.selector",{"_index":1027,"title":{},"body":{"classes/FourDQuery.html":{}}}],["item[1",{"_index":2055,"title":{},"body":{"components/WebAppContainer.html":{}}}],["itemslist",{"_index":1398,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["it’",{"_index":2019,"title":{},"body":{"classes/Utf8.html":{}}}],["j",{"_index":1074,"title":{},"body":{"classes/FourDQuery.html":{}}}],["join",{"_index":812,"title":{},"body":{"classes/FourDQuery.html":{}}}],["joinfk",{"_index":813,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["joinpk",{"_index":814,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["jointabl",{"_index":815,"title":{},"body":{"classes/FourDQuery.html":{}}}],["jpeg",{"_index":404,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["jqueri",{"_index":2141,"title":{},"body":{"dependencies.html":{}}}],["js44d",{"_index":1082,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["js44d';they",{"_index":2173,"title":{},"body":{"index.html":{}}}],["js44d';you",{"_index":2176,"title":{},"body":{"index.html":{}}}],["js44d/jsfourdcollect",{"_index":807,"title":{},"body":{"modules/FourDModule.html":{}}}],["js44d/jsfourdinterfac",{"_index":205,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["js44d/jsfourdmodel",{"_index":806,"title":{},"body":{"modules/FourDModule.html":{},"components/RecordEditWindow.html":{}}}],["js44dmodul",{"_index":1365,"title":{"modules/JS44DModule.html":{}},"body":{"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsfourdcollect",{"_index":1148,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["jsfourdinterfac",{"_index":687,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["jsfourdmodel",{"_index":688,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json",{"_index":643,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.parse(atob(this.urlsearchparms['key",{"_index":2063,"title":{},"body":{"components/WebAppContainer.html":{}}}],["json.parse(localstorage.getitem(tablenam",{"_index":1890,"title":{},"body":{"components/RecordList.html":{}}}],["json.parse(recorddata[field",{"_index":1307,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(collist",{"_index":719,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.stringify(error",{"_index":989,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["json.stringify(queri",{"_index":735,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json.stringify(recorddata",{"_index":1236,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(savedsearch",{"_index":1894,"title":{},"body":{"components/RecordList.html":{}}}],["json.stringify(savedset",{"_index":1922,"title":{},"body":{"components/RecordList.html":{}}}],["julio",{"_index":2217,"title":{},"body":{"index.html":{},"license.html":{}}}],["keep",{"_index":1165,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["kendo.prompt('pleas",{"_index":1897,"title":{},"body":{"components/RecordList.html":{}}}],["kendo.ui.progress($(this.elementref.nativeel",{"_index":1857,"title":{},"body":{"components/RecordList.html":{}}}],["kendodialog",{"_index":570,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["kendoui",{"_index":2206,"title":{},"body":{"index.html":{}}}],["key",{"_index":608,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.password",{"_index":2065,"title":{},"body":{"components/WebAppContainer.html":{}}}],["keyboard",{"_index":607,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["kind",{"_index":2246,"title":{},"body":{"license.html":{}}}],["last",{"_index":246,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["latest",{"_index":682,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["latin1",{"_index":381,"title":{},"body":{"classes/Base64.html":{}}}],["left",{"_index":55,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["left:5px",{"_index":446,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["legend",{"_index":254,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["length",{"_index":351,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["less",{"_index":110,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lesslin",{"_index":123,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lest",{"_index":1260,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["let'",{"_index":706,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["level",{"_index":1010,"title":{},"body":{"classes/FourDQuery.html":{}}}],["lg",{"_index":1614,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["li",{"_index":24,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["li:hov",{"_index":38,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["liabil",{"_index":2257,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2254,"title":{},"body":{"license.html":{}}}],["librari",{"_index":2146,"title":{},"body":{"index.html":{}}}],["licens",{"_index":2219,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":2231,"title":{},"body":{"license.html":{}}}],["line",{"_index":242,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"index.html":{}}}],["linear",{"_index":82,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["link",{"_index":830,"title":{},"body":{"classes/FourDQuery.html":{}}}],["list",{"_index":53,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["list'},{'nam",{"_index":286,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["listitem",{"_index":1001,"title":{},"body":{"classes/FourDQuery.html":{}}}],["listnam",{"_index":771,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{}}}],["listoffield",{"_index":157,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["listopt",{"_index":772,"title":{},"body":{"components/FourDDropDown.html":{}}}],["listselectordialog",{"_index":269,"title":{"components/ListSelectorDialog.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["listselectordialog.dialogconfig",{"_index":1446,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listvalu",{"_index":996,"title":{},"body":{"classes/FourDQuery.html":{}}}],["load",{"_index":685,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["loadlistfrom4d",{"_index":770,"title":{},"body":{"components/FourDDropDown.html":{}}}],["loadvaluefrom4d",{"_index":1087,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["local",{"_index":760,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["localstorage.setitem(tablenam",{"_index":1893,"title":{},"body":{"components/RecordList.html":{}}}],["log",{"_index":272,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["login",{"_index":1453,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["login/login",{"_index":1387,"title":{},"body":{"modules/JS44DModule.html":{},"components/WebAppContainer.html":{}}}],["logincmp",{"_index":271,"title":{"components/LoginCmp.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["logincmp.dialogconfig",{"_index":2059,"title":{},"body":{"components/WebAppContainer.html":{}}}],["long",{"_index":1143,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["longnam",{"_index":702,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["look",{"_index":2185,"title":{},"body":{"index.html":{}}}],["loop",{"_index":389,"title":{},"body":{"classes/Base64.html":{}}}],["ls",{"_index":1627,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["lt;table.field",{"_index":721,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["made",{"_index":2187,"title":{},"body":{"index.html":{}}}],["main",{"_index":17,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["make",{"_index":48,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{}}}],["makevalid",{"_index":1586,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid(config",{"_index":1588,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["manag",{"_index":436,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["managesearch",{"_index":1915,"title":{},"body":{"components/RecordList.html":{}}}],["manageset",{"_index":1920,"title":{},"body":{"components/RecordList.html":{}}}],["mani",{"_index":1138,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["map",{"_index":1160,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["margin",{"_index":31,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["margin:0px",{"_index":20,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["mark",{"_index":1185,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["master",{"_index":1591,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["match",{"_index":300,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["may/15/09",{"_index":1221,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["md5",{"_index":970,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"coverage.html":{}}}],["md5.cmn((b",{"_index":1055,"title":{},"body":{"classes/FourDQuery.html":{}}}],["md5.cmn(b",{"_index":1058,"title":{},"body":{"classes/FourDQuery.html":{}}}],["md5.cmn(c",{"_index":1060,"title":{},"body":{"classes/FourDQuery.html":{}}}],["md5.hex_chr[(n",{"_index":1077,"title":{},"body":{"classes/FourDQuery.html":{}}}],["md5.md5(this.password",{"_index":1491,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5.md5(valu",{"_index":870,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["md5.md5cycle(st",{"_index":1072,"title":{},"body":{"classes/FourDQuery.html":{}}}],["md51(",{"_index":1061,"title":{},"body":{"classes/FourDQuery.html":{}}}],["md5pwd",{"_index":1490,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5pwd.touppercas",{"_index":1493,"title":{},"body":{"components/LoginCmp.html":{}}}],["mdi",{"_index":2170,"title":{},"body":{"index.html":{}}}],["me.clearrecorddirtyflag",{"_index":1290,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.primarykey_",{"_index":1287,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.recordnumb",{"_index":1266,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.refresh().then((rec",{"_index":1268,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me[me.primarykey_",{"_index":1288,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["menu",{"_index":1785,"title":{},"body":{"components/RecordList.html":{}}}],["merchant",{"_index":2248,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2232,"title":{},"body":{"license.html":{}}}],["messag",{"_index":310,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["method",{"_index":120,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["microsyntaxes.html#spac",{"_index":333,"title":{},"body":{"classes/Base64.html":{}}}],["minheight",{"_index":1584,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["minwidth",{"_index":1585,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["miscellan",{"_index":2270,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":2220,"title":{},"body":{"license.html":{}}}],["mm",{"_index":1176,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["modal",{"_index":275,"title":{"injectables/Modal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["modal.hostviewref",{"_index":1555,"title":{},"body":{"injectables/Modal.html":{}}}],["modal.opendialoglist.push",{"_index":1573,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/commonmodals/okonlymod",{"_index":1655,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/okonlymodal.t",{"_index":1658,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["modal/commonmodals/okonlymodal.ts:10",{"_index":1661,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:12",{"_index":1666,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:13",{"_index":1664,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:14",{"_index":1665,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:33",{"_index":1680,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:34",{"_index":1679,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:36",{"_index":1681,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:40",{"_index":1677,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:45",{"_index":1678,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/yesnomod",{"_index":1656,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/yesnomodal.t",{"_index":2070,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["modal/commonmodals/yesnomodal.ts:11",{"_index":2084,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:13",{"_index":2088,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:14",{"_index":2085,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:15",{"_index":2086,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:16",{"_index":2089,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:17",{"_index":2087,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:37",{"_index":2078,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:38",{"_index":2077,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:40",{"_index":2079,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:44",{"_index":2073,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:50",{"_index":2075,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:55",{"_index":2074,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/models/icustommod",{"_index":202,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{}}}],["modal/models/icustommodal.t",{"_index":1120,"title":{},"body":{"classes/ICustomModal.html":{},"coverage.html":{}}}],["modal/models/icustommodalcompon",{"_index":203,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/icustommodalcomponent.t",{"_index":1122,"title":{},"body":{"classes/ICustomModalComponent.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent.ts:13",{"_index":1127,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:18",{"_index":1126,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:8",{"_index":1125,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/modalconfig",{"_index":204,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{}}}],["modal/models/modalconfig.t",{"_index":1579,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/models/modalconfig.ts:17",{"_index":1613,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:24",{"_index":1593,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:31",{"_index":1595,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:39",{"_index":1600,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:41",{"_index":1616,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:42",{"_index":1610,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:44",{"_index":1594,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:45",{"_index":1609,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:47",{"_index":1611,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:49",{"_index":1612,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:51",{"_index":1598,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:53",{"_index":1597,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:55",{"_index":1599,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:57",{"_index":1615,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:59",{"_index":1592,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:67",{"_index":1589,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:86",{"_index":1587,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modaldialoginst",{"_index":200,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/modaldialoginstance.t",{"_index":550,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["modal/models/modaldialoginstance.ts:22",{"_index":1640,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:24",{"_index":1642,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:28",{"_index":1641,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:30",{"_index":1639,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:31",{"_index":1638,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:32",{"_index":1633,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:38",{"_index":1644,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:41",{"_index":1646,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:49",{"_index":1648,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:56",{"_index":1637,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:6",{"_index":555,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:64",{"_index":1634,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:7",{"_index":556,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:8",{"_index":554,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:82",{"_index":1635,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:91",{"_index":1636,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/providers/mod",{"_index":1429,"title":{},"body":{"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["modal/providers/modal.t",{"_index":1502,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/providers/modal.ts:121",{"_index":1516,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:143",{"_index":1532,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:20",{"_index":1536,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:21",{"_index":1537,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:23",{"_index":1513,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:43",{"_index":1520,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:63",{"_index":1535,"title":{},"body":{"injectables/Modal.html":{}}}],["modalconfig",{"_index":177,"title":{"injectables/ModalConfig.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalconfig.makevalid(defaultconfig",{"_index":1544,"title":{},"body":{"injectables/Modal.html":{}}}],["modaldialoginst",{"_index":138,"title":{"injectables/ModalDialogInstance.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmodul",{"_index":1649,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mode",{"_index":1197,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["model",{"_index":633,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["modelcontentdata",{"_index":134,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{}}}],["modelcontentdata(parm",{"_index":1483,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modelcontentdata(v",{"_index":1436,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["modeldef",{"_index":695,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["models/icustommod",{"_index":1667,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/icustommodalcompon",{"_index":1668,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/modalconfig",{"_index":1538,"title":{},"body":{"injectables/Modal.html":{}}}],["models/modaldialoginst",{"_index":1128,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modifi",{"_index":890,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{},"license.html":{}}}],["modul",{"_index":791,"title":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"modules.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":109,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["morelin",{"_index":124,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["moz",{"_index":84,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["multicolumn",{"_index":463,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["multipl",{"_index":825,"title":{},"body":{"classes/FourDQuery.html":{},"injectables/Modal.html":{},"index.html":{}}}],["n",{"_index":1062,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["name",{"_index":142,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["nativ",{"_index":315,"title":{},"body":{"classes/Base64.html":{}}}],["nativescript",{"_index":2184,"title":{},"body":{"index.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["need",{"_index":370,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["new",{"_index":241,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{}}}],["newmodel",{"_index":729,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["newmodel.clearrecorddirtyflag",{"_index":750,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.populatemodeldata(record",{"_index":749,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.primarykey_",{"_index":1884,"title":{},"body":{"components/RecordList.html":{}}}],["newmodel.tablenam",{"_index":731,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["next",{"_index":58,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ng2",{"_index":1570,"title":{},"body":{"injectables/Modal.html":{}}}],["ngaftercontentinit",{"_index":1758,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["ngafterviewinit",{"_index":125,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["ngmodul",{"_index":802,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["noaudit",{"_index":1199,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["non",{"_index":1222,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["none",{"_index":54,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["none')?'block':'non",{"_index":517,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["noninfring",{"_index":2251,"title":{},"body":{"license.html":{}}}],["nope",{"_index":705,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["note",{"_index":311,"title":{},"body":{"classes/Base64.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["notext",{"_index":2082,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["notic",{"_index":2241,"title":{},"body":{"license.html":{}}}],["notif",{"_index":1605,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["nov",{"_index":1224,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["now",{"_index":985,"title":{},"body":{"classes/FourDQuery.html":{}}}],["npm",{"_index":2163,"title":{},"body":{"index.html":{}}}],["null",{"_index":593,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["null/undefin",{"_index":765,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["number",{"_index":190,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"classes/Utf8.html":{}}}],["numer",{"_index":1603,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["numofrecord",{"_index":652,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["o",{"_index":85,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["obj",{"_index":853,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["obj.hasownproperty(p",{"_index":856,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":105,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":846,"title":{},"body":{"classes/FourDQuery.html":{}}}],["obtain",{"_index":2212,"title":{},"body":{"index.html":{},"license.html":{}}}],["occurr",{"_index":1530,"title":{},"body":{"injectables/Modal.html":{}}}],["ok",{"_index":1284,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["ok($ev",{"_index":1409,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["okonlycont",{"_index":1657,"title":{"classes/OKOnlyContent.html":{}},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["okonlymod",{"_index":274,"title":{"components/OKOnlyModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["oktext",{"_index":1659,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["on",{"_index":47,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"index.html":{}}}],["onc",{"_index":1542,"title":{},"body":{"injectables/Modal.html":{}}}],["oninit",{"_index":1428,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["onres",{"_index":1851,"title":{},"body":{"components/RecordList.html":{}}}],["opacity:0",{"_index":62,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["opacity:1",{"_index":52,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["open",{"_index":567,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"index.html":{}}}],["open(componenttyp",{"_index":1517,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog",{"_index":1507,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog(compon",{"_index":1531,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialoglist",{"_index":1504,"title":{},"body":{"injectables/Modal.html":{}}}],["openinsid",{"_index":1508,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside(componenttyp",{"_index":1533,"title":{},"body":{"injectables/Modal.html":{}}}],["openstateicon",{"_index":486,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["oper",{"_index":666,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["optim",{"_index":343,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["option",{"_index":144,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["options.head",{"_index":950,"title":{},"body":{"classes/FourDQuery.html":{}}}],["order",{"_index":661,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["orderbi",{"_index":634,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["originalvalu",{"_index":1085,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["otherwis",{"_index":2261,"title":{},"body":{"license.html":{}}}],["out",{"_index":799,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":366,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["outsid",{"_index":380,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["overview",{"_index":2267,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":855,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":2138,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":57,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["padding:5px",{"_index":27,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["page",{"_index":659,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["param",{"_index":692,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["paramet",{"_index":141,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["parametervalu",{"_index":1091,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["parm",{"_index":1482,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["parms.hasownproperty('vers",{"_index":1484,"title":{},"body":{"components/LoginCmp.html":{}}}],["parms['vers",{"_index":1486,"title":{},"body":{"components/LoginCmp.html":{}}}],["pars",{"_index":2050,"title":{},"body":{"components/WebAppContainer.html":{}}}],["part",{"_index":2214,"title":{},"body":{"index.html":{}}}],["particular",{"_index":2249,"title":{},"body":{"license.html":{}}}],["pascal'",{"_index":2147,"title":{},"body":{"index.html":{}}}],["pass",{"_index":1524,"title":{},"body":{"injectables/Modal.html":{}}}],["password",{"_index":885,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"index.html":{}}}],["payload",{"_index":926,"title":{},"body":{"classes/FourDQuery.html":{}}}],["peer",{"_index":2139,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":820,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["permiss",{"_index":2223,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2237,"title":{},"body":{"license.html":{}}}],["person",{"_index":2228,"title":{},"body":{"license.html":{}}}],["pictur",{"_index":108,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["pipe",{"_index":397,"title":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":415,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pipes/base64imageref.pip",{"_index":1389,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipes/fourddatetostring.pip",{"_index":1390,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipetransform",{"_index":406,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pk",{"_index":1883,"title":{},"body":{"components/RecordList.html":{}}}],["pkfield",{"_index":1923,"title":{},"body":{"components/RecordList.html":{}}}],["plan",{"_index":2177,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":1461,"title":{},"body":{"components/LoginCmp.html":{}}}],["point",{"_index":931,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["popul",{"_index":626,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populatemodeldata(recorddata",{"_index":1301,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["portion",{"_index":2244,"title":{},"body":{"license.html":{}}}],["posit",{"_index":63,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/ModalConfig.html":{}}}],["position:absolut",{"_index":452,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["position:rel",{"_index":22,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["possibl",{"_index":1147,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["post",{"_index":864,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["predefin",{"_index":2069,"title":{},"body":{"components/WebAppContainer.html":{}}}],["prepar",{"_index":642,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["present",{"_index":2194,"title":{},"body":{"index.html":{}}}],["press",{"_index":605,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["previou",{"_index":976,"title":{},"body":{"classes/FourDQuery.html":{},"components/RecordList.html":{}}}],["previousqueri",{"_index":1874,"title":{},"body":{"components/RecordList.html":{}}}],["primari",{"_index":835,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["primarykey_",{"_index":1155,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["privat",{"_index":112,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["privileg",{"_index":881,"title":{},"body":{"classes/FourDQuery.html":{}}}],["procedur",{"_index":2161,"title":{},"body":{"index.html":{}}}],["process",{"_index":1314,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["programmat",{"_index":1326,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["progress",{"_index":1858,"title":{},"body":{"components/RecordList.html":{}}}],["promis",{"_index":551,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise((resolv",{"_index":563,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{}}}],["promiselik",{"_index":560,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promisewrapper.complet",{"_index":579,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise|any|*|promis",{"_index":586,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["properti",{"_index":111,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["proprieti",{"_index":1216,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["provid",{"_index":625,"title":{},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["proxi",{"_index":961,"title":{},"body":{"classes/FourDQuery.html":{}}}],["proxyurlthru4d(url",{"_index":966,"title":{},"body":{"classes/FourDQuery.html":{}}}],["public",{"_index":114,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["publish",{"_index":2233,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":2250,"title":{},"body":{"license.html":{}}}],["pwd",{"_index":969,"title":{},"body":{"classes/FourDQuery.html":{}}}],["qbe",{"_index":455,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["qff",{"_index":457,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queri",{"_index":15,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["query'},{'nam",{"_index":261,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["query0",{"_index":152,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryaddrecord",{"_index":481,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryband",{"_index":277,"title":{"components/QueryBand.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["queryband'",{"_index":480,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querybanddirect",{"_index":297,"title":{"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["querybandisopen",{"_index":490,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querydeleterecord",{"_index":483,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["queryeditrecord",{"_index":482,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryexportgrid",{"_index":478,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfield",{"_index":165,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.field",{"_index":221,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffield",{"_index":252,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields[event.target.selectedindex",{"_index":222,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.nam",{"_index":223,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.queryt",{"_index":247,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfieldlist",{"_index":131,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfromfil",{"_index":475,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfromqb",{"_index":474,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryid",{"_index":237,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryitem",{"_index":227,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["queryitems.push(tablenam",{"_index":1925,"title":{},"body":{"components/RecordList.html":{}}}],["queryitems.push(thefield.longnam",{"_index":233,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querymanageset",{"_index":479,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryrefresh",{"_index":476,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querysortgrid",{"_index":477,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querystr",{"_index":635,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["queryt",{"_index":156,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["quick",{"_index":2159,"title":{},"body":{"index.html":{}}}],["quickfind",{"_index":280,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["quickfindinput",{"_index":279,"title":{"components/QuickFindInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["radiu",{"_index":449,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["rang",{"_index":382,"title":{},"body":{"classes/Base64.html":{}}}],["raquo",{"_index":100,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["read",{"_index":1145,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["readcontinuationbyt",{"_index":1958,"title":{},"body":{"classes/Utf8.html":{}}}],["readonli",{"_index":1132,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["realli",{"_index":1867,"title":{},"body":{"components/RecordList.html":{}}}],["reason",{"_index":561,"title":{},"body":{"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/ModalDialogInstance.html":{}}}],["rec.clearrecorddirtyflag",{"_index":1269,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["receiv",{"_index":878,"title":{},"body":{"classes/FourDQuery.html":{}}}],["reclist",{"_index":747,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["reclist.foreach(record",{"_index":748,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recnum",{"_index":1205,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["record",{"_index":282,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["record'",{"_index":1213,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["record(",{"_index":1783,"title":{},"body":{"components/RecordList.html":{}}}],["recorddata",{"_index":1203,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata.hasownproperty('_recnum",{"_index":1302,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['_recnum",{"_index":1303,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['field",{"_index":1215,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields'][field.longnam",{"_index":1231,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['noaudit",{"_index":1209,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['savecallback",{"_index":1208,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['timestamp",{"_index":1211,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata[field",{"_index":1306,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordeditwindow",{"_index":281,"title":{"components/RecordEditWindow.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordid",{"_index":1239,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordisdirti",{"_index":1331,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordlist",{"_index":285,"title":{"components/RecordList.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordnumb",{"_index":1237,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordnumber(v",{"_index":1323,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.foreach(id",{"_index":1924,"title":{},"body":{"components/RecordList.html":{}}}],["records.getrecords(queri",{"_index":1263,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.model",{"_index":1257,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models.length",{"_index":1265,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models[0].recordnumb",{"_index":1267,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordsav",{"_index":1872,"title":{},"body":{"components/RecordList.html":{}}}],["recordtojson(mod",{"_index":1202,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["refer",{"_index":2172,"title":{},"body":{"index.html":{}}}],["reference/import",{"_index":2175,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1262,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["refreshgrid",{"_index":1759,"title":{},"body":{"components/RecordList.html":{}}}],["refreshgrid(queri",{"_index":1791,"title":{},"body":{"components/RecordList.html":{}}}],["regex_space_charact",{"_index":305,"title":{},"body":{"classes/Base64.html":{}}}],["registri",{"_index":267,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reject",{"_index":552,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["reject('invalid",{"_index":988,"title":{},"body":{"classes/FourDQuery.html":{}}}],["reject('no",{"_index":1255,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject('recordnotfound",{"_index":1272,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(error",{"_index":754,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["reject(error.text",{"_index":1292,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(resultjson.returncod",{"_index":1291,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["relat",{"_index":90,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["relatedonet",{"_index":132,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relatedt",{"_index":101,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relatesto",{"_index":1133,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["remov",{"_index":245,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["render",{"_index":1523,"title":{},"body":{"injectables/Modal.html":{}}}],["repeat",{"_index":1457,"title":{},"body":{"components/LoginCmp.html":{}}}],["replac",{"_index":1549,"title":{},"body":{"injectables/Modal.html":{}}}],["replace(base64.regex_space_charact",{"_index":350,"title":{},"body":{"classes/Base64.html":{}}}],["replic",{"_index":1150,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["repres",{"_index":612,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["represent",{"_index":1196,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["request",{"_index":905,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["requir",{"_index":928,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":532,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"overview.html":{}}}],["resiz",{"_index":1771,"title":{},"body":{"components/RecordList.html":{}}}],["resolv",{"_index":553,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"injectables/ModalDialogInstance.html":{}}}],["resolve(body.registryvalu",{"_index":1033,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resolve(fourdinterface._listcache[listnam",{"_index":994,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resolve(fourdinterface.authent",{"_index":987,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resolve(item.registryvalu",{"_index":1028,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resolve(listvalu",{"_index":998,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resolve(m",{"_index":1270,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(record",{"_index":1312,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(result",{"_index":1320,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(resultjson.valu",{"_index":1016,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resolve(thi",{"_index":1254,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(this.model",{"_index":752,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["respons",{"_index":1006,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["responsetyp",{"_index":1004,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{}}}],["responsetype:'text",{"_index":898,"title":{},"body":{"classes/FourDQuery.html":{}}}],["rest_authent",{"_index":2192,"title":{},"body":{"index.html":{}}}],["rest_getrecord",{"_index":2204,"title":{},"body":{"index.html":{}}}],["rest_proxyhttpget",{"_index":960,"title":{},"body":{"classes/FourDQuery.html":{}}}],["restapi",{"_index":809,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["restor",{"_index":432,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["restoreset",{"_index":1760,"title":{},"body":{"components/RecordList.html":{}}}],["restoreset(record",{"_index":1795,"title":{},"body":{"components/RecordList.html":{}}}],["restrict",{"_index":2230,"title":{},"body":{"license.html":{}}}],["result",{"_index":299,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.queri",{"_index":1881,"title":{},"body":{"components/RecordList.html":{}}}],["result.query.length",{"_index":1878,"title":{},"body":{"components/RecordList.html":{}}}],["result.queryfield",{"_index":1879,"title":{},"body":{"components/RecordList.html":{}}}],["resultjson",{"_index":744,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{}}}],["resultjson.fieldlist",{"_index":253,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["resultjson.returncod",{"_index":1283,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson.sess",{"_index":982,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resultjson.session.key",{"_index":984,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resultjson.session.options._userid",{"_index":983,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resultjson.valid",{"_index":981,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resultjson.valu",{"_index":997,"title":{},"body":{"classes/FourDQuery.html":{}}}],["resultjson['_recnum",{"_index":1286,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['record",{"_index":746,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resultjson['recordid",{"_index":1289,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['select",{"_index":745,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["ret",{"_index":1189,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["retriev",{"_index":645,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["return",{"_index":162,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returna",{"_index":1360,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reus",{"_index":429,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["right",{"_index":489,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"license.html":{}}}],["right:20px",{"_index":453,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["row",{"_index":1775,"title":{},"body":{"components/RecordList.html":{}}}],["rowid",{"_index":1322,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["run",{"_index":908,"title":{},"body":{"classes/FourDQuery.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["runninginsideworkspac",{"_index":911,"title":{},"body":{"classes/FourDQuery.html":{}}}],["runquickfind",{"_index":1726,"title":{},"body":{"components/QuickFindInput.html":{}}}],["rxj",{"_index":847,"title":{},"body":{"classes/FourDQuery.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":1733,"title":{},"body":{"components/QuickFindInput.html":{}}}],["s",{"_index":1053,"title":{},"body":{"classes/FourDQuery.html":{}}}],["s.charcodeat(i",{"_index":1069,"title":{},"body":{"classes/FourDQuery.html":{}}}],["s.length",{"_index":1063,"title":{},"body":{"classes/FourDQuery.html":{}}}],["saferesourceurl",{"_index":405,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["same",{"_index":1525,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["sanit",{"_index":418,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["save",{"_index":430,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["save/load",{"_index":459,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["savedsearch",{"_index":1886,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.foreach(el",{"_index":1917,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.push",{"_index":1892,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.splice(result",{"_index":1919,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches[result].search",{"_index":1906,"title":{},"body":{"components/RecordList.html":{}}}],["savedset",{"_index":1887,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.foreach(el",{"_index":1908,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.splice(result",{"_index":1921,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets[result].set",{"_index":1912,"title":{},"body":{"components/RecordList.html":{}}}],["saverecord",{"_index":1737,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["saveset",{"_index":1895,"title":{},"body":{"components/RecordList.html":{}}}],["saveusag",{"_index":2164,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1521,"title":{},"body":{"injectables/Modal.html":{}}}],["search",{"_index":431,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["searches/set",{"_index":460,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searchlist",{"_index":1916,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.length",{"_index":1903,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.push(element.nam",{"_index":1902,"title":{},"body":{"components/RecordList.html":{}}}],["searchnam",{"_index":1889,"title":{},"body":{"components/RecordList.html":{}}}],["see",{"_index":707,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["select",{"_index":225,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["selectedindex",{"_index":1395,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["selectedrecord",{"_index":1767,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrecords():array",{"_index":1814,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrow",{"_index":1819,"title":{},"body":{"components/RecordList.html":{}}}],["selectedvalu",{"_index":773,"title":{},"body":{"components/FourDDropDown.html":{}}}],["selectfield",{"_index":126,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selectfield(ev",{"_index":170,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selecthighlit",{"_index":1888,"title":{},"body":{"components/RecordList.html":{}}}],["selectlist",{"_index":1769,"title":{},"body":{"components/RecordList.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["selector'},{'nam",{"_index":270,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["selectorvalu",{"_index":1092,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["selecttab",{"_index":1944,"title":{},"body":{"components/Tabs.html":{}}}],["selecttab(ev",{"_index":1933,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selectthistab",{"_index":1945,"title":{},"body":{"components/Tabs.html":{}}}],["selectthistab(tab",{"_index":1935,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selfcent",{"_index":180,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["sell",{"_index":2236,"title":{},"body":{"license.html":{}}}],["send",{"_index":644,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["sent",{"_index":822,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["separ",{"_index":2171,"title":{},"body":{"index.html":{}}}],["sequenc",{"_index":1998,"title":{},"body":{"classes/Utf8.html":{}}}],["seri",{"_index":2150,"title":{},"body":{"index.html":{}}}],["serial",{"_index":1195,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["serv",{"_index":2155,"title":{},"body":{"index.html":{}}}],["server",{"_index":887,"title":{},"body":{"classes/FourDQuery.html":{}}}],["servic",{"_index":674,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"index.html":{}}}],["service/compon",{"_index":2157,"title":{},"body":{"index.html":{}}}],["session",{"_index":880,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["sessionkey",{"_index":906,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["set",{"_index":433,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["set(field",{"_index":1171,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["setbackdropref(valu",{"_index":1643,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setbootstrapref(valu",{"_index":1645,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setheight(v",{"_index":1421,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setlist",{"_index":1907,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.length",{"_index":1910,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.push(element.nam",{"_index":1909,"title":{},"body":{"components/RecordList.html":{}}}],["setmodelcontentdata(parm",{"_index":1480,"title":{},"body":{"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["setmodelcontentdata(v",{"_index":193,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["setnam",{"_index":1900,"title":{},"body":{"components/RecordList.html":{}}}],["setregistryvalue(theclass",{"_index":1035,"title":{},"body":{"classes/FourDQuery.html":{}}}],["settitl",{"_index":1630,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["settitle(titl",{"_index":588,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["settitle(v",{"_index":1425,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setwidth(v",{"_index":1423,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["shadow:1px",{"_index":71,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["shall",{"_index":2242,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1970,"title":{},"body":{"classes/Utf8.html":{}}}],["show",{"_index":1397,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"index.html":{}}}],["show(list",{"_index":1411,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["showadvancedqueri",{"_index":1761,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow",{"_index":1762,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow(mod",{"_index":1798,"title":{},"body":{"components/RecordList.html":{}}}],["showerror",{"_index":1467,"title":{},"body":{"components/LoginCmp.html":{}}}],["showlogindialog",{"_index":2034,"title":{},"body":{"components/WebAppContainer.html":{}}}],["showrelatedt",{"_index":127,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["showrelatedtable(ev",{"_index":173,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["side",{"_index":843,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["sign",{"_index":913,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["sign'",{"_index":879,"title":{},"body":{"classes/FourDQuery.html":{}}}],["signin",{"_index":2191,"title":{},"body":{"index.html":{}}}],["signin(us",{"_index":972,"title":{},"body":{"classes/FourDQuery.html":{}}}],["similar",{"_index":839,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["simpl",{"_index":838,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["singl",{"_index":1009,"title":{},"body":{"classes/FourDQuery.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["singleton",{"_index":1541,"title":{},"body":{"injectables/Modal.html":{}}}],["size",{"_index":178,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["sm",{"_index":179,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["smooth",{"_index":77,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["softwar",{"_index":2229,"title":{},"body":{"license.html":{}}}],["solid",{"_index":97,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["someth",{"_index":2186,"title":{},"body":{"index.html":{}}}],["sorri",{"_index":1462,"title":{},"body":{"components/LoginCmp.html":{}}}],["sort",{"_index":464,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["spec\\.t",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":371,"title":{},"body":{"classes/Base64.html":{}}}],["specif",{"_index":573,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["specifi",{"_index":1240,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sql",{"_index":816,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/.../jsfourdinterface.t",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modal.t",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modalconfig.t",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/angular2",{"_index":549,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/main.scss",{"_index":2183,"title":{},"body":{"index.html":{}}}],["src/containers/advancedquery.t",{"_index":8,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"coverage.html":{}}}],["src/containers/advancedquery.ts:152",{"_index":189,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:162",{"_index":150,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:163",{"_index":148,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:164",{"_index":159,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:165",{"_index":160,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:167",{"_index":175,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:168",{"_index":191,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:169",{"_index":192,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:171",{"_index":194,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:190",{"_index":140,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:192",{"_index":176,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:195",{"_index":169,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:202",{"_index":171,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:210",{"_index":166,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:214",{"_index":161,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:226",{"_index":168,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:234",{"_index":167,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:241",{"_index":174,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/queryband.t",{"_index":419,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"coverage.html":{}}}],["src/containers/queryband.ts:10",{"_index":1724,"title":{},"body":{"directives/QueryBandDirective.html":{}}}],["src/containers/queryband.ts:104",{"_index":1694,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:109",{"_index":1695,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:114",{"_index":1689,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:119",{"_index":1696,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:124",{"_index":1692,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:129",{"_index":1688,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:134",{"_index":1687,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:139",{"_index":1691,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:144",{"_index":1690,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:149",{"_index":1686,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:154",{"_index":1702,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:155",{"_index":1701,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:156",{"_index":1704,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:157",{"_index":1705,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:158",{"_index":1700,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:160",{"_index":1703,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:165",{"_index":1697,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:166",{"_index":1699,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:167",{"_index":1698,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:172",{"_index":1721,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:174",{"_index":1722,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:176",{"_index":1720,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:181",{"_index":1685,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:187",{"_index":1718,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:192",{"_index":1717,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:222",{"_index":1712,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:226",{"_index":1713,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:230",{"_index":1719,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:234",{"_index":1711,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:239",{"_index":1714,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:243",{"_index":1715,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:247",{"_index":1707,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:257",{"_index":1710,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:261",{"_index":1706,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:265",{"_index":1709,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:269",{"_index":1708,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:273",{"_index":1716,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:99",{"_index":1693,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/recordeditwindow.t",{"_index":1736,"title":{},"body":{"components/RecordEditWindow.html":{},"coverage.html":{}}}],["src/containers/recordeditwindow.ts:15",{"_index":1738,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:18",{"_index":1740,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:21",{"_index":1741,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:25",{"_index":1739,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordlist.t",{"_index":1749,"title":{},"body":{"components/RecordList.html":{},"coverage.html":{}}}],["src/containers/recordlist.ts:115",{"_index":1781,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:125",{"_index":1792,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:134",{"_index":1779,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:142",{"_index":1801,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:149",{"_index":1799,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:177",{"_index":1782,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:190",{"_index":1787,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:197",{"_index":1797,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:214",{"_index":1784,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:25",{"_index":1772,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:30",{"_index":1778,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:342",{"_index":1796,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:35",{"_index":1808,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:36",{"_index":1810,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:41",{"_index":1812,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:57",{"_index":1805,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:59",{"_index":1806,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:60",{"_index":1770,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:71",{"_index":1789,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/tabs.t",{"_index":1926,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["src/containers/tabs.ts:18",{"_index":1949,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:20",{"_index":1947,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:27",{"_index":1948,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:33",{"_index":1946,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:51",{"_index":1931,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/tabs.ts:52",{"_index":1929,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/webappcontainer.t",{"_index":2030,"title":{},"body":{"components/WebAppContainer.html":{},"coverage.html":{}}}],["src/containers/webappcontainer.ts:17",{"_index":2038,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:19",{"_index":2039,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:21",{"_index":2037,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:23",{"_index":2042,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:38",{"_index":2041,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:48",{"_index":2040,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/controls/fourddropdown.t",{"_index":766,"title":{},"body":{"components/FourDDropDown.html":{},"coverage.html":{}}}],["src/controls/fourddropdown.ts:26",{"_index":775,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:27",{"_index":776,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:28",{"_index":774,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:32",{"_index":780,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:42",{"_index":778,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:46",{"_index":779,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourdregistryinput.t",{"_index":1083,"title":{},"body":{"components/FourDRegistryInput.html":{},"coverage.html":{}}}],["src/controls/fourdregistryinput.ts:19",{"_index":1094,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:20",{"_index":1097,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:21",{"_index":1098,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:22",{"_index":1095,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:23",{"_index":1096,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:25",{"_index":1103,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:26",{"_index":1102,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:27",{"_index":1093,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:31",{"_index":1100,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:41",{"_index":1101,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:51",{"_index":1099,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/quickfindinput.t",{"_index":1725,"title":{},"body":{"components/QuickFindInput.html":{},"coverage.html":{}}}],["src/controls/quickfindinput.ts:16",{"_index":1729,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:17",{"_index":1730,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:18",{"_index":1727,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/datagrid/datagrid.t",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["src/dialogs/listselectordialog.t",{"_index":1392,"title":{},"body":{"components/ListSelectorDialog.html":{},"coverage.html":{}}}],["src/dialogs/listselectordialog.ts:25",{"_index":1420,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:35",{"_index":1403,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:36",{"_index":1405,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:37",{"_index":1402,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:38",{"_index":1404,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:40",{"_index":1422,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:41",{"_index":1424,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:42",{"_index":1426,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:45",{"_index":1427,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:52",{"_index":1416,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:54",{"_index":1401,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:57",{"_index":1417,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:64",{"_index":1414,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:70",{"_index":1407,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:74",{"_index":1410,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/fourd.module.t",{"_index":800,"title":{},"body":{"modules/FourDModule.html":{}}}],["src/js44d.module.t",{"_index":1371,"title":{},"body":{"modules/JS44DModule.html":{}}}],["src/js44d/base64.t",{"_index":302,"title":{},"body":{"classes/Base64.html":{},"coverage.html":{}}}],["src/js44d/base64.ts:12",{"_index":320,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:18",{"_index":327,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:20",{"_index":325,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:26",{"_index":329,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:64",{"_index":331,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:8",{"_index":322,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/jsfourdcollection.t",{"_index":621,"title":{},"body":{"injectables/FourDCollection.html":{},"coverage.html":{}}}],["src/js44d/jsfourdcollection.ts:103",{"_index":654,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:160",{"_index":684,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:18",{"_index":675,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:20",{"_index":676,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:22",{"_index":677,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:24",{"_index":678,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:26",{"_index":672,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:29",{"_index":668,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:32",{"_index":670,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:34",{"_index":679,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:37",{"_index":639,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:54",{"_index":641,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdinterface.t",{"_index":808,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/js44d/jsfourdinterface.ts:664",{"_index":837,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:666",{"_index":842,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:668",{"_index":844,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:670",{"_index":824,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:672",{"_index":818,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:674",{"_index":826,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:676",{"_index":836,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:678",{"_index":834,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:680",{"_index":832,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdmodel.t",{"_index":1130,"title":{},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["src/js44d/utf8.t",{"_index":1950,"title":{},"body":{"classes/Utf8.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts:102",{"_index":1975,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:118",{"_index":1972,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:181",{"_index":1963,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:182",{"_index":1964,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:183",{"_index":1965,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:185",{"_index":1981,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:34",{"_index":1979,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:51",{"_index":1967,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:61",{"_index":1971,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:65",{"_index":1974,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:7",{"_index":1977,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:87",{"_index":1984,"title":{},"body":{"classes/Utf8.html":{}}}],["src/login/login.t",{"_index":1452,"title":{},"body":{"components/LoginCmp.html":{},"coverage.html":{}}}],["src/login/login.ts:45",{"_index":1479,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:55",{"_index":1472,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:56",{"_index":1470,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:57",{"_index":1471,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:58",{"_index":1469,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:59",{"_index":1474,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:62",{"_index":1481,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:68",{"_index":1468,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:70",{"_index":1476,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:77",{"_index":1475,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/modal.module.t",{"_index":1654,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/pipes/base64imageref.pipe.t",{"_index":399,"title":{},"body":{"pipes/Base64ImageRef.html":{},"coverage.html":{}}}],["src/pipes/base64imageref.pipe.ts:13",{"_index":403,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["src/pipes/fourddatetostring.pipe.t",{"_index":757,"title":{},"body":{"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["src/pipes/fourddatetostring.pipe.ts:11",{"_index":758,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["src/test.t",{"_index":2135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":1178,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["standalon",{"_index":909,"title":{},"body":{"classes/FourDQuery.html":{}}}],["standard",{"_index":340,"title":{},"body":{"classes/Base64.html":{}}}],["start",{"_index":658,"title":{"index.html":{},"license.html":{}},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["startrec",{"_index":651,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["state",{"_index":571,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["statement",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":116,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"classes/Utf8.html":{},"index.html":{}}}],["stay",{"_index":59,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["step",{"_index":2160,"title":{},"body":{"index.html":{}}}],["str",{"_index":854,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["str.join",{"_index":859,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["str.push(encodeuricomponent(p",{"_index":857,"title":{},"body":{"classes/FourDQuery.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":153,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string(input",{"_index":349,"title":{},"body":{"classes/Base64.html":{}}}],["string.fromcharcode(((codepoint",{"_index":2001,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode((codepoint",{"_index":2009,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(codepoint",{"_index":1999,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(valu",{"_index":1993,"title":{},"body":{"classes/Utf8.html":{}}}],["string.length",{"_index":1988,"title":{},"body":{"classes/Utf8.html":{}}}],["stroke",{"_index":1604,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["strong",{"_index":89,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["structur",{"_index":1140,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["style",{"_index":4,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["styles.scss",{"_index":2181,"title":{},"body":{"index.html":{}}}],["sub",{"_index":1335,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.longnam",{"_index":1339,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.nam",{"_index":1338,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfield",{"_index":1334,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields.push",{"_index":1337,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subject",{"_index":2239,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2235,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":935,"title":{},"body":{"classes/FourDQuery.html":{},"components/RecordList.html":{}}}],["subscribe((v",{"_index":899,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{}}}],["subscribe(result",{"_index":1319,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subscribe(resultjson",{"_index":251,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["substanti",{"_index":2243,"title":{},"body":{"license.html":{}}}],["subtabl",{"_index":1134,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["successfulli",{"_index":912,"title":{},"body":{"classes/FourDQuery.html":{}}}],["support",{"_index":2264,"title":{},"body":{"modules.html":{}}}],["suppos",{"_index":377,"title":{},"body":{"classes/Base64.html":{}}}],["sure",{"_index":387,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["surrog",{"_index":376,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["svg",{"_index":2265,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":499,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["switchstat",{"_index":494,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["symbol",{"_index":374,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["t",{"_index":559,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"injectables/ModalDialogInstance.html":{}}}],["t\\n\\f\\r",{"_index":323,"title":{},"body":{"classes/Base64.html":{}}}],["tab",{"_index":287,"title":{"components/Tab.html":{},"components/Tabs.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["tab'},{'nam",{"_index":288,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tab.act",{"_index":1938,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tab.titl",{"_index":1932,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tabitem.act",{"_index":1937,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tabl",{"_index":306,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{}}}],["table'",{"_index":1151,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["table.field",{"_index":664,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["tablenam",{"_index":250,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["tablenumb",{"_index":1154,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["tabs'},{'nam",{"_index":289,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tabs.addtab(thi",{"_index":1942,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tail",{"_index":1073,"title":{},"body":{"classes/FourDQuery.html":{}}}],["take",{"_index":2203,"title":{},"body":{"index.html":{}}}],["taken",{"_index":1985,"title":{},"body":{"classes/Utf8.html":{}}}],["teh",{"_index":1793,"title":{},"body":{"components/RecordList.html":{}}}],["templat",{"_index":99,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["term",{"_index":828,"title":{},"body":{"classes/FourDQuery.html":{}}}],["text",{"_index":1005,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{}}}],["text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8",{"_index":947,"title":{},"body":{"classes/FourDQuery.html":{}}}],["textvalu",{"_index":1086,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["theclass",{"_index":1017,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thecustomqueri",{"_index":427,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thedat",{"_index":1038,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thedate.gethour",{"_index":1051,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thedate.substr(0,4)+'/'+thedate.substr(4,2)+'/'+thedate.substr(6,2",{"_index":1045,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thedate.tojson().substr(0",{"_index":1040,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thedefaultvalu",{"_index":1020,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thedialog",{"_index":1505,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginst",{"_index":1515,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance:modaldialoginst",{"_index":1575,"title":{},"body":{"injectables/Modal.html":{}}}],["thefield",{"_index":231,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["theform",{"_index":533,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform.length",{"_index":535,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform[0].reset",{"_index":536,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thegrid",{"_index":1754,"title":{},"body":{"components/RecordList.html":{}}}],["themodel",{"_index":697,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["themodel.getfieldproperties(col",{"_index":709,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["themodel.getfieldproperties(col.field",{"_index":715,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["then((authent",{"_index":1494,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["then((messag",{"_index":1869,"title":{},"body":{"components/RecordList.html":{}}}],["then((reclist",{"_index":1264,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["then((recnum",{"_index":1748,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["then((result",{"_index":1877,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["then((setnam",{"_index":1899,"title":{},"body":{"components/RecordList.html":{}}}],["then((valu",{"_index":788,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["then(result",{"_index":1862,"title":{},"body":{"components/RecordList.html":{}}}],["theparamet",{"_index":1018,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thequeryband",{"_index":493,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theselector",{"_index":1021,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thetime:str",{"_index":1050,"title":{},"body":{"classes/FourDQuery.html":{}}}],["thevalu",{"_index":1034,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this._attributes.hasownproperty(field",{"_index":1181,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._attributes[field",{"_index":1169,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._backdropref",{"_index":581,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._backdropref.destroy",{"_index":618,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref",{"_index":583,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref.destroy",{"_index":617,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._editwindowconfig",{"_index":1840,"title":{},"body":{"components/RecordList.html":{}}}],["this._modifi",{"_index":1330,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field",{"_index":1357,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field.nam",{"_index":1332,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified[field",{"_index":1184,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._previousadvancedqueri",{"_index":1846,"title":{},"body":{"components/RecordList.html":{}}}],["this._previousqueri",{"_index":1847,"title":{},"body":{"components/RecordList.html":{}}}],["this._recnum",{"_index":1309,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._resultdef",{"_index":578,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.promis",{"_index":587,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.reject",{"_index":615,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.resolve(result",{"_index":599,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.act",{"_index":1930,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.appref",{"_index":1556,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref.element.nativeelement.loc",{"_index":1552,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref['_rootcomponents'][0].loc",{"_index":1553,"title":{},"body":{"injectables/Modal.html":{}}}],["this.booleanvalu",{"_index":1117,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.booleanvalue)?'y':'n",{"_index":1109,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.buttontext",{"_index":1442,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.call4drestmethod('rest_authent",{"_index":980,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this.call4drestmethod('rest_get4dlist",{"_index":995,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this.call4drestmethod('rest_getfiltered4dlist",{"_index":1015,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this.call4drestmethod('rest_getregistryvalu",{"_index":1030,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this.call4drestmethod('rest_setregistryvalu",{"_index":1036,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this.call4drestmethod('rest_update4dlist",{"_index":1003,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this.classnam",{"_index":1114,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.clearrecord",{"_index":1251,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.clearrecorddirtyflag",{"_index":1253,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.closedialog(ev",{"_index":1557,"title":{},"body":{"injectables/Modal.html":{}}}],["this.column",{"_index":693,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.config",{"_index":1445,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.height",{"_index":1431,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.titl",{"_index":1435,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.width",{"_index":1433,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.constructor.valueof",{"_index":1256,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.contentref",{"_index":594,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.destroy",{"_index":619,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.inst",{"_index":595,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforeclos",{"_index":596,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforedismiss",{"_index":614,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.location.nativeelement).data('kendowindow",{"_index":589,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.context",{"_index":1675,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.currentrecord",{"_index":1742,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.insertrecord",{"_index":1747,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.isrecordload",{"_index":1743,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.updaterecord",{"_index":1744,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentt",{"_index":210,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.defaultvalu",{"_index":1116,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.deleterecord",{"_index":1837,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialog",{"_index":1497,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.clos",{"_index":236,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialog.close('loggedin",{"_index":1498,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.dialog.close('recordsav",{"_index":1745,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.dialog.close(fals",{"_index":2083,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close(this.selectedindex",{"_index":1451,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.dialog.close(tru",{"_index":1676,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.kendodialog.setopt",{"_index":217,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialoginst",{"_index":1841,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialoginstance.contentref.location.nativeelement).data('kendowindow",{"_index":1843,"title":{},"body":{"components/RecordList.html":{}}}],["this.dispos",{"_index":597,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.domanagesets(act",{"_index":1827,"title":{},"body":{"components/RecordList.html":{}}}],["this.dropdownisopen",{"_index":516,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.editwindow",{"_index":1831,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindow['dialogconfig",{"_index":1839,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindowhandler(result",{"_index":1863,"title":{},"body":{"components/RecordList.html":{}}}],["this.elementref",{"_index":2058,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.elementref.nativeelement.getelementsbytagname('form",{"_index":534,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableaddrecord",{"_index":507,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablebuttonbar",{"_index":506,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enabledeleterecord",{"_index":510,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableeditrecord",{"_index":508,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableexportgrid",{"_index":505,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqb",{"_index":501,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqff",{"_index":502,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableset",{"_index":503,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesort",{"_index":504,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.field",{"_index":1190,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fieldlist",{"_index":158,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fieldlist.push(field",{"_index":209,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.filteropt",{"_index":724,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd",{"_index":690,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_getapplicationvers",{"_index":1487,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourd.call4drestmethod('rest_getfieldsint",{"_index":249,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fourd.call4drestmethod('rest_getrecord",{"_index":742,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getvalu",{"_index":1318,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_loaddata",{"_index":1250,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_postdata",{"_index":1282,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.get4dlist(this.listnam",{"_index":787,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.fourd.getregistryvalue(this.classnam",{"_index":1115,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.setregistryvalue(this.classnam",{"_index":1111,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.signin(key.usernam",{"_index":2064,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.fourd.signin(this.usernam",{"_index":1492,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourddeletecallbackmethod_",{"_index":1298,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdsavecallbackmethod_",{"_index":1207,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdvers",{"_index":1488,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.getcolumnlist",{"_index":1311,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getcolumnlistjson(column",{"_index":738,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getcolumnlistjson(newmodel.getcolumnlist",{"_index":739,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getfielddescription(field).typ",{"_index":1173,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field",{"_index":1172,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field).typ",{"_index":1304,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getrecord(this.recordnumb",{"_index":1276,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.hasownproperty('timestamp",{"_index":1210,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.httpclient.post(fourdinterface.fourdurl",{"_index":957,"title":{},"body":{"classes/FourDQuery.html":{}}}],["this.inputtyp",{"_index":1106,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.invalidcharactererror(messag",{"_index":319,"title":{},"body":{"classes/Base64.html":{}}}],["this.isblock",{"_index":1628,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.iscalculatedfield(field",{"_index":1217,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.ismodifiedfield(fieldnam",{"_index":1223,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isreadonly(field",{"_index":1220,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isrelatedfield(field",{"_index":1219,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(col",{"_index":1346,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(field",{"_index":1218,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.itemslist",{"_index":1437,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.keyboard",{"_index":1629,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.listnam",{"_index":786,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.listopt",{"_index":789,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadlistfrom4d",{"_index":783,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadvaluefrom4d",{"_index":1104,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.messag",{"_index":321,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["this.modal.open(listselectordialog",{"_index":1447,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.modal.openinside(advancedquerycompon",{"_index":1873,"title":{},"body":{"components/RecordList.html":{}}}],["this.modal.openinside(logincmp",{"_index":2057,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.modal.openinside(this.editwindow",{"_index":1860,"title":{},"body":{"components/RecordList.html":{}}}],["this.model",{"_index":696,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.length",{"_index":755,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.push(newmodel",{"_index":751,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.open(compon",{"_index":1577,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openinside(componenttyp",{"_index":1554,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openstateicon",{"_index":496,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.orderbi",{"_index":725,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.originalvalu",{"_index":1110,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.parametervalu",{"_index":1112,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.populatemodeldata(resultjson",{"_index":1252,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.primarykey_",{"_index":1243,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.promis",{"_index":562,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.queryaddrecord.emit(nul",{"_index":540,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryband.enableqb",{"_index":1822,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.enableset",{"_index":1825,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryaddrecord.subscrib",{"_index":1832,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querydeleterecord.subscrib",{"_index":1836,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryeditrecord.subscrib",{"_index":1834,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryexportgrid.subscrib",{"_index":1829,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryfromqbe.subscribe((queri",{"_index":1823,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querymanagesets.subscribe((act",{"_index":1826,"title":{},"body":{"components/RecordList.html":{}}}],["this.querybandisopen",{"_index":495,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querydeleterecord.emit(nul",{"_index":544,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryeditrecord.emit(nul",{"_index":542,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryexportgrid.emit(nul",{"_index":538,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfieldlist",{"_index":213,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.foreach(el",{"_index":228,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.length",{"_index":238,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.pop",{"_index":244,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.push",{"_index":239,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfromfile.emit(nul",{"_index":514,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfromqbe.emit",{"_index":512,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querymanagesets.emit(act",{"_index":519,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryrefresh.emit(this.thequeryband.thecustomquery.currentqueri",{"_index":522,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querysortgrid.emit(nul",{"_index":524,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querystr",{"_index":723,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.quickfind.valuechanges.pipe(distinctuntilchanged(),debouncetime(1500),).subscribe(queri",{"_index":1734,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.recordnumb",{"_index":1206,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.refreshgrid",{"_index":1880,"title":{},"body":{"components/RecordList.html":{}}}],["this.refreshgrid(queri",{"_index":1821,"title":{},"body":{"components/RecordList.html":{}}}],["this.reject",{"_index":565,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.relatedonet",{"_index":214,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.resolv",{"_index":564,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.restoreset(set",{"_index":1913,"title":{},"body":{"components/RecordList.html":{}}}],["this.runquickfinder.emit(queri",{"_index":1735,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('data:image/'+imagetype+';base64,'+valu",{"_index":416,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["this.selectedindex",{"_index":1448,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.selectedvalu",{"_index":785,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.selectlist.show(searchlist",{"_index":1905,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.show(setlist",{"_index":1911,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.titl",{"_index":1904,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectorvalu",{"_index":1113,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.selectthistab(tab",{"_index":1934,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.showadvancedqueri",{"_index":1824,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('add",{"_index":1833,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('edit",{"_index":1835,"title":{},"body":{"components/RecordList.html":{}}}],["this.showerror",{"_index":1496,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.showlogindialog",{"_index":2067,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.siz",{"_index":1626,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.tablenam",{"_index":1204,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.tabs.foreach((tabitem",{"_index":1936,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.length",{"_index":1940,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.push(tab",{"_index":1941,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.textvalu",{"_index":1108,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.thedialog",{"_index":1566,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.center().open",{"_index":1561,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.open",{"_index":1562,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thegrid",{"_index":1815,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord",{"_index":1855,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.deleterecord(this.queryband.cascadedeleterecord",{"_index":1868,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.refresh().then",{"_index":1859,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.exportgridtoexcel",{"_index":1830,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovid",{"_index":1816,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider().model",{"_index":1818,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.loaddata(queri",{"_index":1849,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model",{"_index":1865,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototyp",{"_index":1875,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.primarykey_",{"_index":1885,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.tablenam",{"_index":1882,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.optimizegridload",{"_index":1856,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.recordselected.subscribe((record",{"_index":1838,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.refresh",{"_index":1871,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.res",{"_index":1853,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.selectedrow",{"_index":1820,"title":{},"body":{"components/RecordList.html":{}}}],["this.thequeryband.thecustomqueri",{"_index":521,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.clearqueryform",{"_index":526,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.currentqueri",{"_index":547,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.tipslist",{"_index":1439,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.totalrecordcount",{"_index":743,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.urlsearchparms.hasownproperty('key",{"_index":2062,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[el",{"_index":2056,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[item[0",{"_index":2054,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userhasloggedin.emit(fourdinterface.currentus",{"_index":2061,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userisloggedin",{"_index":2060,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.viewref",{"_index":1861,"title":{},"body":{"components/RecordList.html":{}}}],["this.webappvers",{"_index":1485,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.windowheight",{"_index":218,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.windowresized(ev",{"_index":1845,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowresized(nul",{"_index":1852,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowwidth",{"_index":219,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this['timestamp",{"_index":1212,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field",{"_index":1305,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field.nam",{"_index":1193,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[fieldnam",{"_index":1226,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["those",{"_index":314,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["three",{"_index":2166,"title":{},"body":{"index.html":{}}}],["throughout",{"_index":313,"title":{},"body":{"classes/Base64.html":{}}}],["throw",{"_index":318,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["thru",{"_index":962,"title":{},"body":{"classes/FourDQuery.html":{}}}],["time",{"_index":1047,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{}}}],["timestamp",{"_index":1214,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["timeto4dformat(thed",{"_index":1049,"title":{},"body":{"classes/FourDQuery.html":{}}}],["tip",{"_index":1412,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["tipslist",{"_index":1399,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["titl",{"_index":186,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["title(v",{"_index":1434,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["to/from",{"_index":918,"title":{},"body":{"classes/FourDQuery.html":{}}}],["todo",{"_index":1545,"title":{},"body":{"injectables/Modal.html":{}}}],["toggledropdown",{"_index":515,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["token",{"_index":1528,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["top",{"_index":86,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["top:5px",{"_index":443,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tort",{"_index":2260,"title":{},"body":{"license.html":{}}}],["total",{"_index":680,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["totalrecordcount",{"_index":636,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["traffic",{"_index":917,"title":{},"body":{"classes/FourDQuery.html":{}}}],["transform",{"_index":400,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transform(valu",{"_index":401,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transit",{"_index":76,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transition:opac",{"_index":80,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transpar",{"_index":440,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tri",{"_index":1848,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["triangl",{"_index":488,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["trick",{"_index":1567,"title":{},"body":{"injectables/Modal.html":{}}}],["true",{"_index":181,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["true/fals",{"_index":1670,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["true|fals",{"_index":1295,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["tslint",{"_index":871,"title":{},"body":{"classes/FourDQuery.html":{}}}],["tslint:dis",{"_index":860,"title":{},"body":{"classes/FourDQuery.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["tv",{"_index":1008,"title":{},"body":{"classes/FourDQuery.html":{}}}],["two",{"_index":831,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["type",{"_index":143,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":700,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["typeof(this[fieldnam",{"_index":1230,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["typescript",{"_index":2149,"title":{},"body":{"index.html":{}}}],["ucs2decod",{"_index":1959,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2decode(str",{"_index":1976,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encod",{"_index":1960,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode(array",{"_index":1978,"title":{},"body":{"classes/Utf8.html":{}}}],["ui",{"_index":2151,"title":{},"body":{"index.html":{}}}],["ul",{"_index":42,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ul#navig",{"_index":19,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["undefin",{"_index":782,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["under",{"_index":1012,"title":{},"body":{"classes/FourDQuery.html":{},"index.html":{}}}],["union",{"_index":817,"title":{},"body":{"classes/FourDQuery.html":{}}}],["uniqu",{"_index":1135,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["unpair",{"_index":2026,"title":{},"body":{"classes/Utf8.html":{}}}],["up",{"_index":975,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["updat",{"_index":999,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["update4dlist(listnam",{"_index":1000,"title":{},"body":{"classes/FourDQuery.html":{}}}],["updaterecord",{"_index":1293,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["upon",{"_index":937,"title":{},"body":{"classes/FourDQuery.html":{},"components/RecordList.html":{},"index.html":{}}}],["url",{"_index":413,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["url(\"/assets/login_splash.png",{"_index":1456,"title":{},"body":{"components/LoginCmp.html":{}}}],["url.split('&').foreach(el",{"_index":2051,"title":{},"body":{"components/WebAppContainer.html":{}}}],["urlencod",{"_index":944,"title":{},"body":{"classes/FourDQuery.html":{}}}],["urlsearchparam",{"_index":932,"title":{},"body":{"classes/FourDQuery.html":{}}}],["urlsearchparm",{"_index":2033,"title":{},"body":{"components/WebAppContainer.html":{}}}],["us",{"_index":312,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":414,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["useb",{"_index":850,"title":{},"body":{"classes/FourDQuery.html":{}}}],["user",{"_index":604,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["userhasloggedin",{"_index":2036,"title":{},"body":{"components/WebAppContainer.html":{}}}],["userhassignedin",{"_index":914,"title":{},"body":{"classes/FourDQuery.html":{}}}],["userisloggedin",{"_index":2035,"title":{},"body":{"components/WebAppContainer.html":{}}}],["usernam",{"_index":727,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{}}}],["usual",{"_index":611,"title":{},"body":{"classes/Deferred.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{}}}],["utf8",{"_index":686,"title":{"classes/Utf8.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["utf8.bytearray[utf8.byteindex",{"_index":2015,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.bytecount",{"_index":2012,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.byteindex",{"_index":2017,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.checkscalarvalue(codepoint",{"_index":2004,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.createbyte(codepoint",{"_index":2006,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.readcontinuationbyt",{"_index":2025,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.ucs2decode(str",{"_index":2010,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decod",{"_index":1961,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode(bytestr",{"_index":1980,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encod",{"_index":1962,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode(str",{"_index":1983,"title":{},"body":{"classes/Utf8.html":{}}}],["util",{"_index":849,"title":{},"body":{"classes/FourDQuery.html":{}}}],["v",{"_index":195,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordEditWindow.html":{}}}],["v.buttonlabel",{"_index":1441,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.list",{"_index":1438,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.messag",{"_index":1443,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.model.tablenam",{"_index":211,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.previousqueri",{"_index":212,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.tip",{"_index":1440,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v15",{"_index":949,"title":{},"body":{"classes/FourDQuery.html":{}}}],["valid",{"_index":1590,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["valu",{"_index":147,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["value.substr(0,2",{"_index":1175,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(3,2",{"_index":1177,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(6,2",{"_index":1179,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.tolocaledatestr",{"_index":764,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["value.touppercas",{"_index":1118,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["value/",{"_index":1601,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value:'th",{"_index":1313,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["valuechang",{"_index":1088,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["var",{"_index":258,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["variabl",{"_index":485,"title":{"miscellaneous/variables.html":{}},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variableslist",{"_index":1316,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["variou",{"_index":848,"title":{},"body":{"classes/FourDQuery.html":{},"components/RecordList.html":{}}}],["veri",{"_index":44,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["version",{"_index":902,"title":{},"body":{"classes/FourDQuery.html":{},"injectables/Modal.html":{}}}],["via",{"_index":2153,"title":{},"body":{"index.html":{}}}],["view",{"_index":1790,"title":{},"body":{"components/RecordList.html":{}}}],["viewcontainerref",{"_index":197,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["viewencapsul",{"_index":2043,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewencapsulation.non",{"_index":2032,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewref",{"_index":1534,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["visibility:hidden",{"_index":61,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:vis",{"_index":51,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibl",{"_index":83,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["void",{"_index":163,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["want",{"_index":1327,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["warranti",{"_index":2245,"title":{},"body":{"license.html":{}}}],["we'll",{"_index":921,"title":{},"body":{"classes/FourDQuery.html":{}}}],["web",{"_index":291,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["webappcontain",{"_index":290,"title":{"components/WebAppContainer.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["webappvers",{"_index":1466,"title":{},"body":{"components/LoginCmp.html":{}}}],["webkit",{"_index":79,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["welcom",{"_index":1460,"title":{},"body":{"components/LoginCmp.html":{}}}],["went",{"_index":1285,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["whether",{"_index":2258,"title":{},"body":{"license.html":{}}}],["whole",{"_index":657,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["whose",{"_index":667,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["wide",{"_index":1540,"title":{},"body":{"injectables/Modal.html":{}}}],["widget",{"_index":2152,"title":{},"body":{"index.html":{}}}],["widgets/servic",{"_index":2213,"title":{},"body":{"index.html":{}}}],["width",{"_index":33,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width(v",{"_index":1432,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["width:100",{"_index":93,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width:180px",{"_index":68,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["wiki",{"_index":2158,"title":{},"body":{"index.html":{}}}],["win",{"_index":2045,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.loc",{"_index":2046,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search",{"_index":2047,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search.substr(1",{"_index":2048,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win:windowservic",{"_index":2044,"title":{},"body":{"components/WebAppContainer.html":{}}}],["window",{"_index":568,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["window'},{'nam",{"_index":284,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["window:res",{"_index":1766,"title":{},"body":{"components/RecordList.html":{}}}],["windowbase64",{"_index":342,"title":{},"body":{"classes/Base64.html":{}}}],["windowheight",{"_index":118,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["windowres",{"_index":1763,"title":{},"body":{"components/RecordList.html":{}}}],["windowresized(ev",{"_index":1800,"title":{},"body":{"components/RecordList.html":{}}}],["windowwidth",{"_index":119,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["without",{"_index":600,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"license.html":{}}}],["work",{"_index":1548,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["workspac",{"_index":910,"title":{},"body":{"classes/FourDQuery.html":{}}}],["world",{"_index":1663,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["wrap",{"_index":1234,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["wrapper",{"_index":2190,"title":{},"body":{"index.html":{}}}],["www",{"_index":943,"title":{},"body":{"classes/FourDQuery.html":{}}}],["x",{"_index":613,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"injectables/ModalDialogInstance.html":{}}}],["xff]/.test(input",{"_index":369,"title":{},"body":{"classes/Base64.html":{}}}],["y",{"_index":1119,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["ye",{"_index":1415,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["yesnomod",{"_index":293,"title":{"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["yesnomodalcont",{"_index":2076,"title":{"classes/YesNoModalContent.html":{}},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["yestext",{"_index":2081,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["ymd",{"_index":1042,"title":{},"body":{"classes/FourDQuery.html":{}}}],["yyyymmdd",{"_index":1037,"title":{},"body":{"classes/FourDQuery.html":{}}}],["z",{"_index":65,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["z0",{"_index":358,"title":{},"body":{"classes/Base64.html":{}}}],["za",{"_index":357,"title":{},"body":{"classes/Base64.html":{}}}],["zone.j",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":798,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdvancedQueryComponent.html":{"url":"components/AdvancedQueryComponent.html","title":"component - AdvancedQueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdvancedQueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/advancedQuery.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomModalComponent\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                advanced-query\n            \n\n\n            \n                styles\n                \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n            \n\n            \n                template\n                    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n            \n        \n        \n            \n                {{item}}\n            \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n            \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTable\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                windowHeight\n                            \n                            \n                                    Private\n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doQuery\n                            \n                            \n                                isItemSelected\n                            \n                            \n                                lessLines\n                            \n                            \n                                moreLines\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectField\n                            \n                            \n                                showRelatedTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparatorList\n                            \n                            \n                                fieldList\n                            \n                            \n                                queryFieldList\n                            \n                            \n                                relatedOneTables\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface, dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/containers/advancedQuery.ts:190\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                    FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparatorList\n                    \n                    \n                        \n                            Default value : ['=', '!=', '>', '>=', '\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:163\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldList\n                    \n                    \n                            \n                            Type :    Array\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:162\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFieldList\n                    \n                    \n                        \n                            Default value : [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }]\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:164\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relatedOneTables\n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:165\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:214\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isItemSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisItemSelected(field: any, queryField: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:210\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        queryField\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessLines\n                            \n                            \n                        \n                    \n                \n                \n                    \nlessLines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:234\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreLines\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoreLines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectField\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectField(event, queryField)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:202\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        queryField\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRelatedTable\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowRelatedTable(event, queryField: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:241\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        queryField\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentTable:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     ModalDialogInstance\n\n                    \n                \n                    \n                        \n                            Type :     ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogConfig:     ModalConfig\n\n                    \n                \n                    \n                        \n                            Type :     ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:152\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windowHeight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windowWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 570\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:169\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/advancedQuery.ts:171\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, ViewContainerRef, AfterViewInit, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'advanced-query',\n    template: `\n    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n                   \n        \n        \n            \n                {{item}}\n                   \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n                   \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n    `,\n    styles: [`\n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    `]\n})\n\nexport class AdvancedQueryComponent implements ICustomModalComponent, AfterViewInit {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    };\n\n    @Input() public fieldList: Array = [];\n    @Input() public comparatorList = ['=', '!=', '>', '>=', ' {\n            if (!field.related && field.longname && field.longname !== '') { this.fieldList.push(field) }\n        });\n        this.currentTable = v.model.tableName;\n        if (v.previousQuery) {\n            this.queryFieldList = v.previousQuery;\n        } else {\n            this.queryFieldList = [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }];\n        }\n        this.relatedOneTables = [this.currentTable];\n        for (let index = 0; index  1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    selectField(event, queryField) {\n        if (event.target.selectedIndex > 0) {\n            queryField.field = queryField.listOfFields[event.target.selectedIndex - 1];\n        } else {\n            queryField.field = { type: 'string', name: '' };\n        }\n    }\n\n    isItemSelected(field: any, queryField: any): string {\n        return (queryField.name === field.name) ? 'selected' : '';\n    }\n\n    doQuery() {\n        const queryItems = [];\n        this.queryFieldList.forEach(element => {\n            if (element.field.name !== '' && element.comparator !== '') {\n                const theField: any = element.field;\n                if (element.comparator === '!=') { element.comparator = '#'; }\n                queryItems.push(theField.longname + ';' + element.comparator + ';' + element.value + ';' + element.connector);\n            }\n        });\n        this.dialog.close({ query: queryItems, queryFields: this.queryFieldList });\n    }\n\n    moreLines() {\n        const queryID = 'query' + this.queryFieldList.length;\n        this.queryFieldList.push({ id: queryID, field: { type: 'string', name: '' }, comparator: '=', value: '', connector: ' And', queryTable: this.currentTable, listOfFields: this.fieldList }); // add a new query line\n        this.windowHeight += 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    lessLines() {\n        this.queryFieldList.pop(); // remove last item\n        this.windowHeight -= 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    showRelatedTable(event, queryField: any) {\n        queryField.queryTable = event.target.textContent;\n        this.fourD.call4DRESTMethod('REST_GetFieldsInTable', { TableName: queryField.queryTable })\n            .subscribe(resultJSON => {\n                queryField.listOfFields = resultJSON.fieldList;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                »                                                    {{relatedTable}}                                                                                                                                    {{field.longname}}                                                        {{item}}                                                                                                                                        Can\\'t query on Object fields            Can\\'t query on Object fields            Can\\'t query on Blob fields            Can\\'t query on Blob fields            Can\\'t query on Picture fields                                                And                Or                                                 More...            Less...                Query    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'AdvancedQueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base64.html":{"url":"classes/Base64.html","title":"class - Base64","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base64\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/base64.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                error\n                            \n                            \n                                InvalidCharacterError\n                            \n                            \n                                    Private\n                                    Static\n                                REGEX_SPACE_CHARACTERS\n                            \n                            \n                                    Private\n                                    Static\n                                TABLE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decode\n                            \n                            \n                                    Static\n                                encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     \n\n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InvalidCharacterError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        InvalidCharacterError:     \n\n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\tthis.message = message;\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            REGEX_SPACE_CHARACTERS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        REGEX_SPACE_CHARACTERS:     \n\n                    \n                \n                    \n                        \n                            Default value : /[\\t\\n\\f\\r ]/g\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            TABLE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TABLE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decode(input)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/base64.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encode(input)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/base64.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Base64 {\n\n\n\t/*--------------------------------------------------------------------------*/\n\n\tInvalidCharacterError = function (message) {\n\t\tthis.message = message;\n\t};\n\n\tprivate static error = function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t};\n\n\tprivate static TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tprivate static REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tpublic static decode(input): string {\n\t\tinput = String(input)\n\t\t\t.replace(Base64.REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\tBase64.error(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position > (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tpublic static encode(input): string {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\tBase64.error(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position > 18 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) > 10) +\n\t\t\t\tBase64.TABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt((buffer > 2) +\n\t\t\t\tBase64.TABLE.charAt((buffer \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Base64ImageRef.html":{"url":"pipes/Base64ImageRef.html","title":"pipe - Base64ImageRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Base64ImageRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/Base64ImageRef.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        base64ImageRef\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string, imageType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pipes/Base64ImageRef.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        imageType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'jpeg'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SafeResourceUrl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n/*\n * Convert a Base64 Image string into an embedded Image URL \n * Usage:\n *   value | base64ImageRef {:type}\n * Parameters:\n *   optional image type parameter, default is \"jpeg\"\n*/\n@Pipe({name: 'base64ImageRef'})\nexport class Base64ImageRef implements PipeTransform {\n  transform(value: string, imageType: string = 'jpeg'): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('data:image/'+imageType+';base64,'+value);\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CustomButtonBarDirective.html":{"url":"directives/CustomButtonBarDirective.html","title":"directive - CustomButtonBarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CustomButtonBarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        custombuttonbar\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand') theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deferred.html":{"url":"classes/Deferred.html","title":"class - Deferred","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deferred\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promise\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reject:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resolve:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FourDCollection.html":{"url":"injectables/FourDCollection.html","title":"injectable - FourDCollection","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FourDCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDCollection.ts\n        \n\n            \n                Description\n            \n            \n                This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                currentRecord\n                            \n                            \n                                    Public\n                                filterOptions\n                            \n                            \n                                    Private\n                                fourD\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                models\n                            \n                            \n                                    Public\n                                orderBy\n                            \n                            \n                                    Public\n                                queryString\n                            \n                            \n                                    Public\n                                totalRecordCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColumnListJSON\n                            \n                            \n                                    Public\n                                getRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getColumnListJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getColumnListJSON(columns: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:54\n                            \n                        \n\n\n                \n                    \n                            prepares the JSON field description to send to 4D, listing the columns to retrieve\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        columns\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    a JSON string listing the fields/columns to retrieve for each record\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRecords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRecords(query: FourDQuery, columns: Array, startRec: number, numOfRecords: number, filter: string, orderby: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:103\n                            \n                        \n\n\n                \n                    \n                            Retrieves a list of records using a query string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    FourDQuery\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                        \n                                                                the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                                        \n                                                \n                                                \n                                                        columns\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                        \n                                                                custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n\n                                                        \n                                                \n                                                \n                                                        startRec\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                        \n                                                                the starting record number to retrieve, used for paging.\n\n                                                        \n                                                \n                                                \n                                                        numOfRecords\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -1\n                                                        \n\n                                                        \n                                                                the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n\n                                                        \n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                        \n                                                                optional, FourDQuery to further filter records to he retrieved\n\n                                                        \n                                                \n                                                \n                                                        orderby\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                        \n                                                                optional order By clause to retrieve records in a set order.  in the format:    >table.field : to sort records by table.field in ascending order    \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:29\n                            \n                        \n\n                \n                    \n                        the default list of field/column names to be populated on each Collection record data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRecord\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRecord:     FourDModel\n\n                    \n                \n                    \n                        \n                            Type :     FourDModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:32\n                            \n                        \n\n                \n                    \n                        holds current record from the current selection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterOptions:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:26\n                            \n                        \n\n                \n                    \n                        default filter to be applied on all queries \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fourD\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fourD:     FourDInterface\n\n                    \n                \n                    \n                        \n                            Type :     FourDInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n                \n                    \n                        injected FourDInterface service \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:18\n                            \n                        \n\n                \n                    \n                        the model this collection is based on \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            models\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        models:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:20\n                            \n                        \n\n                \n                    \n                        array of models in the collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orderBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:22\n                            \n                        \n\n                \n                    \n                        default order by string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryString:     FourDQuery\n\n                    \n                \n                    \n                        \n                            Type :     FourDQuery\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:24\n                            \n                        \n\n                \n                    \n                        default query string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalRecordCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalRecordCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:34\n                            \n                        \n\n                \n                    \n                        holds the total # of records found on the latest query \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/js44D/JSFourDCollection.ts:160\n                                \n                            \n                    \n                        \n                                returns the length of the Collection, or the # of records loaded in\n\n\n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDModel } from './JSFourDModel';\n\n/**\n * This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n */\n@Injectable()\nexport class FourDCollection {\n\n    //\n    // FourDCollection properties\n    //\n    /** the model this collection is based on */\n    public model: any;\n    /** array of models in the collection */\n    public models: Array = [];\n    /** default order by string */\n    public orderBy: string;\n    /** default query string */\n    public queryString: FourDQuery = null;\n    /** default filter to be applied on all queries */\n    public filterOptions: string;\n\n    /** the default list of field/column names to be populated on each Collection record data */\n    public columns: Array = [];\n\n    /** holds current record from the current selection */\n    public currentRecord: FourDModel;\n    /** holds the total # of records found on the latest query */\n    public totalRecordCount = 0;\n\n    /** injected FourDInterface service */\n    private fourD: FourDInterface;\n\n    //\n    // constructor: initialize collection properties\n    //\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n    /**\n     * prepares the JSON field description to send to 4D, listing the columns to retrieve\n     * \n     *  @param columns a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n     * \n     *  @returns a JSON string listing the fields/columns to retrieve for each record\n     */\n    public getColumnListJSON(columns: Array): string {\n        if (!columns) { columns = this.columns; }\n        const colList: Array = [];\n        const modelDef = (this.model);\n        let theModel: FourDModel = (new modelDef());\n        let fld: any;\n        for (const col of columns) {\n            if (typeof (col) === 'string') {\n                if (col.indexOf('.') > 0) { // is this a longname field?\n                    colList.push({ name: col.substr(col.indexOf('.') + 1), field: col });\n                } else { // nope, so let's see if we have it in our datamodel\n                    fld = theModel.getFieldProperties(col);\n                    if (fld) { // field in our datamodel, use its properties\n                        if (fld.formula) {\n                            colList.push({ name: fld.name, formula: fld.formula });\n                        } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                    }\n                }\n            } else if (col.field) {\n                theModel = (new modelDef());\n                fld = theModel.getFieldProperties(col.field);\n                if (fld) {\n                    if (fld.formula) {\n                        colList.push({ name: fld.name, formula: fld.formula });\n                    } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                }\n            } else {\n                if (col.formula) {\n                    colList.push({ name: col.name, formula: col.formula });\n                } else if (fld.longname) { colList.push({ name: col.name, field: col.longname }); }\n            }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Retrieves a list of records using a query string \n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *  \n     * @returns returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n     */\n    public getRecords(query: FourDQuery = null, columns: Array = null, startRec: number = 0, numOfRecords: number = -1, filter: string = null, orderby: string = null): Promise> {\n        if (!query) {\n            query = this.queryString;\n        }\n        if (columns) {\n            this.columns = columns;\n        }\n        if (!filter || filter === '') {\n            filter = this.filterOptions;\n        }\n        if (!orderby || orderby === '') {\n            orderby = this.orderBy;\n        }\n\n        const body: any = { Username: FourDInterface.currentUser };\n        const modelDef = (this.model);\n        let newModel: FourDModel = (new modelDef());\n        body.TableName = newModel.tableName;\n        body.StartRec = startRec;\n        body.NumRecs = numOfRecords;\n\n        body.QueryString = JSON.stringify(query);\n        body.Columns = Base64.encode(Utf8.utf8encode((columns) ? this.getColumnListJSON(columns) : this.getColumnListJSON(newModel.getColumnList())));\n\n        if (filter) { body.FilterOptions = filter; }\n        if (orderby) { body.OrderBy = orderby; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetRecords', body)\n                .subscribe(resultJSON => {\n                    this.totalRecordCount = 0;\n                    this.models = [];\n                    if (resultJSON && resultJSON['selected'] && resultJSON['records']) {\n                        this.totalRecordCount = resultJSON['selected'];\n                        const recList: Array = resultJSON['records'];\n                        recList.forEach(record => {\n                            newModel = (new modelDef());\n                            newModel.populateModelData(record);\n                            newModel.clearRecordDirtyFlag();\n                            this.models.push(newModel);\n                        });\n                    }\n\n                    resolve(this.models);\n                },\n                error => {\n                    console.log('error:' + error);\n                    reject(error);\n                });\n        });\n\n    }\n\n    /**\n     * returns the length of the Collection, or the # of records loaded in\n     */\n    public get length(): number {\n        return this.models.length;\n    }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FourDDateToString.html":{"url":"pipes/FourDDateToString.html","title":"pipe - FourDDateToString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FourDDateToString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/FourDDateToString.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fourDDateToString\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pipes/FourDDateToString.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/*\n * Convert a 4D Date string into Locale Date String \n * Usage:\n *   value | fourDDateToLocaleString \n * \n*/\n@Pipe({name: 'fourDDateToString'})\nexport class FourDDateToString implements PipeTransform {\n    transform(value): string {\n        if (value) {\n            if (typeof (value) === 'string' && value !== '') {\n                const date = new Date(value.replace(/-/g, '\\/'));\n                return date.toLocaleDateString();\n            } else return value.toLocaleDateString();\n        } else return ''; // handle case where date field is null/undefined\n      }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDDropDown.html":{"url":"components/FourDDropDown.html","title":"component - FourDDropDown","body":"\n                   \n\n\n\n\n\n  Components\n  FourDDropDown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDDropDown.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-dropdown\n            \n\n\n            \n                styles\n                .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n            \n\n            \n                template\n                \n    {{item}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isItemSelected\n                            \n                            \n                                    Private\n                                loadListFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listName\n                            \n                            \n                                listOptions\n                            \n                            \n                                selectedValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                    FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listName\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listOptions\n                    \n                    \n                            \n                            Type :    Array\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isItemSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisItemSelected(item: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadListFrom4D\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadListFrom4D()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-dropdown',\n    styles: [`.fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            `],\n    template: `\n        \n            {{item}}\n        \n       `\n})\n\n@Injectable()\nexport class FourDDropDown implements AfterViewInit {\n    @Input() public listName: string;\n    @Input() public selectedValue: string;\n    @Input() public listOptions: Array = [];\n\n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadListFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(user => {\n                this.loadListFrom4D();\n            })\n        }\n    }\n\n    isItemSelected(item: string): string {\n        return (item === this.selectedValue) ? 'selected' : '';\n    }\n\n    private loadListFrom4D() {\n        if (this.listName) {\n            this.fourD.get4DList(this.listName)\n                .then((values) => {\n                    this.listOptions = ['', ...values];\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n    \n            .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{item}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDDropDown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FourDModule.html":{"url":"modules/FourDModule.html","title":"module - FourDModule","body":"\n                   \n\n\n\n\n    Modules\n    FourDModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fourD.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FourDCollection\n                        \n                        \n                            FourDInterface\n                        \n                        \n                            FourDModel\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDInterface } from './js44D/JSFourDInterface';\nimport { FourDModel } from './js44D/JSFourDModel';\nimport { FourDCollection } from './js44D/JSFourDCollection';\n\n@NgModule({\n      imports: [HttpClientModule],\n      providers: [HttpClient, FourDInterface, FourDModel, FourDCollection],\n      exports: [HttpClientModule]\n})\nexport class FourDModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FourDQuery.html":{"url":"classes/FourDQuery.html","title":"class - FourDQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FourDQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                Describes the properties of a 4D Query String  - see RESTApi documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                custom\n                            \n                            \n                                    Optional\n                                intersection\n                            \n                            \n                                    Optional\n                                join\n                            \n                            \n                                    Optional\n                                joinFK\n                            \n                            \n                                    Optional\n                                joinPK\n                            \n                            \n                                    Optional\n                                joinTable\n                            \n                            \n                                    Optional\n                                query\n                            \n                            \n                                    Optional\n                                sql\n                            \n                            \n                                    Optional\n                                union\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            custom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        custom:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:672\n                            \n                        \n\n                \n                    \n                        Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            intersection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intersection:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:670\n                            \n                        \n\n                \n                    \n                        An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            join\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        join:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:674\n                            \n                        \n\n                \n                    \n                        Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinFK\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        joinFK:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:680\n                            \n                        \n\n                \n                    \n                        A join query property. The main table foreign key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinPK\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        joinPK:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:678\n                            \n                        \n\n                \n                    \n                        A join query property. The join table primary key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinTable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        joinTable:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:676\n                            \n                        \n\n                \n                    \n                        A join query property. This is the join table, a table name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:664\n                            \n                        \n\n                \n                    \n                        Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sql\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sql:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:666\n                            \n                        \n\n                \n                    \n                        Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            union\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        union:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:668\n                            \n                        \n\n                \n                    \n                        An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return theDate.toJSON().substr(0, 10).replace(/-/g, '');\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n        return new Date(dateValue);\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDRegistryInput.html":{"url":"components/FourDRegistryInput.html","title":"component - FourDRegistryInput","body":"\n                   \n\n\n\n\n\n  Components\n  FourDRegistryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDRegistryInput.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-registry-input\n            \n\n\n\n            \n                template\n                \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanValue\n                            \n                            \n                                    Private\n                                originalValue\n                            \n                            \n                                    Public\n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadValueFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                defaultValue\n                            \n                            \n                                inputType\n                            \n                            \n                                parameterValue\n                            \n                            \n                                selectorValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                    FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        className\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultValue\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parameterValue\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectorValue\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadValueFrom4D\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadValueFrom4D()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            valueChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        booleanValue:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            originalValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        originalValue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            textValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        textValue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-registry-input',\n    template: `\n        \n            \n            \n        \n       `\n})\n\n@Injectable()\nexport class FourDRegistryInput implements AfterViewInit {\n\n    @Input() public className: string;\n    @Input() public parameterValue: string;\n    @Input() public selectorValue: string;\n    @Input() public defaultValue: string;\n    @Input() public inputType: string;\n    \n    public textValue: string = '';\n    public booleanValue: boolean = false;\n    private originalValue: string = '';\n    \n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadValueFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(() => {\n                this.loadValueFrom4D();\n            })\n        }\n    }\n\n    public valueChanged() {\n        if (this.inputType === 'checkbox') {\n            this.textValue = (this.booleanValue)?'Y':'N';\n        }\n        if (this.originalValue != this.textValue) {\n            this.fourD.setRegistryValue(this.className, this.parameterValue, this.textValue, this.selectorValue)\n                .then (v => {this.originalValue = this.textValue;});\n        }\n    }\n\n    private loadValueFrom4D() {\n        if (this.className && this.className != '' && this.parameterValue && this.parameterValue != '') {\n            this.fourD.getRegistryValue(this.className, this.parameterValue, this.defaultValue, this.selectorValue)\n                .then((value) => {\n                    this.originalValue = this.textValue = value;\n                    this.booleanValue = (value.toUpperCase() == \"Y\");\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDRegistryInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModal.html":{"url":"classes/ICustomModal.html","title":"class - ICustomModal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModal.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ICustomModal { }\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModalComponent.html":{"url":"classes/ICustomModalComponent.html","title":"class - ICustomModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModalComponent.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                beforeClose\n                            \n                            \n                                    Optional\n                                beforeDismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     ModalDialogInstance\n\n                    \n                \n                    \n                        \n                            Type :     ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beforeClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nbeforeClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:18\n                            \n                        \n\n\n                \n                    \n                            Invoked before a modal is closed, return true to cancel closing.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beforeDismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \nbeforeDismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:13\n                            \n                        \n\n\n                \n                    \n                            Invoked before a modal is dismissed, return true to cancel dismissal.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * A Type used as a binding key for dialog window Components\n */\n\nexport class ICustomModalComponent {\n    dialog: ModalDialogInstance;\n\n    /**\n     * Invoked before a modal is dismissed, return true to cancel dismissal.\n     */\n    beforeDismiss?(): boolean;\n\n    /**\n     * Invoked before a modal is closed, return true to cancel closing.\n     */\n    beforeClose?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldDescription.html":{"url":"interfaces/IFieldDescription.html","title":"interface - IFieldDescription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFieldDescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDModel.ts\n        \n\n            \n                Description\n            \n            \n                This is the description for each field in a Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        formula\n                                \n                                \n                                        indexed\n                                \n                                \n                                        isrelated\n                                \n                                \n                                        joinFK\n                                \n                                \n                                        joinPK\n                                \n                                \n                                        length\n                                \n                                \n                                        list\n                                \n                                \n                                        longname\n                                \n                                \n                                        name\n                                \n                                \n                                        readonly\n                                \n                                \n                                        relatesTo\n                                \n                                \n                                        required\n                                \n                                \n                                        subTable\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    not used \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formula\n                                    \n                                \n                                \n                                    \n                                        formula:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a calculated value, this is a 4D expresstion that returns the field contents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexed\n                                    \n                                \n                                \n                                    \n                                        indexed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates that the field is indexed on 4D side \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isrelated\n                                    \n                                \n                                \n                                    \n                                        isrelated:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field comes from a related table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinFK\n                                    \n                                \n                                \n                                    \n                                        joinFK:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the foreign key field in the main table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinPK\n                                    \n                                \n                                \n                                    \n                                        joinPK:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the primary key field in the related many table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if an alpha field, the field length as defined in the 4D Structure \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the choice list associated to the field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longname\n                                    \n                                \n                                \n                                    \n                                        longname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field dot long name, in the format 'table.field', applicable if a database field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field name, must be unique in the Data Model \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field is read only, and can't me modified \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatesTo\n                                    \n                                \n                                \n                                    \n                                        relatesTo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a foreign key that relates to a one table, this is the related one field name in dot long format \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is a required field, cannot be empty or null \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTable\n                                    \n                                \n                                \n                                    \n                                        subTable:     FourDModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FourDModel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable (related many table), this is the FourDModel that represents records in that table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is unique \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDCollection } from './JSFourDCollection';\n\n/**\n * This is the description for each field in a Data Model\n */\nexport interface IFieldDescription {\n    /** the field name, must be unique in the Data Model */\n    name: string;\n    /** the field dot long name, in the format 'table.field', applicable if a database field */\n    longname: string;\n    /** the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture */\n    type: string;\n    /** if field is a calculated value, this is a 4D expresstion that returns the field contents */\n    formula: string;\n    /** if field is a subtable (related many table), this is the FourDModel that represents records in that table */\n    subTable: FourDModel;\n    /** not used */\n    className: string;\n    /** if field is a subtable, this is the foreign key field in the main table */\n    joinFK: string;\n    /** if field is a subtable, this is the primary key field in the related many table */\n    joinPK: string;\n    /** indicates field comes from a related table */\n    isrelated: boolean;\n    /** if field is a foreign key that relates to a one table, this is the related one field name in dot long format */\n    relatesTo: string;\n    /** indicates field is read only, and can't me modified */\n    readonly: boolean;\n    /** the choice list associated to the field */\n    list: string;\n    /** field is a required field, cannot be empty or null */\n    required: boolean;\n    /** indicates that the field is indexed on 4D side */\n    indexed: boolean;\n    /** field is unique */\n    unique: boolean;\n    /** if an alpha field, the field length as defined in the 4D Structure */\n    length: number;\n}\n\n/**\n * Individual 4D Datamodel that replicates a 4D Table's structure and provides a CRUD API to 4D data\n */\n@Injectable()\nexport class FourDModel {\n    /** 4D's Table name */\n    public tableName = '';\n    /** 4D's table number */\n    public tableNumber = 0;\n    /** Table's primary key field name */\n    public primaryKey_: string;\n\n    /** record number field/attribute name, usually '_recnum' */\n    public idAttribute = '_recnum';\n\n    /** Table definition, array describing all fields in the Data Model and how they map to the 4D Structure */\n    public fields: Array = [];\n\n    /** callback method to be executed on 4D side before a Save operation */\n    public fourdSaveCallbackMethod_: string;\n    /** callback method to be executed on 4D side before a Delete operation */\n    public fourdDeleteCallbackMethod_: string;\n\n    // injected FourDInterface service\n    public fourD: FourDInterface;\n\n    // -----------------------\n    // Private variables\n    // -----------------------\n    // current record number\n    private _recnum = -3;\n    // keeps all attributes for the current model\n    private _attributes: Object = {};\n    // keep a list of modified fields, to optimize Updates, only modified data is set to 4D\n    private _modified: Object = {};\n\n\n    /** \n     * constructor: initialize model properties\n    */\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n\n    /**\n     * Get a field value\n     */\n    get(field: string): any {\n        return this._attributes[field];\n    }\n\n    /**\n     * Set a field value, updates field modified flag\n     */\n    set(field: string, value: any) {\n        if (this.getFieldProperties(field)) {\n            if (this.getFieldDescription(field).type === 'Date') {\n                if (typeof (value) === 'string' && value !== '') {\n                    value = new Date(value.replace(/-/g, '\\/'));\n                }\n            } else if (this.getFieldDescription(field).type === 'Time') {\n                if (typeof (value) === 'string' && value !== '') {\n                    const hh = +value.substr(0,2);\n                    const mm = +value.substr(3,2);\n                    const ss = +value.substr(6,2);\n                    value = new Date(0,0,0,hh,mm,ss);\n                }\n            }\n            if (this._attributes.hasOwnProperty(field)) {\n                // we are updating an attribute\n                if (this._attributes[field] !== value) {\n                    // make sure value is indeed changing...\n                    this._attributes[field] = value;\n                    this._modified[field] = true; // mark field as modified\n                }\n            } else {\n                // setting a new attribute\n                this._attributes[field] = value;\n                this._modified[field] = true; // mark field as modified\n            }\n        } else {\n            this._attributes[field] = value;\n        }\n    }\n\n    /**\n     * Returns the description for a given field\n     * \n     * @param fieldName the field name to get properties for\n     * \n     * @returns the field name properties, an IFieldDescription instance\n     * \n     */\n    getFieldProperties(fieldName): IFieldDescription {\n        let ret: IFieldDescription = null;\n        for (const col of this.fields) {\n            if (col.name === fieldName) { ret = col; }\n        };\n        return ret;\n    }\n\n\n    /**\n     * Clears up all record fields\n     */\n    clearRecord() {\n        for (const field of this.fields) {\n            switch (field.type) {\n                case 'date':\n                case 'Date':\n                    this[field.name] = null;\n                    break;\n\n                case 'time':\n                case 'Time':\n                    this[field.name] = null;\n                    break;\n\n                case 'boolean':\n                    this[field.name] = false;\n                    break;\n\n                case 'string':\n                case 'text':\n                    this[field.name] = '';\n                    break;\n\n                case 'number':\n                    this[field.name] = 0;\n                    break;\n\n                case 'json':\n                    this[field.name] = {};\n                    break;\n\n                case 'blob':\n                case 'picture':\n                    this[field.name] = null;\n                    break;\n\n                default:\n                    this[field.name] = '';\n                    break;\n            }\n        };\n\n    }\n\n    /**\n     * Serializes record data into its JSON representation as used in 4D\n     *\n     * @param mode can be 'insert' or 'update', if mode is 'update' the JSON string will contain only fields that have been modified\n     * @param noAudit 'no audit' flag to be sent to 4D, if 'true' record audit log will be disabled \n     * \n     * @returns record contents as JSON string\n     *\n     */\n    recordToJSON(mode: string, noAudit: boolean): string {\n        const recordData: Object = { table: this.tableName, recnum: this.recordNumber };\n        // set callback methods\n        if (this.fourdSaveCallbackMethod_) {\n            recordData['saveCallback'] = this.fourdSaveCallbackMethod_; // set save callback method if set\n        }\n\n        if (noAudit) { recordData['noAudit'] = true; }    // disable audit log for this record\n\n        if ((mode === 'update') && this.hasOwnProperty('TimeStamp')) {\n            recordData['timeStamp'] = this['TimeStamp'];\n        } // if updating, add current record's timestamp attribute\n\n        recordData['fields'] = {}; // initialize fields propriety\n        for (const field of this.fields) {\n            const fieldName: string = field.name;\n            if (!this.isCalculatedField(field) &&\n                !this.isSubtable(field) &&\n                !this.isRelatedField(field) &&\n                (!this.isReadOnly(field) || (mode === 'insert')) &&\t\t\t// May/15/09 send all non-read only fields, empty or not\n                (this.isModifiedField(fieldName) || (mode === 'insert'))) { \t// Nov 18/09 send ONLY fields that have indeed been modified\n                let value = '';\n                if (((this[fieldName] !== null) && (this[fieldName] !== undefined)) || (field.type === 'boolean')) {\n                    // send back only fields that do have some value and that belong to the table\n                    // ignore calculated or related fields\n                    switch (field.type) {\n                        case 'Date':\n                        case 'date':\n                            if (typeof(this[fieldName]) === 'string') {\n                                recordData['fields'][field.longname] = this[fieldName]; \n                            } else {\n                                const dateValue: Date = this[fieldName];\n                                value = dateValue.getFullYear().toString();\n                                if (dateValue.getMonth() '; // if blob, wrap data inside a cdata\n                             }\n                             */\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n\n                        default:\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n                    }\n                }\n\n\n            }\n        };\n\n        return JSON.stringify(recordData);\n\n    }\n\n\n    /**\n     * Retrieve a record from 4D and populates the Data Model.\n     *\n     * @param recordNumber the record # to retrieve (optional, it defaults to the currentRecordNumber property)\n     * @param recordID primary key value for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     *    if specified the record is retrieved by querying on its primary key field\n     * @param query query string for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     * \n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     *\n     */\n    public getRecord(recordNumber: number = null, recordID: string = null, query: FourDQuery = null): Promise {\n        if (query) {\n            // if we have a query, use it...\n        } else if (recordID && FourDInterface.fourdAPIVersion = 0 || this.recordNumber >= 0 || (recordID && FourDInterface.fourdAPIVersion >= '1.18.06.17a' && this.primaryKey_)) {\n            // if we have a record number, use it directly then\n            if (recordNumber >= 0) { this.recordNumber = recordNumber; }\n\n            // build request body with record number to retrieve\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            if (recordID) {\n                body.RecordID = recordID; // if querying record using record ID...             \n            } else {\n                body.RecordNum = this.recordNumber;\n            }\n            body.VariablesList = Base64.encode(Utf8.utf8encode(this.getColumnListJSON()));\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_LoadData', body)\n                    .subscribe(resultJSON => {\n                        this.clearRecord();\n                        this.populateModelData(resultJSON);\n                        this.clearRecordDirtyFlag();\n                        resolve(this);\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n        } else { \n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n\n        }\n\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        const me = this;\n\n        // first we send to query to 4D to get all records that match the query criteria\n        // then if at lest 1 record is returned by 4D, we use it's record number to refresh to complete record contents\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, [this.primaryKey_])\n                .then((reclist) => {\n                    if (records.models.length > 0) {\n                        me.recordNumber = records.models[0].recordNumber; // set the record number and refresh it\n                        me.refresh().then((rec) => { rec.clearRecordDirtyFlag(); resolve(me); }).catch((error) => { reject(error); });\n                    } else { reject('recordNotFound'); }\n                })\n                .catch((error) => { reject(error); });\n        });\n\n\n    }\n\n    /**\n     * Refresh current record, grab a fresh copy from 4D\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public refresh(): Promise {\n        if (this.recordNumber >= 0) {\n            return this.getRecord(this.recordNumber);\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n\n    }\n\n\n    /**\n     * Insert a new record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance. the primary key property is set after the record is inserted\n     *\n     */\n    public insertRecord(): Promise {\n        const body: any = { Username: FourDInterface.currentUser };\n        body.TableName = this.tableName;\n        body.RecordNum = this.recordNumber;\n        if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n        body.Action = 'add';\n        body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('add', false)));\n\n        return new Promise((resolve, reject) => {\n            const me = this;\n            this.fourD.call4DRESTMethod('REST_PostData', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.returnCode === 'OK') {\n                        // insert record went OK, retrieve calculated return code & record ID\n                        me.recordNumber = resultJSON['_recnum'];\n                        if (me.primaryKey_ && me.primaryKey_ !== '') { me[me.primaryKey_] = resultJSON['recordID']; }\n                        me.clearRecordDirtyFlag(); // clean up modified fields\n                        resolve(me);\n                    } else { reject(resultJSON.returnCode); }\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error.text());\n                    });\n        });\n\n\n    }\n\n    /**\n     * Update record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public updateRecord(): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n            body.Action = 'update';\n            body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('update', false)));\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // update record went OK\n                            me.clearRecordDirtyFlag(); // clean up modified fields\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n    }\n\n    /**\n     * Delete record from the database\n     *\n     * @param cascade true|false indicates if 4D should perform a cascade delete (optional, default=false)\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public deleteRecord(cascade: boolean = false): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdDeleteCallbackMethod_) { body.CallBackMethod = this.fourdDeleteCallbackMethod_; }\n            body.Action = 'delete';\n            if (cascade) { body.cascadeDelete = cascade; }\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // delete record went OK\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n        }\n\n    }\n\n    /**\n     * Populates model with attributes/properties from a json Object\n     *\n     *  @param recordData json object whose properties will be used to populate the Data Model\n     */\n    public populateModelData(recordData: Object) {\n        if (recordData.hasOwnProperty('_recnum')) { this.recordNumber = recordData['_recnum']; }\n        for (const field in recordData) {\n            if (field !== '_recnum' && this.getFieldProperties(field)) {\n                switch (this.getFieldProperties(field).type ) {\n                    case 'json':\n                        this[field] = (recordData[field] && recordData[field] != '')?JSON.parse(recordData[field]):{}; \n                        break;\n                \n                    default:\n                        this[field] = recordData[field];\n                        break;\n                }\n            }\n        }\n\n    }\n\n    public extractModelData(): Object {\n        let data = { _recnum: this._recnum };\n        for (const field of this.fields) {\n            data[field.name] = this[field.name];\n        }\n\n        return data;\n    }\n\n    /**\n     * Retrieves a list of records using a query string\n     *\n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *\n     *\n     * @returns returns a Promise for the database operation, whose result is a FourDCollection with the query results\n     */\n    public getRecords(query: FourDQuery = null,\n        columns: Array = null,\n        startRec: number = 0, numOfRecords: number = -1,\n        filter: string = null,\n        orderby: string = null): Promise {\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, (columns) ? columns : this.getColumnList(), startRec, numOfRecords, filter, orderby)\n                .then((reclist) => { resolve(records); })\n                .catch((error) => { reject(error); });\n        });\n\n    }\n\n    /**\n     * Retrieves a set of variables or 4D execute formula values\n     * \n     * @param values an Array of objects with the following format: {formula: 'a 4d formula', value:'the resulting value returned by 4D'}\n     * @param method the name of a 4D method to be called before processing the formulas\n     *\n     * @returns returns a Promise for the database operation, whose result is the values Array populated by 4D\n     */\n    public getValuesFrom4D(values: Array, method: string = ''): Promise> {\n        const body: any = { VariablesList: Base64.encode(Utf8.utf8encode(JSON.stringify(values))) };\n        if (method && method != '') {\n            body.CallbackMethod = method;\n        }\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetValues', body)\n                .subscribe(result => {\n                    resolve(result);\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error);\n                    });\n        });\n\n    }\n    /**\n     * Get the current record's record number\n     * \n     *  @returns current record number (4D's record number, equivalent to ROWID)\n     *\n     */\n    public get recordNumber(): number {\n        return this._recnum;\n    }\n    public set recordNumber(v: number) { this._recnum = v; }\n\n    /**\n     * Checks to see if a record is currently loaded\n     *\n     * @returns true if a record is loaded into this FourDModel instance\n     *\n     */\n    public isRecordLoaded(): boolean {\n        return (this.recordNumber >= 0);\n    }\n\n\n    /**\n     * Clears record modified flag.\n     * \n     * This can be used when one changes a record programmatically, but does not want to set the record modified flag.\n     * For example on record initialization.\n     *\n     */\n    public clearRecordDirtyFlag() {\n        this._modified = {};\t\t\t\t\t// clear modified fields list\n    }\n\n\n    /**\n     * Check if current record has been modified.\n     *\n     * @returns true indicates that record contents have been modified.\n     *\n     */\n    public recordIsDirty(): boolean {\n        for (const field of this.fields) {\n            if (this._modified.hasOwnProperty(field.name)) { return true; }\n        }\n        return false;\n    }\n\n\n    /**\n     * Prepares the record's JSON field description to send to 4D\n     * \n     * @returns JSON string representing all fields in the Data Model\n     */\n    public getColumnListJSON(): string {\n        const colList: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (col.formula) {\n                colList.push({ name: col.name, formula: col.formula });\n            } else if (col.subTable) {\n                const subFields: Array = [];\n                for (const sub of col.subTable.fields) {\n                    subFields.push({ name: sub.name, field: sub.longname });\n                };\n                colList.push({\n                    name: col.name,\n                    subTable: col.subTable.tableName,\n                    joinFK: col.joinFK,\n                    joinPK: col.joinPK,\n                    subFields: subFields\n                });\n\n            } else if (col.longname) { colList.push({ name: col.name, field: col.longname }); }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Gets a list of fields in the Data Model\n     * \n     * @param includeSubTables if 'true', includes fields in subtables defined in the Data Model\n     * \n     * @returns an array with all fields defined for this data model\n     */\n    public getColumnList(includeSubTables: boolean = false): Array {\n        const cols: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (!this.isSubtable(col) || includeSubTables) {\n                if (col.formula) {\n                    cols.push(col);\n                } else { cols.push(col.name); }\n            }\n        };\n        return cols;\n    }\n\n    /**\n     * Returns a field's longname, given its field name\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field dot longname, as 'table.field'\n     */\n    public getLongname(fieldName: string): string {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field.longname; }\n        }\n\n        // not found, assume table.field\n        return this.tableName + '.' + fieldName;\n    }\n\n    // -----------------------\n    // Private methods\n    // -----------------------\n\n    /**\n     * Returns a field's data model description\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field's iFieldDescription\n     */\n    private getFieldDescription(fieldName: string): IFieldDescription {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field; }\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks to see if a field is from a related table\n     *\n     * @param field field description for the Class definition\n     * @return true if field is on a related table\n     *\n     */\n    private isRelatedField(field: IFieldDescription): boolean {\n        return field.isrelated;\n    }\n\n    /**\n     * Checks to see if a field contents have been modified\n     *\n     * @param field field/property name\n     * @returns true if field has been modified\n     *\n     */\n    private isModifiedField(field: string): boolean {\n        return this._modified.hasOwnProperty(field);\n    }\n\n    /**\n     * Checks to see if a field is a calculated field\n     *\n     * @param field field description from the Data Model\n     * \n     * @returns true if field is formula, a calculated field\n     *\n     */\n    private isCalculatedField(field: IFieldDescription): boolean {\n        return (field.formula !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is a related many subtable\n     *\n     * @param field field description from the Data Model\n     * @returna true if field is a related many subtable\n     *\n     */\n    private isSubtable(field: IFieldDescription): boolean {\n        return (field.subTable !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is read only\n     *\n     * @param field field description from the Data Model\n     * @returns true if field is read only\n     *\n     */\n    private isReadOnly(field: IFieldDescription): boolean {\n        return field.readonly;\n    }\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JS44DModule.html":{"url":"modules/JS44DModule.html","title":"module - JS44DModule","body":"\n                   \n\n\n\n\n    Modules\n    JS44DModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_imports\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_JS44DModule_providers\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nFourDModule\n\nFourDModule\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/js44D.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FourDInterface\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FourDModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDModule } from './fourD.module';\nimport { FourDInterface } from './js44D/JSFourDInterface';\n\nimport { QueryBand, CustomButtonBarDirective, QueryBandDirective } from './containers/queryBand';\nimport { AdvancedQueryComponent } from './containers/advancedQuery';\nimport { RecordList } from './containers/recordList';\nimport { RecordEditWindow } from './containers/recordEditWindow';\nimport { Tabs, Tab } from './containers/tabs';\nimport { WebAppContainer } from './containers/webAppContainer';\nimport { FourDDropDown } from './controls/fourDDropDown';\nimport { QuickFindInput } from './controls/quickFindInput';\nimport { DataGrid } from './dataGrid/dataGrid';\nimport { LoginCmp } from './login/login';\nimport { ListSelectorDialog } from './dialogs/listSelectorDialog';\n\nimport { Base64ImageRef } from './pipes/Base64ImageRef.pipe';\nimport { FourDDateToString } from './pipes/FourDDateToString.pipe';\nimport { FourDRegistryInput } from './controls/fourDRegistryInput';\n\n\n@NgModule({\n      imports: [FormsModule, CommonModule, HttpClientModule, FourDModule],\n      declarations: [ \n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      providers: [HttpClient, FourDInterface],\n      exports: [\n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      entryComponents: [LoginCmp, AdvancedQueryComponent, ListSelectorDialog]\n})\nexport class JS44DModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSelectorDialog.html":{"url":"components/ListSelectorDialog.html","title":"component - ListSelectorDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ListSelectorDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/listSelectorDialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            Modal\n                \n            \n\n\n            \n                selector\n                list-selector\n            \n\n\n\n            \n                template\n                \n    \n        {{item}}\n    \n    \n        {{message}}\n        {{buttonText}}\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelection\n                            \n                            \n                                ok\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                itemsList\n                            \n                            \n                                message\n                            \n                            \n                                tipsList\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                                \n                                    width\n                                \n                                \n                                    title\n                                \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, modal: Modal)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                    \n                        \n                            Default value : 'Select'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsList\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tipsList\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelection(ev)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ev\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                            \n                        \n                    \n                \n                \n                    \nok($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(list: string[], tips?: string[], message?: string, buttonLabel?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:64\n                            \n                        \n\n\n                \n                    \n                            Show Me - show the list selector dialog and return a Promise\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        tips\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        buttonLabel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ModalConfig\n\n                    \n                \n                    \n                        \n                            Type :     ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     ModalDialogInstance\n\n                    \n                \n                    \n                        \n                            Type :     ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogConfig:     ModalConfig\n\n                    \n                \n                    \n                        \n                            Type :     ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIndex:     \n\n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n\n                \n                    \n                        setheight(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n\n                \n                    \n                        settitle(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, OnInit, Input } from '@angular/core';\n\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\n@Component({\n    selector: 'list-selector',\n    template: `\n        \n            \n                {{item}}\n            \n            \n                {{message}}\n                {{buttonText}}\n            \n        \n   `,\n    providers: [Modal]\n})\n\nexport class ListSelectorDialog implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    };\n\n    @Input() public itemsList: string[] = [];\n    @Input() public tipsList: string[] = [];\n    @Input() public buttonText = 'Select';\n    @Input() public message = '';\n\n    public set height(v) { this.config.height = v };\n    public set width(v) { this.config.width = v };\n    public set title(v) { this.config.title = v };\n\n\n    public set modelContentData(v) {\n        this.itemsList = v.list;\n        this.tipsList = v.tips;\n        if (v.buttonLabel) { this.buttonText = v.buttonLabel; }\n        if (v.message) { this.message = v.message; }\n    }\n\n    private config: ModalConfig;\n\n    private selectedIndex = -1;\n\n\n    constructor(public dialog: ModalDialogInstance, private modal: Modal) {\n        this.config = ListSelectorDialog.dialogConfig;\n    }\n\n    /**\n     * Show Me - show the list selector dialog and return a Promise\n     */\n    public show(list: string[], tips?: string[], message?: string, buttonLabel?: string): Promise {\n        if (!tips) { tips = list; }\n\n        return this.modal.open(ListSelectorDialog, { list: list, tips: tips, message: message, buttonLabel: buttonLabel }, this.config);\n    }\n\n    changeSelection(ev) {\n        this.selectedIndex = ev.target.selectedIndex;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(this.selectedIndex);\n    }\n\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item}}                {{message}}        {{buttonText}}    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSelectorDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginCmp.html":{"url":"components/LoginCmp.html","title":"component - LoginCmp","body":"\n                   \n\n\n\n\n\n  Components\n  LoginCmp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/login/login.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                log-in\n            \n\n\n            \n                styles\n                \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n            \n\n            \n                template\n                    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fourDVersion\n                            \n                            \n                                password\n                            \n                            \n                                showError\n                            \n                            \n                                username\n                            \n                            \n                                webAppVersion\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                    FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fourDVersion\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        webAppVersion\n                    \n                    \n                        \n                            Default value : '1.18.02.16a'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/login/login.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     ModalDialogInstance\n\n                    \n                \n                    \n                        \n                            Type :     ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogConfig:     ModalConfig\n\n                    \n                \n                    \n                        \n                            Type :     ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/login/login.ts:62\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\nimport { FourDInterface, MD5 } from '../js44D/JSFourDInterface';\n\n\n@Component({\n    selector: 'log-in',\n    template: `\n    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n    `,\n    styles: [`\n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    `]\n})\nexport class LoginCmp implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    };\n\n    @Input() public username = '';\n    @Input() public password = '';\n    @Input() public showError = false;\n    @Input() public fourDVersion = '';\n    @Input() public webAppVersion = '1.18.02.16a';\n\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            if (parms.hasOwnProperty('version')) {\n                this.webAppVersion = parms['version'];\n            }\n        }\n    }\n\n    constructor(public dialog: ModalDialogInstance, private fourD: FourDInterface) {\n        this.fourD.call4DRESTMethod('REST_GetApplicationVersion', {}, { responseType: 'text' })\n            .subscribe((v) => {\n                this.fourDVersion = v;\n            });\n    }\n\n    login() {\n        // event.preventDefault();\n        const md5pwd: string = MD5.md5(this.password);\n        this.fourD.signIn(this.username, md5pwd.toUpperCase())\n            .then((authentication) => {\n                if (FourDInterface.authentication) {\n                    // console.log('authenticated');\n\n                    this.showError = false;\n                    if (this.dialog) { this.dialog.close('loggedin'); }\n                } else {\n                    console.log('oops');\n                    this.showError = true;\n                }\n            })\n            .catch((e) => {\n                console.log(e);\n                this.showError = true;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Welcome, Please Login                    User Name                                        Password                            Login        Sorry, the username and/or password was incorrect    4D: {{fourDVersion}}, web: {{webAppVersion}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginCmp'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Modal.html":{"url":"injectables/Modal.html","title":"injectable - Modal","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Modal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/providers/Modal.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostViewRef\n                            \n                            \n                                    Static\n                                openDialogList\n                            \n                            \n                                    Public\n                                theDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openInside\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ViewContainerRef, defaultConfig: ModalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultConfig\n                                                  \n                                                        \n                                                                    ModalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeDialog(event, theDialogInstance: ModalDialogInstance)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        theDialogInstance\n                                                        \n                                                                    ModalDialogInstance\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open(componentType: any, parameters?: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:43\n                            \n                        \n\n\n                \n                    \n                            Opens a modal window blocking the whole screen.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentType\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The angular Component to render as modal.\n\n                                                        \n                                                \n                                                \n                                                        parameters\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                parameters to be passed to the dialog instance.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    ModalConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                A Modal Configuration object.\n\n                                                        \n                                                \n                                                \n                                                        allowMultiple\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                indicates if multiple version of the same dialog are allowed.\n\n                                                        \n                                                \n                                                \n                                                        dialogID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                        \n                                                                a dialog identification token to control multiple occurrences.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    Promise\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openDialog(component: any, parameters: any, allowMultiple: boolean, dialogID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:143\n                            \n                        \n\n\n                \n                    \n                            Opens a modal window blocking the whole screen.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        parameters\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                parameters to be passed to the dialog instance.\n\n                                                        \n                                                \n                                                \n                                                        allowMultiple\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                indicates if multiple version of the same dialog are allowed.\n\n                                                        \n                                                \n                                                \n                                                        dialogID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                        \n                                                                a dialog identification token to control multiple occurrences.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    Promise\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openInside\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openInside(componentType: Type, viewRef: ViewContainerRef, parameters: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:63\n                            \n                        \n\n\n                \n                    \n                            Opens a modal window inside an existing component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentType\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The angular Component to render as modal.\n\n                                                        \n                                                \n                                                \n                                                        viewRef\n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to block using the modal.\n\n                                                        \n                                                \n                                                \n                                                        parameters\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                parameters to be passed to the dialog instance.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    ModalConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                A Modal Configuration object.\n\n                                                        \n                                                \n                                                \n                                                        allowMultiple\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                indicates if multiple version of the same dialog are allowed.\n\n                                                        \n                                                \n                                                \n                                                        dialogID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                        \n                                                                a dialog identification token to control multiple occurrences.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    Promise\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hostViewRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hostViewRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            openDialogList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openDialogList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        theDialog:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Type,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    Injectable,\n    Optional\n} from '@angular/core';\n\n\nimport { ModalConfig } from '../models/ModalConfig';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n\nlet _config: ModalConfig;\n\n// @dynamic\n@Injectable()\nexport class Modal {\n\n    public static hostViewRef: ViewContainerRef;\n    public static openDialogList = [];\n\n    public theDialog: any;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ViewContainerRef,\n        @Optional() defaultConfig: ModalConfig) {\n        // The Modal class should be an application wide service (i.e: singleton).\n        // This will run once in most applications...\n        // If the user provides a ModalConfig instance to the DI,\n        // the custom config will be the default one.\n        _config = (defaultConfig) ? ModalConfig.makeValid(defaultConfig) : new ModalConfig();\n    }\n\n    /**\n     * Opens a modal window blocking the whole screen.\n     * @param componentType The angular Component to render as modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public open(componentType: any, parameters?: any,\n        config?: ModalConfig, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n        // TODO: appRef.injector.get(APP_COMPONENT) Doesn't work.\n        // When it does replace with the hack below.\n        // let viewRef = this.appRef.element.nativeElement.location;\n        // let viewRef: viewRef = this.appRef['_rootComponents'][0].location;\n\n        return this.openInside(componentType, (Modal.hostViewRef) ? Modal.hostViewRef : this.appRef, parameters, config, allowMultiple, dialogID);\n    }\n\n    /**\n     * Opens a modal window inside an existing component.\n     * @param componentType The angular Component to render as modal.\n     * @param viewRef The element to block using the modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public openInside(componentType: Type, viewRef: ViewContainerRef,\n        parameters: any,\n        config?: ModalConfig,\n        allowMultiple: boolean = false,\n        dialogID: string = ''): Promise {\n\n        if (!allowMultiple) {\n            for (let index = 0; index  { this.closeDialog(event, dialogInstance); }\n        }).data('kendoWindow');\n        if (config.selfCentered) {\n            this.theDialog.center().open();\n        } else { this.theDialog.open(); }\n\n        dialogInstance.contentRef = dialogComponentRef;\n        dialogInstance.kendoDialog = this.theDialog;\n\n        // trick to avoid angular2 error \"Expression has changed after it was checked\"\n        dialogComponentRef.changeDetectorRef.detectChanges(); // need this to avoid NG2 error/warning\n\n        // if multiples not allowed, save this instance\n        if (!allowMultiple) {\n            const id = (dialogID && dialogID !== '') ? dialogID : componentType['name'];\n            Modal.openDialogList.push({ component: id, dialog: dialogInstance });\n        }\n\n        return dialogInstance.result;\n\n    }\n\n    public closeDialog(event, theDialogInstance:ModalDialogInstance) {\n        // console.log(event, theDialog);\n        for (let index = 0; index \n     */\n    public openDialog(component: any, parameters: any, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n\n        return this.open(component, parameters, component.dialogConfig, allowMultiple, dialogID);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalConfig.html":{"url":"injectables/ModalConfig.html","title":"injectable - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalConfig.ts\n        \n\n            \n                Description\n            \n            \n                A configuration definition object.\nInstruction for how to show a modal.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                customStyle\n                            \n                            \n                                height\n                            \n                            \n                                isBlocking\n                            \n                            \n                                isDraggable\n                            \n                            \n                                isModal\n                            \n                            \n                                isResizable\n                            \n                            \n                                keyboard\n                            \n                            \n                                minHeight\n                            \n                            \n                                minWidth\n                            \n                            \n                                position\n                            \n                            \n                                selfCentered\n                            \n                            \n                                size\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                makeValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalConfig.ts:86\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            makeValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        makeValid(config: ModalConfig, defaultConfig?: ModalConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:67\n                            \n                        \n\n\n                \n                    \n                            Makes a ModalConfig instance valid.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ModalConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        defaultConfig\n                                                        \n                                                                    ModalConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                A Default config to use as master, optional.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModalConfig\n\n                            \n                                \n                                    ModalConfig The same config instance sent.\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Close']\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customStyle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:24\n                            \n                        \n\n                \n                    \n                        Width of the modal.\nused only if size is 'custom'.\nNOTE: No validation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocking\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isBlocking:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:31\n                            \n                        \n\n                \n                    \n                        Describes if the modal is blocking modal.\nA Blocking modal is not closable by clicking outside of the modal window.\nDefaults to false.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDraggable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDraggable:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isModal:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResizable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isResizable:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyboard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyboard:     Array | number\n\n                    \n                \n                    \n                        \n                            Type :     Array | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:39\n                            \n                        \n\n                \n                    \n                        Keyboard value/s that close the modal.\nAccepts either a single numeric value or an array of numeric values.\nA modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\nDefaults to 27, set null implicitly to disable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minHeight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 100, left: 100 }\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selfCentered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selfCentered:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:17\n                            \n                        \n\n                \n                    \n                        Size of the modal.\n'lg', 'sm' or 'custom'.\nNOTE: No validation.\nDefault to 'lg'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nlet _defaultConfig: ModalConfig;\n\n\n/**\n * A configuration definition object.\n * Instruction for how to show a modal.\n */\n@Injectable()\nexport class ModalConfig {\n    /**\n     * Size of the modal.\n     * 'lg', 'sm' or 'custom'.\n     * NOTE: No validation.\n     * Default to 'lg'\n     */\n    size: string;\n\n    /**\n     * Width of the modal.\n     * used only if size is 'custom'.\n     * NOTE: No validation.\n     */\n    customStyle: string;\n\n    /**\n     * Describes if the modal is blocking modal.\n     * A Blocking modal is not closable by clicking outside of the modal window.\n     * Defaults to false.\n     */\n    isBlocking: boolean;\n\n    /**\n     * Keyboard value/s that close the modal.\n     * Accepts either a single numeric value or an array of numeric values.\n     * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n     * Defaults to 27, set `null` implicitly to disable.\n     */\n    keyboard: Array | number;\n\n    width: number = null;\n    minWidth = 50;\n\n    height: number = null;\n    minHeight = 50;\n\n    position = { top: 100, left: 100 };\n\n    selfCentered = true;\n\n    isModal = true;\n\n    isDraggable = true;\n\n    isResizable = true;\n\n    title = '';\n\n    actions: Array = ['Close'];\n\n    /**\n      * Makes a ModalConfig instance valid.\n      * @param config\n      * @param defaultConfig A Default config to use as master, optional.\n      * @returns ModalConfig The same config instance sent.\n      */\n    static makeValid(config: ModalConfig, defaultConfig?: ModalConfig) {\n        defaultConfig = (defaultConfig) ? defaultConfig : _defaultConfig;\n\n        if (!config.size) { config.size = defaultConfig.size; }\n\n        if (config.isBlocking !== false) { config.isBlocking = true; }\n\n        if (config.keyboard !== null) {\n            if (Array.isArray(>config.keyboard)) {\n                config.keyboard = (>config.keyboard).length === 0\n                    ? defaultConfig.keyboard : config.keyboard;\n            } else if (!isNaN(config.keyboard)) {\n                config.keyboard = [config.keyboard];\n            } else {\n                config.keyboard = defaultConfig.keyboard;\n            }\n        }\n\n        return config;\n    }\n\n    constructor() {\n        this.size = 'ls';\n        this.isBlocking = true;\n        this.keyboard = [27];\n    }\n\n\n}\n\n_defaultConfig = new ModalConfig();\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalDialogInstance.html":{"url":"injectables/ModalDialogInstance.html","title":"injectable - ModalDialogInstance","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalDialogInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n            \n                Description\n            \n            \n                API to an open modal window.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _backdropRef\n                            \n                            \n                                    Private\n                                _bootstrapRef\n                            \n                            \n                                    Private\n                                _resultDefered\n                            \n                            \n                                contentRef\n                            \n                            \n                                    Public\n                                inElement\n                            \n                            \n                                kendoDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismiss\n                            \n                            \n                                    Private\n                                dispose\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    backdropRef\n                                \n                                \n                                    bootstrapRef\n                                \n                                \n                                    result\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose(result: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:64\n                            \n                        \n\n\n                \n                    \n                            Close the modal with a return value, i.e: result.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \ndismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:82\n                            \n                        \n\n\n                \n                    \n                            Close the modal without a return value, i.e: cancelled.\nThis call is automatically invoked when a user either:\n\nPresses an exit keyboard key (if configured).\nClicks outside of the modal window (if configured).\nUsually, dismiss represent a Cancel button or a X button.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dispose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dispose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTitle(title: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:56\n                            \n                        \n\n\n                \n                    \n                            set the dialog title\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _backdropRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _backdropRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bootstrapRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _bootstrapRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resultDefered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _resultDefered:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inElement:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:28\n                            \n                        \n\n                \n                    \n                        States if the modal is inside a specific element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kendoDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kendoDialog:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        backdropRef\n                    \n                \n\n\n                \n                    \n                        setbackdropRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bootstrapRef\n                    \n                \n\n\n                \n                    \n                        setbootstrapRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n\n                \n                    \n                        getresult()\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:49\n                                \n                            \n                    \n                        \n                                A Promise that is resolved on a close event and rejected on a dismiss event.\n\n\n                                \n                                \n                                \n                                    Returns :     Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Modal\n                        \n                        \n                            ModalDialogInstance\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\n\nimport { ModalDialogInstance } from './angular2-modal/models/ModalDialogInstance';\nimport { Modal } from './angular2-modal/providers/Modal';\nimport { OKOnlyModal } from './angular2-modal/commonModals/okOnlyModal';\nimport { YesNoModal } from './angular2-modal/commonModals/yesNoModal';\nimport { ICustomModal } from './angular2-modal/models/ICustomModal';\n\n@NgModule({\n      declarations: [\n            OKOnlyModal, YesNoModal\n      ],\n      exports: [\n            OKOnlyModal, YesNoModal\n      ],\n      entryComponents: [OKOnlyModal, YesNoModal],\n      providers: [Modal, ModalDialogInstance, ICustomModal]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OKOnlyContent.html":{"url":"classes/OKOnlyContent.html","title":"class - OKOnlyContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OKOnlyContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/okOnlyModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                okText\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, okText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        okText\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            okText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        okText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OKOnlyModal.html":{"url":"components/OKOnlyModal.html","title":"component - OKOnlyModal","body":"\n                   \n\n\n\n\n\n  Components\n  OKOnlyModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/okOnlyModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                            \n                        \n                    \n                \n                \n                    \nok()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     OKOnlyContent\n\n                    \n                \n                    \n                        \n                            Type :     OKOnlyContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     ModalDialogInstance\n\n                    \n                \n                    \n                        \n                            Type :     ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.okText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'OKOnlyModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryBand.html":{"url":"components/QueryBand.html","title":"component - QueryBand","body":"\n                   \n\n\n\n\n\n  Components\n  QueryBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/queryBand.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                query-band\n            \n\n\n            \n                styles\n                \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n            \n\n            \n                template\n                \n    \n        \n        \n        \n        \n            \n                Select Highlighted\n                \n                Reuse a Saved Search\n                Restore a Saved Record Set\n                Combine Searches -->\n                \n                Save Current Search\n                Save Record Set\n                \n                Manage Saved Searches\n                Manage Saved Sets\n            \n        \n         -->\n        \n        \n    \n\n    \n        \n        Add\n        Edit\n        Delete\n    \n\n\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dropDownIsOpen\n                            \n                            \n                                    Public\n                                openStateIcon\n                            \n                            \n                                    Public\n                                queryBandIsOpen\n                            \n                            \n                                theQueryBand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doAddRecord\n                            \n                            \n                                    Public\n                                doClear\n                            \n                            \n                                    Public\n                                doDeleteRecord\n                            \n                            \n                                    Public\n                                doEditRecord\n                            \n                            \n                                    Public\n                                doExportGrid\n                            \n                            \n                                    Public\n                                doManageSets\n                            \n                            \n                                    Public\n                                doQBE\n                            \n                            \n                                    Public\n                                doQFF\n                            \n                            \n                                    Public\n                                doRefresh\n                            \n                            \n                                    Public\n                                doSort\n                            \n                            \n                                    Public\n                                doWehaveAQuery\n                            \n                            \n                                    Public\n                                enableButton\n                            \n                            \n                                    Public\n                                switchState\n                            \n                            \n                                    Public\n                                toggleDropDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cascadeDeleteRecord\n                            \n                            \n                                enableAddRecord\n                            \n                            \n                                enableButtonBar\n                            \n                            \n                                enableCombiSearch\n                            \n                            \n                                enableDeleteRecord\n                            \n                            \n                                enableEditRecord\n                            \n                            \n                                enableExportGrid\n                            \n                            \n                                enableQBE\n                            \n                            \n                                enableQFF\n                            \n                            \n                                enableSETS\n                            \n                            \n                                enableSort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryAddRecord\n                            \n                            \n                                queryDeleteRecord\n                            \n                            \n                                queryEditRecord\n                            \n                            \n                                queryExportGrid\n                            \n                            \n                                queryFromFile\n                            \n                            \n                                queryFromQBE\n                            \n                            \n                                queryManageSets\n                            \n                            \n                                queryRefresh\n                            \n                            \n                                querySortGrid\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cascadeDeleteRecord\n                    \n                    \n                        Cascade Delete record if Delete is enabled, default is false\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:149\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddRecord\n                    \n                    \n                        Enable Add record button, default is false\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableButtonBar\n                    \n                    \n                        Enable Record Edit Button bar, default is false\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableCombiSearch\n                    \n                    \n                        enable Combine Searches buttons, default is true\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:114\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDeleteRecord\n                    \n                    \n                        Enable Delete record button, default is false\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:144\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditRecord\n                    \n                    \n                        Enable Edit record button, default is true\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:139\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableExportGrid\n                    \n                    \n                        enable Export To Excel button, default is true\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:124\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQBE\n                    \n                    \n                        enable QBE button, default is true\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQFF\n                    \n                    \n                        enable QFF (query from file) button, default is false\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSETS\n                    \n                    \n                        enable Save/Load Searches/Set buttons, default is true\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:109\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSort\n                    \n                    \n                        enable Multicolumn Sort button, default is false\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:119\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        queryAddRecord\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryDeleteRecord\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:167\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryEditRecord\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryExportGrid\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromFile\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:155\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromQBE\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryManageSets\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:160\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryRefresh\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:156\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        querySortGrid\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:157\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doAddRecord\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doAddRecord()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:261\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doClear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:247\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doDeleteRecord\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doDeleteRecord()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:269\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doEditRecord\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doEditRecord()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:265\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doExportGrid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doExportGrid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:257\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doManageSets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doManageSets(action)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:234\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doQBE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doQBE()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:222\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doQFF\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doQFF()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doRefresh\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doRefresh()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:239\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doSort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doSort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:243\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doWehaveAQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doWehaveAQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:273\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enableButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enableButton(btn: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:192\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        btn\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            switchState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        switchState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:187\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleDropDown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleDropDown()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/queryBand.ts:230\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropDownIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dropDownIsOpen:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:176\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openStateIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openStateIcon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'glyphicon-triangle-right'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryBandIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryBandIsOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theQueryBand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        theQueryBand:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBandDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand') theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n    \n            \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Select Highlighted                                Reuse a Saved Search                Restore a Saved Record Set                Combine Searches -->                                Save Current Search                Save Record Set                                Manage Saved Searches                Manage Saved Sets                             -->                                        Add        Edit        Delete        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryBand'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBandDirective.html":{"url":"directives/QueryBandDirective.html","title":"directive - QueryBandDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBandDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        queryband\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                theCustomQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theCustomQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        theCustomQuery:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('customQueryBand')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:10\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand') theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickFindInput.html":{"url":"components/QuickFindInput.html","title":"component - QuickFindInput","body":"\n                   \n\n\n\n\n\n  Components\n  QuickFindInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/quickFindInput.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                quickfind-input\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                runQuickFinder\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                quickFind\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        quickFind\n                    \n                    \n                            \n                            Type :    FormControl\n\n                            \n                        \n                            Default value : new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runQuickFinder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        runQuickFinder:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { Component, EventEmitter, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n\n\n\n@Component({\n    selector: 'quickfind-input',\n    template: ``\n})\n\nexport class QuickFindInput {\n\n    @Input() public quickFind = new FormControl();\n    @Input() public value = '';\n    public runQuickFinder: EventEmitter = new EventEmitter();\n\n    constructor() {\n        this.quickFind.valueChanges.pipe(distinctUntilChanged(),debounceTime(1500),).subscribe(query => {\n            this.runQuickFinder.emit(query);\n        });\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QuickFindInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordEditWindow.html":{"url":"components/RecordEditWindow.html","title":"component - RecordEditWindow","body":"\n                   \n\n\n\n\n\n  Components\n  RecordEditWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordEditWindow.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-edit-window\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                saveRecord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentRecord\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentRecord\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveRecord\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveRecord()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     ModalDialogInstance\n\n                    \n                \n                    \n                        \n                            Type :     ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordEditWindow.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FourDModel } from '../js44D/JSFourDModel';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\n\n@Component({\n    selector: 'record-edit-window',\n    template: ''\n})\n\nexport class RecordEditWindow implements ICustomModalComponent {\n\n    @Input() public currentRecord: any; // the Record Edit Window FourDModel\n\n\n    public dialog: ModalDialogInstance;\n\n\n    public set modelContentData(v: ICustomModal) {\n        this.currentRecord = v;\n    }\n\n    saveRecord() {\n        if (this.currentRecord.isRecordLoaded()) {\n            this.currentRecord.updateRecord()\n                .then(() => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        } else {\n            this.currentRecord.insertRecord()\n                .then((recnum) => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        };\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordEditWindow'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordList.html":{"url":"components/RecordList.html","title":"component - RecordList","body":"\n                   \n\n\n\n\n\n  Components\n  RecordList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordList.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            HttpClient\n                            FourDInterface\n                            ListSelectorDialog\n                            Modal\n                \n            \n\n\n            \n                selector\n                record-list\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editWindowConfig\n                            \n                            \n                                    Private\n                                _previousAdvancedQuery\n                            \n                            \n                                    Private\n                                _previousQuery\n                            \n                            \n                                queryBand\n                            \n                            \n                                theGrid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearQuery\n                            \n                            \n                                    Public\n                                deleteRecord\n                            \n                            \n                                    Private\n                                doManageSets\n                            \n                            \n                                    Private\n                                editWindowHandler\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                refreshGrid\n                            \n                            \n                                    Private\n                                restoreSet\n                            \n                            \n                                    Private\n                                showAdvancedQuery\n                            \n                            \n                                    Public\n                                showEditWindow\n                            \n                            \n                                    Public\n                                windowResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dialogInstance\n                            \n                            \n                                editWindow\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedRecords\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ElementRef, viewRef: ViewContainerRef, selectList: ListSelectorDialog)\n                    \n                \n                        \n                            \n                                Defined in src/containers/recordList.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectList\n                                                  \n                                                        \n                                                                    ListSelectorDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dialogInstance\n                    \n                    \n                        this is the associated record list dialog, if set we use it to handle window resize\n\n                            \n                            Type :    ModalDialogInstance\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editWindow\n                    \n                    \n                        this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n\n                            \n                            Type :    ICustomModalComponent\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:134\n                            \n                        \n\n\n                \n                    \n                            Handle browser window resize and resize grid\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:115\n                            \n                        \n\n\n                \n                    \n                            Clear all previous queries\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deleteRecord\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteRecord()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:177\n                            \n                        \n\n\n                \n                    \n                            Delete Selected Record(s)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doManageSets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doManageSets(action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:214\n                            \n                        \n\n\n                \n                    \n                            Handle Manage Sets dropdown menu and act upon user selected action\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editWindowHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editWindowHandler(result: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:190\n                            \n                        \n\n\n                \n                    \n                            private method to deal with edit window close\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:71\n                            \n                        \n\n\n                \n                    \n                            AFter our view gets initialized, subscribe to various events on the Query band and the Grid\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refreshGrid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        refreshGrid(query?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:125\n                            \n                        \n\n\n                \n                    \n                            Refresh teh Grid, run query on 4D side and get records to display\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                : the query string to send to 4D to select records to display on the grid\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            restoreSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        restoreSet(records: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:342\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        records\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showAdvancedQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showAdvancedQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:197\n                            \n                        \n\n\n                \n                    \n                            deal with advanced Query dialog\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showEditWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showEditWindow(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:149\n                            \n                        \n\n\n                \n                    \n                            Show record edit window, to either edit or add a new record\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windowResized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        windowResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/recordList.ts:142\n                            \n                        \n\n\n                \n                    \n                            Intercept Dialog Window resize event and resize the Grid to fit the entire window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editWindowConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _editWindowConfig:     ModalConfig\n\n                    \n                \n                    \n                        \n                            Type :     ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:57\n                            \n                        \n\n                \n                    \n                        Save Edit Window Configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousAdvancedQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _previousAdvancedQuery:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _previousQuery:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryBand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryBand:     QueryBand\n\n                    \n                \n                    \n                        \n                            Type :     QueryBand\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBand)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:35\n                            \n                        \n\n                \n                    \n                        get the associated Query band and Datagrid object instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theGrid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        theGrid:     DataGrid\n\n                    \n                \n                    \n                        \n                            Type :     DataGrid\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(DataGrid)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedRecords\n                    \n                \n\n                \n                    \n                        getselectedRecords()\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordList.ts:41\n                                \n                            \n                    \n                        \n                                return the currently selected records from the grid\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, AfterContentInit, Input, HostListener } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\nimport { QueryBand } from './queryBand';\nimport { AdvancedQueryComponent } from './advancedQuery';\nimport { DataGrid } from '../dataGrid/dataGrid';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { ListSelectorDialog } from '../dialogs/listSelectorDialog';\n\n@Component({\n    selector: 'record-list',\n    template: '',\n    providers: [HttpClient, FourDInterface, ListSelectorDialog, Modal]\n})\n\nexport class RecordList implements AfterContentInit {\n\n    /**\n     * this is the associated record list dialog, if set we use it to handle window resize\n     */\n    @Input() public dialogInstance: ModalDialogInstance = null;\n\n    /**\n     * this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n     */\n    @Input() public editWindow: ICustomModalComponent = null;\n\n    /**\n     * get the associated Query band and Datagrid object instances\n     */\n    @ContentChild(QueryBand) queryBand: QueryBand;\n    @ContentChild(DataGrid) theGrid: DataGrid;\n\n    /**\n     * return the currently selected records from the grid\n     */\n    public get selectedRecords():Array {\n        let selection = [];\n        if (this.theGrid && this.theGrid.getDataProvider()) {\n            const gridRows = this.theGrid.getDataProvider().models;\n            const selectedRows = this.theGrid.selectedRows();\n            for (let index = 0; index  { this.refreshGrid(query); });\n            // if user hits Advanced Query button, call advanced query method\n            if (this.queryBand.enableQBE) {\n                this.queryBand.queryFromQBE.subscribe((query: Object) => { this.showAdvancedQuery(); });\n            }\n            // if user hits Set Management button, call corresponding method method\n            if (this.queryBand.enableSETS) {\n                this.queryBand.queryManageSets.subscribe((action: string) => { this.doManageSets(action); });\n            }\n            // if user hits Export to Excel, call grid's excel export method\n            this.queryBand.queryExportGrid.subscribe(() => { if (this.theGrid) { this.theGrid.exportGridToExcel(); } });\n\n            if (this.editWindow) {\n                this.queryBand.queryAddRecord.subscribe(() => { this.showEditWindow('add'); });\n                this.queryBand.queryEditRecord.subscribe(() => { this.showEditWindow('edit'); });\n            }\n\n            this.queryBand.queryDeleteRecord.subscribe(() => { this.deleteRecord(); });\n\n        }\n\n        // if we have a grid and an associated edit record form, subscribe to the record select event\n        if (this.theGrid && this.editWindow) {\n            this.theGrid.recordSelected.subscribe((record: any) => { this.showEditWindow('edit'); });\n        }\n\n        if (this.editWindow && this.editWindow['dialogConfig']) {\n            this._editWindowConfig = this.editWindow['dialogConfig'];\n        }\n\n        if (this.dialogInstance) {\n            //            console.log(this.dialogInstance)\n            const dialog: any = $(this.dialogInstance.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.resizing._draggable.userEvents.bind('release', (event) => { this.windowResized(event) });\n        }\n    }\n\n    /**\n     * Clear all previous queries\n     */\n    public clearQuery() {\n        this._previousAdvancedQuery = null;\n        this._previousQuery = null;\n    }\n\n\n    /**\n     * Refresh teh Grid, run query on 4D side and get records to display\n     * @param query: the query string to send to 4D to select records to display on the grid\n     */\n    public refreshGrid(query?: Object) {\n        if (!query) { query = this._previousQuery; } // if no query given, try previous\n        if (query && this.theGrid) { this.theGrid.loadData(query); }\n        this._previousQuery = query; // save last queryDeleteRecord\n    }\n\n    /**\n     * Handle browser window resize and resize grid\n     */\n    @HostListener('window:resize') onResize() {\n        this.windowResized(null);\n    }\n\n    /**\n     * Intercept Dialog Window resize event and resize the Grid to fit the entire window\n     * @param event \n     */\n    public windowResized(event) {\n        this.theGrid.resize(); // refresh datagrid to adjust it to the window size\n    }\n\n    /**\n     * Show record edit window, to either edit or add a new record\n     */\n    public showEditWindow(mode: string) {\n        // if editing a record, and we do have a record selected and an edit dialog does exist\n        if (this.theGrid && this.editWindow && mode === 'edit' && this.theGrid.currentRecord) {\n            if (this.theGrid.optimizeGridLoading) { // if we are optimizing the grid, then we need to refresh selected record\n                kendo.ui.progress($(this.elementRef.nativeElement), true); // show loading progress icon\n                this.theGrid.currentRecord.refresh().then(() => { // refresh current record\n                    kendo.ui.progress($(this.elementRef.nativeElement), false); // clear loading progress icon\n                    this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                        .then(result => { this.editWindowHandler(result); }); // open edit dialog\n                });\n            } else {\n                // if not optimizing the grid loading, then we have a complete record loaded already\n                this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                    .then(result => { this.editWindowHandler(result); }); // open edit dialog\n            }\n        }\n\n        if (this.theGrid && this.editWindow && mode === 'add') {\n            // if we are adding a new record\n            const modelDef = (this.theGrid.model);\n            const newModel = (new modelDef());\n            this.modal.openInside(this.editWindow, this.viewRef, newModel, this._editWindowConfig, true); // open edit dialog\n        }\n    }\n\n    /** \n     * Delete Selected Record(s)\n     */\n    public deleteRecord() {\n        if (this.theGrid && this.theGrid.currentRecord) {\n            if (confirm((this.queryBand.cascadeDeleteRecord) ? 'Really delete selected record and all its associated data records?' : 'Really delete selected record?')) {\n                this.theGrid.currentRecord.deleteRecord(this.queryBand.cascadeDeleteRecord)\n                    .then((message) => { alert('Record Deleted'); this.theGrid.refresh(); })\n                    .catch((reason) => { alert(reason); });\n            }\n        }\n    }\n\n    /**\n     * private method to deal with edit window close\n     */\n    private editWindowHandler(result: string) {\n        if (result === 'recordSaved') { this.theGrid.refresh(); }\n    }\n\n    /**\n     * deal with advanced Query dialog\n     */\n    private showAdvancedQuery() {\n        const advancedQuery = AdvancedQueryComponent;\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        this.modal.openInside(AdvancedQueryComponent, this.viewRef, { previousQuery: this._previousAdvancedQuery, model: (newModel.tableName !== '') ? newModel : (this.theGrid.model).prototype }, advancedQuery['dialogConfig'])\n            .then((result: any) => {\n                if (result.query.length > 0) {\n                    this._previousAdvancedQuery = result.queryFields;\n                    this.refreshGrid({ query: result.query }); // open edit dialog\n                }\n            });\n\n    }\n\n    /**\n     * Handle Manage Sets dropdown menu and act upon user selected action\n     */\n    private doManageSets(action: string) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pk = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        let gridRows = this.theGrid.getDataProvider().models;\n        let savedSearches: Array;\n        let savedSets: Array;\n        let selectedRecords = [];\n\n        switch (action) {\n            case 'selectHighlited':\n                if (pk && pk !== '') {\n                    const selectedRows = this.theGrid.selectedRows();\n                    selectedRecords = [];\n                    for (let index = 0; index  {\n                    if (searchName !== '') {\n                        savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                        savedSearches.push({ name: searchName, search: this._previousQuery });\n                        localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                    }\n                }, function () {\n                    // cancelled...\n                })\n                break;\n\n            case 'saveSet':\n                if (pk && pk !== '' && gridRows.length > 0) {\n                    kendo.prompt('Please, enter a name for this Record Set:', '').then((setName) => {\n                        if (setName !== '') {\n                            savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n\n                            gridRows = this.theGrid.getDataProvider().models;\n                            selectedRecords = [];\n                            for (let row = 0; row  {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Select Saved Search';\n                    this.selectList.show(searchList)\n                        .then(result => {\n                            const query = savedSearches[result].search;\n                            this.refreshGrid(query);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'restoreSet':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                let setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Select Saved Set';\n                    this.selectList.show(setList)\n                        .then(result => {\n                            const set = savedSets[result].set;\n                            this.restoreSet(set);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'combineSearches':\n\n                break;\n\n            case 'manageSearches':\n                savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                searchList = [];\n                savedSearches.forEach(element => {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Delete Saved Search';\n                    this.selectList.show(searchList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSearches.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                        }); // open list selector dialog\n                }\n\n                break;\n\n            case 'manageSets':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Delete Saved Set';\n                    this.selectList.show(setList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSets.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSets', JSON.stringify(savedSets));\n                        }); // open list selector dialog\n                }\n                break;\n        }\n    }\n\n    private restoreSet(records: Array) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pkField = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        if (pkField && pkField !== '' && tableName && tableName !== '') {\n            const queryItems = [];\n            records.forEach(id => {\n                queryItems.push(tableName + '.' + pkField + ';=;' + id + ';OR');\n            });\n            this.refreshGrid({ query: queryItems });\n        }\n\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordList'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab.html":{"url":"components/Tab.html","title":"component - Tab","body":"\n                   \n\n\n\n\n\n  Components\n  Tab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tab\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tabs: Tabs)\n                    \n                \n                        \n                            \n                                Defined in src/containers/tabs.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabs\n                                                  \n                                                        \n                                                                    Tabs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                            \n                            Type :    Boolean\n\n                            \n                        \n                            Default value : this.active || false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:51\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = this.active || false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tab'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tabs.html":{"url":"components/Tabs.html","title":"component - Tabs","body":"\n                   \n\n\n\n\n\n  Components\n  Tabs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabs\n            \n\n\n\n            \n                template\n                \n  \n    {{tab.title}}\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTab\n                            \n                            \n                                selectTab\n                            \n                            \n                                selectThisTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTab\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTab(tab: Tab)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/tabs.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    Tab\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectTab\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectTab(event, tab)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/tabs.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectThisTab\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectThisTab(tab)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/tabs.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     Tab[]\n\n                    \n                \n                    \n                        \n                            Type :     Tab[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/tabs.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = this.active || false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{tab.title}}  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tabs'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utf8.html":{"url":"classes/Utf8.html","title":"class - Utf8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utf8\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/utf8.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                byteArray\n                            \n                            \n                                    Private\n                                    Static\n                                byteCount\n                            \n                            \n                                    Private\n                                    Static\n                                byteIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                checkScalarValue\n                            \n                            \n                                    Private\n                                    Static\n                                createByte\n                            \n                            \n                                    Private\n                                    Static\n                                decodeSymbol\n                            \n                            \n                                    Private\n                                    Static\n                                encodeCodePoint\n                            \n                            \n                                    Private\n                                    Static\n                                readContinuationByte\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2decode\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2encode\n                            \n                            \n                                    Static\n                                utf8decode\n                            \n                            \n                                    Static\n                                utf8encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        byteArray:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:181\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        byteCount:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        byteIndex:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:183\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            checkScalarValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkScalarValue(codePoint)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        codePoint\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            createByte\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createByte(codePoint, shift)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        codePoint\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shift\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            decodeSymbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decodeSymbol()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            encodeCodePoint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encodeCodePoint(codePoint)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        codePoint\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            readContinuationByte\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        readContinuationByte()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            ucs2decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ucs2decode(string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            ucs2encode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ucs2encode(array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            utf8decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        utf8decode(byteString)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byteString\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            utf8encode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        utf8encode(string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/js44D/utf8.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Utf8 {\n\n\n\t// Taken from https://mths.be/punycode\n\tprivate static ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter = 0xD800 && value  0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += String.fromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tprivate static checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint > shift) & 0x3F) | 0x80);\n\t}\n\n\tprivate static encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn String.fromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 12);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += String.fromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tpublic static utf8encode(string) {\n\t\tvar codePoints = Utf8.ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index = Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tprivate static decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (Utf8.byteIndex > Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (Utf8.byteIndex == Utf8.byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) = 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) = 0x0800) {\n\t\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tbyte4 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) = 0x010000 && codePoint \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebAppContainer.html":{"url":"components/WebAppContainer.html","title":"component - WebAppContainer","body":"\n                   \n\n\n\n\n\n  Components\n  WebAppContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/webAppContainer.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            Modal\n                \n            \n\n\n            \n                selector\n                web-application\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                            \n                                    Private\n                                urlSearchParms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                showLoginDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userIsLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                userHasLoggedIn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ViewContainerRef, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                    FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userIsLoggedIn\n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        userHasLoggedIn\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLoginDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowLoginDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modal:     Modal\n\n                    \n                \n                    \n                        \n                            Type :     Modal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlSearchParms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urlSearchParms:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation, ViewContainerRef, EventEmitter, AfterContentInit, Input, Output } from '@angular/core';\n\nimport { LoginCmp } from '../login/login';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'web-application',\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    providers: [Modal]\n})\n\n\nexport class WebAppContainer implements AfterContentInit {\n\n    @Input() public userIsLoggedIn = false;\n\n    @Output() public userHasLoggedIn: EventEmitter = new EventEmitter();\n\n    private urlSearchParms: Object = {};\n\n    constructor(public modal: Modal, private elementRef: ViewContainerRef, private fourD: FourDInterface/*, private win:WindowService*/) {\n        const win = window;\n        if (win && win.location && win.location.search) {\n            const url = win.location.search.substr(1); // get incoming url and parse search params\n            url.split('&').forEach(element => {\n                const item = element.split('=');\n                if (item.length === 2) {\n                    this.urlSearchParms[item[0]] = item[1];\n                } else {\n                    this.urlSearchParms[element] = true;\n                }\n            });\n        }\n    }\n\n    showLoginDialog() {\n        this.modal.openInside(LoginCmp, this.elementRef, null, LoginCmp.dialogConfig)\n            .then((result) => {\n                this.userIsLoggedIn = true;\n                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n            });\n\n\n    }\n\n    ngAfterContentInit() {\n        if (!FourDInterface.authentication) {\n            if (this.urlSearchParms.hasOwnProperty('key')) {\n                try {\n                    const key = JSON.parse(atob(this.urlSearchParms['key']));\n                    this.fourD.signIn(key.username, key.password)\n                        .then((authentication) => {\n                            if (FourDInterface.authentication) {\n                                this.userIsLoggedIn = true;\n                                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n                            }\n                        })\n                        .catch(e => { this.showLoginDialog(); });\n                } catch (error) {\n                    this.showLoginDialog();\n                }\n            } else {\n                // no predefined user, login...\n                this.showLoginDialog();\n            }\n        } else {\n            this.userIsLoggedIn = true;\n            this.userHasLoggedIn.emit(FourDInterface.currentUser);\n        }\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'WebAppContainer'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/YesNoModal.html":{"url":"components/YesNoModal.html","title":"component - YesNoModal","body":"\n                   \n\n\n\n\n\n  Components\n  YesNoModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/yesNoModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                            \n                        \n                    \n                \n                \n                    \nok($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     YesNoModalContent\n\n                    \n                \n                    \n                        \n                            Type :     YesNoModalContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     ModalDialogInstance\n\n                    \n                \n                    \n                        \n                            Type :     ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.yesText}}            {{context.noText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'YesNoModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/YesNoModalContent.html":{"url":"classes/YesNoModalContent.html","title":"class - YesNoModalContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  YesNoModalContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/yesNoModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                hideNo\n                            \n                            \n                                    Public\n                                noText\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                yesText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, hideNo: boolean, yesText: string, noText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hideNo\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesText\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noText\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideNo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideNo:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NO'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yesText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YES'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            \n                component\n            \n            \n                OKOnlyModal\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            \n                class\n            \n            \n                OKOnlyContent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            \n                component\n            \n            \n                YesNoModal\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            \n                class\n            \n            \n                YesNoModalContent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModal.ts\n            \n            \n                class\n            \n            \n                ICustomModal\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModalComponent.ts\n            \n            \n                class\n            \n            \n                ICustomModalComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            \n                injectable\n            \n            \n                ModalConfig\n            \n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            \n                variable\n            \n            \n                _defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            \n                class\n            \n            \n                Deferred\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            \n                injectable\n            \n            \n                ModalDialogInstance\n            \n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            \n                injectable\n            \n            \n                Modal\n            \n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            \n                variable\n            \n            \n                _config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/advancedQuery.ts\n            \n            \n                component\n            \n            \n                AdvancedQueryComponent\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            \n                component\n            \n            \n                QueryBand\n            \n            \n                30 %\n                (12/40)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            \n                directive\n            \n            \n                CustomButtonBarDirective\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            \n                directive\n            \n            \n                QueryBandDirective\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/containers/recordEditWindow.ts\n            \n            \n                component\n            \n            \n                RecordEditWindow\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/recordList.ts\n            \n            \n                component\n            \n            \n                RecordList\n            \n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            \n                component\n            \n            \n                Tab\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            \n                component\n            \n            \n                Tabs\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            \n                injectable\n            \n            \n                Tab\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            \n                injectable\n            \n            \n                Tabs\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/webAppContainer.ts\n            \n            \n                component\n            \n            \n                WebAppContainer\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            \n                component\n            \n            \n                FourDDropDown\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            \n                injectable\n            \n            \n                FourDDropDown\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            \n                component\n            \n            \n                FourDRegistryInput\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            \n                injectable\n            \n            \n                FourDRegistryInput\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/quickFindInput.ts\n            \n            \n                component\n            \n            \n                QuickFindInput\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dataGrid/dataGrid.ts\n            \n            \n                component\n            \n            \n                DataGrid\n            \n            \n                52 %\n                (25/48)\n            \n        \n        \n            \n                \n                src/dialogs/listSelectorDialog.ts\n            \n            \n                component\n            \n            \n                ListSelectorDialog\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDCollection.ts\n            \n            \n                injectable\n            \n            \n                FourDCollection\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            \n                class\n            \n            \n                FourDQuery\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            \n                class\n            \n            \n                MD5\n            \n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            \n                injectable\n            \n            \n                FourDInterface\n            \n            \n                96 %\n                (26/27)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            \n                variable\n            \n            \n                calculateHash\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            \n                variable\n            \n            \n                convertObjectToURL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            \n                injectable\n            \n            \n                FourDModel\n            \n            \n                87 %\n                (34/39)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            \n                interface\n            \n            \n                IFieldDescription\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/js44D/base64.ts\n            \n            \n                class\n            \n            \n                Base64\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/js44D/utf8.ts\n            \n            \n                class\n            \n            \n                Utf8\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/login/login.ts\n            \n            \n                component\n            \n            \n                LoginCmp\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/pipes/Base64ImageRef.pipe.ts\n            \n            \n                pipe\n            \n            \n                Base64ImageRef\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/FourDDateToString.pipe.ts\n            \n            \n                pipe\n            \n            \n                FourDDateToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                __karma__\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : >=7.1.0\n        \n            jquery : >=3.2.1\n        \n            rxjs : >=6.1.0\n        \n            zone.js : >=0.8.5\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJS44D Library\nPascal's 4D RESTApi companion Angular Typescript library.\n\n\n\n\n\n\nThis library includes a series of Angular services, components and UI widgets, that interface to a 4D Database backend via 4D RESTApi component. The 4D RESTApi Component must be installed in the 4D Database, and Web Serving must be enabled.\nDetailed documentation for each service/component in this library can be found on the wiki here. Following is a quick run down of the library contents.\nThere is a step by step procedure to get started with the 4D RESTApi component and this library at this wiki page. That page will instruct you on how to get going on the 4D and Angular sides.\nInstallation\nInstall js44d library using npm, as:\nnpm install js44d --saveUsage\nThe library can be divided into three sets of components: 4D Service classes, UI widgets and a Modal Dialog Service class. The 4D Service Classes provide the interface to a 4D backend. The UI widgets are not essential, but do provide some useful UI Components that use the Services Classes. The Modal Dialog provides funcionality to open multiple floating Dialog windows, similar to Windows MDI funcionality.\nEach of the three sets are declared in a separate NgModule: FourDModule, JS44DModule and ModalModule.\nYou reference the 4D Interface Service Classes as:\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';They need to be included in your main NgModule declaration, by importing the FourDModule.\nAs for UI components/widgets and the Modal dialog service, you reference/import them as:\nimport { ..widget.. } from 'js44d';You need to import the modules in your NgModule declaration, where you use them, as in:\n...\nimport { FourDModule, JS44DModule, ModalModule } from 'js44d';\n...\n@NgModule({\n  imports: [\n    ...,\n    FourDModule, JS44DModule, ModalModule\n  ]\n  ],\n  exports: [FourDModule, JS44DModule, ModalModule],\nIf you plan on using any of the UI widgets, then you need to grab a copy of the assets folder contents and drop all that in your own assets directory. You need to also add the following line to your styles.scss file:\n@import './assets/main';And you can edit src/assets/main.scss at will, to add you own styles or modify the existing styles that are used by JS44D UI Widgets.\nA quick note, the UI components/widgets are WEB ONLY, they do not work under Nativescript, so for {N} you can only use the 4D Service Classes. For NativeScript your module declaration should look something like this:\n...\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';\n...\n\n@NgModule({\n    ...\n    providers: [\n        ...,\n        FourDInterface, FourDModel, FourDCollection\n    ],\n...4D Interface Service Classes\nThe library provides a set of service classes for accessing a 4D Database backend that has the 4D RESTApi Component installed.\nFourDInterface\nThis is the base service class that implements most of the calls to 4D RESTApi.\nThe two key functions made available by this class are:\n\ncall4DRESTMethod: a wrapper function to enable calling any 4D RESTApi entry point; it automatically adds a Session Key and a hash tokens to each HTTP POST request sent to 4D, which are required by the 4D RESTApi Component; this function is used by all other services and components to send requests to 4D.\nsignin: a function that will send a REST_Authenticate sign in request to 4D and process 4D's response.\n\nThis class also provides some static variables:\n\ncurrentUser: the name of the currectly signed in user\nauthentication: the authentication response object, returned by the REST_Authenticate call (see)\nsessionKey: the current session token, that must be present in all requests to 4D\netc..\n\nFourDModel\nThis is a service class that provides CRUD functionality, acting as a Data Model base class. It provides the ability to retrieve, create, update or delete records from any 4D table.\nThis class builds upon the Data Model functionality, as described in the Data Model wiki page. \nAll 4D table's Data Models extend the FourDModel class, describing each of the table's fields and providing getter/setter for each field.\nInstances of the FourDModel class, and its extensions, represent a record in the database. This service provides basic CRUD functions to access those records:\n\ngetRecord: retrieves a single record from the database\ninsertRecord: adds a new record to the database\nupdateRecord: updates a record in the database\ndeleteRecord: deletes a record from the database\n\nAdditional functions are described in the FourDModel wiki page.\nFourDCollection\nA service class that represents a collection of 4D records. It is basically an Array of FourDModel derived instances.\nThis class provides a function to retrieve a set of records from a 4D Database:\n\ngetRecords: will take a Query String and send a REST_GetRecords request to 4D to retrieve a collection of 4D records. Record data comes as an Array of Data Model (FourDModel) instances.\n\nUI Widgets\nThe following UI widgets and components, which also interact with a 4D backend, are available for use in Angular apps. Detailed documentation for each widget is found on the wiki pages.\nLogin Component\nA basic Login dialog that takes a user name and password. It calls FourDInterface signin function, that sends a REST_Authenticate request to 4D to authenticate the given user.\n\nDatagrid Component\nThis Component provides Data Grid functionality, to display and interact with a list of records from a 4D Database.\n\nThe component is based on a KendoUI Grid widget, and displays contents of FourDModel instances, from a FourDCollection. \nQuery Band Component\nA query widget that provides functionality for querying a 4D Database, built upon a FourDModel.\n\nIt allows for a user defined query form, advanced query functionality and the ability to save and reuse queries.\nRecord List Component\nThis widget builds upon the QueryBand and DataGrid components. It associates a QueryBand to a DataGrid, so the results of a query are displayed on the associated DataGrid.\n\nAdditionally the widget provides a button bar with functionality to add/edit/delete records. It also allows for user defined custom buttons added to the button bar.\nWeb App Container Component\nThis is a Web App wrapper component, that ensures that the application component runs authenticated. If upon app initialization, it is not yet authenticated to a 4D backend, this component will display a Login dialog to get user credentials and authenticate the user.\n4D List DropDown Control\nThis is an HTML select drop down whose items are obtained directly from a 4D Choice List. One of the parameters to this widget is the choice list name.\nExample:\n  Additional Widgets/Services\nSome additional widgets/services are also part of the library, but those do not interact with 4D backends and do not depend on the 4D RESTApi.\nMDI Dialog Service\nA set of service classes that provide functionality to show multiple floating dialog windows, which can be modal or not.\n\nList Selector Dialog\nA component that presents a dialog with a list of items for user selection.\n\nTab Component\nA simple horizontal tab component, that provides functionality to allow user to tab among multiple forms.\n\nContributors\n\n\n\n\n\n\n\n\nJulio Carneiro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Julio Carneiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FourDModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JS44DModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __karma__   (src/.../test.ts)\n                        \n                        \n                            _config   (src/.../Modal.ts)\n                        \n                        \n                            _defaultConfig   (src/.../ModalConfig.ts)\n                        \n                        \n                            calculateHash   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            convertObjectToURL   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            __karma__\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        __karma__:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/providers/Modal.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _config:     ModalConfig\n\n                    \n                \n                    \n                        \n                            Type :     ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/models/ModalConfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _defaultConfig:     ModalConfig\n\n                    \n                \n                    \n                        \n                            Type :     ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/js44D/JSFourDInterface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateHash\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calculateHash:     \n\n                    \n                \n                    \n                        \n                            Default value : function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n}\n                        \n                    \n\n                \n                    \n                        Calculates hash code from URL string or POST form data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertObjectToURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        convertObjectToURL:     \n\n                    \n                \n                    \n                        \n                            Default value : function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n}\n                        \n                    \n\n                \n                    \n                        convert object to encoded url string\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

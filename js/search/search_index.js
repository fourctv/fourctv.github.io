var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AdvancedQueryComponent.html",[0,0.195,1,0.859]],["body/components/AdvancedQueryComponent.html",[0,0.228,1,1.134,2,0.816,3,0.119,4,0.119,5,2.995,6,0.523,7,0.674,8,0.085,9,1.765,10,0.988,11,1.47,12,2.985,13,0.523,14,1.345,15,1.487,16,1.389,17,0.026,18,2.447,19,5.183,20,6.854,21,3.993,22,3.993,23,3.993,24,5.183,25,6.468,26,3.486,27,3.993,28,3.993,29,3.871,30,3.993,31,2.447,32,3.176,33,1.833,34,2.705,35,3.874,36,3.993,37,3.993,38,3.993,39,5.183,40,3.993,41,4.879,42,4.879,43,6.675,44,2.037,45,5.183,46,4.394,47,5.183,48,5.183,49,3.874,50,3.993,51,5.183,52,3.993,53,3.993,54,1.063,55,2.686,56,3.486,57,4.302,58,5.183,59,2.078,60,3.993,61,3.993,62,2.686,63,3.993,64,3.993,65,2.985,66,3.993,67,3.993,68,0.531,69,3.993,70,5.183,71,3.993,72,3.993,73,3.993,74,3.386,75,3.993,76,3.386,77,3.993,78,3.993,79,3.993,80,3.993,81,3.993,82,6.09,83,6.675,84,6.675,85,6.09,86,3.993,87,3.993,88,3.874,89,3.993,90,3.993,91,3.993,92,2.686,93,2.686,94,3.993,95,2.686,96,3.993,97,2.447,98,3.993,99,3.386,100,3.993,101,0.816,102,3.248,103,3.993,104,4.147,105,2.54,106,4.989,107,2.037,108,4.718,109,4.394,110,3.386,111,3.993,112,3.993,113,0.469,114,1.479,115,3.248,116,0.762,117,1.372,118,1.678,119,2.985,120,3.248,121,3.248,122,0.585,123,4.511,124,2.754,125,4.511,126,4.511,127,2.985,128,3.248,129,3.248,130,1.276,131,3.993,132,3.993,133,3.248,134,3.248,135,1.461,136,1.829,137,0.46,138,1.556,139,1.214,140,1.209,141,0.6,142,2.082,143,0.762,144,0.746,145,0.579,146,0.652,147,1.14,148,0.872,149,0.865,150,2.082,151,1.276,152,2.082,153,2.248,154,3.248,155,2.765,156,0.608,157,2.985,158,3.993,159,3.993,160,3.993,161,3.993,162,2.082,163,2.082,164,2.082,165,0.872,166,1.45,167,3.248,168,5.755,169,2.082,170,2.082,171,2.082,172,2.082,173,3.248,174,2.082,175,1.276,176,3.248,177,2.082,178,2.082,179,2.082,180,1.797,181,1.829,182,2.185,183,2.185,184,1.479,185,2.185,186,0.816,187,2.185,188,2.185,189,1.196,190,5.183,191,2.363,192,2.082,193,1.829,194,2.082,195,2.082,196,1.556,197,2.082,198,1.006,199,0.386,200,1.083,201,1.276,202,1.14,203,0.193,204,2.179,205,1.172,206,0.818,207,1.4,208,1.276,209,1.4,210,1.006,211,0.119,212,0.045,213,2.082,214,2.082,215,3.993,216,2.082,217,3.248,218,3.993,219,2.082,220,1.895,221,3.993,222,3.993,223,4.892,224,4.892,225,2.082,226,3.248,227,2.082,228,0.43,229,2.082,230,1.765,231,1.556,232,1.14,233,2.754,234,2.082,235,2.082,236,4.511,237,2.082,238,2.082,239,2.082,240,2.082,241,2.082,242,2.082,243,2.082,244,3.248,245,3.993,246,2.082,247,1.083,248,0.491,249,1.765,250,3.248,251,2.082,252,2.082,253,1.765,254,3.248,255,2.082,256,2.082,257,1.556,258,1.276,259,2.082,260,2.082,261,0.523,262,0.927,263,0.87,264,0.491,265,1.288,266,0.674,267,4.892,268,0.674,269,0.523,270,0.674,271,0.523,272,0.674,273,0.523,274,0.594,275,1.052,276,0.523,277,0.674,278,0.523,279,0.633,280,0.674,281,0.491,282,0.469,283,0.674,284,0.671,285,0.674,286,0.523,287,0.674,288,0.523,289,0.765,290,0.558,291,0.674,292,0.523,293,0.674,294,0.491,295,0.674,296,0.523,297,0.674,298,0.523,299,0.558,300,0.674,301,0.491,302,0.523,303,0.558,304,0.46,305,0.674,306,0.46,307,0.674,308,0.007,309,0.011,310,0.007]],["title/classes/Base64.html",[212,0.074,311,1.652]],["body/classes/Base64.html",[3,0.212,4,0.212,8,0.226,17,0.025,33,1.585,44,2.182,49,2.774,59,3.08,65,4.425,68,0.38,113,0.713,114,1.899,116,0.769,118,2.91,122,0.889,141,0.588,143,0.769,144,0.605,145,0.344,146,0.658,148,0.922,149,0.854,156,0.726,165,0.769,202,1.809,211,0.212,212,0.08,220,2.333,228,0.767,248,1.164,262,1.41,265,1.977,308,0.013,309,0.017,310,0.013,311,2.682,312,1.459,313,3.147,314,3.207,315,5.552,316,5.552,317,3.126,318,5.552,319,5.552,320,2.487,321,5.373,322,4.15,323,4.94,324,2.773,325,4.94,326,4.188,327,4.188,328,4.94,329,4.94,330,5.552,331,4.94,332,4.188,333,4.94,334,3.712,335,4.188,336,3.712,337,4.94,338,3.027,339,3.712,340,4.94,341,3.712,342,4.94,343,3.712,344,4.94,345,3.712,346,3.712,347,3.712,348,4.94,349,4.94,350,4.94,351,4.94,352,4.94,353,4.188,354,4.94,355,4.94,356,4.94,357,3.712,358,3.712,359,3.712,360,2.774,361,3.712,362,3.712,363,3.712,364,4.94,365,3.712,366,4.146,367,5.919,368,3.734,369,3.712,370,3.712,371,4.94,372,4.94,373,3.712,374,3.712,375,3.712,376,4.94,377,3.712,378,3.712,379,3.712,380,3.323,381,4.94,382,3.712,383,4.94,384,2.682,385,3.027,386,4.94,387,3.712,388,2.09,389,3.712,390,1.67,391,3.712,392,3.712,393,2.774,394,3.147,395,3.712,396,3.712,397,3.147,398,3.712,399,3.712,400,3.323,401,3.712,402,3.712,403,2.497,404,2.774,405,2.497,406,2.774,407,3.147,408,3.712,409,3.712,410,2.497,411,4.146,412,5.552,413,2.497,414,3.712,415,2.774,416,5.552]],["title/pipes/Base64ImageRef.html",[417,2.095,418,2.095]],["body/pipes/Base64ImageRef.html",[3,0.287,4,0.287,8,0.205,10,1.53,13,1.265,17,0.025,122,0.906,141,0.467,143,0.932,144,0.733,145,0.592,146,0.797,148,0.932,149,0.921,156,0.777,165,0.783,199,0.445,203,0.467,211,0.287,212,0.109,228,1.039,308,0.018,309,0.021,310,0.018,311,2.431,417,3.083,418,4.138,419,3.761,420,4.266,421,4.266,422,5.073,423,6.388,424,5.031,425,6.388,426,6.388,427,5.073,428,5.984,429,5.031,430,3.761,431,3.083,432,6.388,433,3.384,434,3.083,435,3.761,436,3.761,437,4.266,438,5.031,439,2.618,440,5.031]],["title/directives/CustomButtonBarDirective.html",[264,0.806,304,0.755]],["body/directives/CustomButtonBarDirective.html",[0,0.253,3,0.181,4,0.181,5,1.646,6,0.795,8,0.181,13,0.795,14,1.144,16,1.307,17,0.026,26,2.128,29,2.979,31,1.939,32,3.132,33,0.903,34,1.528,55,2.128,56,2.979,59,2.305,62,4.325,95,2.128,97,3.393,101,0.795,116,1.097,148,1.025,156,0.497,184,1.859,186,1.683,191,1.528,199,0.235,200,2.66,202,1.896,203,0.293,211,0.333,212,0.111,228,1.345,232,0.903,247,2.66,248,1.515,264,1.204,284,1.056,289,1.461,290,1.483,303,0.848,304,0.978,306,0.698,308,0.011,309,0.015,310,0.011,320,1.329,384,3.147,390,2.847,433,2.979,439,1.646,441,2.128,442,3.311,443,3.59,444,1.939,445,2.494,446,2.326,447,3.701,448,2.365,449,2.365,450,1.781,451,2.365,452,2.128,453,3.724,454,2.714,455,2.365,456,1.044,457,3.311,458,3.82,459,1.993,460,1.423,461,2.979,462,2.305,463,3.117,464,2.365,465,2.128,466,2.365,467,2.365,468,3.311,469,2.365,470,3.311,471,2.365,472,2.365,473,2.365,474,2.365,475,2.365,476,2.365,477,3.39,478,3.438,479,2.365,480,2.365,481,4.381,482,3.311,483,2.365,484,3.311,485,2.365,486,2.365,487,2.365,488,2.714,489,2.365,490,2.365,491,2.365,492,2.714,493,2.365,494,2.128,495,2.365,496,2.365,497,2.365,498,2.365,499,2.365,500,2.128,501,2.128,502,2.365,503,2.979,504,2.714,505,2.365,506,2.365,507,2.365,508,2.365,509,2.365,510,2.365,511,2.365,512,2.365,513,2.365,514,2.128,515,2.365,516,1.646,517,2.365,518,3.82,519,3.82,520,3.311,521,2.365,522,2.365,523,2.365,524,2.365,525,2.365,526,3.82,527,2.365,528,2.365,529,2.365,530,1.939,531,2.365,532,2.365,533,2.365,534,2.365,535,2.365,536,2.365,537,3.82,538,2.365,539,2.365,540,2.365,541,2.365,542,2.365,543,2.365,544,2.365,545,2.365,546,2.365,547,3.82,548,2.365,549,2.128,550,2.365,551,2.365,552,2.365,553,2.365,554,2.365,555,2.365,556,2.365,557,3.311,558,2.365,559,2.305,560,3.311,561,2.365,562,1.423,563,2.714,564,2.469,565,1.243,566,1.423,567,3.311,568,2.365,569,2.365,570,2.365,571,2.365,572,2.365,573,2.365,574,2.365,575,2.365,576,2.365,577,2.365,578,2.365,579,2.365,580,1.025,581,3.311]],["title/classes/Deferred.html",[212,0.074,582,2.3]],["body/classes/Deferred.html",[3,0.238,4,0.238,8,0.17,17,0.026,68,0.427,113,0.769,114,1.767,116,0.649,117,1.882,137,1.367,140,1.117,141,0.574,145,0.545,149,0.923,156,0.468,165,0.649,166,1.428,175,2.095,184,1.521,189,1.535,199,0.31,203,0.387,211,0.238,212,0.115,228,1.321,232,1.677,248,1.256,263,1.117,282,0.923,308,0.02,309,0.019,310,0.015,312,1.639,320,2.239,400,2.805,456,1.384,477,2.773,562,1.876,580,1.351,582,3.951,583,2.355,584,3.117,585,2.992,586,3.329,587,4.164,588,5.33,589,4.17,590,4.17,591,5.547,592,1.428,593,2.805,594,3.535,595,2.805,596,3.535,597,2.348,598,3.535,599,3.535,600,2.555,601,2.555,602,1.84,603,3.535,604,3.535,605,3.535,606,2.348,607,3.535,608,3.535,609,3.535,610,3.535,611,3.535,612,3.535,613,3.535,614,3.535,615,4.518,616,3.535,617,4.518,618,3.535,619,3.951,620,3.535,621,4.98,622,3.535,623,3.535,624,3.535,625,4.98,626,3.535,627,3.984,628,3.535,629,1.639,630,4.518,631,3.535,632,4.518,633,4.518,634,4.518,635,3.535,636,3.117,637,3.117,638,3.117,639,3.117,640,1.876,641,3.535,642,3.535,643,3.117,644,1.752,645,4.518,646,3.535,647,3.117,648,3.117,649,2.555,650,2.805,651,4.518,652,3.535,653,3.535,654,3.535,655,3.535,656,3.535]],["title/injectables/FourDCollection.html",[592,0.916,657,1.779]],["body/injectables/FourDCollection.html",[3,0.144,4,0.144,8,0.103,16,1.34,17,0.026,33,1.593,54,1.457,68,0.257,107,1.474,113,0.768,114,1.281,116,1.082,122,0.675,135,1.688,137,1.098,139,1.697,141,0.606,143,0.584,144,0.745,145,0.582,146,0.743,147,1.281,148,1.032,149,0.768,151,2.645,155,3.642,156,0.765,165,0.946,193,3.618,199,0.396,203,0.233,211,0.144,212,0.097,220,2.236,228,0.927,232,1.651,248,1.254,258,1.541,289,1.498,308,0.016,309,0.013,310,0.009,311,1.812,314,1.952,324,2.238,360,2.804,366,3.579,446,1.576,456,0.884,460,2.238,492,2.749,565,0.988,585,2.238,586,1.308,592,1.005,597,1.416,629,2.498,657,2.335,658,1.541,659,2.131,660,1.724,661,2.804,662,5.543,663,3.751,664,2.523,665,3.18,666,3.18,667,3.751,668,4.546,669,2.871,670,3.048,671,5.752,672,3.804,673,4.487,674,3.579,675,4.512,676,5.389,677,4.487,678,4.487,679,3.18,680,3.18,681,3.751,682,3.751,683,2.514,684,3.18,685,4.732,686,2.112,687,4.974,688,4.085,689,4.974,690,4.974,691,3.42,692,3.754,693,3.751,694,3.18,695,3.482,696,4.512,697,4.512,698,5.447,699,2.514,700,2.804,701,2.112,702,3.18,703,3.18,704,3.18,705,3.18,706,3.18,707,3.18,708,2.804,709,3.18,710,3.18,711,3.18,712,3.18,713,4.086,714,2.523,715,2.523,716,3.346,717,3.18,718,2.523,719,2.299,720,3.009,721,2.299,722,2.514,723,3.18,724,1.474,725,2.514,726,3.718,727,2.804,728,2.514,729,2.804,730,2.299,731,3.18,732,2.112,733,2.514,734,2.514,735,2.514,736,2.514,737,2.514,738,3.751,739,2.804,740,3.751,741,2.514,742,2.514,743,2.804,744,1.952,745,2.131,746,2.514,747,2.131,748,1.691,749,2.131,750,1.691,751,3.009,752,3.751,753,2.131,754,4.732,755,3.751,756,3.18,757,5.322,758,3.804,759,1.879,760,2.514,761,2.131,762,4.903,763,2.514,764,2.514,765,2.514,766,1.541,767,3.18,768,2.514,769,4.974,770,4.974,771,3.804,772,5.322,773,2.514,774,2.514,775,3.18,776,3.18,777,2.131,778,2.131,779,2.131,780,2.131,781,2.131,782,2.514,783,2.514,784,2.514,785,1.812,786,1.541,787,1.691,788,3.18,789,2.131,790,2.131,791,2.514,792,2.514,793,2.514,794,2.514,795,2.514,796,2.514,797,2.514,798,2.514,799,2.514,800,2.514,801,2.514,802,3.751,803,2.514,804,1.879,805,3.751,806,3.751,807,2.514,808,2.514,809,2.514,810,2.514,811,2.514,812,2.514,813,1.416,814,1.691,815,2.514]],["title/pipes/FourDDateToString.html",[417,2.095,816,2.095]],["body/pipes/FourDDateToString.html",[3,0.289,4,0.289,8,0.206,10,1.539,13,1.272,17,0.025,122,0.911,141,0.469,143,0.788,144,0.736,146,0.674,149,0.975,155,3.101,156,0.759,165,0.788,199,0.376,203,0.469,211,0.289,212,0.109,228,1.323,232,1.444,248,1.192,308,0.018,309,0.021,310,0.018,338,3.101,390,2.277,417,3.101,419,3.782,421,4.29,422,5.091,427,5.091,431,3.101,435,3.782,437,4.29,669,2.444,759,3.782,816,4.058,817,4.29,818,5.06,819,4.455,820,5.06,821,5.06,822,4.29,823,5.06,824,5.06,825,3.403,826,5.06]],["title/components/FourDDropDown.html",[0,0.195,271,0.859]],["body/components/FourDDropDown.html",[0,0.326,1,0.987,2,1.289,3,0.224,4,0.224,5,2.971,6,0.987,7,1.272,8,0.16,10,1.559,12,4.267,13,0.987,14,1.457,15,1.194,16,0.811,17,0.025,32,3.498,34,2.758,54,0.926,59,2.971,68,0.402,74,4.84,76,4.84,97,3.498,99,4.84,101,1.289,105,3.535,114,1.629,116,0.889,122,0.923,124,4.347,127,4.524,130,2.015,137,0.867,138,2.936,139,1.84,141,0.608,143,0.798,144,0.769,145,0.582,146,0.683,147,1.838,148,0.612,149,0.567,151,2.015,156,0.755,165,0.889,166,1.374,181,3.214,191,2.758,199,0.381,202,1.727,203,0.364,210,1.897,211,0.224,212,0.085,228,0.811,231,2.936,261,0.987,262,1.464,263,1.374,264,0.926,265,1.727,266,1.272,268,1.272,269,0.987,270,1.272,271,1.648,272,1.272,273,0.987,274,1.121,275,1.661,276,0.987,277,1.272,278,0.987,279,1.194,280,1.272,281,0.926,282,0.74,283,1.272,284,1.059,285,1.272,286,0.987,287,1.272,288,0.987,289,1.208,290,1.052,291,1.272,292,0.987,293,1.272,294,0.926,295,1.272,296,0.987,297,1.272,298,0.987,299,1.052,300,1.272,301,0.926,302,0.987,303,1.052,304,0.867,305,1.272,306,0.867,307,1.272,308,0.014,309,0.018,310,0.014,439,2.044,592,1.374,595,2.642,629,1.544,813,2.211,827,3.33,828,3.833,829,6.974,830,5.709,831,6.052,832,4.267,833,5.709,834,5.709,835,5.127,836,3.927,837,3.927,838,5.127,839,3.927,840,3.927,841,3.927,842,2.887,843,2.936,844,5.127,845,3.927,846,3.927,847,3.927,848,3.927,849,3.927,850,3.927,851,2.407,852,2.642]],["title/modules/FourDModule.html",[853,1.652,854,1.925]],["body/modules/FourDModule.html",[3,0.29,4,0.29,8,0.207,17,0.025,139,2.087,199,0.504,203,0.471,210,2.453,211,0.29,212,0.11,261,1.276,308,0.018,309,0.021,310,0.018,566,2.285,657,3.572,720,3.572,853,2.453,854,3.976,855,2.642,856,2.859,857,3.415,858,2.453,859,3.098,860,3.687,861,4.304,862,4.304,863,4.047,864,3.111,865,5.077,866,3.111,867,4.047,868,3.687,869,5.436,870,3.111,871,4.304,872,5.077,873,3.795]],["title/classes/FourDQuery.html",[212,0.074,695,1.925]],["body/classes/FourDQuery.html",[3,0.094,4,0.094,6,1.176,8,0.067,14,1.132,16,1.367,17,0.026,18,2.424,33,1.129,44,1.346,54,1.292,68,0.169,92,1.817,93,1.112,105,1.521,107,1.714,113,0.712,114,1.129,116,0.993,118,2.644,139,0.503,141,0.508,144,0.672,145,0.508,146,0.85,148,0.257,149,0.925,151,2.491,153,1.521,156,0.766,157,2.019,165,0.934,175,0.65,186,0.416,198,0.799,199,0.324,203,0.153,211,0.226,212,0.107,220,0.695,228,1.325,232,1.689,248,1.35,258,2.099,274,1.732,299,0.724,302,0.416,308,0.012,309,0.009,310,0.015,311,1.305,312,0.65,314,2.435,317,3.087,320,1.439,324,2.318,338,1.013,368,1.112,380,1.112,384,0.799,385,2.099,388,1.521,390,0.744,404,4.197,405,3.321,406,3.984,410,1.112,411,3.148,413,1.817,431,1.013,434,3.36,436,2.957,443,1.783,445,0.931,446,1.439,456,1.256,459,0.744,460,2.106,462,1.783,504,1.013,559,2.57,562,1.541,564,1.305,565,1.346,566,0.744,585,2.526,586,2.681,587,1.817,592,0.724,593,3.465,597,2.9,600,1.013,606,0.931,629,1.346,640,2.526,644,2.239,650,4.082,660,0.536,669,3.326,670,2.672,686,0.931,688,2.424,691,2.672,692,1.112,695,2.9,701,0.931,713,1.112,714,1.817,715,2.933,716,1.817,718,2.933,719,1.013,721,1.656,724,1.062,726,1.236,729,2.019,730,2.424,732,0.931,744,1.406,748,1.817,750,1.817,751,3.319,766,1.656,785,2.932,786,1.656,787,1.817,804,1.236,813,2.635,814,3.148,819,3.776,825,1.112,832,3.851,842,1.521,851,2.868,868,2.424,870,1.013,874,1.112,875,2.019,876,2.019,877,1.112,878,4.186,879,5.372,880,3.26,881,3.26,882,2.904,883,4.186,884,4.186,885,1.653,886,3.354,887,2.019,888,2.957,889,1.656,890,1.656,891,2.29,892,1.653,893,2.661,894,2.661,895,3.354,896,1.653,897,3.354,898,2.29,899,3.354,900,2.29,901,2.29,902,2.019,903,2.29,904,1.653,905,3.498,906,2.019,907,3.354,908,1.653,909,2.019,910,1.653,911,1.653,912,2.019,913,2.661,914,2.019,915,2.29,916,1.656,917,2.29,918,1.653,919,2.304,920,1.653,921,1.402,922,3.697,923,1.402,924,1.236,925,1.402,926,1.236,927,1.402,928,2.661,929,1.112,930,2.019,931,1.236,932,1.236,933,1.236,934,1.236,935,1.236,936,1.236,937,1.112,938,1.112,939,1.402,940,1.236,941,1.817,942,1.817,943,1.112,944,2.019,945,1.236,946,1.236,947,1.236,948,1.236,949,1.402,950,2.957,951,0.86,952,1.236,953,1.402,954,1.402,955,3.26,956,1.402,957,1.402,958,2.957,959,1.402,960,1.236,961,2.904,962,1.236,963,1.402,964,2.661,965,1.402,966,1.402,967,1.402,968,1.402,969,1.112,970,1.402,971,1.236,972,2.019,973,1.402,974,1.402,975,1.402,976,2.29,977,1.402,978,1.402,979,1.402,980,1.236,981,1.236,982,1.402,983,1.236,984,1.402,985,1.236,986,1.236,987,1.236,988,1.112,989,1.402,990,1.402,991,1.402,992,1.402,993,1.402,994,1.236,995,1.402,996,2.29,997,3.697,998,3.697,999,3.26,1000,3.697,1001,3.697,1002,1.402,1003,1.402,1004,2.29,1005,1.402,1006,1.402,1007,1.402,1008,1.402,1009,1.402,1010,1.236,1011,3.148,1012,1.112,1013,2.29,1014,2.29,1015,1.013,1016,3.498,1017,1.402,1018,1.402,1019,1.402,1020,3.967,1021,1.236,1022,1.402,1023,2.957,1024,1.236,1025,1.112,1026,2.29,1027,1.402,1028,1.402,1029,1.402,1030,1.402,1031,1.402,1032,1.402,1033,2.29,1034,2.29,1035,1.402,1036,1.402,1037,1.402,1038,1.402,1039,2.29,1040,1.402,1041,2.29,1042,3.354,1043,2.29,1044,2.29,1045,2.29,1046,1.402,1047,2.29,1048,1.402,1049,1.236,1050,2.29,1051,2.29,1052,1.236,1053,1.402,1054,1.402,1055,1.402,1056,1.402,1057,1.402,1058,1.236,1059,3.354,1060,1.013,1061,1.402,1062,1.402,1063,1.402,1064,2.29,1065,1.236,1066,1.112,1067,1.236,1068,2.29,1069,1.402,1070,1.402,1071,1.402,1072,1.402,1073,1.402,1074,1.402,1075,1.402,1076,1.402,1077,1.402,1078,1.402,1079,1.402,1080,3.498,1081,2.304,1082,2.933,1083,1.402,1084,2.29,1085,1.402,1086,1.402,1087,3.354,1088,1.402,1089,1.402,1090,1.817,1091,1.402,1092,2.29,1093,1.402,1094,1.402,1095,2.561,1096,2.304,1097,2.957,1098,1.402,1099,1.402,1100,1.402,1101,1.112,1102,1.402,1103,2.29,1104,1.236,1105,1.402,1106,1.402,1107,1.402,1108,1.402,1109,3.697,1110,4.186,1111,2.29,1112,2.904,1113,4.186,1114,1.402,1115,1.402,1116,2.29,1117,1.402,1118,1.402,1119,1.402,1120,1.402,1121,1.236,1122,1.402,1123,1.402,1124,1.402,1125,1.402,1126,2.904,1127,1.402,1128,1.402,1129,1.402,1130,1.236,1131,2.904,1132,2.904,1133,4.186,1134,2.904,1135,1.402,1136,1.402,1137,1.402,1138,1.402,1139,1.402,1140,1.402,1141,1.236,1142,1.402,1143,1.402,1144,2.019,1145,2.29,1146,1.402,1147,1.402,1148,1.402,1149,1.402,1150,1.402,1151,4.648,1152,1.402,1153,2.29,1154,1.402,1155,1.402,1156,1.402,1157,1.402,1158,1.402,1159,1.402,1160,1.236,1161,1.402,1162,0.931,1163,1.402,1164,1.402,1165,1.402,1166,1.402,1167,1.402,1168,2.904,1169,3.691,1170,1.402,1171,1.402,1172,1.402,1173,2.29,1174,2.29,1175,2.561,1176,1.402,1177,1.402,1178,1.236,1179,1.236,1180,1.402,1181,1.236]],["title/components/FourDRegistryInput.html",[0,0.195,273,0.859]],["body/components/FourDRegistryInput.html",[0,0.321,1,0.954,2,1.26,3,0.217,4,0.217,6,0.954,7,1.229,8,0.155,10,1.524,12,4.196,13,0.954,14,1.453,15,1.154,16,0.784,17,0.025,54,0.894,68,0.388,101,1.26,113,0.723,114,1.82,116,1.077,122,0.902,127,4.463,130,1.97,137,0.837,138,2.836,139,1.815,141,0.635,143,0.591,144,0.732,145,0.62,146,0.505,147,1.82,148,0.874,149,0.861,156,0.777,165,0.874,166,1.504,186,1.26,198,1.833,199,0.373,202,1.884,203,0.352,210,1.833,211,0.217,212,0.082,261,0.954,262,1.431,263,1.343,264,0.894,265,1.704,266,1.229,268,1.229,269,0.954,270,1.229,271,0.954,272,1.229,273,1.501,274,1.602,275,1.624,276,0.954,277,1.229,278,0.954,279,1.154,280,1.229,281,0.894,282,0.723,283,1.229,284,1.035,285,1.229,286,0.954,287,1.229,288,0.954,289,1.181,290,1.016,291,1.229,292,0.954,293,1.229,294,0.894,295,1.229,296,0.954,297,1.229,298,0.954,299,1.016,300,1.229,301,0.894,302,0.954,303,1.016,304,0.837,305,1.229,306,0.837,307,1.229,308,0.013,309,0.017,310,0.013,439,1.974,580,1.624,592,1.343,595,2.552,629,1.491,813,2.136,842,2.822,843,2.836,852,2.552,1121,4.196,1182,3.216,1183,5.613,1184,5.613,1185,5.613,1186,5.971,1187,5.971,1188,4.758,1189,5.613,1190,5.613,1191,5.613,1192,5.012,1193,3.794,1194,3.794,1195,3.794,1196,3.794,1197,3.794,1198,3.794,1199,3.794,1200,3.794,1201,3.794,1202,3.794,1203,5.012,1204,3.794,1205,3.794,1206,3.794,1207,6.208,1208,3.794,1209,5.613,1210,3.794,1211,5.971,1212,5.012,1213,5.012,1214,3.794,1215,3.794,1216,3.794,1217,3.794,1218,3.794,1219,3.794]],["title/classes/ICustomModal.html",[206,1.344,212,0.074]],["body/classes/ICustomModal.html",[2,1.382,3,0.314,4,0.314,8,0.224,17,0.024,117,1.671,145,0.51,206,2.477,211,0.314,212,0.119,308,0.019,309,0.022,310,0.019,312,2.16,324,2.473,583,2.024,602,1.898,644,2.309,660,1.781,1220,4.66,1221,4.66]],["title/classes/ICustomModalComponent.html",[11,1.259,212,0.074]],["body/classes/ICustomModalComponent.html",[2,1.485,3,0.281,4,0.281,8,0.201,11,2.176,17,0.025,68,0.504,113,0.852,117,2.041,122,1.064,140,1.696,141,0.587,145,0.587,146,0.874,165,0.92,184,1.874,199,0.366,211,0.281,212,0.107,228,1.356,282,0.947,308,0.017,309,0.021,310,0.017,312,1.936,324,2.659,580,2.126,583,2.417,602,2.04,639,4.907,644,2.483,649,4.023,660,1.596,938,4.415,1221,5.01,1222,4.176,1223,6.564,1224,6.564,1225,4.926,1226,4.926,1227,5.01,1228,5.909,1229,4.926,1230,5.909,1231,5.909,1232,2.773]],["title/interfaces/IFieldDescription.html",[951,1.779,1233,2.556]],["body/interfaces/IFieldDescription.html",[3,0.073,4,0.073,8,0.052,16,1.139,17,0.026,18,1.341,33,1.472,49,0.96,54,1.215,68,0.131,92,3.637,104,1.089,106,1.855,107,1.821,108,4.501,109,2.862,110,2.424,113,0.595,114,1.472,116,0.966,122,0.394,137,0.483,139,1.027,141,0.313,144,0.76,145,0.563,146,0.549,147,0.367,148,0.526,149,0.869,151,2.167,153,1.232,155,4.304,156,0.763,165,0.997,184,1.544,186,1.036,193,3.572,198,0.621,199,0.282,203,0.119,211,0.125,212,0.047,220,1.201,228,1.333,230,2.424,232,1.868,247,1.488,248,1.36,257,0.96,258,2.069,279,0.665,289,1.577,308,0.016,309,0.008,310,0.008,311,1.057,314,1.971,317,3.326,324,1.979,326,1.089,338,0.787,366,2.772,390,2.481,397,1.089,403,0.864,407,1.089,446,0.54,456,1.321,459,0.985,460,2.32,463,2.132,492,1.341,500,2.271,516,1.139,530,1.752,559,2.515,563,0.787,565,1.124,580,2.055,585,2.481,586,2.684,592,0.586,597,2.904,600,0.787,606,0.723,629,2.204,644,2.103,647,0.96,657,2.145,660,1.622,661,1.636,664,0.864,666,1.089,668,3.558,669,3.033,670,3.242,671,3.494,674,3.929,676,2.424,679,1.089,684,1.089,685,4.485,686,2.132,688,3.242,691,1.341,692,1.923,694,1.089,695,2.132,696,2.424,697,2.424,698,2.862,700,1.636,701,1.232,702,1.089,703,1.089,704,1.089,705,1.089,706,1.089,707,1.089,708,0.96,709,1.089,710,1.089,711,1.855,712,1.089,713,2.271,714,0.864,715,2.772,716,2.772,717,1.089,718,3.251,719,2.839,720,2.753,721,1.341,723,1.089,724,2.366,731,1.089,732,0.723,739,0.96,743,1.636,744,1.139,745,1.089,747,1.855,748,0.864,749,1.089,750,0.864,751,3.207,753,1.089,756,2.862,758,2.862,759,1.636,761,3.494,762,2.424,766,2.526,767,1.089,771,4.244,775,2.424,776,2.862,777,1.855,778,1.089,779,1.089,780,1.089,781,1.089,785,2.491,786,2.069,787,2.271,789,2.862,813,2.132,814,2.959,819,3.116,822,1.089,843,2.137,851,2.321,880,2.831,881,2.831,887,0.96,888,0.96,889,2.696,890,0.787,905,2.524,906,2.524,909,3.081,916,0.787,919,2.271,928,0.864,938,1.923,951,0.668,960,0.96,969,1.923,971,4.367,981,1.636,988,3.116,999,0.96,1011,0.864,1012,2.772,1015,2.321,1065,1.636,1066,1.923,1080,2.831,1081,0.864,1082,1.472,1090,2.772,1096,0.864,1130,0.96,1141,0.96,1144,2.831,1188,2.862,1233,3.855,1234,1.285,1235,1.089,1236,4.122,1237,3.376,1238,3.376,1239,3.376,1240,5.408,1241,4.633,1242,4.122,1243,2.188,1244,3.494,1245,1.855,1246,4.122,1247,2.188,1248,3.376,1249,1.472,1250,3.787,1251,3.376,1252,2.188,1253,3.211,1254,2.188,1255,2.859,1256,1.341,1257,1.285,1258,1.285,1259,1.285,1260,1.855,1261,1.089,1262,2.424,1263,1.285,1264,1.285,1265,1.285,1266,3.787,1267,1.285,1268,1.232,1269,1.089,1270,1.285,1271,3.376,1272,2.188,1273,1.285,1274,1.285,1275,1.285,1276,1.285,1277,1.285,1278,1.855,1279,1.285,1280,1.285,1281,3.787,1282,3.376,1283,1.285,1284,2.188,1285,2.188,1286,1.089,1287,1.285,1288,1.285,1289,1.285,1290,1.285,1291,1.285,1292,1.285,1293,1.285,1294,2.188,1295,2.859,1296,2.188,1297,1.285,1298,2.188,1299,2.188,1300,1.285,1301,1.636,1302,4.633,1303,1.285,1304,2.859,1305,4.833,1306,2.188,1307,1.285,1308,2.859,1309,4.833,1310,4.485,1311,1.285,1312,1.285,1313,3.211,1314,3.211,1315,2.859,1316,2.859,1317,1.285,1318,1.285,1319,2.859,1320,4.122,1321,1.285,1322,5.29,1323,4.122,1324,1.285,1325,1.285,1326,1.089,1327,1.285,1328,1.285,1329,1.285,1330,2.859,1331,1.285,1332,1.285,1333,1.285,1334,1.285,1335,1.285,1336,1.285,1337,1.285,1338,1.285,1339,1.285,1340,1.285,1341,1.285,1342,1.285,1343,4.122,1344,1.285,1345,1.285,1346,1.285,1347,1.285,1348,2.859,1349,1.285,1350,1.285,1351,1.285,1352,1.285,1353,1.285,1354,2.188,1355,3.376,1356,2.859,1357,4.122,1358,2.859,1359,1.855,1360,1.285,1361,1.285,1362,2.188,1363,1.089,1364,1.285,1365,1.285,1366,3.376,1367,1.285,1368,1.285,1369,1.285,1370,1.285,1371,1.285,1372,1.285,1373,1.285,1374,3.376,1375,2.188,1376,2.188,1377,1.089,1378,1.285,1379,1.285,1380,1.285,1381,2.862,1382,1.089,1383,2.188,1384,2.188,1385,1.285,1386,2.188,1387,1.285,1388,1.285,1389,1.285,1390,3.376,1391,2.859,1392,1.285,1393,1.089,1394,1.285,1395,0.96,1396,1.285,1397,1.285,1398,1.089,1399,3.376,1400,2.859,1401,2.188,1402,1.285,1403,2.859,1404,2.859,1405,2.526,1406,2.859,1407,1.285,1408,2.188,1409,1.285,1410,1.285,1411,2.188,1412,2.859,1413,1.285,1414,1.089,1415,1.285,1416,1.285,1417,1.285,1418,1.285,1419,2.188,1420,1.285,1421,1.285,1422,1.285,1423,1.285,1424,1.285,1425,1.285,1426,2.188,1427,2.859,1428,1.285,1429,1.285,1430,2.859,1431,1.285,1432,1.285,1433,1.285,1434,1.285,1435,1.285,1436,1.285,1437,1.285,1438,2.188,1439,1.285,1440,1.285,1441,1.285,1442,1.285,1443,1.285,1444,1.285,1445,1.285,1446,1.285,1447,1.285,1448,4.122,1449,1.089,1450,1.285,1451,1.285,1452,1.285,1453,1.089,1454,1.089,1455,1.285,1456,1.285,1457,1.285,1458,1.285,1459,1.285,1460,0.787,1461,1.285,1462,3.376,1463,1.285,1464,1.285,1465,2.188,1466,1.089,1467,2.188,1468,2.188,1469,1.285,1470,1.285,1471,1.285,1472,1.285,1473,2.188,1474,1.089,1475,1.285,1476,1.285,1477,2.188,1478,1.285,1479,1.285,1480,1.285,1481,2.859,1482,1.285,1483,1.285,1484,1.285,1485,1.285,1486,1.285,1487,1.285,1488,1.285,1489,1.285,1490,1.285,1491,1.285,1492,1.285,1493,1.285,1494,1.285,1495,1.285,1496,1.285]],["title/modules/JS44DModule.html",[853,1.652,1497,2.095]],["body/modules/JS44DModule.html",[1,1.726,3,0.205,4,0.205,8,0.147,17,0.025,139,1.909,199,0.522,203,0.333,210,1.737,211,0.205,212,0.078,261,0.904,269,1.706,271,1.706,273,1.706,276,1.726,278,1.726,284,1.402,286,1.706,288,1.706,292,1.706,294,1.599,296,1.706,298,1.706,304,1.498,306,1.498,308,0.013,309,0.017,310,0.013,418,4.159,566,1.618,816,4.159,853,1.737,854,3.536,855,1.871,856,2.024,857,3.675,858,1.737,859,2.639,860,3.348,863,3.252,864,2.203,866,2.203,867,3.252,868,2.963,869,4.099,870,2.203,873,3.614,1497,4.445,1498,3.048,1499,3.048,1500,3.595,1501,3.048,1502,3.595,1503,3.595,1504,4.099,1505,4.835,1506,3.048,1507,4.835,1508,3.595,1509,3.595,1510,3.595,1511,3.595,1512,3.595,1513,3.595,1514,3.595,1515,3.595,1516,3.595,1517,3.595,1518,3.048,1519,3.048,1520,3.048,1521,3.595,1522,3.595,1523,3.595]],["title/components/ListSelectorDialog.html",[0,0.195,276,0.859]],["body/components/ListSelectorDialog.html",[0,0.298,1,0.824,2,1.142,3,0.187,4,0.187,6,0.824,7,1.063,8,0.134,10,1.381,11,1.918,13,0.824,14,1.446,15,0.997,16,0.678,17,0.025,34,2.717,54,1.527,68,0.336,101,1.142,105,2.934,113,0.655,114,1.788,116,1.055,117,1.858,118,2.189,119,3.895,122,0.818,130,1.785,135,2.044,136,2.557,137,0.724,140,1.582,141,0.635,143,0.994,144,0.812,145,0.581,146,0.85,147,1.296,148,0.951,149,0.881,156,0.769,165,0.975,166,1.637,175,1.289,180,2.657,181,2.557,182,3.055,183,3.055,184,1.822,185,3.055,187,3.055,188,3.055,189,2.071,191,2.717,196,2.452,198,3.026,199,0.439,200,1.707,201,2.01,202,1.686,203,0.304,204,2.717,205,1.847,208,2.01,209,2.206,211,0.187,212,0.071,220,1.908,228,1.076,261,0.824,262,1.296,263,1.217,264,0.773,265,1.605,266,1.063,268,1.063,269,0.824,270,1.063,271,0.824,272,1.063,273,0.824,274,0.936,275,1.471,276,1.414,277,1.063,278,0.824,279,0.997,280,1.063,281,0.773,282,0.956,283,1.063,284,0.938,285,1.063,286,0.824,287,1.063,288,0.824,289,1.07,290,0.879,291,1.063,292,0.824,293,1.063,294,0.773,295,1.063,296,0.824,297,1.063,298,0.824,299,0.879,300,1.063,301,0.773,302,0.824,303,0.879,304,0.724,305,1.063,306,0.724,307,1.063,308,0.011,309,0.016,310,0.011,321,5.62,335,2.781,444,2.01,450,3.167,456,1.325,585,2.531,859,2.194,1405,2.783,1524,2.781,1525,6.109,1526,3.895,1527,5.21,1528,4.542,1529,4.109,1530,5.21,1531,5.21,1532,1.847,1533,4.542,1534,3.28,1535,3.28,1536,3.28,1537,3.28,1538,4.542,1539,3.28,1540,3.28,1541,3.395,1542,3.28,1543,4.542,1544,6.263,1545,5.905,1546,3.28,1547,2.934,1548,3.28,1549,3.28,1550,4.542,1551,4.542,1552,3.28,1553,3.28,1554,3.28,1555,3.28,1556,3.28,1557,3.28,1558,3.28,1559,3.28,1560,3.28,1561,2.206,1562,3.28,1563,3.28,1564,3.28,1565,3.28,1566,3.28,1567,3.28,1568,2.781,1569,3.28,1570,3.28,1571,3.28,1572,3.28,1573,4.542,1574,3.28,1575,4.542,1576,2.452,1577,4.542,1578,3.28,1579,3.28,1580,3.28,1581,3.28,1582,2.452,1583,3.28]],["title/components/LoginCmp.html",[0,0.195,278,0.859]],["body/components/LoginCmp.html",[0,0.304,1,0.857,2,1.172,3,0.195,4,0.195,5,2.766,6,0.857,7,1.104,8,0.139,10,1.418,11,1.957,13,0.857,14,1.437,15,1.036,16,0.704,17,0.025,34,2.892,46,5.24,54,0.803,57,3.974,59,3.217,68,0.349,88,3.974,101,1.172,113,0.673,114,0.973,116,1.018,117,1.738,118,2.233,119,3.974,122,0.84,130,1.833,135,2.098,136,2.626,137,0.752,139,1.738,140,1.604,141,0.613,143,0.726,144,0.79,145,0.493,146,0.621,147,1.709,148,0.962,149,0.892,156,0.383,165,0.726,166,1.249,180,2.392,181,2.626,182,3.137,183,3.137,184,1.839,185,3.137,186,1.505,187,3.137,188,3.137,189,1.717,191,2.892,198,1.646,199,0.46,202,1.764,203,0.316,204,2.761,205,1.919,206,1.833,207,2.292,208,2.088,209,2.292,210,1.646,211,0.195,212,0.074,232,0.973,261,0.857,262,1.331,263,1.249,264,0.803,265,1.632,266,1.104,268,1.104,269,0.857,270,1.104,271,0.857,272,1.104,273,0.857,274,0.973,275,1.511,276,0.857,277,1.104,278,1.437,279,1.616,280,1.104,281,0.803,282,0.673,283,1.104,284,0.963,285,1.104,286,0.857,287,1.104,288,0.857,289,1.099,290,0.913,291,1.104,292,0.857,293,1.104,294,0.803,295,1.104,296,0.857,297,1.104,298,0.857,299,1.531,300,1.104,301,0.803,302,0.857,303,0.913,304,0.752,305,1.104,306,0.752,307,1.104,308,0.012,309,0.016,310,0.012,456,0.803,640,2.392,669,2.568,786,3.788,842,1.919,964,4.396,980,2.547,1060,2.088,1095,2.547,1096,2.292,1532,1.919,1576,2.547,1584,2.889,1585,5.12,1586,5.316,1587,6.181,1588,5.316,1589,6.181,1590,5.316,1591,6.181,1592,5.316,1593,5.316,1594,5.316,1595,4.507,1596,5.316,1597,6.181,1598,6.181,1599,5.316,1600,3.408,1601,3.408,1602,3.408,1603,3.408,1604,3.408,1605,4.663,1606,3.408,1607,3.408,1608,3.408,1609,4.663,1610,4.663,1611,3.408,1612,2.547,1613,3.408,1614,2.858,1615,2.088,1616,3.408,1617,3.408,1618,3.408,1619,3.408,1620,3.408,1621,2.547,1622,3.408,1623,3.408,1624,3.408,1625,3.408,1626,2.889,1627,3.408,1628,5.316,1629,2.088,1630,3.408,1631,3.408,1632,3.408,1633,3.408]],["title/classes/MD5.html",[212,0.074,1060,2.095]],["body/classes/MD5.html",[3,0.092,4,0.092,6,1.164,8,0.066,14,1.124,16,1.232,17,0.026,18,2.069,33,1.115,44,1.327,54,1.283,68,0.166,92,1.089,93,1.089,105,1.495,107,1.695,113,0.622,114,1.115,116,0.989,118,2.887,122,0.478,139,0.492,141,0.553,143,0.902,144,0.774,145,0.246,146,0.813,148,0.413,149,0.897,151,2.278,153,1.495,156,0.756,157,1.21,165,1.02,166,0.434,175,0.636,186,0.407,193,2.608,198,0.782,199,0.321,202,0.462,203,0.15,211,0.223,212,0.106,220,0.68,228,1.32,232,1.68,248,1.342,258,2.069,274,1.724,299,0.711,302,0.407,308,0.012,309,0.009,310,0.012,311,1.283,312,0.636,314,2.411,317,2.428,320,1.418,324,1.94,338,0.992,368,1.089,380,1.089,384,0.782,385,2.069,388,1.495,390,0.728,404,4.779,405,4.013,406,4.563,410,1.089,411,3.116,413,1.786,431,0.992,434,3.336,436,2.919,443,1.757,445,0.911,446,0.68,456,1.153,459,0.728,460,2.085,462,1.382,504,0.992,559,2.032,562,1.519,564,1.283,565,1.327,566,0.728,585,2.509,586,2.658,587,1.786,592,0.711,593,4.145,597,2.876,600,0.992,606,0.911,629,1.327,640,2.509,644,2.056,650,4.405,660,0.524,669,3.294,670,2.642,686,0.911,688,2.393,691,2.069,692,1.089,695,2.199,701,0.911,713,1.089,714,1.089,715,2.627,716,1.089,718,2.9,719,0.992,721,1.627,724,1.043,726,1.21,729,1.21,730,1.627,732,0.911,744,1.382,748,1.786,750,1.786,751,3.307,766,0.992,785,2.917,786,1.627,787,1.786,804,1.21,813,2.608,814,3.116,819,3.751,825,1.089,832,3.819,842,1.495,851,2.839,868,2.393,870,0.992,874,1.089,875,1.21,876,1.21,878,2.862,879,4.615,880,1.985,881,1.985,882,1.372,883,2.862,884,2.862,886,2.251,887,1.21,888,1.985,889,0.992,890,0.992,891,1.372,893,1.786,894,1.786,895,2.251,897,2.251,898,1.372,899,2.251,900,1.372,901,1.372,902,1.21,903,1.372,905,2.523,906,1.21,907,2.251,909,1.21,912,1.21,913,2.27,914,1.21,915,1.372,916,0.992,917,1.372,919,1.786,921,1.372,922,3.655,923,1.372,924,1.21,925,1.372,926,1.21,927,1.372,928,2.627,929,1.089,930,1.985,931,1.21,932,1.21,933,1.21,934,1.21,935,1.21,936,1.21,937,1.089,938,1.089,939,1.372,940,1.21,941,1.786,942,1.786,943,1.089,944,1.985,945,1.21,946,1.21,947,1.21,948,1.21,949,1.372,950,2.919,951,0.842,952,1.21,953,1.372,954,1.372,955,3.223,956,1.372,957,1.372,958,2.919,959,1.372,960,1.21,961,2.862,962,1.21,963,1.372,964,2.627,965,1.372,966,1.372,967,1.372,968,1.372,969,1.089,970,1.372,971,1.21,972,1.985,973,1.372,974,1.372,975,1.372,976,2.251,977,1.372,978,1.372,979,1.372,980,1.21,981,1.21,982,1.372,983,1.21,984,1.372,985,1.21,986,1.21,987,1.21,988,1.089,989,1.372,990,1.372,991,1.372,992,1.372,993,1.372,994,1.21,995,1.372,996,2.251,997,3.655,998,3.655,999,3.223,1000,3.655,1001,3.655,1002,1.372,1003,1.372,1004,2.251,1005,1.372,1006,1.372,1007,1.372,1008,1.372,1009,1.372,1010,1.21,1011,3.116,1012,1.089,1013,2.251,1014,2.251,1015,0.992,1016,3.463,1017,1.372,1018,1.372,1019,1.372,1020,3.928,1021,1.21,1022,1.372,1023,2.919,1024,1.21,1025,1.089,1026,2.251,1027,1.372,1028,1.372,1029,1.372,1030,1.372,1031,1.372,1032,1.372,1033,2.251,1034,2.251,1035,1.372,1036,1.372,1037,1.372,1038,1.372,1039,2.251,1040,1.372,1041,2.251,1042,3.311,1043,2.251,1044,2.251,1045,2.251,1046,1.372,1047,2.251,1048,1.372,1049,1.21,1050,2.251,1051,2.251,1052,1.21,1053,1.372,1054,1.372,1055,1.372,1056,1.372,1057,1.372,1058,1.21,1059,3.311,1060,2.642,1061,1.372,1062,1.372,1063,1.372,1064,2.251,1065,1.21,1066,1.089,1067,1.21,1068,2.251,1069,1.372,1070,1.372,1071,1.372,1072,1.372,1073,1.372,1074,1.372,1075,1.372,1076,1.372,1077,1.372,1078,1.372,1079,1.372,1080,3.463,1081,2.27,1082,2.9,1083,1.372,1084,2.251,1085,1.372,1086,1.372,1087,3.311,1088,1.372,1089,1.372,1090,1.786,1091,1.372,1092,2.251,1093,1.372,1094,1.372,1095,2.523,1096,2.27,1097,2.919,1098,1.372,1099,1.372,1100,1.372,1101,1.089,1102,1.372,1103,2.251,1104,1.21,1105,1.372,1106,1.372,1107,1.372,1108,1.372,1109,3.655,1110,4.148,1111,2.251,1112,2.862,1113,4.148,1114,1.372,1115,1.372,1116,2.251,1117,1.372,1118,1.372,1119,1.372,1120,1.372,1121,1.21,1122,1.372,1123,1.372,1124,1.372,1125,1.372,1126,2.862,1127,1.372,1128,1.372,1129,1.372,1130,1.21,1131,2.862,1132,2.862,1133,4.148,1134,2.862,1135,1.372,1136,1.372,1137,1.372,1138,1.372,1139,1.372,1140,1.372,1141,1.21,1142,1.372,1143,1.372,1144,1.985,1145,2.251,1146,1.372,1147,1.372,1148,1.372,1149,1.372,1150,1.372,1151,5.42,1152,2.251,1153,2.251,1154,2.251,1155,2.251,1156,1.372,1157,2.251,1158,1.372,1159,2.251,1160,1.985,1161,1.372,1162,0.911,1163,1.372,1164,1.372,1165,1.372,1166,1.372,1167,1.372,1168,2.862,1169,3.658,1170,1.372,1171,1.372,1172,1.372,1173,2.251,1174,2.251,1175,2.523,1176,1.372,1177,2.251,1178,1.21,1179,1.21,1180,1.372,1181,1.21,1286,2.251,1634,1.619,1635,2.655,1636,2.655,1637,2.655,1638,2.655,1639,2.655,1640,2.655,1641,2.655,1642,2.655,1643,2.655,1644,2.655,1645,2.655,1646,2.655,1647,1.619,1648,1.619,1649,1.619,1650,1.619,1651,1.619,1652,1.619,1653,1.619,1654,1.619,1655,1.619,1656,1.619,1657,1.619,1658,1.619,1659,1.619,1660,1.619,1661,1.619,1662,1.619,1663,1.619,1664,1.619,1665,2.655,1666,1.619,1667,1.619,1668,1.619,1669,1.619,1670,1.619]],["title/injectables/Modal.html",[282,0.493,592,0.916]],["body/injectables/Modal.html",[0,0.36,3,0.178,4,0.178,8,0.127,17,0.025,31,2.688,33,1.252,68,0.593,107,2.163,113,0.633,114,0.89,116,1.064,117,2.068,118,2.526,122,0.79,137,0.689,140,1.359,141,0.585,143,1.085,144,0.711,145,0.615,146,0.823,148,0.903,149,0.794,153,2.469,156,0.72,165,0.936,166,0.836,175,1.226,180,3.006,186,1.511,199,0.377,201,3.928,203,0.289,204,1.507,211,0.178,212,0.095,228,1.048,232,0.89,248,0.735,263,1.175,282,0.99,308,0.011,309,0.015,310,0.011,314,1.623,388,1.756,439,1.623,446,1.311,459,1.404,580,2.076,583,2.36,585,2.955,592,1.175,601,2.688,602,2.002,606,2.469,627,2.332,640,1.404,658,1.912,660,1.643,664,2.098,701,2.469,708,3.791,732,1.756,751,3.417,866,3.372,889,3.785,893,4.369,952,2.332,983,4.334,988,3.9,1015,1.912,1052,3.278,1232,1.756,1526,4.855,1547,2.856,1671,2.332,1672,5.072,1673,5.072,1674,5.503,1675,4.386,1676,4.386,1677,4.386,1678,3.119,1679,6.013,1680,5.072,1681,4.665,1682,4.386,1683,4.386,1684,4.386,1685,3.119,1686,4.386,1687,6.766,1688,6.802,1689,3.119,1690,5.798,1691,4.3,1692,5.072,1693,5.503,1694,5.503,1695,5.798,1696,4.113,1697,4.915,1698,6.013,1699,5.798,1700,4.915,1701,4.915,1702,5.798,1703,4.386,1704,3.119,1705,4.386,1706,5.236,1707,3.119,1708,3.718,1709,3.119,1710,3.119,1711,3.119,1712,3.278,1713,2.332,1714,3.119,1715,3.119,1716,2.332,1717,3.119,1718,3.119,1719,3.119,1720,3.119,1721,3.119,1722,3.119,1723,3.119,1724,2.645,1725,3.119,1726,3.119,1727,3.119,1728,3.119,1729,3.119,1730,3.119,1731,4.386,1732,3.119,1733,3.119,1734,3.718,1735,3.119,1736,3.119,1737,3.119,1738,3.119,1739,3.119,1740,3.119,1741,3.119,1742,3.119,1743,3.119,1744,3.119,1745,3.119,1746,3.119,1747,3.119,1748,3.119,1749,3.119,1750,3.119,1751,3.119,1752,3.119,1753,3.119,1754,3.119,1755,3.119,1756,3.119,1757,3.119]],["title/injectables/ModalConfig.html",[180,1.539,592,0.916]],["body/injectables/ModalConfig.html",[3,0.193,4,0.193,8,0.138,17,0.025,33,0.967,34,2.886,35,4.262,57,3.471,65,3.961,68,0.347,88,3.471,107,2.083,113,0.67,118,2.226,122,0.836,137,1.17,141,0.64,143,0.527,144,0.415,145,0.623,146,0.706,148,1.066,149,0.976,151,2.425,156,0.671,165,0.723,180,3.08,181,3.557,182,3.124,183,3.564,184,1.885,185,3.564,186,1.332,187,3.564,188,3.564,189,1.951,191,2.56,193,3.623,199,0.252,203,0.314,211,0.193,212,0.073,228,0.7,248,0.798,282,0.999,308,0.018,309,0.016,310,0.012,322,4.262,324,2.089,400,3.124,446,2.395,456,1.094,565,1.825,580,1.504,583,2.551,585,2.089,586,2.417,592,1.244,602,1.603,619,3.835,629,2.483,643,4.723,658,2.076,660,1.504,751,2.417,851,2.846,875,3.471,889,3.494,890,2.846,969,3.835,1101,3.124,1227,3.937,1268,2.615,1326,3.937,1526,4.723,1529,3.124,1547,1.907,1681,5.356,1691,4.833,1696,3.471,1697,3.937,1758,2.532,1759,4.644,1760,5.299,1761,5.299,1762,5.299,1763,5.299,1764,5.299,1765,4.644,1766,3.387,1767,4.644,1768,3.387,1769,4.644,1770,4.644,1771,4.644,1772,3.387,1773,3.387,1774,5.701,1775,3.387,1776,3.387,1777,4.644,1778,4.644,1779,3.387,1780,3.387,1781,3.387,1782,3.387,1783,4.644,1784,4.644,1785,5.701,1786,4.644,1787,4.644,1788,5.299,1789,4.644,1790,4.833,1791,3.387,1792,3.387,1793,3.387,1794,3.387,1795,3.387,1796,5.701,1797,3.387,1798,3.387,1799,3.961,1800,4.644,1801,3.387,1802,4.644,1803,6.17,1804,3.387,1805,3.387,1806,4.644,1807,3.387,1808,3.387,1809,3.387,1810,3.387,1811,3.387]],["title/injectables/ModalDialogInstance.html",[140,0.916,592,0.916]],["body/injectables/ModalDialogInstance.html",[3,0.204,4,0.204,8,0.146,17,0.025,68,0.365,113,0.694,114,1.935,116,0.848,117,1.85,122,0.866,135,2.165,137,1.286,140,1.289,141,0.636,143,0.907,144,0.714,145,0.604,146,0.776,148,0.556,149,0.962,156,0.611,165,1.014,166,1.745,175,2.29,184,1.373,189,2.004,199,0.266,203,0.331,211,0.204,212,0.104,228,1.323,232,1.554,248,1.134,263,1.289,282,0.962,308,0.022,309,0.017,310,0.012,400,3.236,456,1.373,477,3.032,562,2.165,580,1.559,582,3.236,583,2.537,584,2.668,585,2.82,586,2.833,587,3.236,591,5.595,592,1.289,593,2.401,594,3.026,595,2.401,596,3.026,597,2.009,598,3.026,599,3.026,600,2.949,601,2.949,602,2.011,603,4.615,604,4.615,605,4.079,606,2.709,607,4.079,608,4.615,609,4.615,610,4.615,611,4.615,612,3.026,613,3.026,614,3.026,615,4.079,616,3.026,617,4.079,618,4.079,619,4.381,620,4.079,621,5.521,622,3.026,623,3.026,624,4.079,625,4.615,626,3.026,627,4.355,628,4.079,629,1.891,630,4.079,631,3.026,632,4.079,633,4.079,634,4.079,635,3.026,636,3.597,637,3.597,638,3.597,639,3.597,640,2.165,641,4.079,642,4.079,643,3.597,644,2.022,645,4.939,646,4.079,647,3.597,648,3.597,649,2.949,650,3.236,651,4.079,652,3.026,653,4.939,654,3.026,655,3.026,656,3.026,658,2.187,660,1.156,1812,4.812,1813,4.812,1814,4.812,1815,4.812,1816,3.569,1817,3.569,1818,3.569,1819,3.569,1820,3.569,1821,3.569,1822,3.569,1823,3.569,1824,3.569,1825,3.569,1826,3.569,1827,3.569,1828,3.569,1829,3.569,1830,3.569]],["title/modules/ModalModule.html",[853,1.652,1831,2.095]],["body/modules/ModalModule.html",[3,0.276,4,0.276,8,0.197,17,0.025,140,1.818,199,0.505,203,0.448,204,3.226,205,2.719,206,2.295,207,3.249,211,0.276,212,0.104,261,1.214,281,1.676,282,0.979,301,1.676,308,0.017,309,0.02,310,0.017,566,2.173,853,2.333,855,2.513,856,2.719,857,4.222,858,2.333,859,3.032,860,3.846,863,3.928,864,2.96,866,2.96,867,3.928,1504,4.95,1561,3.249,1831,4.36,1832,4.095,1833,4.095,1834,4.095,1835,4.095,1836,4.83,1837,4.83,1838,4.83]],["title/classes/OKOnlyContent.html",[212,0.074,1839,2.3]],["body/classes/OKOnlyContent.html",[0,0.321,3,0.259,4,0.259,8,0.185,10,1.38,11,2.07,14,0.938,17,0.025,44,2.21,68,0.465,101,1.141,113,0.811,116,1.082,117,1.709,137,1.241,140,1.636,141,0.592,143,0.707,144,0.556,145,0.592,146,0.605,148,0.951,149,0.881,156,0.788,189,2.461,199,0.475,203,0.421,206,2.21,211,0.321,212,0.122,281,1.07,282,0.811,302,1.141,308,0.016,309,0.02,310,0.016,312,1.784,456,1.07,583,2.415,602,1.567,660,1.471,724,2.21,785,3.274,858,2.193,1162,2.556,1232,2.556,1256,2.782,1268,3.165,1405,3.743,1460,2.782,1532,2.556,1614,3.445,1615,2.782,1629,2.782,1839,4.108,1840,3.393,1841,5.562,1842,3.848,1843,4.54,1844,4.293,1845,4.293,1846,4.54,1847,4.54,1848,4.54,1849,3.053,1850,3.053,1851,3.053,1852,3.053,1853,3.053,1854,3.053,1855,3.848,1856,2.556,1857,3.053,1858,3.053]],["title/components/OKOnlyModal.html",[0,0.195,281,0.806]],["body/components/OKOnlyModal.html",[0,0.333,1,1.034,2,1.328,3,0.235,4,0.235,6,1.034,7,1.332,8,0.168,10,1.606,11,2.149,13,1.034,14,1.464,15,1.25,16,0.849,17,0.025,44,2.42,54,0.969,68,0.421,101,1.328,113,0.762,116,0.959,117,1.937,122,0.951,135,2.377,136,2.974,137,1.166,140,1.746,141,0.591,143,0.822,144,0.781,145,0.541,146,0.704,147,1.508,156,0.655,165,0.822,166,1.415,189,1.945,199,0.458,203,0.381,206,2.076,211,0.302,212,0.114,261,1.034,262,1.508,263,1.415,264,0.969,265,1.758,266,1.332,268,1.332,269,1.034,270,1.332,271,1.034,272,1.332,273,1.034,274,1.174,275,1.711,276,1.034,277,1.332,278,1.034,279,1.25,280,1.332,281,1.451,282,0.94,283,1.332,284,1.091,285,1.332,286,1.034,287,1.332,288,1.034,289,1.245,290,1.102,291,1.332,292,1.034,293,1.332,294,0.969,295,1.332,296,1.034,297,1.332,298,1.034,299,1.102,300,1.332,301,0.969,302,1.467,303,1.102,304,0.908,305,1.332,306,0.908,307,1.332,308,0.014,309,0.018,310,0.014,456,0.969,583,2.4,602,1.824,660,1.332,724,1.616,785,2.552,858,2.552,1162,2.974,1232,2.315,1256,3.237,1268,2.315,1405,3.903,1460,3.237,1532,2.974,1612,3.074,1614,3.576,1615,2.52,1629,2.52,1839,3.925,1840,3.074,1841,3.486,1844,3.553,1845,3.553,1849,2.766,1850,2.766,1851,3.553,1852,3.553,1853,3.925,1854,3.925,1855,4.947,1856,3.286,1857,2.766,1858,2.766,1859,4.112,1860,4.112,1861,4.112,1862,4.112,1863,4.112]],["title/components/QueryBand.html",[0,0.195,284,0.706]],["body/components/QueryBand.html",[0,0.23,1,0.53,2,0.825,3,0.121,4,0.121,5,2.096,6,0.825,7,0.684,8,0.164,13,0.53,14,1.363,15,0.642,16,1.319,17,0.025,26,2.71,29,3.506,31,2.469,32,3.541,33,0.602,34,1.946,54,0.497,55,2.71,56,2.71,59,2.713,62,4.047,68,0.216,95,2.71,97,3.745,101,0.825,113,0.474,116,1.105,122,0.591,130,1.29,137,0.466,141,0.643,143,0.627,144,0.639,145,0.581,146,0.537,147,0.937,148,1.075,149,0.904,156,0.611,165,0.975,166,1.637,184,1.873,186,1.693,191,1.946,199,0.157,200,2.713,202,1.744,203,0.196,211,0.298,212,0.087,228,1.22,232,0.602,247,2.713,248,1.362,261,0.53,262,0.937,263,0.879,264,1.071,265,1.297,266,0.684,268,0.684,269,0.53,270,0.684,271,0.53,272,0.684,273,0.53,274,0.602,275,1.063,276,0.53,277,0.684,278,0.53,279,0.642,280,0.684,281,0.497,282,0.474,283,0.684,284,1.124,285,0.684,286,0.53,287,0.684,288,0.53,289,1.528,290,1.548,291,0.684,292,0.53,293,0.684,294,0.497,295,0.684,296,0.53,297,0.684,298,0.53,299,0.565,300,0.684,301,0.497,302,0.53,303,0.565,304,0.725,305,0.684,306,0.725,307,0.684,308,0.007,309,0.011,310,0.007,320,0.887,384,2.854,390,2.531,433,2.71,439,1.098,441,1.42,442,1.578,443,3.527,444,1.293,445,2.268,446,2.428,447,3.745,448,1.578,449,1.578,450,2.268,451,3.011,452,2.71,453,4.11,454,3.194,455,3.011,456,1.228,457,3.68,458,4.205,459,2.345,460,1.813,461,3.506,462,2.365,463,3.254,464,3.011,465,2.71,466,3.011,467,3.011,468,3.896,469,3.011,470,3.896,471,3.011,472,3.011,473,3.011,474,3.011,475,3.011,476,3.011,477,3.415,478,3.506,479,3.011,480,3.011,481,4.414,482,3.011,483,3.011,484,3.011,485,3.011,486,2.454,487,2.454,488,2.785,489,3.011,490,3.011,491,2.454,492,2.469,493,3.011,494,2.208,495,3.011,496,3.011,497,3.011,498,3.011,499,3.011,500,2.208,501,2.208,502,3.011,503,2.208,504,2.012,505,3.011,506,3.011,507,3.011,508,3.011,509,3.011,510,3.011,511,1.578,512,3.011,513,3.011,514,2.71,515,1.578,516,1.098,517,3.011,518,3.397,519,3.397,520,3.011,521,3.011,522,3.011,523,2.454,524,3.011,525,3.397,526,3.011,527,1.578,528,1.578,529,2.454,530,1.293,531,2.454,532,1.578,533,1.578,534,1.578,535,1.578,536,1.578,537,3.011,538,1.578,539,1.578,540,1.578,541,1.578,542,3.397,543,1.578,544,3.397,545,1.578,546,3.397,547,3.011,548,1.578,549,2.208,550,1.578,551,3.397,552,1.578,553,1.578,554,3.397,555,1.578,556,3.397,557,2.454,558,1.578,559,1.708,560,2.454,561,1.578,562,0.95,563,2.012,564,1.946,565,0.829,566,0.95,567,2.454,568,1.578,569,1.578,570,1.578,571,3.397,572,1.578,573,3.397,574,1.578,575,3.397,576,1.578,577,3.397,578,1.578,579,3.397,580,1.063,581,2.454,1864,2.783,1865,3.283,1866,2.783,1867,2.111,1868,3.283,1869,2.111,1870,2.111,1871,2.111,1872,2.111,1873,2.111,1874,2.111,1875,2.111,1876,2.111,1877,2.111,1878,2.111,1879,2.111,1880,2.111,1881,2.111,1882,2.111,1883,2.111,1884,2.111,1885,2.111,1886,2.111,1887,2.111,1888,2.111,1889,2.111,1890,2.111,1891,2.111,1892,2.111,1893,2.111,1894,2.111,1895,1.578,1896,2.111,1897,2.111,1898,2.111,1899,2.111,1900,2.111,1901,2.111,1902,2.111,1903,2.111,1904,2.111,1905,2.111,1906,2.111,1907,1.578]],["title/directives/QueryBandDirective.html",[264,0.806,306,0.755]],["body/directives/QueryBandDirective.html",[0,0.251,3,0.179,4,0.179,5,1.627,6,0.786,8,0.179,13,0.786,14,1.138,16,1.325,17,0.026,26,2.103,29,2.954,31,1.916,32,3.112,33,0.892,34,1.51,55,2.103,56,2.954,59,2.286,62,4.313,68,0.32,95,2.103,97,3.375,101,0.786,113,0.634,116,1.096,141,0.29,145,0.29,148,1.023,156,0.493,184,1.855,186,1.68,191,1.51,199,0.233,200,2.642,202,1.892,203,0.29,211,0.331,212,0.11,228,1.342,232,0.892,247,2.642,248,1.511,264,1.197,284,1.138,289,1.456,290,1.475,303,0.837,304,0.69,306,0.97,308,0.011,309,0.015,310,0.011,320,1.313,384,3.139,390,2.839,433,3.415,439,1.627,441,2.103,442,2.337,443,3.585,444,1.916,445,2.859,446,2.438,447,3.787,448,3.283,449,3.796,450,1.76,451,2.337,452,2.103,453,3.705,454,2.692,455,2.337,456,1.035,457,3.283,458,3.796,459,1.976,460,1.407,461,2.954,462,2.286,463,3.101,464,2.337,465,2.103,466,2.337,467,2.337,468,3.283,469,2.337,470,3.283,471,2.337,472,2.337,473,2.337,474,2.337,475,2.337,476,2.337,477,3.381,478,3.415,479,2.337,480,2.337,481,4.371,482,3.283,483,2.337,484,3.283,485,2.337,486,2.337,487,2.337,488,2.692,489,2.337,490,2.337,491,2.337,492,2.692,493,2.337,494,2.103,495,2.337,496,2.337,497,2.337,498,2.337,499,2.337,500,2.103,501,2.103,502,2.337,503,2.954,504,2.692,505,2.337,506,2.337,507,2.337,508,2.337,509,2.337,510,2.337,511,2.337,512,2.337,513,2.337,514,2.103,515,2.337,516,1.627,517,2.337,518,3.796,519,3.796,520,3.283,521,2.337,522,2.337,523,2.337,524,2.337,525,2.337,526,3.796,527,2.337,528,2.337,529,2.337,530,1.916,531,2.337,532,2.337,533,2.337,534,2.337,535,2.337,536,2.337,537,3.796,538,2.337,539,2.337,540,2.337,541,2.337,542,2.337,543,2.337,544,2.337,545,2.337,546,2.337,547,3.796,548,2.337,549,2.103,550,2.337,551,2.337,552,2.337,553,2.337,554,2.337,555,2.337,556,2.337,557,3.283,558,2.337,559,2.286,560,3.283,561,2.337,562,1.407,563,2.692,564,2.453,565,1.229,566,1.407,567,3.283,568,2.337,569,2.337,570,2.337,571,2.337,572,2.337,573,2.337,574,2.337,575,2.337,576,2.337,577,2.337,578,2.337,579,2.337,580,1.013,581,3.283,1907,2.337,1908,3.126]],["title/components/QuickFindInput.html",[0,0.195,286,0.859]],["body/components/QuickFindInput.html",[0,0.348,1,1.133,2,1.407,3,0.257,4,0.257,6,1.133,7,1.46,8,0.184,13,1.133,14,1.475,15,1.371,16,0.931,17,0.025,54,1.062,68,0.461,101,1.407,113,0.807,116,1.019,130,2.2,137,1.344,141,0.59,144,0.746,145,0.519,147,1.598,148,0.948,149,0.963,199,0.453,202,1.869,203,0.418,211,0.257,212,0.097,248,1.5,261,1.133,262,1.598,263,1.5,264,1.062,265,1.817,266,1.46,268,1.46,269,1.133,270,1.46,271,1.133,272,1.46,273,1.133,274,1.287,275,1.813,276,1.133,277,1.46,278,1.133,279,1.371,280,1.46,281,1.062,282,0.807,283,1.46,284,1.156,285,1.46,286,1.6,287,2.162,288,1.133,289,1.319,290,1.208,291,1.46,292,1.133,293,1.46,294,1.062,295,1.46,296,1.133,297,1.46,298,1.133,299,1.208,300,1.46,301,1.062,302,1.133,303,1.208,304,0.995,305,1.46,306,0.995,307,1.46,308,0.016,309,0.02,310,0.016,443,3.407,1506,3.821,1909,3.821,1910,6.088,1911,5.597,1912,6.367,1913,4.507,1914,4.507,1915,4.507,1916,4.507,1917,4.507,1918,4.507,1919,4.507]],["title/components/RecordEditWindow.html",[0,0.195,288,0.859]],["body/components/RecordEditWindow.html",[0,0.341,1,1.085,2,1.369,3,0.246,4,0.246,6,1.085,7,1.398,8,0.176,10,1.656,11,2.197,13,1.085,14,1.47,15,1.312,16,0.891,17,0.025,54,1.017,68,0.442,101,1.085,113,0.786,116,1.006,117,1.815,122,0.981,130,2.141,135,2.451,136,3.067,140,1.599,141,0.581,143,0.672,144,0.768,145,0.505,146,0.575,147,1.555,165,0.848,166,1.459,196,3.226,198,2.631,199,0.481,202,1.555,203,0.4,204,2.883,205,2.43,206,2.141,207,2.903,208,2.645,211,0.246,212,0.093,261,1.085,262,1.555,263,1.459,264,1.017,265,1.789,266,1.398,268,1.398,269,1.085,270,1.398,271,1.085,272,1.398,273,1.085,274,1.232,275,1.764,276,1.085,277,1.398,278,1.085,279,1.312,280,1.398,281,1.017,282,0.786,283,1.398,284,1.125,285,1.398,286,1.085,287,1.398,288,1.576,289,1.523,290,1.679,291,1.398,292,1.085,293,1.398,294,1.017,295,1.398,296,1.085,297,1.398,298,1.085,299,1.156,300,1.398,301,1.017,302,1.085,303,1.156,304,0.953,305,1.398,306,0.953,307,1.398,308,0.015,309,0.019,310,0.015,456,1.017,602,2.061,672,5.06,720,2.835,852,3.664,871,3.658,1568,3.658,1920,3.658,1921,6.269,1922,4.315,1923,4.315,1924,4.315,1925,4.315,1926,4.315,1927,4.315,1928,4.315,1929,5.447,1930,4.618,1931,4.315,1932,4.315]],["title/components/RecordList.html",[0,0.195,292,0.859]],["body/components/RecordList.html",[0,0.215,1,0.948,2,0.762,3,0.109,4,0.109,6,0.479,7,0.618,8,0.078,10,0.921,11,1.389,13,0.479,14,1.356,15,1.426,16,1.349,17,0.026,33,1.597,54,1.319,68,0.48,101,0.762,107,2.057,113,0.437,114,1.843,116,0.991,117,1.95,122,0.546,130,1.191,135,1.364,137,0.421,139,1.147,140,1.01,141,0.599,143,0.815,144,0.73,145,0.561,146,0.697,147,0.865,148,0.472,149,0.437,151,1.962,153,1.073,156,0.669,165,0.912,166,1.536,175,1.962,180,1.364,181,1.073,184,1.227,186,0.479,199,0.436,200,2.44,201,2.311,202,1.077,203,0.177,204,2.076,205,1.073,208,1.168,209,1.282,210,0.921,211,0.215,212,0.041,220,1.273,228,0.626,231,4.287,232,1.843,233,2.569,247,1.963,248,1.28,253,1.616,257,3.212,261,0.479,262,0.865,263,0.812,264,0.449,265,1.227,266,0.618,268,0.618,269,1.316,270,0.618,271,0.479,272,0.618,273,0.479,274,0.544,275,0.982,276,1.255,277,0.618,278,0.479,279,0.58,280,0.618,281,0.449,282,0.784,283,0.618,284,1.156,285,0.618,286,0.479,287,0.618,288,0.479,289,1.554,290,1.706,291,0.618,292,1.08,293,0.618,294,0.449,295,0.618,296,0.479,297,0.618,298,0.479,299,0.511,300,0.618,301,0.449,302,0.479,303,0.511,304,0.421,305,0.618,306,0.421,307,0.618,308,0.013,309,0.011,310,0.007,320,0.801,388,1.073,390,2.246,430,2.265,444,1.168,447,2.311,450,2.64,453,2.89,454,2.311,456,1.319,459,1.364,460,0.858,461,2.038,462,1.577,463,3.059,465,2.038,477,1.577,488,1.857,494,2.038,503,1.282,514,1.282,530,1.168,549,2.038,559,2.598,562,1.697,563,2.311,564,0.921,565,1.191,601,3.515,602,2.115,619,2.038,629,2.135,637,1.425,640,2.11,660,0.618,668,3.654,669,2.076,674,1.282,686,1.706,724,0.749,727,1.425,730,1.857,743,1.425,751,1.577,754,4.605,788,4.233,790,4.438,825,3.358,828,2.265,852,1.282,859,1.464,868,2.311,870,1.168,894,2.038,913,2.038,919,2.038,924,1.425,1023,2.265,1024,2.265,1025,2.038,1067,2.819,1081,1.282,1249,3.654,1301,1.425,1310,4.233,1313,3.197,1314,1.616,1381,3.975,1382,1.616,1449,2.569,1518,1.616,1520,1.616,1529,2.89,1547,1.073,1561,1.282,1696,1.425,1706,2.569,1716,2.265,1734,3.197,1864,2.569,1895,3.212,1907,2.265,1930,1.616,1933,1.616,1934,3.197,1935,3.03,1936,3.03,1937,3.03,1938,3.772,1939,4.297,1940,3.643,1941,3.03,1942,3.197,1943,3.03,1944,3.772,1945,4.297,1946,3.03,1947,3.03,1948,3.772,1949,3.03,1950,3.772,1951,4.689,1952,1.616,1953,3.03,1954,3.03,1955,1.906,1956,5.735,1957,1.906,1958,3.03,1959,3.03,1960,4.297,1961,3.03,1962,3.03,1963,1.906,1964,5.193,1965,1.906,1966,1.906,1967,3.03,1968,1.906,1969,3.03,1970,3.03,1971,1.906,1972,3.643,1973,1.906,1974,1.906,1975,1.906,1976,3.03,1977,1.906,1978,3.03,1979,3.643,1980,3.03,1981,1.906,1982,1.906,1983,3.03,1984,1.906,1985,3.03,1986,1.906,1987,3.03,1988,3.03,1989,3.03,1990,1.906,1991,1.906,1992,3.03,1993,1.906,1994,3.03,1995,1.906,1996,1.906,1997,1.906,1998,1.906,1999,3.03,2000,1.906,2001,5.235,2002,1.906,2003,3.772,2004,3.772,2005,3.03,2006,3.03,2007,3.03,2008,3.772,2009,1.906,2010,1.906,2011,1.906,2012,1.906,2013,1.906,2014,1.906,2015,1.906,2016,1.906,2017,1.906,2018,1.906,2019,1.906,2020,4.689,2021,1.906,2022,1.906,2023,1.906,2024,3.03,2025,1.906,2026,1.906,2027,1.906,2028,3.03,2029,4.297,2030,1.906,2031,1.906,2032,1.906,2033,1.906,2034,1.906,2035,3.772,2036,4.297,2037,1.616,2038,1.906,2039,1.906,2040,1.906,2041,1.906,2042,1.906,2043,1.906,2044,1.906,2045,1.906,2046,4.297,2047,1.906,2048,3.03,2049,3.03,2050,3.772,2051,3.03,2052,1.906,2053,3.772,2054,4.297,2055,5.235,2056,3.772,2057,1.906,2058,1.906,2059,4.297,2060,1.906,2061,3.03,2062,1.906,2063,1.906,2064,1.906,2065,3.772,2066,3.03,2067,1.906,2068,1.906,2069,1.906,2070,1.906,2071,1.906,2072,1.616,2073,1.906,2074,1.906,2075,3.03,2076,1.906,2077,3.03,2078,4.689,2079,3.03,2080,3.03,2081,3.772,2082,4.297,2083,1.906,2084,3.03,2085,4.689,2086,4.297,2087,1.906,2088,3.772,2089,3.03,2090,1.906,2091,1.906,2092,1.906,2093,1.906,2094,1.906,2095,1.906,2096,4.297,2097,3.03,2098,3.03,2099,4.297,2100,3.03,2101,1.906,2102,3.03,2103,3.03,2104,3.03,2105,3.03,2106,3.03,2107,1.906,2108,1.906,2109,1.906,2110,1.906,2111,1.906,2112,1.906,2113,3.03,2114,1.906,2115,1.906,2116,1.906,2117,1.906,2118,4.297,2119,1.906,2120,1.906]],["title/components/Tab.html",[0,0.195,294,0.806]],["body/components/Tab.html",[0,0.361,1,1.108,2,1.388,3,0.252,4,0.252,6,1.108,7,1.428,8,0.18,13,1.108,14,1.475,15,1.341,16,0.911,17,0.025,33,1.259,54,1.039,68,0.451,101,1.515,130,2.17,137,0.973,141,0.559,143,0.687,144,0.774,145,0.559,146,0.587,147,1.576,148,0.687,149,0.636,156,0.62,184,1.576,186,1.515,189,2.219,199,0.328,202,1.721,203,0.409,211,0.315,212,0.119,261,1.108,262,1.576,263,1.479,264,1.039,265,1.803,266,1.428,268,1.428,269,1.108,270,1.428,271,1.108,272,1.428,273,1.108,274,1.259,275,1.788,276,1.108,277,1.428,278,1.108,279,1.341,280,1.428,281,1.039,282,0.796,283,1.428,284,1.14,285,1.428,286,1.108,287,1.428,288,1.108,289,1.301,290,1.181,291,1.428,292,1.108,293,1.428,294,1.618,295,1.428,296,1.711,297,1.428,298,1.108,299,1.181,300,1.428,301,1.039,302,1.108,303,1.181,304,0.973,305,1.428,306,0.973,307,1.428,308,0.015,309,0.019,310,0.015,580,1.788,592,1.615,1621,3.296,2121,3.296,2122,5.11,2123,4.681,2124,5.521,2125,4.681,2126,4.409,2127,3.738,2128,3.738,2129,3.738,2130,3.738,2131,3.738,2132,3.738,2133,4.681,2134,3.738,2135,3.738,2136,3.738,2137,3.738]],["title/components/Tabs.html",[0,0.195,296,0.859]],["body/components/Tabs.html",[0,0.357,1,1.079,2,1.365,3,0.245,4,0.245,6,1.079,7,1.391,8,0.175,13,1.079,14,1.472,15,1.306,16,0.887,17,0.025,33,1.226,54,1.012,68,0.44,101,1.497,113,0.783,122,0.978,141,0.58,143,0.927,144,0.808,145,0.504,146,0.793,147,1.55,148,0.669,149,0.619,156,0.482,165,0.927,166,1.595,175,1.688,184,1.55,186,1.365,189,1.581,199,0.32,202,1.7,203,0.398,211,0.31,212,0.117,261,1.079,262,1.55,263,1.455,264,1.012,265,1.786,266,1.391,268,1.391,269,1.079,270,1.391,271,1.079,272,1.391,273,1.079,274,1.226,275,1.759,276,1.079,277,1.391,278,1.079,279,1.306,280,1.391,281,1.012,282,0.783,283,1.391,284,1.122,285,1.391,286,1.079,287,1.391,288,1.079,289,1.28,290,1.151,291,1.391,292,1.079,293,1.391,294,1.649,295,1.391,296,1.731,297,1.391,298,1.079,299,1.151,300,1.391,301,1.012,302,1.079,303,1.151,304,0.948,305,1.391,306,0.948,307,1.391,308,0.015,309,0.019,310,0.015,580,1.391,592,1.595,1621,3.21,2121,3.21,2122,3.641,2123,3.641,2125,3.641,2127,5.049,2128,4.604,2129,3.641,2130,4.604,2131,3.641,2132,3.641,2133,4.604,2134,4.604,2135,3.641,2136,3.641,2137,3.641,2138,5.43,2139,5.43,2140,5.43,2141,4.295,2142,4.295,2143,4.295,2144,4.295]],["title/classes/Utf8.html",[212,0.074,744,1.779]],["body/classes/Utf8.html",[3,0.187,4,0.187,8,0.134,17,0.026,33,1.744,44,1.786,68,0.605,113,0.656,114,2.003,116,0.511,118,2.974,122,0.818,141,0.62,143,0.975,144,0.768,146,0.835,149,0.852,151,1.29,156,0.663,165,1.009,166,0.879,186,0.825,193,1.848,211,0.187,212,0.071,220,2.19,228,1.319,265,1.963,308,0.011,309,0.016,310,0.011,312,1.29,332,5.008,366,3.057,368,3.057,384,2.718,385,3.194,393,2.454,394,2.783,403,3.057,410,2.208,411,3.506,413,3.057,415,2.454,744,2.365,1066,2.208,1169,4.415,1175,3.397,1178,3.397,1179,3.397,1253,2.783,1377,2.783,2145,2.783,2146,4.544,2147,4.544,2148,4.544,2149,4.544,2150,4.544,2151,5.626,2152,4.544,2153,5.212,2154,4.544,2155,4.544,2156,4.544,2157,4.544,2158,3.282,2159,3.282,2160,3.282,2161,4.544,2162,3.282,2163,6.877,2164,3.282,2165,5.212,2166,3.282,2167,3.282,2168,4.544,2169,3.282,2170,3.282,2171,4.544,2172,3.282,2173,3.282,2174,3.282,2175,3.282,2176,3.282,2177,4.544,2178,4.544,2179,3.282,2180,3.282,2181,3.282,2182,4.544,2183,3.282,2184,3.282,2185,5.212,2186,3.282,2187,3.282,2188,4.544,2189,4.544,2190,3.282,2191,3.282,2192,6.815,2193,6.386,2194,3.282,2195,6.483,2196,3.282,2197,5.212,2198,5.212,2199,3.282,2200,4.544,2201,5.212,2202,5.212,2203,3.282,2204,5.212,2205,3.282,2206,3.282,2207,3.282,2208,3.282,2209,5.212,2210,5.907,2211,5.212,2212,4.544,2213,4.544,2214,5.626,2215,3.282,2216,3.282,2217,5.907,2218,6.563,2219,5.626,2220,5.212,2221,4.544,2222,3.282,2223,6.111,2224,3.282,2225,3.282,2226,3.282,2227,3.282,2228,3.282]],["title/components/WebAppContainer.html",[0,0.195,298,0.859]],["body/components/WebAppContainer.html",[0,0.322,1,0.962,2,1.267,3,0.219,4,0.219,6,0.962,7,1.239,8,0.156,10,1.533,13,0.962,14,1.454,15,1.163,16,0.79,17,0.025,44,1.504,54,0.902,68,0.392,101,1.267,105,2.154,107,1.981,113,0.727,114,1.825,116,0.933,122,0.908,130,1.981,137,0.845,139,1.822,141,0.604,143,0.596,144,0.734,145,0.556,146,0.51,147,1.777,148,0.785,149,0.727,165,0.785,166,1.35,184,1.71,186,1.267,199,0.446,200,2.933,201,3.671,202,1.439,203,0.355,204,1.848,210,1.848,211,0.219,212,0.083,232,1.71,248,0.902,261,0.962,262,1.439,263,1.35,264,0.902,265,1.71,266,1.239,268,1.239,269,0.962,270,1.239,271,0.962,272,1.239,273,0.962,274,1.092,275,1.633,276,0.962,277,1.239,278,1.267,279,1.163,280,1.239,281,0.902,282,0.994,283,1.239,284,1.041,285,1.239,286,0.962,287,1.239,288,0.962,289,1.188,290,1.025,291,1.239,292,0.962,293,1.239,294,0.902,295,1.239,296,0.962,297,1.239,298,1.506,299,1.51,300,1.239,301,0.902,302,0.962,303,1.025,304,0.845,305,1.239,306,0.845,307,1.239,308,0.013,309,0.018,310,0.013,314,1.991,384,2.435,434,3.089,443,3.117,454,2.345,602,1.321,629,1.504,640,1.722,644,1.608,842,2.838,859,2.435,1519,3.244,1561,2.574,1576,2.86,1585,2.86,1626,3.244,1713,3.768,1866,4.273,1934,4.778,1942,5.079,1952,3.244,2037,3.244,2072,3.244,2229,3.244,2230,5.04,2231,5.04,2232,5.636,2233,5.991,2234,5.636,2235,5.636,2236,5.04,2237,3.826,2238,3.826,2239,3.826,2240,3.826,2241,3.826,2242,3.826,2243,3.826,2244,5.04,2245,3.826,2246,3.826,2247,3.826,2248,3.826,2249,3.826,2250,3.826,2251,3.826,2252,3.826,2253,3.826,2254,3.826,2255,3.826,2256,3.826,2257,3.826,2258,3.826,2259,3.826,2260,5.636,2261,5.636,2262,3.826,2263,3.826,2264,3.826,2265,3.826,2266,3.826,2267,5.636,2268,3.826,2269,3.826]],["title/components/YesNoModal.html",[0,0.195,301,0.806]],["body/components/YesNoModal.html",[0,0.328,1,1.001,2,1.301,3,0.228,4,0.228,6,1.001,7,1.29,8,0.162,10,1.574,11,2.116,13,1.001,14,1.459,15,1.211,16,0.823,17,0.025,44,2.391,54,0.939,68,0.408,101,1.301,113,0.746,116,1.006,117,1.918,122,0.932,135,2.328,136,2.914,137,1.142,140,1.732,141,0.599,143,0.895,144,0.792,145,0.533,146,0.766,147,1.477,156,0.683,165,0.895,166,1.54,175,1.566,186,1.001,189,1.905,199,0.453,203,0.369,206,2.034,211,0.296,212,0.112,261,1.001,262,1.477,263,1.386,264,0.939,265,1.737,266,1.29,268,1.29,269,1.001,270,1.29,271,1.001,272,1.29,273,1.001,274,1.137,275,1.676,276,1.001,277,1.29,278,1.001,279,1.211,280,1.29,281,0.939,282,0.932,283,1.29,284,1.069,285,1.29,286,1.001,287,1.29,288,1.001,289,1.219,290,1.067,291,1.29,292,1.001,293,1.29,294,0.939,295,1.29,296,1.001,297,1.29,298,1.001,299,1.067,300,1.29,301,1.434,302,1.445,303,1.067,304,0.879,305,1.29,306,0.879,307,1.29,308,0.014,309,0.018,310,0.014,456,0.939,580,1.29,583,2.423,602,1.787,649,3.729,660,1.29,724,1.566,785,2.5,858,2.5,937,2.679,1162,2.914,1232,2.243,1256,3.171,1268,2.243,1405,3.171,1460,3.171,1532,2.914,1541,3.868,1547,2.243,1582,2.978,1612,2.978,1614,3.522,1615,2.441,1629,2.441,1844,3.481,1845,3.481,1849,2.679,1850,2.679,1851,3.481,1852,3.481,1853,3.866,1854,3.866,1856,3.236,1857,2.679,1858,2.679,2270,2.978,2271,4.873,2272,4.873,2273,3.984,2274,3.984,2275,3.984,2276,3.866,2277,3.984,2278,3.984,2279,3.984,2280,3.377,2281,3.377,2282,3.377,2283,3.377]],["title/classes/YesNoModalContent.html",[212,0.074,2276,2.3]],["body/classes/YesNoModalContent.html",[0,0.311,3,0.246,4,0.246,8,0.175,10,1.308,11,2.002,14,0.889,17,0.025,44,2.137,68,0.44,101,1.081,113,0.784,116,1.1,117,1.653,137,1.2,140,1.597,141,0.612,143,0.67,144,0.527,145,0.612,146,0.573,148,1.006,149,0.932,156,0.793,186,1.367,189,2.428,199,0.466,203,0.399,206,2.137,211,0.311,212,0.118,282,0.784,301,1.014,302,1.081,308,0.015,309,0.019,310,0.015,312,1.691,456,1.014,580,2.029,583,2.466,602,1.485,649,2.637,660,1.394,724,2.137,785,3.236,858,2.079,937,2.894,1162,2.423,1232,2.423,1256,2.637,1268,3.061,1460,2.637,1532,2.423,1541,3.216,1547,3.061,1582,3.216,1614,3.332,1615,2.637,1629,2.637,1842,3.648,1844,4.212,1845,4.212,1849,2.894,1850,2.894,1851,2.894,1852,2.894,1853,2.894,1854,2.894,1856,2.423,1857,2.894,1858,2.894,2270,3.216,2271,3.648,2272,3.648,2276,4.009,2280,5.475,2281,5.475,2282,5.475,2283,3.648,2284,4.303,2285,4.303,2286,4.303,2287,4.303,2288,4.303,2289,4.303]],["title/coverage.html",[2290,3.962]],["body/coverage.html",[0,0.4,1,1.03,8,0.167,9,3.473,11,1.508,17,0.025,33,2.039,35,4.756,139,1.246,140,1.098,145,0.38,180,1.844,206,1.61,212,0.147,248,0.966,264,1.242,269,1.03,271,1.324,273,1.324,276,1.03,278,1.03,281,0.966,282,0.591,284,0.846,286,1.03,288,1.03,292,1.03,294,1.242,296,1.324,298,1.03,301,0.966,304,0.904,306,0.904,308,0.014,309,0.018,310,0.014,311,1.979,313,3.473,317,2.307,385,2.511,417,3.229,418,2.511,420,3.473,441,3.918,582,2.756,583,2.548,584,3.939,592,1.831,657,2.132,659,3.473,695,2.307,720,2.132,744,2.132,816,2.511,817,3.473,827,4.468,874,4.279,877,2.756,929,2.756,943,2.756,951,2.132,1060,2.511,1182,4.468,1220,3.473,1222,3.473,1233,3.063,1235,4.468,1524,3.473,1584,3.473,1671,3.939,1712,3.063,1758,3.939,1790,3.473,1799,3.063,1839,2.756,1840,3.939,1856,2.307,1909,3.473,1920,3.473,1933,3.473,2121,4.597,2145,3.473,2229,3.473,2270,3.939,2276,2.756,2290,3.473,2291,4.097,2292,4.097,2293,5.27,2294,5.27,2295,4.097,2296,4.097,2297,4.097,2298,4.097,2299,5.825,2300,4.097,2301,4.097,2302,5.27,2303,4.097,2304,6.624,2305,6.71,2306,6.362,2307,4.097,2308,4.097,2309,4.097,2310,4.097,2311,4.097,2312,4.097,2313,4.097,2314,5.27,2315,4.097,2316,4.097,2317,4.097,2318,5.825,2319,5.27,2320,4.097,2321,4.097,2322,4.097,2323,4.097,2324,4.097,2325,4.097,2326,4.097,2327,4.097,2328,4.097,2329,4.097,2330,4.097,2331,4.097,2332,4.097,2333,4.097,2334,4.097,2335,4.097,2336,4.939,2337,3.473,2338,3.473,2339,4.097]],["title/dependencies.html",[856,2.317,2340,2.852]],["body/dependencies.html",[17,0.023,308,0.019,309,0.022,310,0.019,856,3.584,2341,5.593,2342,5.593,2343,5.593]],["title/index.html",[68,0.292,2344,2.418,2345,2.132]],["body/index.html",[0,0.39,2,1.487,5,2.204,8,0.121,10,0.903,14,0.613,15,0.903,16,1.222,17,0.025,18,1.82,41,3.591,42,3.591,54,1.435,107,1.167,108,2.22,117,1.954,118,1.248,139,1.731,141,0.393,143,0.462,144,0.605,151,1.665,155,1.82,156,0.333,199,0.44,212,0.141,247,2.204,248,0.7,249,2.518,262,0.848,269,1.353,282,0.776,284,0.875,289,1.435,290,0.796,294,1.163,299,1.442,308,0.01,309,0.015,310,0.015,312,2.447,317,1.672,320,2.391,322,2.22,324,1.906,327,3.591,353,3.591,360,2.22,388,3.031,393,2.22,435,2.22,445,1.672,446,1.248,447,1.82,450,1.672,452,1.997,456,1.163,459,1.906,460,1.336,462,2.204,463,1.672,477,2.204,478,2.849,481,1.997,488,1.82,501,1.997,516,1.545,562,1.336,564,1.435,565,2.116,601,1.82,638,2.22,640,2.851,644,1.779,648,2.22,657,2.962,661,2.22,662,3.591,664,4.375,665,5.278,668,4.096,669,3.429,670,3.986,674,3.621,675,2.518,680,2.518,686,2.78,688,3.026,691,3.626,700,2.22,701,2.385,719,1.82,720,3.385,721,1.82,724,2.393,727,2.22,730,1.82,732,3.758,739,3.166,766,1.82,828,2.22,853,1.435,854,3.204,855,1.545,859,1.435,860,1.82,866,3.299,867,3.828,873,2.22,876,4.737,877,2.849,890,1.82,893,3.321,894,3.621,902,2.22,912,2.22,913,2.849,914,2.22,916,3.026,926,3.691,941,1.997,942,1.997,950,4.254,951,2.801,955,3.166,958,3.166,962,2.22,964,1.997,972,3.691,985,2.22,986,3.166,987,2.22,994,2.22,1010,2.22,1011,3.621,1012,1.997,1015,1.82,1016,2.22,1021,3.691,1025,3.621,1049,2.22,1058,2.22,1082,2.849,1090,1.997,1097,3.166,1101,1.997,1104,2.22,1160,2.22,1181,4.654,1244,4.186,1245,2.518,1249,1.997,1260,3.591,1261,3.591,1262,2.518,1269,2.518,1278,2.518,1301,2.22,1359,2.518,1363,2.518,1393,2.518,1395,2.22,1398,2.518,1414,2.518,1453,2.518,1454,2.518,1474,2.518,1497,3.299,1529,1.997,1585,3.691,1700,2.518,1701,2.518,1708,2.518,1713,2.22,1716,2.22,1724,2.518,1831,3.299,1940,2.518,1964,3.591,1979,3.591,2345,2.22,2346,6.428,2347,2.97,2348,2.97,2349,2.97,2350,2.97,2351,4.937,2352,6.428,2353,6.09,2354,2.97,2355,4.236,2356,2.97,2357,4.236,2358,2.97,2359,5.691,2360,4.236,2361,4.236,2362,2.97,2363,5.383,2364,2.97,2365,2.97,2366,2.97,2367,2.97,2368,4.236,2369,4.236,2370,2.97,2371,4.236,2372,4.937,2373,2.97,2374,2.97,2375,4.236,2376,4.236,2377,4.937,2378,4.236,2379,2.97,2380,2.97,2381,2.97,2382,2.518,2383,4.937,2384,2.97,2385,4.236,2386,2.97,2387,6.09,2388,2.97,2389,4.236,2390,2.97,2391,2.97,2392,2.97,2393,2.97,2394,2.97,2395,2.518,2396,4.236,2397,2.97,2398,2.97,2399,2.97,2400,4.236,2401,4.236,2402,2.97,2403,4.236,2404,2.97,2405,4.236,2406,2.97,2407,4.236,2408,2.97,2409,4.236,2410,4.937,2411,2.97,2412,2.97,2413,2.97,2414,2.97,2415,2.97,2416,4.236,2417,2.97,2418,4.236,2419,2.97,2420,2.97,2421,2.97,2422,2.97,2423,4.236,2424,2.97,2425,2.97,2426,2.97,2427,2.97,2428,2.97,2429,2.97,2430,4.937,2431,2.97,2432,2.97,2433,2.97,2434,2.97,2435,4.236,2436,2.97,2437,2.97,2438,2.97,2439,4.236,2440,2.97,2441,2.97,2442,2.97,2443,2.97,2444,2.97,2445,2.97,2446,2.97,2447,4.236,2448,2.97,2449,2.97,2450,4.236,2451,2.97,2452,2.97,2453,2.97,2454,2.97,2455,2.97,2456,2.97,2457,2.97,2458,2.97,2459,2.518,2460,2.518]],["title/license.html",[2344,2.418,2345,2.132,2461,2.418]],["body/license.html",[17,0.021,93,3.392,175,1.982,308,0.018,309,0.021,310,0.018,405,3.392,565,2.355,636,4.779,864,3.09,877,3.392,916,3.09,1249,3.392,1395,4.479,1595,4.275,1895,3.77,1972,4.275,2382,4.275,2395,4.275,2459,4.275,2460,4.275,2461,4.275,2462,5.043,2463,6.394,2464,5.043,2465,5.992,2466,5.043,2467,5.043,2468,5.043,2469,5.043,2470,5.043,2471,5.043,2472,7.021,2473,5.043,2474,5.043,2475,5.992,2476,5.043,2477,5.043,2478,5.043,2479,5.043,2480,5.043,2481,5.043,2482,5.043,2483,5.992,2484,5.043,2485,5.043,2486,5.043,2487,5.043,2488,5.043,2489,5.992,2490,5.992,2491,5.043,2492,5.043,2493,5.043,2494,5.043,2495,5.043,2496,5.043,2497,5.043,2498,5.043,2499,5.043,2500,5.043,2501,5.043,2502,5.043,2503,5.043,2504,5.043,2505,5.043,2506,5.043,2507,5.043,2508,5.043,2509,5.043,2510,5.043,2511,5.043,2512,5.043,2513,5.043,2514,5.043,2515,5.043,2516,5.043,2517,5.043]],["title/modules.html",[855,2.432]],["body/modules.html",[17,0.022,308,0.019,309,0.022,310,0.019,430,4.962,854,3.11,855,2.875,1466,5.628,1497,3.385,1831,3.385,2518,6.638,2519,6.638]],["title/overview.html",[2520,3.962]],["body/overview.html",[1,1.661,2,1.02,17,0.025,44,2.059,139,1.863,140,1.554,220,1.706,261,1.02,269,1.661,271,1.661,273,1.661,276,1.661,278,1.661,281,1.558,282,0.837,284,1.365,286,1.661,288,1.661,292,1.661,294,1.558,296,1.661,298,1.661,301,1.558,303,1.088,304,1.459,306,1.459,308,0.014,309,0.018,310,0.014,312,1.596,403,2.731,415,3.035,418,4.051,419,3.035,566,1.827,657,3.018,658,2.488,720,3.018,816,4.051,853,1.961,854,3.81,855,2.113,856,2.286,857,2.731,858,1.961,859,1.961,860,2.488,861,3.442,862,3.442,863,3.524,864,2.488,951,2.113,1497,4.46,1498,3.442,1499,3.442,1501,3.442,1831,4.235,1832,3.442,1833,3.442,1834,3.442,1835,3.442,2520,3.442,2521,4.06,2522,4.06]],["title/miscellaneous/variables.html",[516,2.141,2523,2.418]],["body/miscellaneous/variables.html",[17,0.025,68,0.498,107,2.304,145,0.606,148,0.98,149,1,151,1.911,156,0.658,180,2.638,184,1.388,228,1.211,232,1.797,308,0.017,309,0.02,310,0.017,320,2.463,380,3.27,431,2.979,434,3.593,516,2.53,564,2.348,583,2.158,644,2.463,724,1.911,874,3.27,928,3.27,929,3.943,930,4.382,931,3.634,932,3.634,933,3.634,934,3.634,935,3.634,936,3.634,940,3.634,941,3.27,942,3.27,943,3.943,944,4.382,945,3.634,946,3.634,947,3.634,948,3.634,1671,3.634,1712,4.382,1758,3.634,1799,4.382,1856,3.301,2336,4.121,2337,4.97,2338,4.97,2523,4.121,2524,6.294,2525,4.861,2526,4.861,2527,5.862,2528,4.861,2529,4.861]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":33,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["0.2s",{"_index":83,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["0/1",{"_index":2305,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2319,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2310,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2317,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2314,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2306,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2318,"title":{},"body":{"coverage.html":{}}}],["00000000",{"_index":1138,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["0123456789abcdef'.split",{"_index":1647,"title":{},"body":{"classes/MD5.html":{}}}],["0x010000",{"_index":2228,"title":{},"body":{"classes/Utf8.html":{}}}],["0x07",{"_index":1179,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x0800",{"_index":2226,"title":{},"body":{"classes/Utf8.html":{}}}],["0x0f",{"_index":1175,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x10000",{"_index":2187,"title":{},"body":{"classes/Utf8.html":{}}}],["0x1f",{"_index":1178,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3f",{"_index":411,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0x3ff",{"_index":2189,"title":{},"body":{"classes/Utf8.html":{}}}],["0x80",{"_index":1169,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["0xc0",{"_index":2198,"title":{},"body":{"classes/Utf8.html":{}}}],["0xd800",{"_index":2185,"title":{},"body":{"classes/Utf8.html":{}}}],["0xdc00",{"_index":2190,"title":{},"body":{"classes/Utf8.html":{}}}],["0xe0",{"_index":2201,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf0",{"_index":2204,"title":{},"body":{"classes/Utf8.html":{}}}],["0xf8",{"_index":2227,"title":{},"body":{"classes/Utf8.html":{}}}],["0xff",{"_index":2213,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffe00000",{"_index":2203,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff",{"_index":2186,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffff0000",{"_index":2199,"title":{},"body":{"classes/Utf8.html":{}}}],["0xfffff800",{"_index":2196,"title":{},"body":{"classes/Utf8.html":{}}}],["0xffffff80",{"_index":2191,"title":{},"body":{"classes/Utf8.html":{}}}],["1",{"_index":220,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["1.18.02.16a",{"_index":1605,"title":{},"body":{"components/LoginCmp.html":{}}}],["1.18.06.17a",{"_index":1361,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["1/1",{"_index":2299,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2313,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2294,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2298,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":415,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["10).replace",{"_index":1137,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["10/10",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":35,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/ModalConfig.html":{},"coverage.html":{}}}],["1063",{"_index":1609,"title":{},"body":{"components/LoginCmp.html":{}}}],["1070px",{"_index":1586,"title":{},"body":{"components/LoginCmp.html":{}}}],["10px",{"_index":58,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["12",{"_index":413,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["12/13",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["12/40",{"_index":2312,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2297,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":2316,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2521,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":30,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["16",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["1732584193",{"_index":1163,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["1732584194",{"_index":1165,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["18",{"_index":410,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["18/09",{"_index":1342,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["181px",{"_index":90,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["1px",{"_index":74,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["2",{"_index":44,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["20",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1591,"title":{},"body":{"components/LoginCmp.html":{}}}],["2017",{"_index":2464,"title":{},"body":{"license.html":{}}}],["24px",{"_index":468,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["25/48",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":89,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["26/27",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1788,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["271733878",{"_index":1166,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["271733879",{"_index":1164,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["2px",{"_index":474,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["3",{"_index":403,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{},"overview.html":{}}}],["3.2.1",{"_index":2343,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2301,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":2309,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2311,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1150,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["33",{"_index":2302,"title":{},"body":{"coverage.html":{}}}],["34/39",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":250,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["350",{"_index":1551,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["3px",{"_index":75,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["4",{"_index":368,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["400",{"_index":1550,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["41",{"_index":2307,"title":{},"body":{"coverage.html":{}}}],["4c",{"_index":1099,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4d",{"_index":669,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["4d's",{"_index":1262,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["4daction",{"_index":1046,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["4daction/rest_proxyhttpget",{"_index":1057,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["5/12",{"_index":2308,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1790,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{}}}],["52",{"_index":2321,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1170,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["570",{"_index":190,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["5px",{"_index":29,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["6",{"_index":385,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["6/18",{"_index":2303,"title":{},"body":{"coverage.html":{}}}],["630",{"_index":221,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["64",{"_index":1167,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["667",{"_index":1610,"title":{},"body":{"components/LoginCmp.html":{}}}],["670px",{"_index":1590,"title":{},"body":{"components/LoginCmp.html":{}}}],["7",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2315,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2300,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1174,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["87",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2522,"title":{},"body":{"overview.html":{}}}],["9/]/.test(input",{"_index":375,"title":{},"body":{"classes/Base64.html":{}}}],["92",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":69,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["__karma__",{"_index":2337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_attributes",{"_index":1276,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_backdropref",{"_index":610,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_bootstrapref",{"_index":609,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_config",{"_index":1712,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_defaultconfig",{"_index":1799,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_editwindowconfig",{"_index":1935,"title":{},"body":{"components/RecordList.html":{}}}],["_fourdurl",{"_index":967,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_listcache",{"_index":1002,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_modified",{"_index":1279,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_previousadvancedquery",{"_index":1936,"title":{},"body":{"components/RecordList.html":{}}}],["_previousquery",{"_index":1937,"title":{},"body":{"components/RecordList.html":{}}}],["_recnum",{"_index":1266,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["_registrycache",{"_index":1003,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["_resultdefered",{"_index":611,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["_savedsearches",{"_index":2086,"title":{},"body":{"components/RecordList.html":{}}}],["_savedsets",{"_index":2096,"title":{},"body":{"components/RecordList.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":340,"title":{},"body":{"classes/Base64.html":{}}}],["ability",{"_index":2416,"title":{},"body":{"index.html":{}}}],["above",{"_index":93,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["absolute",{"_index":66,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["acceptheader",{"_index":1033,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["acceptheader:string",{"_index":1028,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["accepts",{"_index":1784,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["access",{"_index":445,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["accessing",{"_index":2399,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":135,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{}}}],["act",{"_index":1024,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["acting",{"_index":2415,"title":{},"body":{"index.html":{}}}],["action",{"_index":1895,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{},"license.html":{}}}],["actions",{"_index":1760,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["active",{"_index":2122,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["actual_component",{"_index":307,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["add",{"_index":247,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["add/edit",{"_index":1962,"title":{},"body":{"components/RecordList.html":{}}}],["add/edit/delete",{"_index":2443,"title":{},"body":{"index.html":{}}}],["add32",{"_index":1636,"title":{},"body":{"classes/MD5.html":{}}}],["add32(a",{"_index":1649,"title":{},"body":{"classes/MD5.html":{}}}],["added",{"_index":1010,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["adding",{"_index":2058,"title":{},"body":{"components/RecordList.html":{}}}],["additional",{"_index":1021,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["additionally",{"_index":2442,"title":{},"body":{"index.html":{}}}],["adds",{"_index":2407,"title":{},"body":{"index.html":{}}}],["addtab",{"_index":2138,"title":{},"body":{"components/Tabs.html":{}}}],["addtab(tab",{"_index":2134,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["adjust",{"_index":2043,"title":{},"body":{"components/RecordList.html":{}}}],["advanced",{"_index":15,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["advancedquery",{"_index":1999,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquery['dialogconfig",{"_index":2071,"title":{},"body":{"components/RecordList.html":{}}}],["advancedquerycomponent",{"_index":1,"title":{"components/AdvancedQueryComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["aftercontentinit",{"_index":1934,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["afterviewinit",{"_index":12,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["alert('record",{"_index":2064,"title":{},"body":{"components/RecordList.html":{}}}],["alert(reason",{"_index":1930,"title":{},"body":{"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["algorithm",{"_index":359,"title":{},"body":{"classes/Base64.html":{}}}],["allow",{"_index":2456,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1698,"title":{},"body":{"injectables/Modal.html":{}}}],["allowmultiple",{"_index":1687,"title":{},"body":{"injectables/Modal.html":{}}}],["allows",{"_index":2439,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":1247,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["already",{"_index":2057,"title":{},"body":{"components/RecordList.html":{}}}],["and/or",{"_index":1595,"title":{},"body":{"components/LoginCmp.html":{},"license.html":{}}}],["angular",{"_index":866,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["angular/common",{"_index":1508,"title":{},"body":{"modules/JS44DModule.html":{}}}],["angular/common/http",{"_index":870,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["angular/core",{"_index":203,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["angular/forms",{"_index":1506,"title":{},"body":{"modules/JS44DModule.html":{},"components/QuickFindInput.html":{}}}],["angular/platform",{"_index":429,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["angular2",{"_index":204,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["angular5",{"_index":1008,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["answer",{"_index":1851,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["anyway",{"_index":398,"title":{},"body":{"classes/Base64.html":{}}}],["api",{"_index":600,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["app",{"_index":972,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["appear",{"_index":50,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["applicable",{"_index":1252,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["application",{"_index":1713,"title":{},"body":{"injectables/Modal.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["application'},{'name",{"_index":300,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["application/x",{"_index":1030,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["applications",{"_index":1718,"title":{},"body":{"injectables/Modal.html":{}}}],["applied",{"_index":729,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["appref",{"_index":1680,"title":{},"body":{"injectables/Modal.html":{}}}],["appref.injector.get(app_component",{"_index":1722,"title":{},"body":{"injectables/Modal.html":{}}}],["apps",{"_index":2431,"title":{},"body":{"index.html":{}}}],["argument",{"_index":917,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["arising",{"_index":2515,"title":{},"body":{"license.html":{}}}],["array",{"_index":151,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(>config.keyboard",{"_index":1804,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["ascending",{"_index":717,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["ascii",{"_index":371,"title":{},"body":{"classes/Base64.html":{}}}],["assets",{"_index":2389,"title":{},"body":{"index.html":{}}}],["assets/main",{"_index":2393,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1249,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["associates",{"_index":2440,"title":{},"body":{"index.html":{}}}],["assume",{"_index":1483,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["astral",{"_index":391,"title":{},"body":{"classes/Base64.html":{}}}],["atk’s",{"_index":361,"title":{},"body":{"classes/Base64.html":{}}}],["atob",{"_index":352,"title":{},"body":{"classes/Base64.html":{}}}],["atob`/`btoa",{"_index":329,"title":{},"body":{"classes/Base64.html":{}}}],["attribute",{"_index":1295,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["attributes",{"_index":960,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["attributes/properties",{"_index":1421,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["audit",{"_index":1316,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["authenticate",{"_index":2435,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":2447,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":955,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["authors",{"_index":2505,"title":{},"body":{"license.html":{}}}],["auto",{"_index":22,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["automatically",{"_index":638,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["available",{"_index":2403,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":1052,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["b",{"_index":404,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["back",{"_index":1344,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["backdropref",{"_index":1813,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["backdropref(value",{"_index":614,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["backend",{"_index":950,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["backends",{"_index":2452,"title":{},"body":{"index.html":{}}}],["background",{"_index":1587,"title":{},"body":{"components/LoginCmp.html":{}}}],["background:#ddd",{"_index":71,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#f8f8f8",{"_index":37,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["background:#fff",{"_index":40,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["band",{"_index":447,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["band'},{'name",{"_index":285,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["bar",{"_index":478,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["base",{"_index":2400,"title":{},"body":{"index.html":{}}}],["base64",{"_index":311,"title":{"classes/Base64.html":{}},"body":{"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["base64.encode(utf8.utf8encode((columns",{"_index":796,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify",{"_index":1093,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(json.stringify(values",{"_index":1441,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(pwd",{"_index":1070,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(this.getcolumnlistjson",{"_index":1368,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('add",{"_index":1402,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(this.recordtojson('update",{"_index":1415,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["base64.encode(utf8.utf8encode(url",{"_index":1056,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.encode(utf8.utf8encode(user",{"_index":1069,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["base64.error",{"_index":376,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat((buffer",{"_index":416,"title":{},"body":{"classes/Base64.html":{}}}],["base64.table.charat(buffer",{"_index":412,"title":{},"body":{"classes/Base64.html":{}}}],["base64imageref",{"_index":418,"title":{"pipes/Base64ImageRef.html":{}},"body":{"pipes/Base64ImageRef.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["based",{"_index":360,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"index.html":{}}}],["basic",{"_index":2423,"title":{},"body":{"index.html":{}}}],["basically",{"_index":2426,"title":{},"body":{"index.html":{}}}],["before",{"_index":938,"title":{},"body":{"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["beforeclose",{"_index":1223,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["beforedismiss",{"_index":1224,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["being",{"_index":47,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["belong",{"_index":1345,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["below",{"_index":1727,"title":{},"body":{"injectables/Modal.html":{}}}],["between",{"_index":897,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["binding",{"_index":1221,"title":{},"body":{"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{}}}],["bitcounter",{"_index":381,"title":{},"body":{"classes/Base64.html":{}}}],["bitstorage",{"_index":382,"title":{},"body":{"classes/Base64.html":{}}}],["blank",{"_index":1111,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["blob",{"_index":109,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["block",{"_index":31,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["blocking",{"_index":1691,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["body",{"_index":785,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["body.action",{"_index":1400,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.callbackmethod",{"_index":1399,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.cascadedelete",{"_index":1420,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.columns",{"_index":795,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.filteroptions",{"_index":799,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.hash",{"_index":1043,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.numrecs",{"_index":792,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.orderby",{"_index":800,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.querystring",{"_index":793,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.recorddata",{"_index":1401,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordid",{"_index":1365,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.recordnum",{"_index":1366,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["body.registryvalue",{"_index":1123,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.sessionkey",{"_index":1041,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["body.startrec",{"_index":791,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["body.tablename",{"_index":789,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["body.variableslist",{"_index":1367,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["boolean",{"_index":580,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["booleanvalue",{"_index":1183,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["bootstrap",{"_index":858,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"overview.html":{}}}],["bootstrapref",{"_index":1814,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["bootstrapref(value",{"_index":616,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["border",{"_index":97,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["border:0",{"_index":96,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["bottom",{"_index":528,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:10px",{"_index":472,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["bottom:1px",{"_index":98,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["box",{"_index":72,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["break",{"_index":1310,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["browse",{"_index":2519,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":430,"title":{},"body":{"pipes/Base64ImageRef.html":{},"components/RecordList.html":{},"modules.html":{}}}],["btn",{"_index":531,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["btoa",{"_index":386,"title":{},"body":{"classes/Base64.html":{}}}],["buffer",{"_index":383,"title":{},"body":{"classes/Base64.html":{}}}],["build",{"_index":1364,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["builds",{"_index":2418,"title":{},"body":{"index.html":{}}}],["built",{"_index":2438,"title":{},"body":{"index.html":{}}}],["button",{"_index":477,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttonlabel",{"_index":1545,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["buttons",{"_index":488,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["buttontext",{"_index":1525,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["byte",{"_index":2192,"title":{},"body":{"classes/Utf8.html":{}}}],["byte1",{"_index":2218,"title":{},"body":{"classes/Utf8.html":{}}}],["byte2",{"_index":2219,"title":{},"body":{"classes/Utf8.html":{}}}],["byte3",{"_index":2220,"title":{},"body":{"classes/Utf8.html":{}}}],["byte4",{"_index":2221,"title":{},"body":{"classes/Utf8.html":{}}}],["bytearray",{"_index":2146,"title":{},"body":{"classes/Utf8.html":{}}}],["bytecount",{"_index":2147,"title":{},"body":{"classes/Utf8.html":{}}}],["byteindex",{"_index":2148,"title":{},"body":{"classes/Utf8.html":{}}}],["bytes",{"_index":2222,"title":{},"body":{"classes/Utf8.html":{}}}],["bytestring",{"_index":2177,"title":{},"body":{"classes/Utf8.html":{}}}],["c",{"_index":405,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"license.html":{}}}],["c9c9c9",{"_index":100,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cache",{"_index":1129,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cached",{"_index":998,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculated",{"_index":1242,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["calculatehash",{"_index":943,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatehash(body",{"_index":1044,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calculates",{"_index":940,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["calculation",{"_index":1634,"title":{},"body":{"classes/MD5.html":{}}}],["call",{"_index":562,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["call4drestmethod",{"_index":2404,"title":{},"body":{"index.html":{}}}],["call4drestmethod(fourdmethod",{"_index":1027,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["callback",{"_index":1271,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["called",{"_index":887,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["caller",{"_index":1022,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["calling",{"_index":2406,"title":{},"body":{"index.html":{}}}],["calls",{"_index":2401,"title":{},"body":{"index.html":{}}}],["can't",{"_index":106,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["can\\'t",{"_index":267,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cancel",{"_index":649,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["cancelled",{"_index":637,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["carneiro",{"_index":2460,"title":{},"body":{"index.html":{},"license.html":{}}}],["cascade",{"_index":500,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["cascadedeleterecord",{"_index":502,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["case",{"_index":390,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["catch",{"_index":2268,"title":{},"body":{"components/WebAppContainer.html":{}}}],["catch((e",{"_index":1632,"title":{},"body":{"components/LoginCmp.html":{}}}],["catch((error",{"_index":1391,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["catch((reason",{"_index":852,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["catch(e",{"_index":2266,"title":{},"body":{"components/WebAppContainer.html":{}}}],["ccc",{"_index":76,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["cdata",{"_index":1352,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["changed",{"_index":1745,"title":{},"body":{"injectables/Modal.html":{}}}],["changes",{"_index":1130,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["changeselection",{"_index":1528,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changeselection(ev",{"_index":1538,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["changing",{"_index":1297,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["character",{"_index":348,"title":{},"body":{"classes/Base64.html":{}}}],["characters",{"_index":372,"title":{},"body":{"classes/Base64.html":{}}}],["charge",{"_index":2469,"title":{},"body":{"license.html":{}}}],["check",{"_index":1457,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkbox",{"_index":1206,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["checked",{"_index":1746,"title":{},"body":{"injectables/Modal.html":{}}}],["checks",{"_index":1448,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["checkscalarvalue",{"_index":2149,"title":{},"body":{"classes/Utf8.html":{}}}],["checkscalarvalue(codepoint",{"_index":2161,"title":{},"body":{"classes/Utf8.html":{}}}],["choice",{"_index":1082,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["chromium",{"_index":331,"title":{},"body":{"classes/Base64.html":{}}}],["claim",{"_index":2508,"title":{},"body":{"license.html":{}}}],["class",{"_index":212,"title":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["class/parameter",{"_index":1114,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["classes",{"_index":312,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"classes/Utf8.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"overview.html":{}}}],["classname",{"_index":1188,"title":{},"body":{"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["clause",{"_index":714,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clean",{"_index":1065,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["clear",{"_index":563,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["clear:both",{"_index":94,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["clearform",{"_index":558,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["clearquery",{"_index":1939,"title":{},"body":{"components/RecordList.html":{}}}],["clearrecord",{"_index":1307,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clearrecorddirtyflag",{"_index":1455,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clears",{"_index":1306,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["clicking",{"_index":1778,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["clicks",{"_index":646,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["cliking",{"_index":1959,"title":{},"body":{"components/RecordList.html":{}}}],["closable",{"_index":1777,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["close",{"_index":619,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{}}}],["close(result",{"_index":628,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["closed",{"_index":1227,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/ModalConfig.html":{}}}],["closedialog",{"_index":1675,"title":{},"body":{"injectables/Modal.html":{}}}],["closedialog(event",{"_index":1683,"title":{},"body":{"injectables/Modal.html":{}}}],["closing",{"_index":1228,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["cluster_fourdmodule",{"_index":861,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_fourdmodule_providers",{"_index":862,"title":{},"body":{"modules/FourDModule.html":{},"overview.html":{}}}],["cluster_js44dmodule",{"_index":1498,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_declarations",{"_index":1499,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_exports",{"_index":1501,"title":{},"body":{"modules/JS44DModule.html":{},"overview.html":{}}}],["cluster_js44dmodule_imports",{"_index":1500,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_js44dmodule_providers",{"_index":1502,"title":{},"body":{"modules/JS44DModule.html":{}}}],["cluster_modalmodule",{"_index":1832,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1833,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1834,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_providers",{"_index":1835,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cmn",{"_index":1637,"title":{},"body":{"classes/MD5.html":{}}}],["cmn(q",{"_index":1651,"title":{},"body":{"classes/MD5.html":{}}}],["code",{"_index":928,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["codepoint",{"_index":2163,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints",{"_index":2206,"title":{},"body":{"classes/Utf8.html":{}}}],["codepoints.length",{"_index":2208,"title":{},"body":{"classes/Utf8.html":{}}}],["col",{"_index":758,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.field",{"_index":773,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.formula",{"_index":775,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.indexof",{"_index":760,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.joinfk",{"_index":1471,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.joinpk",{"_index":1472,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.longname",{"_index":777,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.name",{"_index":776,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["col.substr(col.indexof",{"_index":763,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["col.subtable",{"_index":1461,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.fields",{"_index":1464,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["col.subtable.tablename",{"_index":1470,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["collection",{"_index":662,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["collist",{"_index":753,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["collist.push",{"_index":762,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["color",{"_index":466,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["color:#282828",{"_index":38,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["cols",{"_index":1477,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col",{"_index":1479,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["cols.push(col.name",{"_index":1480,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["column",{"_index":704,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["columns",{"_index":671,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["combine",{"_index":457,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["combined",{"_index":895,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["combinesearches",{"_index":2109,"title":{},"body":{"components/RecordList.html":{}}}],["comes",{"_index":1245,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["commonmodule",{"_index":1507,"title":{},"body":{"modules/JS44DModule.html":{}}}],["companion",{"_index":2348,"title":{},"body":{"index.html":{}}}],["comparator",{"_index":157,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["comparatorlist",{"_index":131,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["compatible",{"_index":351,"title":{},"body":{"classes/Base64.html":{}}}],["complete",{"_index":1382,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["completion",{"_index":1026,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["component",{"_index":0,"title":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["component.dialogconfig",{"_index":1757,"title":{},"body":{"injectables/Modal.html":{}}}],["component_template",{"_index":266,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["componentfactoryresolver",{"_index":1679,"title":{},"body":{"injectables/Modal.html":{}}}],["componentref",{"_index":591,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{},"overview.html":{}}}],["components/widgets",{"_index":2385,"title":{},"body":{"index.html":{}}}],["componenttype",{"_index":1693,"title":{},"body":{"injectables/Modal.html":{}}}],["componenttype['name",{"_index":1751,"title":{},"body":{"injectables/Modal.html":{}}}],["conditions",{"_index":2488,"title":{},"body":{"license.html":{}}}],["config",{"_index":1526,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["config.isblocking",{"_index":1802,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard",{"_index":1803,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.keyboard).length",{"_index":1805,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["config.selfcentered",{"_index":1736,"title":{},"body":{"injectables/Modal.html":{}}}],["config.size",{"_index":1800,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["configuration",{"_index":1696,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["configured",{"_index":645,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["confirm((this.queryband.cascadedeleterecord",{"_index":2060,"title":{},"body":{"components/RecordList.html":{}}}],["connection",{"_index":2516,"title":{},"body":{"license.html":{}}}],["connector",{"_index":158,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["console.log('authenticated",{"_index":1627,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log('error",{"_index":813,"title":{},"body":{"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["console.log('hash",{"_index":947,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["console.log('oops",{"_index":1631,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(e",{"_index":1633,"title":{},"body":{"components/LoginCmp.html":{}}}],["console.log(event",{"_index":1755,"title":{},"body":{"injectables/Modal.html":{}}}],["console.log(this.dialoginstance",{"_index":2031,"title":{},"body":{"components/RecordList.html":{}}}],["const",{"_index":232,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(@inject(httpclient",{"_index":1005,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["constructor(componentfactoryresolver",{"_index":1678,"title":{},"body":{"injectables/Modal.html":{}}}],["constructor(dialog",{"_index":1532,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["constructor(elementref",{"_index":1867,"title":{},"body":{"components/QueryBand.html":{}}}],["constructor(fourd",{"_index":138,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["constructor(modal",{"_index":1952,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["constructor(private",{"_index":439,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["constructor(public",{"_index":1576,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["constructor(tabs",{"_index":2123,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["constructor(title",{"_index":1842,"title":{},"body":{"classes/OKOnlyContent.html":{},"classes/YesNoModalContent.html":{}}}],["contain",{"_index":397,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["container",{"_index":2444,"title":{},"body":{"index.html":{}}}],["containers/advancedquery",{"_index":1511,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/queryband",{"_index":1510,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordeditwindow",{"_index":1513,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/recordlist",{"_index":1512,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/tabs",{"_index":1514,"title":{},"body":{"modules/JS44DModule.html":{}}}],["containers/webappcontainer",{"_index":1515,"title":{},"body":{"modules/JS44DModule.html":{}}}],["contains",{"_index":399,"title":{},"body":{"classes/Base64.html":{}}}],["content",{"_index":302,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["content'},{'name",{"_index":283,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["contentchild",{"_index":444,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["contentchild('customqueryband",{"_index":448,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentchild(datagrid",{"_index":1994,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(queryband",{"_index":1992,"title":{},"body":{"components/RecordList.html":{}}}],["contentchild(querybanddirective",{"_index":523,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["contentheaders",{"_index":1029,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentheaders['accept",{"_index":1034,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["contentref",{"_index":603,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["contents",{"_index":1244,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["context",{"_index":1856,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.body",{"_index":1854,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.notext",{"_index":2272,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.oktext",{"_index":1855,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["context.title",{"_index":1853,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["context.yestext",{"_index":2271,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["continuation",{"_index":2217,"title":{},"body":{"classes/Utf8.html":{}}}],["continuationbyte",{"_index":2211,"title":{},"body":{"classes/Utf8.html":{}}}],["contract",{"_index":2512,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2458,"title":{},"body":{"index.html":{}}}],["control",{"_index":1701,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["controls/fourddropdown",{"_index":1516,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/fourdregistryinput",{"_index":1523,"title":{},"body":{"modules/JS44DModule.html":{}}}],["controls/quickfindinput",{"_index":1517,"title":{},"body":{"modules/JS44DModule.html":{}}}],["convert",{"_index":431,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["converted",{"_index":1018,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["convertobjecttourl",{"_index":929,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertobjecttourl(body",{"_index":1047,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["converts",{"_index":1131,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["copies",{"_index":2483,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1395,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{},"license.html":{}}}],["copyright",{"_index":2463,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":379,"title":{},"body":{"classes/Base64.html":{}}}],["corresponding",{"_index":2013,"title":{},"body":{"components/RecordList.html":{}}}],["corresponds",{"_index":886,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["cors",{"_index":1053,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["counter",{"_index":2182,"title":{},"body":{"classes/Utf8.html":{}}}],["coverage",{"_index":2290,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crap",{"_index":1036,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["create",{"_index":2417,"title":{},"body":{"index.html":{}}}],["createbyte",{"_index":2150,"title":{},"body":{"classes/Utf8.html":{}}}],["createbyte(codepoint",{"_index":2164,"title":{},"body":{"classes/Utf8.html":{}}}],["credentials",{"_index":2448,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1378,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["crud",{"_index":1261,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["css3",{"_index":77,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currectly",{"_index":2412,"title":{},"body":{"index.html":{}}}],["current",{"_index":460,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["currently",{"_index":1449,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["currentrecord",{"_index":672,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordEditWindow.html":{}}}],["currentrecordnumber",{"_index":1356,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["currenttable",{"_index":115,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["currentuser",{"_index":962,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["currentuserid",{"_index":963,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["currentuserpassword",{"_index":965,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["custom",{"_index":446,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["custombuttonbar",{"_index":442,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["custombuttonbar'},{'name",{"_index":305,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["custombuttonbardirective",{"_index":304,"title":{"directives/CustomButtonBarDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["custome",{"_index":561,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["customstyle",{"_index":1761,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["d",{"_index":406,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["damages",{"_index":2509,"title":{},"body":{"license.html":{}}}],["data",{"_index":724,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data('kendowindow",{"_index":1735,"title":{},"body":{"injectables/Modal.html":{}}}],["data[field.name",{"_index":1431,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["database",{"_index":670,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["datagrid",{"_index":269,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["datagrid'},{'name",{"_index":270,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["datagrid/datagrid",{"_index":1518,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["datamodel",{"_index":767,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["date",{"_index":819,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["date(0,0,0,hh,mm,ss",{"_index":1292,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["date(datevalue",{"_index":1143,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["date(value.replace",{"_index":822,"title":{},"body":{"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["date.tolocaledatestring",{"_index":823,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["dateto4dformat(thedate",{"_index":1135,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datetodomformat(thedate",{"_index":1140,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["datevalue",{"_index":1141,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["datevalue.getfullyear().tostring",{"_index":1349,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["datevalue.getmonth",{"_index":1350,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dbl",{"_index":1958,"title":{},"body":{"components/RecordList.html":{}}}],["deal",{"_index":1972,"title":{},"body":{"components/RecordList.html":{},"license.html":{}}}],["dealings",{"_index":2517,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1915,"title":{},"body":{"components/QuickFindInput.html":{}}}],["declaration",{"_index":2383,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":857,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}],["declare",{"_index":939,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["declared",{"_index":2379,"title":{},"body":{"index.html":{}}}],["decode",{"_index":318,"title":{},"body":{"classes/Base64.html":{}}}],["decode(input",{"_index":342,"title":{},"body":{"classes/Base64.html":{}}}],["decoded",{"_index":378,"title":{},"body":{"classes/Base64.html":{}}}],["decodesymbol",{"_index":2151,"title":{},"body":{"classes/Utf8.html":{}}}],["decoding",{"_index":358,"title":{},"body":{"classes/Base64.html":{}}}],["decorators",{"_index":1907,"title":{},"body":{"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["default",{"_index":148,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["default=false",{"_index":1417,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["defaultconfig",{"_index":1681,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["defaultconfig.keyboard",{"_index":1806,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaultconfig.size",{"_index":1801,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["defaults",{"_index":969,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["defaultvalue",{"_index":1121,"title":{},"body":{"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/MD5.html":{}}}],["deferred",{"_index":582,"title":{"classes/Deferred.html":{}},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["defined",{"_index":141,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["defines",{"_index":702,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["definition",{"_index":1268,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["del",{"_index":540,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["delete",{"_index":463,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["deleted",{"_index":2065,"title":{},"body":{"components/RecordList.html":{}}}],["deleterecord",{"_index":1940,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["deleterecord(cascade",{"_index":1418,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["deletes",{"_index":2425,"title":{},"body":{"index.html":{}}}],["depend",{"_index":2453,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":856,"title":{"dependencies.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":2427,"title":{},"body":{"index.html":{}}}],["descending",{"_index":781,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["described",{"_index":353,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["describes",{"_index":875,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["describing",{"_index":1269,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["description",{"_index":660,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["designed",{"_index":349,"title":{},"body":{"classes/Base64.html":{}}}],["detailed",{"_index":2357,"title":{},"body":{"index.html":{}}}],["determine",{"_index":891,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["development",{"_index":974,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["di",{"_index":1719,"title":{},"body":{"injectables/Modal.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["dialog.close",{"_index":634,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialog.resizing._draggable.userevents.bind('release",{"_index":2033,"title":{},"body":{"components/RecordList.html":{}}}],["dialog.title(title",{"_index":626,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dialogcomponentref",{"_index":1740,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogcomponentref.changedetectorref.detectchanges",{"_index":1747,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogconfig",{"_index":119,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{}}}],["dialogid",{"_index":1688,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance",{"_index":1734,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["dialoginstance.contentref",{"_index":1739,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.kendodialog",{"_index":1741,"title":{},"body":{"injectables/Modal.html":{}}}],["dialoginstance.result",{"_index":1753,"title":{},"body":{"injectables/Modal.html":{}}}],["dialogs/listselectordialog",{"_index":1520,"title":{},"body":{"modules/JS44DModule.html":{},"components/RecordList.html":{}}}],["digest",{"_index":1061,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["directive",{"_index":264,"title":{"directives/CustomButtonBarDirective.html":{},"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{}}}],["directives",{"_index":303,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["directly",{"_index":1363,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["directory",{"_index":2391,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1326,"title":{},"body":{"interfaces/IFieldDescription.html":{},"injectables/ModalConfig.html":{}}}],["disabled",{"_index":1317,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dismiss",{"_index":621,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["dismissal",{"_index":1231,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["dismissed",{"_index":1230,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["display",{"_index":1979,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["display:inline",{"_index":26,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["display:none",{"_index":469,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["displayed",{"_index":2441,"title":{},"body":{"index.html":{}}}],["displays",{"_index":2437,"title":{},"body":{"index.html":{}}}],["dispose",{"_index":653,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["distinctuntilchanged",{"_index":1916,"title":{},"body":{"components/QuickFindInput.html":{}}}],["distribute",{"_index":2480,"title":{},"body":{"license.html":{}}}],["divided",{"_index":2370,"title":{},"body":{"index.html":{}}}],["doaddrecord",{"_index":573,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doclear",{"_index":556,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["documentation",{"_index":877,"title":{},"body":{"classes/FourDQuery.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation](https://github.com/fourctv/fourdrestapi/wiki/the",{"_index":1180,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dodeleterecord",{"_index":577,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doeditrecord",{"_index":575,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doesn't",{"_index":1723,"title":{},"body":{"injectables/Modal.html":{}}}],["doexportgrid",{"_index":571,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["domanagesets",{"_index":1864,"title":{},"body":{"components/QueryBand.html":{},"components/RecordList.html":{}}}],["domanagesets(action",{"_index":549,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["domsanitizer",{"_index":428,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["doqbe",{"_index":542,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doqff",{"_index":544,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["doquery",{"_index":123,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["dorefresh",{"_index":551,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dosort",{"_index":554,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["dot",{"_index":1250,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["dowehaveaquery",{"_index":579,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["down",{"_index":42,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["drop",{"_index":41,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["dropdown",{"_index":828,"title":{},"body":{"components/FourDDropDown.html":{},"components/RecordList.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":272,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["dropdownisopen",{"_index":522,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["during",{"_index":973,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["dynamic",{"_index":952,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["each",{"_index":691,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["edit",{"_index":290,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["editing",{"_index":2044,"title":{},"body":{"components/RecordList.html":{}}}],["editwindow",{"_index":1948,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler",{"_index":1941,"title":{},"body":{"components/RecordList.html":{}}}],["editwindowhandler(result",{"_index":1970,"title":{},"body":{"components/RecordList.html":{}}}],["effect",{"_index":80,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element",{"_index":263,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["element.comparator",{"_index":236,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.connector",{"_index":241,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field",{"_index":238,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.field.name",{"_index":235,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["element.split",{"_index":2252,"title":{},"body":{"components/WebAppContainer.html":{}}}],["element.value",{"_index":240,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["elementref",{"_index":200,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["embedded",{"_index":433,"title":{},"body":{"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["emitted",{"_index":504,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["empty",{"_index":1255,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["enable",{"_index":481,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enableaddrecord",{"_index":497,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebutton",{"_index":1865,"title":{},"body":{"components/QueryBand.html":{}}}],["enablebutton(btn",{"_index":529,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablebuttonbar",{"_index":496,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablecombisearch",{"_index":490,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enabled",{"_index":501,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["enabledeleterecord",{"_index":499,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableeditrecord",{"_index":498,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableexportgrid",{"_index":495,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqbe",{"_index":483,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enableqff",{"_index":485,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesets",{"_index":489,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["enablesort",{"_index":493,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["encapsulation",{"_index":2230,"title":{},"body":{"components/WebAppContainer.html":{}}}],["encode",{"_index":319,"title":{},"body":{"classes/Base64.html":{}}}],["encode(input",{"_index":344,"title":{},"body":{"classes/Base64.html":{}}}],["encodecodepoint",{"_index":2152,"title":{},"body":{"classes/Utf8.html":{}}}],["encodecodepoint(codepoint",{"_index":2168,"title":{},"body":{"classes/Utf8.html":{}}}],["encoded",{"_index":380,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(obj[p",{"_index":935,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2215,"title":{},"body":{"classes/Utf8.html":{}}}],["ensures",{"_index":2445,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2093,"title":{},"body":{"components/RecordList.html":{}}}],["entire",{"_index":1989,"title":{},"body":{"components/RecordList.html":{}}}],["entries",{"_index":997,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["entry",{"_index":1016,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["entrycomponents",{"_index":1504,"title":{},"body":{"modules/JS44DModule.html":{},"modules/ModalModule.html":{}}}],["equivalent",{"_index":1445,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["error",{"_index":314,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/WebAppContainer.html":{}}}],["error('invalid",{"_index":2210,"title":{},"body":{"classes/Utf8.html":{}}}],["error/warning",{"_index":1749,"title":{},"body":{"injectables/Modal.html":{}}}],["essential",{"_index":2373,"title":{},"body":{"index.html":{}}}],["establish",{"_index":907,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["establishes",{"_index":900,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["etc",{"_index":2414,"title":{},"body":{"index.html":{}}}],["ev",{"_index":1540,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["ev.target.selectedindex",{"_index":1581,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["event",{"_index":175,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"license.html":{}}}],["event.preventdefault",{"_index":1621,"title":{},"body":{"components/LoginCmp.html":{},"components/Tab.html":{},"components/Tabs.html":{}}}],["event.stoppropagation",{"_index":1582,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["event.target.selectedindex",{"_index":225,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["event.target.textcontent",{"_index":255,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["eventemitter",{"_index":443,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/WebAppContainer.html":{}}}],["events",{"_index":503,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["example",{"_index":1453,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["excel",{"_index":494,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["excellent",{"_index":362,"title":{},"body":{"classes/Base64.html":{}}}],["execute",{"_index":1434,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["executed",{"_index":1272,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["exist",{"_index":2045,"title":{},"body":{"components/RecordList.html":{}}}],["existing",{"_index":1708,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["exists",{"_index":560,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["exit",{"_index":642,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["export",{"_index":211,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["exports",{"_index":860,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":2496,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1744,"title":{},"body":{"injectables/Modal.html":{}}}],["expresstion",{"_index":1243,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["extend",{"_index":2419,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":2422,"title":{},"body":{"index.html":{}}}],["extra",{"_index":2184,"title":{},"body":{"classes/Utf8.html":{}}}],["extractmodeldata",{"_index":1429,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["false",{"_index":186,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["fetching",{"_index":667,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["ff",{"_index":1638,"title":{},"body":{"classes/MD5.html":{}}}],["ff(a",{"_index":1152,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["field",{"_index":155,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["field's",{"_index":1481,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.formula",{"_index":1491,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.isrelated",{"_index":1486,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.longname",{"_index":104,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.name",{"_index":230,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["field.readonly",{"_index":1496,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.related",{"_index":213,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["field.subtable",{"_index":1494,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field.type",{"_index":1308,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/attribute",{"_index":1265,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["field/column",{"_index":689,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["field/property",{"_index":1487,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fieldlist",{"_index":132,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["fieldname",{"_index":1302,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fields",{"_index":108,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fields/columns",{"_index":693,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2473,"title":{},"body":{"license.html":{}}}],["filter",{"_index":698,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["filtered",{"_index":1098,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["filteroptions",{"_index":673,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["first",{"_index":1377,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["fit",{"_index":1988,"title":{},"body":{"components/RecordList.html":{}}}],["fitness",{"_index":2501,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1282,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fld",{"_index":757,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.formula",{"_index":769,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.longname",{"_index":772,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fld.name",{"_index":770,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["float:left",{"_index":24,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["floating",{"_index":2376,"title":{},"body":{"index.html":{}}}],["folder",{"_index":2390,"title":{},"body":{"index.html":{}}}],["following",{"_index":916,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":830,"title":{},"body":{"components/FourDDropDown.html":{}}}],["foreign",{"_index":906,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["form",{"_index":564,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":715,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["formatted",{"_index":1134,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["formcontrol",{"_index":1912,"title":{},"body":{"components/QuickFindInput.html":{}}}],["formdata",{"_index":944,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata.hasownproperty(key",{"_index":945,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["formdata[key",{"_index":946,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["forms",{"_index":2457,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":1505,"title":{},"body":{"modules/JS44DModule.html":{}}}],["formula",{"_index":771,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["formulas",{"_index":1438,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["found",{"_index":739,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["fourd",{"_index":147,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["fourd.module",{"_index":1509,"title":{},"body":{"modules/JS44DModule.html":{}}}],["fourdapiversion",{"_index":984,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdcollection",{"_index":657,"title":{"injectables/FourDCollection.html":{}},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourddatetolocalestring",{"_index":821,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["fourddatetostring",{"_index":816,"title":{"pipes/FourDDateToString.html":{}},"body":{"pipes/FourDDateToString.html":{},"modules/JS44DModule.html":{},"coverage.html":{},"overview.html":{}}}],["fourddeletecallbackmethod_",{"_index":1274,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourddropdown",{"_index":271,"title":{"components/FourDDropDown.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdinterface",{"_index":139,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdinterface._fourdurl",{"_index":976,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._listcache[listname",{"_index":1084,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache",{"_index":1116,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface._registrycache.push(body",{"_index":1124,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.authentication",{"_index":842,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["fourdinterface.currentuser",{"_index":787,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserid",{"_index":1068,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.currentuserpassword",{"_index":1064,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.fourdapiversion",{"_index":981,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance",{"_index":750,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["fourdinterface.interfaceinstance.call4drestmethod('rest_getapiversion",{"_index":978,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.sessionkey",{"_index":1042,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.emit(fourdinterface.currentuser",{"_index":1077,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdinterface.userhassignedin.subscribe",{"_index":1204,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["fourdinterface.userhassignedin.subscribe(user",{"_index":845,"title":{},"body":{"components/FourDDropDown.html":{}}}],["fourdmethod",{"_index":1014,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdmodel",{"_index":720,"title":{},"body":{"injectables/FourDCollection.html":{},"modules/FourDModule.html":{},"interfaces/IFieldDescription.html":{},"components/RecordEditWindow.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fourdmodels",{"_index":663,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["fourdmodule",{"_index":854,"title":{"modules/FourDModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fourdquery",{"_index":695,"title":{"classes/FourDQuery.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["fourdregistryinput",{"_index":273,"title":{"components/FourDRegistryInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["fourdrest",{"_index":982,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdrestapi",{"_index":1013,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdsavecallbackmethod_",{"_index":1273,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fourdurl",{"_index":977,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdurl():string",{"_index":975,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["fourdversion",{"_index":1597,"title":{},"body":{"components/LoginCmp.html":{}}}],["free",{"_index":2468,"title":{},"body":{"license.html":{}}}],["fresh",{"_index":1394,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["fully",{"_index":350,"title":{},"body":{"classes/Base64.html":{}}}],["funcionality",{"_index":2375,"title":{},"body":{"index.html":{}}}],["function",{"_index":320,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":665,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["functions",{"_index":926,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["furnished",{"_index":2486,"title":{},"body":{"license.html":{}}}],["further",{"_index":712,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["g",{"_index":338,"title":{},"body":{"classes/Base64.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["generic",{"_index":1007,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["get(field",{"_index":1280,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["get4dlist(listname",{"_index":1083,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getcolumnlist(includesubtables",{"_index":1476,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson",{"_index":679,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getcolumnlistjson(columns",{"_index":682,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getfielddescription(fieldname",{"_index":1484,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfieldproperties(fieldname",{"_index":1303,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getfiltered4dlist(listname",{"_index":1106,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getlength",{"_index":741,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["getlongname(fieldname",{"_index":1482,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecord",{"_index":2424,"title":{},"body":{"index.html":{}}}],["getrecord(recordnumber",{"_index":1360,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["getrecords",{"_index":680,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["getrecords(query",{"_index":694,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["getregistryvalue(theclass",{"_index":1115,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["getresult",{"_index":1829,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["gets",{"_index":1081,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["getselectedrecords",{"_index":1996,"title":{},"body":{"components/RecordList.html":{}}}],["getter/setter",{"_index":2421,"title":{},"body":{"index.html":{}}}],["getting",{"_index":2344,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvaluesfrom4d(values",{"_index":1439,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["gg",{"_index":1639,"title":{},"body":{"classes/MD5.html":{}}}],["gg(a",{"_index":1154,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["given",{"_index":1301,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["global",{"_index":953,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["glyphicon",{"_index":518,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["going",{"_index":2365,"title":{},"body":{"index.html":{}}}],["grab",{"_index":1393,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["granted",{"_index":2467,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1964,"title":{},"body":{"components/RecordList.html":{},"index.html":{}}}],["grid's",{"_index":2017,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows",{"_index":2003,"title":{},"body":{"components/RecordList.html":{}}}],["gridrows.length",{"_index":2091,"title":{},"body":{"components/RecordList.html":{}}}],["groove",{"_index":475,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["gt;table.field",{"_index":779,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["h5",{"_index":27,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["h5:hover",{"_index":36,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["hack",{"_index":1726,"title":{},"body":{"injectables/Modal.html":{}}}],["handle",{"_index":825,"title":{},"body":{"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["handled",{"_index":408,"title":{},"body":{"classes/Base64.html":{}}}],["hash",{"_index":941,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1040,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["height",{"_index":191,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["height(v",{"_index":1562,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["height:40px",{"_index":471,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hello",{"_index":1844,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["here",{"_index":393,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{},"index.html":{}}}],["hereby",{"_index":2466,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1640,"title":{},"body":{"classes/MD5.html":{}}}],["hex(x",{"_index":1177,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hex_chr",{"_index":1635,"title":{},"body":{"classes/MD5.html":{}}}],["hh",{"_index":1286,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["hh(a",{"_index":1155,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hh:mm:ss",{"_index":1145,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hidden",{"_index":62,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hideno",{"_index":2280,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["hierarchical",{"_index":1103,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["hierarchy",{"_index":1105,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["highlighted",{"_index":451,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["hits",{"_index":2008,"title":{},"body":{"components/RecordList.html":{}}}],["hitting",{"_index":1961,"title":{},"body":{"components/RecordList.html":{}}}],["holders",{"_index":2506,"title":{},"body":{"license.html":{}}}],["holds",{"_index":726,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["horizontal",{"_index":2455,"title":{},"body":{"index.html":{}}}],["hostlistener",{"_index":1998,"title":{},"body":{"components/RecordList.html":{}}}],["hostlistener('window:resize",{"_index":2039,"title":{},"body":{"components/RecordList.html":{}}}],["hostlisteners",{"_index":1949,"title":{},"body":{"components/RecordList.html":{}}}],["hostviewref",{"_index":1672,"title":{},"body":{"injectables/Modal.html":{}}}],["hover",{"_index":51,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["html",{"_index":262,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["http",{"_index":985,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["http://localhost:8080",{"_index":968,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["http://whatwg.org/c#alphanumeric",{"_index":370,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/common",{"_index":346,"title":{},"body":{"classes/Base64.html":{}}}],["http://whatwg.org/html/webappapis.html#dom",{"_index":355,"title":{},"body":{"classes/Base64.html":{}}}],["httpclient",{"_index":868,"title":{},"body":{"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["httpclient:httpclient",{"_index":1006,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpclientmodule",{"_index":869,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{}}}],["httpheaders",{"_index":921,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["httpheaders(contentheaders",{"_index":1039,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["https://gist.github.com/atk/1020396",{"_index":363,"title":{},"body":{"classes/Base64.html":{}}}],["https://mths.be/punycode",{"_index":2181,"title":{},"body":{"classes/Utf8.html":{}}}],["i.e",{"_index":627,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["icon",{"_index":465,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["icustommodal",{"_index":206,"title":{"classes/ICustomModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModal.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["icustommodalcomponent",{"_index":11,"title":{"classes/ICustomModalComponent.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["id",{"_index":153,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{}}}],["idattribute",{"_index":1267,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["identification",{"_index":1699,"title":{},"body":{"injectables/Modal.html":{}}}],["identifier",{"_index":2291,"title":{},"body":{"coverage.html":{}}}],["ifielddescription",{"_index":1233,"title":{"interfaces/IFieldDescription.html":{}},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["ignore",{"_index":1346,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["ii",{"_index":1641,"title":{},"body":{"classes/MD5.html":{}}}],["ii(a",{"_index":1157,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["image",{"_index":432,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["imagetype",{"_index":423,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["immediately",{"_index":2113,"title":{},"body":{"components/RecordList.html":{}}}],["implementation",{"_index":330,"title":{},"body":{"classes/Base64.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["implicitly",{"_index":1789,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["implied",{"_index":2497,"title":{},"body":{"license.html":{}}}],["import",{"_index":199,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["important",{"_index":46,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{}}}],["importing",{"_index":2384,"title":{},"body":{"index.html":{}}}],["imports",{"_index":873,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"index.html":{}}}],["in'},{'name",{"_index":280,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["include",{"_index":2224,"title":{},"body":{"classes/Utf8.html":{}}}],["included",{"_index":2382,"title":{},"body":{"index.html":{},"license.html":{}}}],["includes",{"_index":1474,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["includesubtables",{"_index":1473,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["including",{"_index":2475,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2248,"title":{},"body":{"components/WebAppContainer.html":{}}}],["incorrect",{"_index":1596,"title":{},"body":{"components/LoginCmp.html":{}}}],["indeed",{"_index":1296,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["index",{"_index":68,"title":{"index.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":1236,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["indicates",{"_index":988,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["individual",{"_index":1258,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["inelement",{"_index":608,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["informed",{"_index":705,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["inherit",{"_index":829,"title":{},"body":{"components/FourDDropDown.html":{}}}],["initialization",{"_index":1454,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["initialize",{"_index":747,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["initialized",{"_index":1975,"title":{},"body":{"components/RecordList.html":{}}}],["initiator",{"_index":970,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["inject",{"_index":748,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["injectable",{"_index":592,"title":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["injectables",{"_index":658,"title":{},"body":{"injectables/FourDCollection.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"overview.html":{}}}],["injected",{"_index":731,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["input",{"_index":202,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{}}}],["input'},{'name",{"_index":275,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["input.charcodeat(position",{"_index":414,"title":{},"body":{"classes/Base64.html":{}}}],["input.length",{"_index":367,"title":{},"body":{"classes/Base64.html":{}}}],["input.replace",{"_index":369,"title":{},"body":{"classes/Base64.html":{}}}],["inputs",{"_index":130,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/WebAppContainer.html":{}}}],["inputtype",{"_index":1189,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["insert",{"_index":1314,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["inserted",{"_index":1397,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["insertrecord",{"_index":1398,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["inside",{"_index":606,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{}}}],["install",{"_index":2368,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2367,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2355,"title":{},"body":{"index.html":{}}}],["instance",{"_index":889,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["instances",{"_index":894,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["instead",{"_index":707,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["instruct",{"_index":2364,"title":{},"body":{"index.html":{}}}],["instruction",{"_index":1759,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["interact",{"_index":2430,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1987,"title":{},"body":{"components/RecordList.html":{}}}],["interface",{"_index":951,"title":{"interfaces/IFieldDescription.html":{}},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaceinstance:fourdinterface",{"_index":954,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["interfaces",{"_index":1234,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["internal",{"_index":515,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["intersection",{"_index":878,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["invalid",{"_index":377,"title":{},"body":{"classes/Base64.html":{}}}],["invalidcharactererror",{"_index":315,"title":{},"body":{"classes/Base64.html":{}}}],["invoked",{"_index":639,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"injectables/ModalDialogInstance.html":{}}}],["isblocking",{"_index":188,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["iscalculatedfield(field",{"_index":1490,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isdraggable",{"_index":1762,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isitemselected",{"_index":124,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["isitemselected(field",{"_index":167,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["isitemselected(item",{"_index":838,"title":{},"body":{"components/FourDDropDown.html":{}}}],["ismodal",{"_index":187,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["ismodifiedfield(field",{"_index":1488,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isnan(config.keyboard",{"_index":1807,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["isnan(thedate",{"_index":1147,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isnan(thedate))?thedate.tojson().substr(0",{"_index":1136,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["isreadonly(field",{"_index":1495,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrecordloaded",{"_index":1450,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelated",{"_index":1237,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isrelatedfield(field",{"_index":1485,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["isresizable",{"_index":185,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["issubtable(field",{"_index":1493,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["issues",{"_index":1054,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["it's",{"_index":1380,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["item",{"_index":105,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{}}}],["item.class",{"_index":1117,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.length",{"_index":2253,"title":{},"body":{"components/WebAppContainer.html":{}}}],["item.parameter",{"_index":1118,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item.selector",{"_index":1119,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["item[1",{"_index":2255,"title":{},"body":{"components/WebAppContainer.html":{}}}],["items",{"_index":913,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["itemslist",{"_index":1530,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["it’s",{"_index":2216,"title":{},"body":{"classes/Utf8.html":{}}}],["j",{"_index":1173,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["join",{"_index":879,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["joinfk",{"_index":880,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["joinpk",{"_index":881,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["jointable",{"_index":882,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["jpeg",{"_index":425,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["jquery",{"_index":2342,"title":{},"body":{"dependencies.html":{}}}],["js44d",{"_index":1181,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["js44d/jsfourdcollection",{"_index":872,"title":{},"body":{"modules/FourDModule.html":{}}}],["js44d/jsfourdinterface",{"_index":210,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["js44d/jsfourdmodel",{"_index":871,"title":{},"body":{"modules/FourDModule.html":{},"components/RecordEditWindow.html":{}}}],["js44dmodule",{"_index":1497,"title":{"modules/JS44DModule.html":{}},"body":{"modules/JS44DModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsfourdcollection",{"_index":1257,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["jsfourdinterface",{"_index":745,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["jsfourdmodel",{"_index":746,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json",{"_index":685,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.parse(atob(this.urlsearchparms['key",{"_index":2263,"title":{},"body":{"components/WebAppContainer.html":{}}}],["json.parse(localstorage.getitem(tablename",{"_index":2085,"title":{},"body":{"components/RecordList.html":{}}}],["json.parse(recorddata[field",{"_index":1428,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(collist",{"_index":778,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["json.stringify(error",{"_index":1080,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["json.stringify(query",{"_index":794,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["json.stringify(recorddata",{"_index":1353,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["json.stringify(savedsearches",{"_index":2089,"title":{},"body":{"components/RecordList.html":{}}}],["json.stringify(savedsets",{"_index":2117,"title":{},"body":{"components/RecordList.html":{}}}],["julio",{"_index":2459,"title":{},"body":{"index.html":{},"license.html":{}}}],["k",{"_index":1665,"title":{},"body":{"classes/MD5.html":{}}}],["keep",{"_index":1277,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["keeps",{"_index":1275,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["kendo.prompt('please",{"_index":2092,"title":{},"body":{"components/RecordList.html":{}}}],["kendo.ui.progress($(this.elementref.nativeelement",{"_index":2049,"title":{},"body":{"components/RecordList.html":{}}}],["kendodialog",{"_index":604,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["kendoui",{"_index":2436,"title":{},"body":{"index.html":{}}}],["key",{"_index":644,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.password",{"_index":2265,"title":{},"body":{"components/WebAppContainer.html":{}}}],["keyboard",{"_index":643,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["kind",{"_index":2495,"title":{},"body":{"license.html":{}}}],["last",{"_index":253,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["latest",{"_index":740,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["latin1",{"_index":401,"title":{},"body":{"classes/Base64.html":{}}}],["left",{"_index":57,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["left:5px",{"_index":473,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["legend",{"_index":261,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"overview.html":{}}}],["length",{"_index":366,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["less",{"_index":112,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lesslines",{"_index":125,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lest",{"_index":1379,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["let's",{"_index":765,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["level",{"_index":1102,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["lg",{"_index":1796,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["li",{"_index":25,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["li:hover",{"_index":39,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["liability",{"_index":2510,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2507,"title":{},"body":{"license.html":{}}}],["library",{"_index":2346,"title":{},"body":{"index.html":{}}}],["license",{"_index":2461,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2476,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2498,"title":{},"body":{"license.html":{}}}],["line",{"_index":249,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"index.html":{}}}],["linear",{"_index":84,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["lines",{"_index":915,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["links",{"_index":901,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["list",{"_index":54,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["list'},{'name",{"_index":293,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["listed",{"_index":706,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["listing",{"_index":687,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["listitems",{"_index":1092,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listname",{"_index":832,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listoffields",{"_index":160,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["listoptions",{"_index":833,"title":{},"body":{"components/FourDDropDown.html":{}}}],["lists",{"_index":996,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["listselectordialog",{"_index":276,"title":{"components/ListSelectorDialog.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["listselectordialog.dialogconfig",{"_index":1578,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["listvalues",{"_index":1087,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["loaded",{"_index":743,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["loading",{"_index":2050,"title":{},"body":{"components/RecordList.html":{}}}],["loadlistfrom4d",{"_index":831,"title":{},"body":{"components/FourDDropDown.html":{}}}],["loadvaluefrom4d",{"_index":1186,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["locale",{"_index":820,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["localstorage.setitem(tablename",{"_index":2088,"title":{},"body":{"components/RecordList.html":{}}}],["log",{"_index":279,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["logged",{"_index":961,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["login",{"_index":1585,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["login/login",{"_index":1519,"title":{},"body":{"modules/JS44DModule.html":{},"components/WebAppContainer.html":{}}}],["logincmp",{"_index":278,"title":{"components/LoginCmp.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["logincmp.dialogconfig",{"_index":2259,"title":{},"body":{"components/WebAppContainer.html":{}}}],["long",{"_index":1251,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["longname",{"_index":761,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["look",{"_index":2397,"title":{},"body":{"index.html":{}}}],["loop",{"_index":409,"title":{},"body":{"classes/Base64.html":{}}}],["ls",{"_index":1809,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["lt;table.field",{"_index":780,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["made",{"_index":2402,"title":{},"body":{"index.html":{}}}],["main",{"_index":18,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["make",{"_index":49,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["makes",{"_index":1769,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid",{"_index":1765,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["makevalid(config",{"_index":1767,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["manage",{"_index":461,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["management",{"_index":2012,"title":{},"body":{"components/RecordList.html":{}}}],["managesearches",{"_index":2110,"title":{},"body":{"components/RecordList.html":{}}}],["managesets",{"_index":2115,"title":{},"body":{"components/RecordList.html":{}}}],["many",{"_index":1246,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["map",{"_index":1270,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["margin",{"_index":32,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["margin:0px",{"_index":21,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["mark",{"_index":1299,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["master",{"_index":1771,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["match",{"_index":326,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["matched",{"_index":395,"title":{},"body":{"classes/Base64.html":{}}}],["matching",{"_index":309,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["may/15/09",{"_index":1338,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["md5",{"_index":1060,"title":{"classes/MD5.html":{}},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"coverage.html":{}}}],["md5(s",{"_index":1659,"title":{},"body":{"classes/MD5.html":{}}}],["md5.cmn((b",{"_index":1153,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(b",{"_index":1156,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.cmn(c",{"_index":1158,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.hex_chr[(n",{"_index":1176,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5.md5(this.password",{"_index":1623,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5.md5(value",{"_index":948,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["md5.md5cycle(state",{"_index":1171,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md51",{"_index":1642,"title":{},"body":{"classes/MD5.html":{}}}],["md51(s",{"_index":1159,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["md5blk",{"_index":1643,"title":{},"body":{"classes/MD5.html":{}}}],["md5blk(s",{"_index":1662,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle",{"_index":1644,"title":{},"body":{"classes/MD5.html":{}}}],["md5cycle(x",{"_index":1664,"title":{},"body":{"classes/MD5.html":{}}}],["md5pwd",{"_index":1622,"title":{},"body":{"components/LoginCmp.html":{}}}],["md5pwd.touppercase",{"_index":1625,"title":{},"body":{"components/LoginCmp.html":{}}}],["mdi",{"_index":2378,"title":{},"body":{"index.html":{}}}],["me.clearrecorddirtyflag",{"_index":1411,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.primarykey_",{"_index":1408,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.recordnumber",{"_index":1386,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me.refresh().then((rec",{"_index":1388,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["me[me.primarykey_",{"_index":1409,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["menu",{"_index":1969,"title":{},"body":{"components/RecordList.html":{}}}],["merchantability",{"_index":2500,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2478,"title":{},"body":{"license.html":{}}}],["message",{"_index":321,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["messages",{"_index":323,"title":{},"body":{"classes/Base64.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["method",{"_index":559,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["methods",{"_index":122,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["microsyntaxes.html#space",{"_index":347,"title":{},"body":{"classes/Base64.html":{}}}],["minheight",{"_index":1763,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["minwidth",{"_index":1764,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["miscellaneous",{"_index":2523,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":2462,"title":{},"body":{"license.html":{}}}],["mm",{"_index":1288,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["modal",{"_index":282,"title":{"injectables/Modal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["modal.hostviewref",{"_index":1731,"title":{},"body":{"injectables/Modal.html":{}}}],["modal.opendialoglist.push",{"_index":1752,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/commonmodals/okonlymodal",{"_index":1837,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/okonlymodal.ts",{"_index":1840,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["modal/commonmodals/okonlymodal.ts:10",{"_index":1843,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:12",{"_index":1848,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:13",{"_index":1846,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:14",{"_index":1847,"title":{},"body":{"classes/OKOnlyContent.html":{}}}],["modal/commonmodals/okonlymodal.ts:33",{"_index":1862,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:34",{"_index":1861,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:36",{"_index":1863,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:40",{"_index":1859,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/okonlymodal.ts:45",{"_index":1860,"title":{},"body":{"components/OKOnlyModal.html":{}}}],["modal/commonmodals/yesnomodal",{"_index":1838,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal/commonmodals/yesnomodal.ts",{"_index":2270,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["modal/commonmodals/yesnomodal.ts:11",{"_index":2284,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:13",{"_index":2288,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:14",{"_index":2285,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:15",{"_index":2286,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:16",{"_index":2289,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:17",{"_index":2287,"title":{},"body":{"classes/YesNoModalContent.html":{}}}],["modal/commonmodals/yesnomodal.ts:37",{"_index":2278,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:38",{"_index":2277,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:40",{"_index":2279,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:44",{"_index":2273,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:50",{"_index":2275,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/commonmodals/yesnomodal.ts:55",{"_index":2274,"title":{},"body":{"components/YesNoModal.html":{}}}],["modal/models/icustommodal",{"_index":207,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{}}}],["modal/models/icustommodal.ts",{"_index":1220,"title":{},"body":{"classes/ICustomModal.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent",{"_index":208,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/icustommodalcomponent.ts",{"_index":1222,"title":{},"body":{"classes/ICustomModalComponent.html":{},"coverage.html":{}}}],["modal/models/icustommodalcomponent.ts:13",{"_index":1229,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:18",{"_index":1226,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/icustommodalcomponent.ts:8",{"_index":1225,"title":{},"body":{"classes/ICustomModalComponent.html":{}}}],["modal/models/modalconfig",{"_index":209,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/RecordList.html":{}}}],["modal/models/modalconfig.ts",{"_index":1758,"title":{},"body":{"injectables/ModalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/models/modalconfig.ts:17",{"_index":1795,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:24",{"_index":1773,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:31",{"_index":1776,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:39",{"_index":1782,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:41",{"_index":1798,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:42",{"_index":1792,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:44",{"_index":1775,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:45",{"_index":1791,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:47",{"_index":1793,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:49",{"_index":1794,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:51",{"_index":1780,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:53",{"_index":1779,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:55",{"_index":1781,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:57",{"_index":1797,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:59",{"_index":1772,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:67",{"_index":1768,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modalconfig.ts:86",{"_index":1766,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["modal/models/modaldialoginstance",{"_index":205,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{}}}],["modal/models/modaldialoginstance.ts",{"_index":584,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"coverage.html":{}}}],["modal/models/modaldialoginstance.ts:22",{"_index":1822,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:24",{"_index":1824,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:28",{"_index":1823,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:30",{"_index":1821,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:31",{"_index":1820,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:32",{"_index":1815,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:38",{"_index":1826,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:41",{"_index":1828,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:49",{"_index":1830,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:56",{"_index":1819,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:6",{"_index":589,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:64",{"_index":1816,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:7",{"_index":590,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:8",{"_index":588,"title":{},"body":{"classes/Deferred.html":{}}}],["modal/models/modaldialoginstance.ts:82",{"_index":1817,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/models/modaldialoginstance.ts:91",{"_index":1818,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["modal/providers/modal",{"_index":1561,"title":{},"body":{"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["modal/providers/modal.ts",{"_index":1671,"title":{},"body":{"injectables/Modal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/providers/modal.ts:121",{"_index":1685,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:143",{"_index":1704,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:20",{"_index":1709,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:21",{"_index":1710,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:23",{"_index":1682,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:43",{"_index":1689,"title":{},"body":{"injectables/Modal.html":{}}}],["modal/providers/modal.ts:63",{"_index":1707,"title":{},"body":{"injectables/Modal.html":{}}}],["modalconfig",{"_index":180,"title":{"injectables/ModalConfig.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalconfig.makevalid(defaultconfig",{"_index":1720,"title":{},"body":{"injectables/Modal.html":{}}}],["modaldialoginstance",{"_index":140,"title":{"injectables/ModalDialogInstance.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmodule",{"_index":1831,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mode",{"_index":1313,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["model",{"_index":674,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["modelcontentdata",{"_index":136,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/YesNoModal.html":{}}}],["modelcontentdata(parms",{"_index":1615,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modelcontentdata(v",{"_index":1568,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["modeldef",{"_index":754,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["models",{"_index":675,"title":{},"body":{"injectables/FourDCollection.html":{},"index.html":{}}}],["models/icustommodal",{"_index":1849,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/icustommodalcomponent",{"_index":1850,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["models/modalconfig",{"_index":1711,"title":{},"body":{"injectables/Modal.html":{}}}],["models/modaldialoginstance",{"_index":1232,"title":{},"body":{"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["modified",{"_index":971,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["modify",{"_index":2395,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":853,"title":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":855,"title":{"modules.html":{}},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":111,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["morelines",{"_index":126,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["moz",{"_index":86,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["multicolumn",{"_index":491,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["multiple",{"_index":893,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["multiples",{"_index":1750,"title":{},"body":{"injectables/Modal.html":{}}}],["n",{"_index":1160,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["name",{"_index":144,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["names",{"_index":690,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["native",{"_index":328,"title":{},"body":{"classes/Base64.html":{}}}],["nativescript",{"_index":2396,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":19,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["need",{"_index":388,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["new",{"_index":248,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"coverage.html":{},"index.html":{}}}],["newmodel",{"_index":788,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["newmodel.clearrecorddirtyflag",{"_index":810,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.populatemodeldata(record",{"_index":809,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["newmodel.primarykey_",{"_index":2079,"title":{},"body":{"components/RecordList.html":{}}}],["newmodel.tablename",{"_index":790,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{}}}],["next",{"_index":60,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ng2",{"_index":1748,"title":{},"body":{"injectables/Modal.html":{}}}],["ngaftercontentinit",{"_index":1942,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["ngafterviewinit",{"_index":127,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{}}}],["ngmodule",{"_index":867,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"index.html":{}}}],["noaudit",{"_index":1315,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["non",{"_index":1339,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["none",{"_index":56,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["none')?'block':'none",{"_index":548,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["noninfringement",{"_index":2504,"title":{},"body":{"license.html":{}}}],["nope",{"_index":764,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["note",{"_index":322,"title":{},"body":{"classes/Base64.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["notext",{"_index":2282,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["notice",{"_index":2489,"title":{},"body":{"license.html":{}}}],["notification",{"_index":1787,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["nov",{"_index":1341,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["now",{"_index":1076,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["npm",{"_index":2369,"title":{},"body":{"index.html":{}}}],["null",{"_index":629,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["null/undefined",{"_index":826,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["number",{"_index":193,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"classes/Utf8.html":{}}}],["numeric",{"_index":1785,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["numofrecords",{"_index":697,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["o",{"_index":87,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["obj",{"_index":930,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["obj.hasownproperty(p",{"_index":933,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":107,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1435,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["observable",{"_index":922,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["obtained",{"_index":2449,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":2471,"title":{},"body":{"license.html":{}}}],["occurrences",{"_index":1702,"title":{},"body":{"injectables/Modal.html":{}}}],["ok",{"_index":1405,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["ok($event",{"_index":1541,"title":{},"body":{"components/ListSelectorDialog.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["okonlycontent",{"_index":1839,"title":{"classes/OKOnlyContent.html":{}},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"coverage.html":{}}}],["okonlymodal",{"_index":281,"title":{"components/OKOnlyModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["oktext",{"_index":1841,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{}}}],["once",{"_index":1717,"title":{},"body":{"injectables/Modal.html":{}}}],["one",{"_index":1015,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["ones",{"_index":48,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["oninit",{"_index":1560,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["onresize",{"_index":2040,"title":{},"body":{"components/RecordList.html":{}}}],["opacity:0",{"_index":64,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["opacity:1",{"_index":53,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["open",{"_index":601,"title":{},"body":{"classes/Deferred.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"index.html":{}}}],["open(componenttype",{"_index":1686,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog",{"_index":1676,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialog(component",{"_index":1703,"title":{},"body":{"injectables/Modal.html":{}}}],["opendialoglist",{"_index":1673,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside",{"_index":1677,"title":{},"body":{"injectables/Modal.html":{}}}],["openinside(componenttype",{"_index":1705,"title":{},"body":{"injectables/Modal.html":{}}}],["opens",{"_index":1690,"title":{},"body":{"injectables/Modal.html":{}}}],["openstateicon",{"_index":517,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["operation",{"_index":718,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimize",{"_index":999,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["optimized",{"_index":357,"title":{},"body":{"classes/Base64.html":{}}}],["optimizing",{"_index":2048,"title":{},"body":{"components/RecordList.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["options",{"_index":1020,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["options.headers",{"_index":1038,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["order",{"_index":713,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["orderby",{"_index":676,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["originalvalue",{"_index":1184,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["otherwise",{"_index":2514,"title":{},"body":{"license.html":{}}}],["out",{"_index":864,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":384,"title":{},"body":{"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["outputs",{"_index":1866,"title":{},"body":{"components/QueryBand.html":{},"components/WebAppContainer.html":{}}}],["outside",{"_index":400,"title":{},"body":{"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["overview",{"_index":2520,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":932,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2340,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":59,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["padding:5px",{"_index":28,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["page",{"_index":2363,"title":{},"body":{"index.html":{}}}],["pages",{"_index":2432,"title":{},"body":{"index.html":{}}}],["paging",{"_index":710,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["param",{"_index":751,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["parameter",{"_index":436,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["parameters",{"_index":143,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["parametervalue",{"_index":1190,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["params",{"_index":2250,"title":{},"body":{"components/WebAppContainer.html":{}}}],["parms",{"_index":1614,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["parms.hasownproperty('version",{"_index":1616,"title":{},"body":{"components/LoginCmp.html":{}}}],["parms['version",{"_index":1618,"title":{},"body":{"components/LoginCmp.html":{}}}],["parse",{"_index":2249,"title":{},"body":{"components/WebAppContainer.html":{}}}],["part",{"_index":2451,"title":{},"body":{"index.html":{}}}],["particular",{"_index":2502,"title":{},"body":{"license.html":{}}}],["pascal's",{"_index":2347,"title":{},"body":{"index.html":{}}}],["passed",{"_index":1695,"title":{},"body":{"injectables/Modal.html":{}}}],["password",{"_index":964,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"index.html":{}}}],["payload",{"_index":1009,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["peer",{"_index":2341,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":888,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["permission",{"_index":2465,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2484,"title":{},"body":{"license.html":{}}}],["person",{"_index":2470,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2485,"title":{},"body":{"license.html":{}}}],["picture",{"_index":110,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{}}}],["pipe",{"_index":417,"title":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["pipe({name",{"_index":437,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pipes",{"_index":419,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"overview.html":{}}}],["pipes/base64imageref.pipe",{"_index":1521,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipes/fourddatetostring.pipe",{"_index":1522,"title":{},"body":{"modules/JS44DModule.html":{}}}],["pipetransform",{"_index":427,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["pk",{"_index":2078,"title":{},"body":{"components/RecordList.html":{}}}],["pkfield",{"_index":2118,"title":{},"body":{"components/RecordList.html":{}}}],["plan",{"_index":2388,"title":{},"body":{"index.html":{}}}],["please",{"_index":1593,"title":{},"body":{"components/LoginCmp.html":{}}}],["point",{"_index":1049,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["points",{"_index":1017,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["populate",{"_index":666,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populated",{"_index":723,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["populatemodeldata(recorddata",{"_index":1422,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["populates",{"_index":1354,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["portions",{"_index":2492,"title":{},"body":{"license.html":{}}}],["position",{"_index":65,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"injectables/ModalConfig.html":{}}}],["position:absolute",{"_index":479,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["position:relative",{"_index":23,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["possible",{"_index":1256,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["post",{"_index":942,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["predefined",{"_index":2269,"title":{},"body":{"components/WebAppContainer.html":{}}}],["prepares",{"_index":684,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["present",{"_index":2413,"title":{},"body":{"index.html":{}}}],["presents",{"_index":2454,"title":{},"body":{"index.html":{}}}],["presses",{"_index":641,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["previous",{"_index":1067,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["previousquery",{"_index":2069,"title":{},"body":{"components/RecordList.html":{}}}],["primary",{"_index":909,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["primarykey_",{"_index":1264,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["private",{"_index":114,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{}}}],["privileges",{"_index":959,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["procedure",{"_index":2362,"title":{},"body":{"index.html":{}}}],["process",{"_index":2411,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1437,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["programmatically",{"_index":1451,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["progress",{"_index":2051,"title":{},"body":{"components/RecordList.html":{}}}],["promise",{"_index":585,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise((resolve",{"_index":597,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["promiselike",{"_index":594,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promisewrapper.completer",{"_index":613,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["promise|any|*|promise",{"_index":622,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["properties",{"_index":113,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["property",{"_index":905,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["propriety",{"_index":1333,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["provide",{"_index":2372,"title":{},"body":{"index.html":{}}}],["provided",{"_index":2493,"title":{},"body":{"license.html":{}}}],["providers",{"_index":859,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"modules/ModalModule.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":664,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{},"index.html":{}}}],["providing",{"_index":2420,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":1050,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["proxyurlthru4d(url",{"_index":1055,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["public",{"_index":116,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["publish",{"_index":2479,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2503,"title":{},"body":{"license.html":{}}}],["pwd",{"_index":1059,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["q",{"_index":1653,"title":{},"body":{"classes/MD5.html":{}}}],["qbe",{"_index":482,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["qff",{"_index":484,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queries",{"_index":730,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["query",{"_index":16,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["query'},{'name",{"_index":268,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["query0",{"_index":154,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryaddrecord",{"_index":512,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryband",{"_index":284,"title":{"components/QueryBand.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["queryband's",{"_index":511,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querybanddirective",{"_index":306,"title":{"directives/QueryBandDirective.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["querybandisopen",{"_index":521,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querydeleterecord",{"_index":514,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["queryeditrecord",{"_index":513,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryexportgrid",{"_index":509,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfield",{"_index":168,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.field",{"_index":226,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields",{"_index":259,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.listoffields[event.target.selectedindex",{"_index":227,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.name",{"_index":229,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfield.querytable",{"_index":254,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfieldlist",{"_index":133,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfields",{"_index":243,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["queryfromfile",{"_index":506,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryfromqbe",{"_index":505,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryid",{"_index":244,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querying",{"_index":1359,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["queryitems",{"_index":233,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/RecordList.html":{}}}],["queryitems.push(tablename",{"_index":2120,"title":{},"body":{"components/RecordList.html":{}}}],["queryitems.push(thefield.longname",{"_index":239,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["querymanagesets",{"_index":510,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["queryrefresh",{"_index":507,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querysortgrid",{"_index":508,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["querystring",{"_index":677,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["querytable",{"_index":159,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["quick",{"_index":2360,"title":{},"body":{"index.html":{}}}],["quickfind",{"_index":287,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["quickfinder",{"_index":464,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["quickfindinput",{"_index":286,"title":{"components/QuickFindInput.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["radius",{"_index":476,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["range",{"_index":402,"title":{},"body":{"classes/Base64.html":{}}}],["raquo",{"_index":102,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["read",{"_index":1253,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/Utf8.html":{}}}],["readcontinuationbyte",{"_index":2153,"title":{},"body":{"classes/Utf8.html":{}}}],["readonly",{"_index":1238,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["really",{"_index":2061,"title":{},"body":{"components/RecordList.html":{}}}],["reason",{"_index":595,"title":{},"body":{"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"injectables/ModalDialogInstance.html":{}}}],["rec.clearrecorddirtyflag",{"_index":1389,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["received",{"_index":956,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reclist",{"_index":807,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["reclist.foreach(record",{"_index":808,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["recnum",{"_index":1321,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["record",{"_index":289,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["record's",{"_index":1330,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["record(s",{"_index":1967,"title":{},"body":{"components/RecordList.html":{}}}],["recorddata",{"_index":1319,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata.hasownproperty('_recnum",{"_index":1423,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['_recnum",{"_index":1424,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields",{"_index":1332,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['fields'][field.longname",{"_index":1348,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['noaudit",{"_index":1325,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['savecallback",{"_index":1324,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata['timestamp",{"_index":1328,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recorddata[field",{"_index":1427,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordeditwindow",{"_index":288,"title":{"components/RecordEditWindow.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordid",{"_index":1357,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordisdirty",{"_index":1458,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordlist",{"_index":292,"title":{"components/RecordList.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["recordnumber",{"_index":1355,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordnumber(v",{"_index":1447,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records",{"_index":668,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{},"index.html":{}}}],["records.foreach(id",{"_index":2119,"title":{},"body":{"components/RecordList.html":{}}}],["records.getrecords(query",{"_index":1383,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.model",{"_index":1376,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models.length",{"_index":1385,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["records.models[0].recordnumber",{"_index":1387,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["recordsaved",{"_index":2067,"title":{},"body":{"components/RecordList.html":{}}}],["recordtojson(mode",{"_index":1318,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reference",{"_index":2381,"title":{},"body":{"index.html":{}}}],["reference/import",{"_index":2386,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1381,"title":{},"body":{"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["refreshgrid",{"_index":1943,"title":{},"body":{"components/RecordList.html":{}}}],["refreshgrid(query",{"_index":1976,"title":{},"body":{"components/RecordList.html":{}}}],["regex_space_characters",{"_index":316,"title":{},"body":{"classes/Base64.html":{}}}],["registry",{"_index":274,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reject",{"_index":586,"title":{},"body":{"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{}}}],["reject('invalid",{"_index":1079,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["reject('no",{"_index":1374,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject('recordnotfound",{"_index":1392,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(error",{"_index":814,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["reject(error.text",{"_index":1413,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["reject(resultjson.returncode",{"_index":1412,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["rejected",{"_index":620,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["related",{"_index":92,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["relatedonetables",{"_index":134,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relatedtable",{"_index":103,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["relates",{"_index":1254,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["relatesto",{"_index":1239,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["remove",{"_index":252,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["render",{"_index":1694,"title":{},"body":{"injectables/Modal.html":{}}}],["repeat",{"_index":1589,"title":{},"body":{"components/LoginCmp.html":{}}}],["replace",{"_index":1725,"title":{},"body":{"injectables/Modal.html":{}}}],["replace(base64.regex_space_characters",{"_index":365,"title":{},"body":{"classes/Base64.html":{}}}],["replicates",{"_index":1259,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["represent",{"_index":648,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"index.html":{}}}],["representation",{"_index":1312,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["representing",{"_index":1460,"title":{},"body":{"interfaces/IFieldDescription.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["represents",{"_index":661,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["request",{"_index":1011,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["requests",{"_index":986,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["require",{"_index":2338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1012,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["reset",{"_index":566,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"modules/JS44DModule.html":{},"classes/MD5.html":{},"modules/ModalModule.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"overview.html":{}}}],["resize",{"_index":1956,"title":{},"body":{"components/RecordList.html":{}}}],["resolve",{"_index":587,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["resolve(body.registryvalue",{"_index":1125,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface._listcache[listname",{"_index":1085,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(fourdinterface.authentication",{"_index":1078,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(item.registryvalue",{"_index":1120,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(listvalues",{"_index":1089,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(me",{"_index":1390,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(records",{"_index":1433,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(result",{"_index":1444,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(resultjson.values",{"_index":1108,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resolve(this",{"_index":1373,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resolve(this.models",{"_index":812,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resolved",{"_index":618,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["response",{"_index":1097,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["responsetype",{"_index":1095,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["responsetype:'text",{"_index":979,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rest_authenticate",{"_index":2410,"title":{},"body":{"index.html":{}}}],["rest_getrecords",{"_index":2429,"title":{},"body":{"index.html":{}}}],["rest_proxyhttpget",{"_index":1048,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["restapi",{"_index":876,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["restore",{"_index":455,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["restoreset",{"_index":1944,"title":{},"body":{"components/RecordList.html":{}}}],["restoreset(records",{"_index":1980,"title":{},"body":{"components/RecordList.html":{}}}],["restriction",{"_index":2474,"title":{},"body":{"license.html":{}}}],["result",{"_index":308,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.query",{"_index":2076,"title":{},"body":{"components/RecordList.html":{}}}],["result.query.length",{"_index":2073,"title":{},"body":{"components/RecordList.html":{}}}],["result.queryfields",{"_index":2074,"title":{},"body":{"components/RecordList.html":{}}}],["resulting",{"_index":711,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["resultjson",{"_index":804,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.fieldlist",{"_index":260,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["resultjson.returncode",{"_index":1404,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson.session",{"_index":1073,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.key",{"_index":1075,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.session.options._userid",{"_index":1074,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.valid",{"_index":1072,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson.values",{"_index":1088,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["resultjson['_recnum",{"_index":1407,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['recordid",{"_index":1410,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["resultjson['records",{"_index":806,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["resultjson['selected",{"_index":805,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["results",{"_index":310,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1304,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["retrieve",{"_index":688,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["retrieved",{"_index":692,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["retrieves",{"_index":700,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"index.html":{}}}],["retrieving",{"_index":703,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["return",{"_index":228,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"classes/Utf8.html":{},"miscellaneous/variables.html":{}}}],["returna",{"_index":1492,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["returned",{"_index":721,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["returns",{"_index":165,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["reuse",{"_index":452,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["rhex",{"_index":1645,"title":{},"body":{"classes/MD5.html":{}}}],["rhex(n",{"_index":1667,"title":{},"body":{"classes/MD5.html":{}}}],["right",{"_index":520,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["right:20px",{"_index":480,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["rights",{"_index":2477,"title":{},"body":{"license.html":{}}}],["row",{"_index":1960,"title":{},"body":{"components/RecordList.html":{}}}],["rowid",{"_index":1446,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["run",{"_index":1716,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{},"index.html":{}}}],["running",{"_index":989,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runninginsideworkspace",{"_index":992,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["runquickfinder",{"_index":1910,"title":{},"body":{"components/QuickFindInput.html":{}}}],["runs",{"_index":2446,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":923,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["rxjs/operators",{"_index":1917,"title":{},"body":{"components/QuickFindInput.html":{}}}],["s",{"_index":1151,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.charcodeat(i",{"_index":1168,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["s.length",{"_index":1161,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["saferesourceurl",{"_index":426,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["same",{"_index":1697,"title":{},"body":{"injectables/Modal.html":{},"injectables/ModalConfig.html":{}}}],["sanitizer",{"_index":440,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["save",{"_index":459,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["save/load",{"_index":486,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["saved",{"_index":453,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["savedsearches",{"_index":2081,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.foreach(element",{"_index":2112,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.push",{"_index":2087,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches.splice(result",{"_index":2114,"title":{},"body":{"components/RecordList.html":{}}}],["savedsearches[result].search",{"_index":2101,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets",{"_index":2082,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.foreach(element",{"_index":2103,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets.splice(result",{"_index":2116,"title":{},"body":{"components/RecordList.html":{}}}],["savedsets[result].set",{"_index":2107,"title":{},"body":{"components/RecordList.html":{}}}],["saverecord",{"_index":1921,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["saveset",{"_index":2090,"title":{},"body":{"components/RecordList.html":{}}}],["screen",{"_index":1692,"title":{},"body":{"injectables/Modal.html":{}}}],["search",{"_index":454,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["searches",{"_index":458,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searches/set",{"_index":487,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["searchlist",{"_index":2111,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.length",{"_index":2098,"title":{},"body":{"components/RecordList.html":{}}}],["searchlist.push(element.name",{"_index":2097,"title":{},"body":{"components/RecordList.html":{}}}],["searchname",{"_index":2084,"title":{},"body":{"components/RecordList.html":{}}}],["see",{"_index":766,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["select",{"_index":450,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/ListSelectorDialog.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["selected",{"_index":231,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/RecordList.html":{}}}],["selectedindex",{"_index":1527,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["selectedrecords",{"_index":1951,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrecords():array",{"_index":2000,"title":{},"body":{"components/RecordList.html":{}}}],["selectedrows",{"_index":2005,"title":{},"body":{"components/RecordList.html":{}}}],["selectedvalue",{"_index":834,"title":{},"body":{"components/FourDDropDown.html":{}}}],["selectfield",{"_index":128,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selectfield(event",{"_index":173,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["selecthighlited",{"_index":2083,"title":{},"body":{"components/RecordList.html":{}}}],["selection",{"_index":727,"title":{},"body":{"injectables/FourDCollection.html":{},"components/RecordList.html":{},"index.html":{}}}],["selectlist",{"_index":1953,"title":{},"body":{"components/RecordList.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["selector'},{'name",{"_index":277,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["selectorvalue",{"_index":1191,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["selecttab",{"_index":2139,"title":{},"body":{"components/Tabs.html":{}}}],["selecttab(event",{"_index":2128,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selectthistab",{"_index":2140,"title":{},"body":{"components/Tabs.html":{}}}],["selectthistab(tab",{"_index":2130,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["selfcentered",{"_index":183,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["sell",{"_index":2482,"title":{},"body":{"license.html":{}}}],["send",{"_index":686,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["sends",{"_index":2434,"title":{},"body":{"index.html":{}}}],["sent",{"_index":890,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["separate",{"_index":2380,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":2193,"title":{},"body":{"classes/Utf8.html":{}}}],["serializes",{"_index":1311,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["series",{"_index":2350,"title":{},"body":{"index.html":{}}}],["server",{"_index":966,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["service",{"_index":732,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["service/component",{"_index":2358,"title":{},"body":{"index.html":{}}}],["services",{"_index":2351,"title":{},"body":{"index.html":{}}}],["serving",{"_index":2356,"title":{},"body":{"index.html":{}}}],["session",{"_index":958,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sessionkey",{"_index":987,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["set",{"_index":456,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{}}}],["set(field",{"_index":1283,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["setbackdropref(value",{"_index":1825,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setbootstrapref(value",{"_index":1827,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["setheight(v",{"_index":1553,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setlist",{"_index":2102,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.length",{"_index":2105,"title":{},"body":{"components/RecordList.html":{}}}],["setlist.push(element.name",{"_index":2104,"title":{},"body":{"components/RecordList.html":{}}}],["setmodelcontentdata(parms",{"_index":1612,"title":{},"body":{"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{}}}],["setmodelcontentdata(v",{"_index":196,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/RecordEditWindow.html":{}}}],["setname",{"_index":2095,"title":{},"body":{"components/RecordList.html":{}}}],["setregistryvalue(theclass",{"_index":1127,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["sets",{"_index":462,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{}}}],["setting",{"_index":1300,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["settitle",{"_index":1812,"title":{},"body":{"injectables/ModalDialogInstance.html":{}}}],["settitle(title",{"_index":624,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["settitle(v",{"_index":1557,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["setwidth(v",{"_index":1555,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["shadow:1px",{"_index":73,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["shall",{"_index":2490,"title":{},"body":{"license.html":{}}}],["shift",{"_index":2165,"title":{},"body":{"classes/Utf8.html":{}}}],["show",{"_index":1529,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"index.html":{}}}],["show(list",{"_index":1543,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["showadvancedquery",{"_index":1945,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow",{"_index":1946,"title":{},"body":{"components/RecordList.html":{}}}],["showeditwindow(mode",{"_index":1983,"title":{},"body":{"components/RecordList.html":{}}}],["showerror",{"_index":1599,"title":{},"body":{"components/LoginCmp.html":{}}}],["showlogindialog",{"_index":2233,"title":{},"body":{"components/WebAppContainer.html":{}}}],["showrelatedtable",{"_index":129,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["showrelatedtable(event",{"_index":176,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["side",{"_index":919,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["sides",{"_index":2366,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1058,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["sign's",{"_index":957,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["signed",{"_index":994,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["signin",{"_index":2409,"title":{},"body":{"index.html":{}}}],["signin(user",{"_index":1063,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["similar",{"_index":914,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["simple",{"_index":912,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["single",{"_index":1101,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["singleton",{"_index":1715,"title":{},"body":{"injectables/Modal.html":{}}}],["size",{"_index":181,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{}}}],["sm",{"_index":182,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["smooth",{"_index":79,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["software",{"_index":2472,"title":{},"body":{"license.html":{}}}],["solid",{"_index":99,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{}}}],["something",{"_index":2398,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1594,"title":{},"body":{"components/LoginCmp.html":{}}}],["sort",{"_index":492,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"modules/FourDModule.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"modules/ModalModule.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["spec\\.ts",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":389,"title":{},"body":{"classes/Base64.html":{}}}],["specific",{"_index":607,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["specified",{"_index":1358,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sql",{"_index":883,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["src/.../jsfourdinterface.ts",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modal.ts",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modalconfig.ts",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/angular2",{"_index":583,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/main.scss",{"_index":2394,"title":{},"body":{"index.html":{}}}],["src/containers/advancedquery.ts",{"_index":9,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"coverage.html":{}}}],["src/containers/advancedquery.ts:152",{"_index":192,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:162",{"_index":152,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:163",{"_index":150,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:164",{"_index":162,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:165",{"_index":163,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:167",{"_index":178,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:168",{"_index":194,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:169",{"_index":195,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:171",{"_index":197,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:190",{"_index":142,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:192",{"_index":179,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:195",{"_index":172,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:202",{"_index":174,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:210",{"_index":169,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:214",{"_index":164,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:226",{"_index":171,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:234",{"_index":170,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/advancedquery.ts:241",{"_index":177,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["src/containers/queryband.ts",{"_index":441,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"coverage.html":{}}}],["src/containers/queryband.ts:10",{"_index":1908,"title":{},"body":{"directives/QueryBandDirective.html":{}}}],["src/containers/queryband.ts:104",{"_index":1877,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:109",{"_index":1878,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:114",{"_index":1872,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:119",{"_index":1879,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:124",{"_index":1875,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:129",{"_index":1871,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:134",{"_index":1870,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:139",{"_index":1874,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:144",{"_index":1873,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:149",{"_index":1869,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:154",{"_index":1885,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:155",{"_index":1884,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:156",{"_index":1887,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:157",{"_index":1888,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:158",{"_index":1883,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:160",{"_index":1886,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:165",{"_index":1880,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:166",{"_index":1882,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:167",{"_index":1881,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:172",{"_index":1905,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:174",{"_index":1906,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:176",{"_index":1904,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:181",{"_index":1868,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:187",{"_index":1902,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:192",{"_index":1901,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:222",{"_index":1896,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:226",{"_index":1897,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:230",{"_index":1903,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:234",{"_index":1894,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:239",{"_index":1898,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:243",{"_index":1899,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:247",{"_index":1890,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:257",{"_index":1893,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:261",{"_index":1889,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:265",{"_index":1892,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:269",{"_index":1891,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:273",{"_index":1900,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/queryband.ts:99",{"_index":1876,"title":{},"body":{"components/QueryBand.html":{}}}],["src/containers/recordeditwindow.ts",{"_index":1920,"title":{},"body":{"components/RecordEditWindow.html":{},"coverage.html":{}}}],["src/containers/recordeditwindow.ts:15",{"_index":1922,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:18",{"_index":1924,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:21",{"_index":1925,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordeditwindow.ts:25",{"_index":1923,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["src/containers/recordlist.ts",{"_index":1933,"title":{},"body":{"components/RecordList.html":{},"coverage.html":{}}}],["src/containers/recordlist.ts:115",{"_index":1965,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:125",{"_index":1977,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:134",{"_index":1963,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:142",{"_index":1986,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:149",{"_index":1984,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:179",{"_index":1966,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:192",{"_index":1971,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:199",{"_index":1982,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:216",{"_index":1968,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:25",{"_index":1955,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:30",{"_index":1957,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:344",{"_index":1981,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:35",{"_index":1993,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:36",{"_index":1995,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:41",{"_index":1997,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:57",{"_index":1990,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:59",{"_index":1991,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:60",{"_index":1954,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/recordlist.ts:71",{"_index":1973,"title":{},"body":{"components/RecordList.html":{}}}],["src/containers/tabs.ts",{"_index":2121,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{},"coverage.html":{}}}],["src/containers/tabs.ts:18",{"_index":2144,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:20",{"_index":2142,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:27",{"_index":2143,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:33",{"_index":2141,"title":{},"body":{"components/Tabs.html":{}}}],["src/containers/tabs.ts:51",{"_index":2126,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/tabs.ts:52",{"_index":2124,"title":{},"body":{"components/Tab.html":{}}}],["src/containers/webappcontainer.ts",{"_index":2229,"title":{},"body":{"components/WebAppContainer.html":{},"coverage.html":{}}}],["src/containers/webappcontainer.ts:17",{"_index":2237,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:19",{"_index":2238,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:21",{"_index":2236,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:23",{"_index":2241,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:38",{"_index":2240,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/containers/webappcontainer.ts:48",{"_index":2239,"title":{},"body":{"components/WebAppContainer.html":{}}}],["src/controls/fourddropdown.ts",{"_index":827,"title":{},"body":{"components/FourDDropDown.html":{},"coverage.html":{}}}],["src/controls/fourddropdown.ts:26",{"_index":836,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:27",{"_index":837,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:28",{"_index":835,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:32",{"_index":841,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:42",{"_index":839,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourddropdown.ts:46",{"_index":840,"title":{},"body":{"components/FourDDropDown.html":{}}}],["src/controls/fourdregistryinput.ts",{"_index":1182,"title":{},"body":{"components/FourDRegistryInput.html":{},"coverage.html":{}}}],["src/controls/fourdregistryinput.ts:19",{"_index":1193,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:20",{"_index":1196,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:21",{"_index":1197,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:22",{"_index":1194,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:23",{"_index":1195,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:25",{"_index":1202,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:26",{"_index":1201,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:27",{"_index":1192,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:31",{"_index":1199,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:41",{"_index":1200,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/fourdregistryinput.ts:51",{"_index":1198,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["src/controls/quickfindinput.ts",{"_index":1909,"title":{},"body":{"components/QuickFindInput.html":{},"coverage.html":{}}}],["src/controls/quickfindinput.ts:16",{"_index":1913,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:17",{"_index":1914,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/controls/quickfindinput.ts:18",{"_index":1911,"title":{},"body":{"components/QuickFindInput.html":{}}}],["src/datagrid/datagrid.ts",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["src/dialogs/listselectordialog.ts",{"_index":1524,"title":{},"body":{"components/ListSelectorDialog.html":{},"coverage.html":{}}}],["src/dialogs/listselectordialog.ts:25",{"_index":1552,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:35",{"_index":1535,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:36",{"_index":1537,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:37",{"_index":1534,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:38",{"_index":1536,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:40",{"_index":1554,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:41",{"_index":1556,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:42",{"_index":1558,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:45",{"_index":1559,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:52",{"_index":1548,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:54",{"_index":1533,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:57",{"_index":1549,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:64",{"_index":1546,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:70",{"_index":1539,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/dialogs/listselectordialog.ts:74",{"_index":1542,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["src/fourd.module.ts",{"_index":865,"title":{},"body":{"modules/FourDModule.html":{}}}],["src/js44d.module.ts",{"_index":1503,"title":{},"body":{"modules/JS44DModule.html":{}}}],["src/js44d/base64.ts",{"_index":313,"title":{},"body":{"classes/Base64.html":{},"coverage.html":{}}}],["src/js44d/base64.ts:12",{"_index":334,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:18",{"_index":341,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:20",{"_index":339,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:26",{"_index":343,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:64",{"_index":345,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/base64.ts:8",{"_index":336,"title":{},"body":{"classes/Base64.html":{}}}],["src/js44d/jsfourdcollection.ts",{"_index":659,"title":{},"body":{"injectables/FourDCollection.html":{},"coverage.html":{}}}],["src/js44d/jsfourdcollection.ts:103",{"_index":699,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:160",{"_index":742,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:18",{"_index":733,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:20",{"_index":734,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:22",{"_index":735,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:24",{"_index":736,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:26",{"_index":728,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:29",{"_index":722,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:32",{"_index":725,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:34",{"_index":737,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:37",{"_index":681,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdcollection.ts:54",{"_index":683,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["src/js44d/jsfourdinterface.ts",{"_index":874,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/js44d/jsfourdinterface.ts:456",{"_index":1648,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:458",{"_index":1666,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:536",{"_index":1652,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:541",{"_index":1654,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:545",{"_index":1655,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:549",{"_index":1657,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:553",{"_index":1658,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:557",{"_index":1661,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:592",{"_index":1663,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:603",{"_index":1668,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:612",{"_index":1656,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:617",{"_index":1660,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:627",{"_index":1650,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:636",{"_index":1670,"title":{},"body":{"classes/MD5.html":{}}}],["src/js44d/jsfourdinterface.ts:677",{"_index":911,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:679",{"_index":918,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:681",{"_index":920,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:683",{"_index":892,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:685",{"_index":885,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:687",{"_index":896,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:689",{"_index":910,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:691",{"_index":908,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdinterface.ts:693",{"_index":904,"title":{},"body":{"classes/FourDQuery.html":{}}}],["src/js44d/jsfourdmodel.ts",{"_index":1235,"title":{},"body":{"interfaces/IFieldDescription.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts",{"_index":2145,"title":{},"body":{"classes/Utf8.html":{},"coverage.html":{}}}],["src/js44d/utf8.ts:102",{"_index":2170,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:118",{"_index":2167,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:181",{"_index":2158,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:182",{"_index":2159,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:183",{"_index":2160,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:185",{"_index":2176,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:34",{"_index":2174,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:51",{"_index":2162,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:61",{"_index":2166,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:65",{"_index":2169,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:7",{"_index":2172,"title":{},"body":{"classes/Utf8.html":{}}}],["src/js44d/utf8.ts:87",{"_index":2179,"title":{},"body":{"classes/Utf8.html":{}}}],["src/login/login.ts",{"_index":1584,"title":{},"body":{"components/LoginCmp.html":{},"coverage.html":{}}}],["src/login/login.ts:45",{"_index":1611,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:55",{"_index":1604,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:56",{"_index":1602,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:57",{"_index":1603,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:58",{"_index":1601,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:59",{"_index":1606,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:62",{"_index":1613,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:68",{"_index":1600,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:70",{"_index":1608,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/login/login.ts:77",{"_index":1607,"title":{},"body":{"components/LoginCmp.html":{}}}],["src/modal.module.ts",{"_index":1836,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/pipes/base64imageref.pipe.ts",{"_index":420,"title":{},"body":{"pipes/Base64ImageRef.html":{},"coverage.html":{}}}],["src/pipes/base64imageref.pipe.ts:13",{"_index":424,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["src/pipes/fourddatetostring.pipe.ts",{"_index":817,"title":{},"body":{"pipes/FourDDateToString.html":{},"coverage.html":{}}}],["src/pipes/fourddatetostring.pipe.ts:11",{"_index":818,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["src/test.ts",{"_index":2336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":1290,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["standalone",{"_index":990,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["standard",{"_index":354,"title":{},"body":{"classes/Base64.html":{}}}],["started",{"_index":2345,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":709,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["startrec",{"_index":696,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["state",{"_index":1162,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["statements",{"_index":2292,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":605,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["static",{"_index":118,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"classes/FourDQuery.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"classes/Utf8.html":{},"index.html":{}}}],["stay",{"_index":61,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["step",{"_index":2361,"title":{},"body":{"index.html":{}}}],["str",{"_index":931,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.join",{"_index":936,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str.push(encodeuricomponent(p",{"_index":934,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"miscellaneous/variables.html":{}}}],["str2rstr_utf8",{"_index":1646,"title":{},"body":{"classes/MD5.html":{}}}],["str2rstr_utf8(input",{"_index":1669,"title":{},"body":{"classes/MD5.html":{}}}],["string",{"_index":156,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string(input",{"_index":364,"title":{},"body":{"classes/Base64.html":{}}}],["string.fromcharcode(((codepoint",{"_index":2197,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode((codepoint",{"_index":2205,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(codepoint",{"_index":2194,"title":{},"body":{"classes/Utf8.html":{}}}],["string.fromcharcode(value",{"_index":2188,"title":{},"body":{"classes/Utf8.html":{}}}],["string.length",{"_index":2183,"title":{},"body":{"classes/Utf8.html":{}}}],["stroke",{"_index":1786,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["strong",{"_index":91,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["structure",{"_index":1248,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["style",{"_index":55,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/LoginCmp.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{}}}],["styles.scss",{"_index":2392,"title":{},"body":{"index.html":{}}}],["sub",{"_index":1463,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.formula",{"_index":1465,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.longname",{"_index":1469,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["sub.name",{"_index":1468,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields",{"_index":1462,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subfields.push",{"_index":1467,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subject",{"_index":2487,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2481,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1023,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["subscribe((v",{"_index":980,"title":{},"body":{"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["subscribe(result",{"_index":1443,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subscribe(resultjson",{"_index":258,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["subscribed",{"_index":1062,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["substantial",{"_index":2491,"title":{},"body":{"license.html":{}}}],["subtable",{"_index":1240,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["subtables",{"_index":1475,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["successfully",{"_index":993,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["support",{"_index":1466,"title":{},"body":{"interfaces/IFieldDescription.html":{},"modules.html":{}}}],["supposed",{"_index":396,"title":{},"body":{"classes/Base64.html":{}}}],["sure",{"_index":407,"title":{},"body":{"classes/Base64.html":{},"interfaces/IFieldDescription.html":{}}}],["surrogates",{"_index":394,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["svg",{"_index":2518,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":530,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{}}}],["switchstate",{"_index":525,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["symbol",{"_index":2195,"title":{},"body":{"classes/Utf8.html":{}}}],["symbols",{"_index":392,"title":{},"body":{"classes/Base64.html":{}}}],["t",{"_index":593,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["t\\n\\f\\r",{"_index":337,"title":{},"body":{"classes/Base64.html":{}}}],["tab",{"_index":294,"title":{"components/Tab.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["tab'},{'name",{"_index":295,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tab.active",{"_index":2133,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tab.title",{"_index":2127,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tabitem.active",{"_index":2132,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["table",{"_index":317,"title":{},"body":{"classes/Base64.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"coverage.html":{},"index.html":{}}}],["table's",{"_index":1260,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["table.field",{"_index":716,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["tabled",{"_index":898,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablename",{"_index":257,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"interfaces/IFieldDescription.html":{},"components/RecordList.html":{}}}],["tablenumber",{"_index":1263,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["tables",{"_index":903,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":296,"title":{"components/Tabs.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["tabs'},{'name",{"_index":297,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["tabs.addtab(this",{"_index":2137,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["tail",{"_index":1172,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["take",{"_index":2428,"title":{},"body":{"index.html":{}}}],["taken",{"_index":2180,"title":{},"body":{"classes/Utf8.html":{}}}],["takes",{"_index":2433,"title":{},"body":{"index.html":{}}}],["teh",{"_index":1978,"title":{},"body":{"components/RecordList.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["terms",{"_index":899,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["text",{"_index":1096,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8",{"_index":1035,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["textvalue",{"_index":1185,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["theclass",{"_index":1109,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thecustomquery",{"_index":449,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thedate",{"_index":1133,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.gethours",{"_index":1149,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedate.substr(0,4)+'/'+thedate.substr(4,2)+'/'+thedate.substr(6,2",{"_index":1142,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedefaultvalue",{"_index":1112,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thedialog",{"_index":1674,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance",{"_index":1684,"title":{},"body":{"injectables/Modal.html":{}}}],["thedialoginstance:modaldialoginstance",{"_index":1754,"title":{},"body":{"injectables/Modal.html":{}}}],["thefield",{"_index":237,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["theform",{"_index":567,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform.length",{"_index":569,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theform[0].reset",{"_index":570,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["thegrid",{"_index":1938,"title":{},"body":{"components/RecordList.html":{}}}],["themodel",{"_index":756,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["themodel.getfieldproperties(col",{"_index":768,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["themodel.getfieldproperties(col.field",{"_index":774,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["then((authentication",{"_index":1626,"title":{},"body":{"components/LoginCmp.html":{},"components/WebAppContainer.html":{}}}],["then((message",{"_index":2063,"title":{},"body":{"components/RecordList.html":{}}}],["then((reclist",{"_index":1384,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["then((recnum",{"_index":1932,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["then((result",{"_index":2072,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["then((setname",{"_index":2094,"title":{},"body":{"components/RecordList.html":{}}}],["then((value",{"_index":1216,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["then((values",{"_index":849,"title":{},"body":{"components/FourDDropDown.html":{}}}],["then(result",{"_index":2055,"title":{},"body":{"components/RecordList.html":{}}}],["theparameter",{"_index":1110,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thequeryband",{"_index":524,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["theselector",{"_index":1113,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thetime:string",{"_index":1148,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["thevalue",{"_index":1126,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this._attributes.hasownproperty(field",{"_index":1293,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._attributes[field",{"_index":1281,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._backdropref",{"_index":615,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._backdropref.destroy",{"_index":655,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref",{"_index":617,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._bootstrapref.destroy",{"_index":654,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._editwindowconfig",{"_index":2029,"title":{},"body":{"components/RecordList.html":{}}}],["this._modified",{"_index":1456,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field",{"_index":1489,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified.hasownproperty(field.name",{"_index":1459,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._modified[field",{"_index":1298,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._previousadvancedquery",{"_index":2035,"title":{},"body":{"components/RecordList.html":{}}}],["this._previousquery",{"_index":2036,"title":{},"body":{"components/RecordList.html":{}}}],["this._recnum",{"_index":1430,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this._resultdefered",{"_index":612,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.promise",{"_index":623,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.reject",{"_index":652,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this._resultdefered.resolve(result",{"_index":635,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.active",{"_index":2125,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.appref",{"_index":1732,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref.element.nativeelement.location",{"_index":1728,"title":{},"body":{"injectables/Modal.html":{}}}],["this.appref['_rootcomponents'][0].location",{"_index":1729,"title":{},"body":{"injectables/Modal.html":{}}}],["this.booleanvalue",{"_index":1217,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.booleanvalue)?'y':'n",{"_index":1208,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.buttontext",{"_index":1574,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.call4drestmethod('rest_authenticate",{"_index":1071,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_get4dlist",{"_index":1086,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getfiltered4dlist",{"_index":1107,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_getregistryvalue",{"_index":1122,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_setregistryvalue",{"_index":1128,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.call4drestmethod('rest_update4dlist",{"_index":1094,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.classname",{"_index":1213,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.clearrecord",{"_index":1370,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.clearrecorddirtyflag",{"_index":1372,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.closedialog(event",{"_index":1733,"title":{},"body":{"injectables/Modal.html":{}}}],["this.columns",{"_index":752,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.config",{"_index":1577,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.height",{"_index":1563,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.title",{"_index":1567,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.config.width",{"_index":1565,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.constructor.valueof",{"_index":1375,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.contentref",{"_index":630,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.destroy",{"_index":656,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance",{"_index":631,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforeclose",{"_index":632,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.instance.beforedismiss",{"_index":651,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.contentref.location.nativeelement).data('kendowindow",{"_index":625,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.context",{"_index":1857,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.currentrecord",{"_index":1926,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.insertrecord",{"_index":1931,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.isrecordloaded",{"_index":1927,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currentrecord.updaterecord",{"_index":1928,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.currenttable",{"_index":215,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.defaultvalue",{"_index":1215,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.deleterecord",{"_index":2026,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialog",{"_index":1629,"title":{},"body":{"components/LoginCmp.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close",{"_index":242,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialog.close('loggedin",{"_index":1630,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.dialog.close('recordsaved",{"_index":1929,"title":{},"body":{"components/RecordEditWindow.html":{}}}],["this.dialog.close(false",{"_index":2283,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.close(this.selectedindex",{"_index":1583,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.dialog.close(true",{"_index":1858,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["this.dialog.kendodialog.setoptions",{"_index":222,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.dialoginstance",{"_index":2030,"title":{},"body":{"components/RecordList.html":{}}}],["this.dialoginstance.contentref.location.nativeelement).data('kendowindow",{"_index":2032,"title":{},"body":{"components/RecordList.html":{}}}],["this.dispose",{"_index":633,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.domanagesets(action",{"_index":2016,"title":{},"body":{"components/RecordList.html":{}}}],["this.dropdownisopen",{"_index":547,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.editwindow",{"_index":2020,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindow['dialogconfig",{"_index":2028,"title":{},"body":{"components/RecordList.html":{}}}],["this.editwindowhandler(result",{"_index":2056,"title":{},"body":{"components/RecordList.html":{}}}],["this.elementref",{"_index":2258,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.elementref.nativeelement.getelementsbytagname('form",{"_index":568,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableaddrecord",{"_index":538,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablebuttonbar",{"_index":537,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enabledeleterecord",{"_index":541,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableeditrecord",{"_index":539,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableexportgrid",{"_index":536,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqbe",{"_index":532,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enableqff",{"_index":533,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesets",{"_index":534,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.enablesort",{"_index":535,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.fieldlist",{"_index":161,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fieldlist.push(field",{"_index":214,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fields",{"_index":1305,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.filteroptions",{"_index":783,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd",{"_index":749,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_getapplicationversion",{"_index":1619,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourd.call4drestmethod('rest_getfieldsintable",{"_index":256,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.fourd.call4drestmethod('rest_getrecords",{"_index":801,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.fourd.call4drestmethod('rest_getvalues",{"_index":1442,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_loaddata",{"_index":1369,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.call4drestmethod('rest_postdata",{"_index":1403,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourd.get4dlist(this.listname",{"_index":848,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.fourd.getregistryvalue(this.classname",{"_index":1214,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.setregistryvalue(this.classname",{"_index":1210,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.fourd.signin(key.username",{"_index":2264,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.fourd.signin(this.username",{"_index":1624,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.fourddeletecallbackmethod_",{"_index":1419,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdsavecallbackmethod_",{"_index":1323,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.fourdversion",{"_index":1620,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.getcolumnlist",{"_index":1432,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getcolumnlistjson(columns",{"_index":797,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getcolumnlistjson(newmodel.getcolumnlist",{"_index":798,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.getfielddescription(field).type",{"_index":1285,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field",{"_index":1284,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getfieldproperties(field).type",{"_index":1425,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.getrecord(this.recordnumber",{"_index":1396,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.hasownproperty('timestamp",{"_index":1327,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.httpclient.post(fourdinterface.fourdurl",{"_index":1045,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["this.inputtype",{"_index":1205,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.invalidcharactererror(message",{"_index":333,"title":{},"body":{"classes/Base64.html":{}}}],["this.isblocking",{"_index":1810,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.iscalculatedfield(field",{"_index":1334,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.ismodifiedfield(fieldname",{"_index":1340,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isreadonly(field",{"_index":1337,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.isrelatedfield(field",{"_index":1336,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(col",{"_index":1478,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.issubtable(field",{"_index":1335,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.itemslist",{"_index":1569,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.keyboard",{"_index":1811,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.listname",{"_index":847,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.listoptions",{"_index":850,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadlistfrom4d",{"_index":844,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.loadvaluefrom4d",{"_index":1203,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.message",{"_index":335,"title":{},"body":{"classes/Base64.html":{},"components/ListSelectorDialog.html":{}}}],["this.modal.open(listselectordialog",{"_index":1579,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.modal.openinside(advancedquerycomponent",{"_index":2068,"title":{},"body":{"components/RecordList.html":{}}}],["this.modal.openinside(logincmp",{"_index":2257,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.modal.openinside(this.editwindow",{"_index":2053,"title":{},"body":{"components/RecordList.html":{}}}],["this.model",{"_index":755,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models",{"_index":803,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.length",{"_index":815,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.models.push(newmodel",{"_index":811,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.open(component",{"_index":1756,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openinside(componenttype",{"_index":1730,"title":{},"body":{"injectables/Modal.html":{}}}],["this.openstateicon",{"_index":527,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.orderby",{"_index":784,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.originalvalue",{"_index":1209,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.parametervalue",{"_index":1211,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.populatemodeldata(resultjson",{"_index":1371,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.primarykey_",{"_index":1362,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.promise",{"_index":596,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.queryaddrecord.emit(null",{"_index":574,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryband.enableqbe",{"_index":2009,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.enablesets",{"_index":2014,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryaddrecord.subscribe",{"_index":2021,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querydeleterecord.subscribe",{"_index":2025,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryeditrecord.subscribe",{"_index":2023,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryexportgrid.subscribe",{"_index":2018,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.queryfromqbe.subscribe((query",{"_index":2010,"title":{},"body":{"components/RecordList.html":{}}}],["this.queryband.querymanagesets.subscribe((action",{"_index":2015,"title":{},"body":{"components/RecordList.html":{}}}],["this.querybandisopen",{"_index":526,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querydeleterecord.emit(null",{"_index":578,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryeditrecord.emit(null",{"_index":576,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryexportgrid.emit(null",{"_index":572,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfieldlist",{"_index":218,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.foreach(element",{"_index":234,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.length",{"_index":245,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.pop",{"_index":251,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfieldlist.push",{"_index":246,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.queryfromfile.emit(null",{"_index":545,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryfromqbe.emit",{"_index":543,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querymanagesets.emit(action",{"_index":550,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.queryrefresh.emit(this.thequeryband.thecustomquery.currentquery",{"_index":553,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querysortgrid.emit(null",{"_index":555,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.querystring",{"_index":782,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.quickfind.valuechanges.pipe(distinctuntilchanged(),debouncetime(1500),).subscribe(query",{"_index":1918,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.recordnumber",{"_index":1322,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.refreshgrid",{"_index":2075,"title":{},"body":{"components/RecordList.html":{}}}],["this.refreshgrid(query",{"_index":2007,"title":{},"body":{"components/RecordList.html":{}}}],["this.reject",{"_index":599,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.relatedonetables",{"_index":219,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.resolve",{"_index":598,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{}}}],["this.restoreset(set",{"_index":2108,"title":{},"body":{"components/RecordList.html":{}}}],["this.runquickfinder.emit(query",{"_index":1919,"title":{},"body":{"components/QuickFindInput.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('data:image/'+imagetype+';base64,'+value",{"_index":438,"title":{},"body":{"pipes/Base64ImageRef.html":{}}}],["this.selectedindex",{"_index":1580,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.selectedvalue",{"_index":846,"title":{},"body":{"components/FourDDropDown.html":{}}}],["this.selectlist.show(searchlist",{"_index":2100,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.show(setlist",{"_index":2106,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectlist.title",{"_index":2099,"title":{},"body":{"components/RecordList.html":{}}}],["this.selectorvalue",{"_index":1212,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.selectthistab(tab",{"_index":2129,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.showadvancedquery",{"_index":2011,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('add",{"_index":2022,"title":{},"body":{"components/RecordList.html":{}}}],["this.showeditwindow('edit",{"_index":2024,"title":{},"body":{"components/RecordList.html":{}}}],["this.showerror",{"_index":1628,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.showlogindialog",{"_index":2267,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.size",{"_index":1808,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["this.tablename",{"_index":1320,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this.tabs.foreach((tabitem",{"_index":2131,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.length",{"_index":2135,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.tabs.push(tab",{"_index":2136,"title":{},"body":{"components/Tab.html":{},"components/Tabs.html":{}}}],["this.textvalue",{"_index":1207,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["this.thedialog",{"_index":1742,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.center().open",{"_index":1737,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thedialog.open",{"_index":1738,"title":{},"body":{"injectables/Modal.html":{}}}],["this.thegrid",{"_index":2001,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord",{"_index":2046,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.deleterecord(this.queryband.cascadedeleterecord",{"_index":2062,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.currentrecord.refresh().then",{"_index":2052,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.exportgridtoexcel",{"_index":2019,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider",{"_index":2002,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.getdataprovider().models",{"_index":2004,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.loaddata(query",{"_index":2038,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model",{"_index":2059,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype",{"_index":2070,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.primarykey_",{"_index":2080,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.model).prototype.tablename",{"_index":2077,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.optimizegridloading",{"_index":2047,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.recordselected.subscribe((record",{"_index":2027,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.refresh",{"_index":2066,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.resize",{"_index":2042,"title":{},"body":{"components/RecordList.html":{}}}],["this.thegrid.selectedrows",{"_index":2006,"title":{},"body":{"components/RecordList.html":{}}}],["this.thequeryband.thecustomquery",{"_index":552,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.clearqueryform",{"_index":557,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.thequeryband.thecustomquery.currentquery",{"_index":581,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["this.tipslist",{"_index":1571,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["this.totalrecordcount",{"_index":802,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["this.urlsearchparms.hasownproperty('key",{"_index":2262,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[element",{"_index":2256,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.urlsearchparms[item[0",{"_index":2254,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userhasloggedin.emit(fourdinterface.currentuser",{"_index":2261,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.userisloggedin",{"_index":2260,"title":{},"body":{"components/WebAppContainer.html":{}}}],["this.viewref",{"_index":2054,"title":{},"body":{"components/RecordList.html":{}}}],["this.webappversion",{"_index":1617,"title":{},"body":{"components/LoginCmp.html":{}}}],["this.windowheight",{"_index":223,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this.windowresized(event",{"_index":2034,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowresized(null",{"_index":2041,"title":{},"body":{"components/RecordList.html":{}}}],["this.windowwidth",{"_index":224,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["this['timestamp",{"_index":1329,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field",{"_index":1426,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[field.name",{"_index":1309,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["this[fieldname",{"_index":1343,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["those",{"_index":327,"title":{},"body":{"classes/Base64.html":{},"index.html":{}}}],["three",{"_index":2371,"title":{},"body":{"index.html":{}}}],["throughout",{"_index":325,"title":{},"body":{"classes/Base64.html":{}}}],["throw",{"_index":332,"title":{},"body":{"classes/Base64.html":{},"classes/Utf8.html":{}}}],["thru",{"_index":1051,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["time",{"_index":1144,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{}}}],["timestamp",{"_index":1331,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["timeto4dformat(thedate",{"_index":1146,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tips",{"_index":1544,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["tipslist",{"_index":1531,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["title",{"_index":189,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["title(v",{"_index":1566,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["to/from",{"_index":1001,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["todo",{"_index":1721,"title":{},"body":{"injectables/Modal.html":{}}}],["toggledropdown",{"_index":546,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["token",{"_index":1700,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["tokens",{"_index":2408,"title":{},"body":{"index.html":{}}}],["top",{"_index":88,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{}}}],["top:5px",{"_index":470,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tort",{"_index":2513,"title":{},"body":{"license.html":{}}}],["total",{"_index":738,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["totalrecordcount",{"_index":678,"title":{},"body":{"injectables/FourDCollection.html":{}}}],["traffic",{"_index":1000,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["transform",{"_index":421,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transform(value",{"_index":422,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{}}}],["transition:opacity",{"_index":82,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transitions",{"_index":78,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["transparent",{"_index":467,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["triangle",{"_index":519,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["trick",{"_index":1743,"title":{},"body":{"injectables/Modal.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"classes/Deferred.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":1852,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["true|false",{"_index":1416,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["try",{"_index":2037,"title":{},"body":{"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["tslint",{"_index":949,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["tslint:disable",{"_index":937,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["tv",{"_index":1100,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["two",{"_index":902,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["type",{"_index":145,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":759,"title":{},"body":{"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"interfaces/IFieldDescription.html":{}}}],["typeof(this[fieldname",{"_index":1347,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["typescript",{"_index":2349,"title":{},"body":{"index.html":{}}}],["ucs2decode",{"_index":2154,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2decode(string",{"_index":2171,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode",{"_index":2155,"title":{},"body":{"classes/Utf8.html":{}}}],["ucs2encode(array",{"_index":2173,"title":{},"body":{"classes/Utf8.html":{}}}],["ui",{"_index":2352,"title":{},"body":{"index.html":{}}}],["ul",{"_index":43,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["ul#navigation",{"_index":20,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["undefined",{"_index":843,"title":{},"body":{"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{}}}],["under",{"_index":1104,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"index.html":{}}}],["union",{"_index":884,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["unique",{"_index":1241,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["unpaired",{"_index":2225,"title":{},"body":{"classes/Utf8.html":{}}}],["up",{"_index":1066,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{}}}],["update",{"_index":1090,"title":{},"body":{"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["update4dlist(listname",{"_index":1091,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["updaterecord",{"_index":1414,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updates",{"_index":1278,"title":{},"body":{"interfaces/IFieldDescription.html":{},"index.html":{}}}],["updating",{"_index":1294,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["upon",{"_index":1025,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{},"index.html":{}}}],["url",{"_index":434,"title":{},"body":{"pipes/Base64ImageRef.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/WebAppContainer.html":{},"miscellaneous/variables.html":{}}}],["url(\"/assets/login_splash.png",{"_index":1588,"title":{},"body":{"components/LoginCmp.html":{}}}],["url.split('&').foreach(element",{"_index":2251,"title":{},"body":{"components/WebAppContainer.html":{}}}],["urlencoded",{"_index":1032,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparams",{"_index":1019,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["urlsearchparms",{"_index":2232,"title":{},"body":{"components/WebAppContainer.html":{}}}],["usage",{"_index":435,"title":{},"body":{"pipes/Base64ImageRef.html":{},"pipes/FourDDateToString.html":{},"index.html":{}}}],["use",{"_index":565,"title":{},"body":{"directives/CustomButtonBarDirective.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"components/RecordList.html":{},"index.html":{},"license.html":{}}}],["useb",{"_index":927,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["used",{"_index":324,"title":{},"body":{"classes/Base64.html":{},"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{},"index.html":{}}}],["useful",{"_index":2374,"title":{},"body":{"index.html":{}}}],["user",{"_index":640,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"index.html":{}}}],["userhasloggedin",{"_index":2235,"title":{},"body":{"components/WebAppContainer.html":{}}}],["userhassignedin",{"_index":995,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["userisloggedin",{"_index":2234,"title":{},"body":{"components/WebAppContainer.html":{}}}],["username",{"_index":786,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{}}}],["using",{"_index":701,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"index.html":{}}}],["usually",{"_index":647,"title":{},"body":{"classes/Deferred.html":{},"interfaces/IFieldDescription.html":{},"injectables/ModalDialogInstance.html":{}}}],["utf8",{"_index":744,"title":{"classes/Utf8.html":{}},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"classes/Utf8.html":{},"coverage.html":{}}}],["utf8.bytearray[utf8.byteindex",{"_index":2212,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.bytecount",{"_index":2209,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.byteindex",{"_index":2214,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.checkscalarvalue(codepoint",{"_index":2200,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.createbyte(codepoint",{"_index":2202,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.readcontinuationbyte",{"_index":2223,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8.ucs2decode(string",{"_index":2207,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode",{"_index":2156,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8decode(bytestring",{"_index":2175,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode",{"_index":2157,"title":{},"body":{"classes/Utf8.html":{}}}],["utf8encode(string",{"_index":2178,"title":{},"body":{"classes/Utf8.html":{}}}],["utility",{"_index":925,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["v",{"_index":198,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/RecordEditWindow.html":{}}}],["v.buttonlabel",{"_index":1573,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.list",{"_index":1570,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.message",{"_index":1575,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v.model.tablename",{"_index":216,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.previousquery",{"_index":217,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["v.tips",{"_index":1572,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["v15",{"_index":1037,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["valid",{"_index":1770,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["validation",{"_index":1774,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value",{"_index":149,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"pipes/Base64ImageRef.html":{},"classes/Deferred.html":{},"injectables/FourDCollection.html":{},"pipes/FourDDateToString.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"interfaces/IFieldDescription.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"classes/YesNoModalContent.html":{},"miscellaneous/variables.html":{}}}],["value.substr(0,2",{"_index":1287,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(3,2",{"_index":1289,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.substr(6,2",{"_index":1291,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["value.tolocaledatestring",{"_index":824,"title":{},"body":{"pipes/FourDDateToString.html":{}}}],["value.touppercase",{"_index":1218,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["value/s",{"_index":1783,"title":{},"body":{"injectables/ModalConfig.html":{}}}],["value:'the",{"_index":1436,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["valuechanged",{"_index":1187,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["values",{"_index":851,"title":{},"body":{"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"injectables/ModalConfig.html":{}}}],["var",{"_index":265,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Base64.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["variable",{"_index":2304,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":516,"title":{"miscellaneous/variables.html":{}},"body":{"directives/CustomButtonBarDirective.html":{},"interfaces/IFieldDescription.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variableslist",{"_index":1440,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["various",{"_index":924,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"components/RecordList.html":{}}}],["version",{"_index":983,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/Modal.html":{}}}],["very",{"_index":45,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["via",{"_index":2354,"title":{},"body":{"index.html":{}}}],["view",{"_index":1974,"title":{},"body":{"components/RecordList.html":{}}}],["viewcontainerref",{"_index":201,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{}}}],["viewencapsulation",{"_index":2242,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewencapsulation.none",{"_index":2231,"title":{},"body":{"components/WebAppContainer.html":{}}}],["viewref",{"_index":1706,"title":{},"body":{"injectables/Modal.html":{},"components/RecordList.html":{}}}],["visibility",{"_index":85,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:hidden",{"_index":63,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["visibility:visible",{"_index":52,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["void",{"_index":166,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"classes/Deferred.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"injectables/Modal.html":{},"injectables/ModalDialogInstance.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tabs.html":{},"classes/Utf8.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["want",{"_index":1452,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["warranties",{"_index":2499,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2494,"title":{},"body":{"license.html":{}}}],["we'll",{"_index":1004,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["web",{"_index":299,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"classes/FourDQuery.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"classes/MD5.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"index.html":{}}}],["webappcontainer",{"_index":298,"title":{"components/WebAppContainer.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"modules/JS44DModule.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"coverage.html":{},"overview.html":{}}}],["webappversion",{"_index":1598,"title":{},"body":{"components/LoginCmp.html":{}}}],["webkit",{"_index":81,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["welcome",{"_index":1592,"title":{},"body":{"components/LoginCmp.html":{}}}],["went",{"_index":1406,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["whether",{"_index":2511,"title":{},"body":{"license.html":{}}}],["whole",{"_index":708,"title":{},"body":{"injectables/FourDCollection.html":{},"interfaces/IFieldDescription.html":{},"injectables/Modal.html":{}}}],["whose",{"_index":719,"title":{},"body":{"injectables/FourDCollection.html":{},"classes/FourDQuery.html":{},"interfaces/IFieldDescription.html":{},"classes/MD5.html":{},"index.html":{}}}],["wide",{"_index":1714,"title":{},"body":{"injectables/Modal.html":{}}}],["widget",{"_index":2387,"title":{},"body":{"index.html":{}}}],["widgets",{"_index":2353,"title":{},"body":{"index.html":{}}}],["widgets/services",{"_index":2450,"title":{},"body":{"index.html":{}}}],["width",{"_index":34,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/FourDDropDown.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"injectables/ModalConfig.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width(v",{"_index":1564,"title":{},"body":{"components/ListSelectorDialog.html":{}}}],["width:100",{"_index":95,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"directives/CustomButtonBarDirective.html":{},"components/QueryBand.html":{},"directives/QueryBandDirective.html":{}}}],["width:180px",{"_index":70,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["wiki",{"_index":2359,"title":{},"body":{"index.html":{}}}],["win",{"_index":2244,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location",{"_index":2245,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search",{"_index":2246,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win.location.search.substr(1",{"_index":2247,"title":{},"body":{"components/WebAppContainer.html":{}}}],["win:windowservice",{"_index":2243,"title":{},"body":{"components/WebAppContainer.html":{}}}],["window",{"_index":602,"title":{},"body":{"classes/Deferred.html":{},"classes/ICustomModal.html":{},"classes/ICustomModalComponent.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"injectables/ModalDialogInstance.html":{},"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["window'},{'name",{"_index":291,"title":{},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{}}}],["window:resize",{"_index":1950,"title":{},"body":{"components/RecordList.html":{}}}],["windowbase64",{"_index":356,"title":{},"body":{"classes/Base64.html":{}}}],["windowheight",{"_index":120,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["windowresized",{"_index":1947,"title":{},"body":{"components/RecordList.html":{}}}],["windowresized(event",{"_index":1985,"title":{},"body":{"components/RecordList.html":{}}}],["windows",{"_index":2377,"title":{},"body":{"index.html":{}}}],["windowwidth",{"_index":121,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["without",{"_index":636,"title":{},"body":{"classes/Deferred.html":{},"injectables/ModalDialogInstance.html":{},"license.html":{}}}],["work",{"_index":1724,"title":{},"body":{"injectables/Modal.html":{},"index.html":{}}}],["workspace",{"_index":991,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["world",{"_index":1845,"title":{},"body":{"classes/OKOnlyContent.html":{},"components/OKOnlyModal.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["wrap",{"_index":1351,"title":{},"body":{"interfaces/IFieldDescription.html":{}}}],["wrapper",{"_index":2405,"title":{},"body":{"index.html":{}}}],["www",{"_index":1031,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["x",{"_index":650,"title":{},"body":{"classes/Deferred.html":{},"classes/FourDQuery.html":{},"classes/MD5.html":{},"injectables/ModalDialogInstance.html":{}}}],["xff]/.test(input",{"_index":387,"title":{},"body":{"classes/Base64.html":{}}}],["y",{"_index":1219,"title":{},"body":{"components/FourDRegistryInput.html":{}}}],["yes",{"_index":1547,"title":{},"body":{"components/ListSelectorDialog.html":{},"injectables/Modal.html":{},"injectables/ModalConfig.html":{},"components/RecordList.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["yesnomodal",{"_index":301,"title":{"components/YesNoModal.html":{}},"body":{"components/AdvancedQueryComponent.html":{},"components/FourDDropDown.html":{},"components/FourDRegistryInput.html":{},"components/ListSelectorDialog.html":{},"components/LoginCmp.html":{},"modules/ModalModule.html":{},"components/OKOnlyModal.html":{},"components/QueryBand.html":{},"components/QuickFindInput.html":{},"components/RecordEditWindow.html":{},"components/RecordList.html":{},"components/Tab.html":{},"components/Tabs.html":{},"components/WebAppContainer.html":{},"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{},"overview.html":{}}}],["yesnomodalcontent",{"_index":2276,"title":{"classes/YesNoModalContent.html":{}},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{},"coverage.html":{}}}],["yestext",{"_index":2281,"title":{},"body":{"components/YesNoModal.html":{},"classes/YesNoModalContent.html":{}}}],["ymd",{"_index":1139,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["yyyymmdd",{"_index":1132,"title":{},"body":{"classes/FourDQuery.html":{},"classes/MD5.html":{}}}],["z",{"_index":67,"title":{},"body":{"components/AdvancedQueryComponent.html":{}}}],["z0",{"_index":374,"title":{},"body":{"classes/Base64.html":{}}}],["za",{"_index":373,"title":{},"body":{"classes/Base64.html":{}}}],["zoom",{"_index":863,"title":{},"body":{"modules/FourDModule.html":{},"modules/JS44DModule.html":{},"modules/ModalModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdvancedQueryComponent.html":{"url":"components/AdvancedQueryComponent.html","title":"component - AdvancedQueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdvancedQueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/advancedQuery.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                advanced-query\n            \n\n\n            \n                styles\n                \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n            \n\n            \n                template\n                    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n            \n        \n        \n            \n                {{item}}\n            \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n            \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTable\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                windowHeight\n                            \n                            \n                                    Private\n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doQuery\n                            \n                            \n                                isItemSelected\n                            \n                            \n                                lessLines\n                            \n                            \n                                moreLines\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectField\n                            \n                            \n                                showRelatedTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparatorList\n                            \n                            \n                                fieldList\n                            \n                            \n                                queryFieldList\n                            \n                            \n                                relatedOneTables\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface, dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/containers/advancedQuery.ts:190\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparatorList\n                    \n                \n                \n                    \n                        Default value : ['=', '!=', '>', '>=', '\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:163\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldList\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:162\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFieldList\n                    \n                \n                \n                    \n                        Default value : [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }]\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:164\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relatedOneTables\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:165\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doQuery\n                        \n                        \n                    \n                \n            \n            \n                \ndoQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(field: any, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lessLines\n                        \n                        \n                    \n                \n            \n            \n                \nlessLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moreLines\n                        \n                        \n                    \n                \n            \n            \n                \nmoreLines()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectField\n                        \n                        \n                    \n                \n            \n            \n                \nselectField(event, queryField)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRelatedTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowRelatedTable(event, queryField: any)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/advancedQuery.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:152\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            windowWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 570\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/advancedQuery.ts:169\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/advancedQuery.ts:171\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, ViewContainerRef, AfterViewInit, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'advanced-query',\n    template: `\n    \n    \n        \n            \n                \n                    &raquo;\n                        \n                            {{relatedTable}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                {{field.longname}}\n                   \n        \n        \n            \n                {{item}}\n                   \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            Can't query on Object fields\n            Can't query on Object fields\n            Can't query on Blob fields\n            Can't query on Blob fields\n            Can't query on Picture fields\n            \n        \n            \n                And\n                Or\n                   \n        \n     \n\n    \n        \n            More...\n            Less...\n        \n        Query\n    \n\n\n    `,\n    styles: [`\n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    `]\n})\n\nexport class AdvancedQueryComponent implements ICustomModalComponent, AfterViewInit {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Advanced Query',\n        width: 570, height: 100\n    };\n\n    @Input() public fieldList: Array = [];\n    @Input() public comparatorList = ['=', '!=', '>', '>=', ' {\n            if (!field.related && field.longname && field.longname !== '') { this.fieldList.push(field) }\n        });\n        this.currentTable = v.model.tableName;\n        if (v.previousQuery) {\n            this.queryFieldList = v.previousQuery;\n        } else {\n            this.queryFieldList = [{ id: 'query0', field: { type: 'string', name: '' }, comparator: '=', value: '', connector: 'And', queryTable: '', listOfFields: this.fieldList }];\n        }\n        this.relatedOneTables = [this.currentTable];\n        for (let index = 0; index  1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    selectField(event, queryField) {\n        if (event.target.selectedIndex > 0) {\n            queryField.field = queryField.listOfFields[event.target.selectedIndex - 1];\n        } else {\n            queryField.field = { type: 'string', name: '' };\n        }\n    }\n\n    isItemSelected(field: any, queryField: any): string {\n        return (queryField.name === field.name) ? 'selected' : '';\n    }\n\n    doQuery() {\n        const queryItems = [];\n        this.queryFieldList.forEach(element => {\n            if (element.field.name !== '' && element.comparator !== '') {\n                const theField: any = element.field;\n                if (element.comparator === '!=') { element.comparator = '#'; }\n                queryItems.push(theField.longname + ';' + element.comparator + ';' + element.value + ';' + element.connector);\n            }\n        });\n        this.dialog.close({ query: queryItems, queryFields: this.queryFieldList });\n    }\n\n    moreLines() {\n        const queryID = 'query' + this.queryFieldList.length;\n        this.queryFieldList.push({ id: queryID, field: { type: 'string', name: '' }, comparator: '=', value: '', connector: ' And', queryTable: this.currentTable, listOfFields: this.fieldList }); // add a new query line\n        this.windowHeight += 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    lessLines() {\n        this.queryFieldList.pop(); // remove last item\n        this.windowHeight -= 35;\n        this.windowWidth = (this.queryFieldList.length > 1) ? 630 : 570;\n        this.dialog.kendoDialog.setOptions({ height: this.windowHeight, width: this.windowWidth });\n    }\n\n    showRelatedTable(event, queryField: any) {\n        queryField.queryTable = event.target.textContent;\n        this.fourD.call4DRESTMethod('REST_GetFieldsInTable', { TableName: queryField.queryTable })\n            .subscribe(resultJSON => {\n                queryField.listOfFields = resultJSON.fieldList;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    /* Main Navigation */\n    \n     \n    ul#navigation {\n        margin:0px auto;\n        position:relative;\n        float:left;\n    }\n     \n    ul#navigation li {\n        display:inline;\n        float:left;\n    \n    }\n     \n    ul#navigation li h5 {\n        padding:5px 5px 5px 15px;\n        display:inline-block;\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n     \n    ul#navigation li h5:hover {\n        background:#f8f8f8;\n        color:#282828;\n    }\n     \n    \n     \n    ul#navigation li:hover > a {\n        background:#fff;\n    }\n    /* Drop-Down Navigation */\n    ul#navigation li:hover > ul\n    {\n    /*these 2 styles are very important,\n    being the ones which make the drop-down to appear on hover */\n        visibility:visible;\n        opacity:1;\n    }\n     \n    ul#navigation ul, ul#navigation ul li ul {\n        list-style: none;\n        margin-left: 10px;\n        padding: 0;\n    /*the next 2 styles are very important,\n    being the ones which make the drop-down to stay hidden */\n        visibility:hidden;\n        opacity:0;\n        position: absolute;\n        z-index: 99999;\n        width:180px;\n        background:#ddd;\n        box-shadow:1px 1px 3px #ccc;\n    /* css3 transitions for smooth hover effect */\n        -webkit-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -moz-transition:opacity 0.2s linear, visibility 0.2s linear;\n        -o-transition:opacity 0.2s linear, visibility 0.2s linear;\n        transition:opacity 0.2s linear, visibility 0.2s linear;\n    }\n     \n    ul#navigation ul {\n        top: 25px;\n        left: 10px;\n    }\n     \n    ul#navigation ul li ul {\n        top: 0;\n        left: 181px; /* strong related to width:180px; from above */\n    }\n     \n    ul#navigation ul li {\n        clear:both;\n        width:100%;\n        border:0 none;\n        border-bottom:1px solid #c9c9c9;\n    }\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                »                                                    {{relatedTable}}                                                                                                                                    {{field.longname}}                                                        {{item}}                                                                                                                                        Can\\'t query on Object fields            Can\\'t query on Object fields            Can\\'t query on Blob fields            Can\\'t query on Blob fields            Can\\'t query on Picture fields                                                And                Or                                                 More...            Less...                Query    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'AdvancedQueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base64.html":{"url":"classes/Base64.html","title":"class - Base64","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base64\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/base64.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                error\n                            \n                            \n                                InvalidCharacterError\n                            \n                            \n                                    Private\n                                    Static\n                                REGEX_SPACE_CHARACTERS\n                            \n                            \n                                    Private\n                                    Static\n                                TABLE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decode\n                            \n                            \n                                    Static\n                                encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InvalidCharacterError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (message) {\n\t\tthis.message = message;\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            REGEX_SPACE_CHARACTERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[\\t\\n\\f\\r ]/g\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            TABLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/base64.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encode(input)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/base64.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Base64 {\n\n\n\t/*--------------------------------------------------------------------------*/\n\n\tInvalidCharacterError = function (message) {\n\t\tthis.message = message;\n\t};\n\n\tprivate static error = function (message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new this.InvalidCharacterError(message);\n\t};\n\n\tprivate static TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tprivate static REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tpublic static decode(input): string {\n\t\tinput = String(input)\n\t\t\t.replace(Base64.REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\tBase64.error(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position > (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tpublic static encode(input): string {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\tBase64.error(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position > 18 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) > 10) +\n\t\t\t\tBase64.TABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tBase64.TABLE.charAt((buffer > 2) +\n\t\t\t\tBase64.TABLE.charAt((buffer \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Base64ImageRef.html":{"url":"pipes/Base64ImageRef.html","title":"pipe - Base64ImageRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Base64ImageRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/Base64ImageRef.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        base64ImageRef\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, imageType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/Base64ImageRef.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    imageType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'jpeg'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n/*\n * Convert a Base64 Image string into an embedded Image URL \n * Usage:\n *   value | base64ImageRef {:type}\n * Parameters:\n *   optional image type parameter, default is \"jpeg\"\n*/\n@Pipe({name: 'base64ImageRef'})\nexport class Base64ImageRef implements PipeTransform {\n  transform(value: string, imageType: string = 'jpeg'): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('data:image/'+imageType+';base64,'+value);\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CustomButtonBarDirective.html":{"url":"directives/CustomButtonBarDirective.html","title":"directive - CustomButtonBarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CustomButtonBarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        custombuttonbar\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand') theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deferred.html":{"url":"classes/Deferred.html","title":"class - Deferred","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deferred\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promise\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FourDCollection.html":{"url":"injectables/FourDCollection.html","title":"injectable - FourDCollection","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FourDCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDCollection.ts\n        \n\n            \n                Description\n            \n            \n                This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                currentRecord\n                            \n                            \n                                    Public\n                                filterOptions\n                            \n                            \n                                    Private\n                                fourD\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                models\n                            \n                            \n                                    Public\n                                orderBy\n                            \n                            \n                                    Public\n                                queryString\n                            \n                            \n                                    Public\n                                totalRecordCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColumnListJSON\n                            \n                            \n                                    Public\n                                getRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColumnListJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnListJSON(columns: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:54\n                \n            \n\n\n            \n                \n                    prepares the JSON field description to send to 4D, listing the columns to retrieve\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a JSON string listing the fields/columns to retrieve for each record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecords(query: FourDQuery, columns: Array, startRec: number, numOfRecords: number, filter: string, orderby: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDCollection.ts:103\n                \n            \n\n\n            \n                \n                    Retrieves a list of records using a query string \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FourDQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        the FourDQuery object that defines the query to be used for retrieving from 4D\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n\n                                    \n                                \n                                \n                                    startRec\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        the starting record number to retrieve, used for paging.\n\n                                    \n                                \n                                \n                                    numOfRecords\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        -1\n                                    \n\n                                    \n                                        the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional, FourDQuery to further filter records to he retrieved\n\n                                    \n                                \n                                \n                                    orderby\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        optional order By clause to retrieve records in a set order.  in the format:    >table.field : to sort records by table.field in ascending order    \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:29\n                            \n                        \n\n                \n                    \n                        the default list of field/column names to be populated on each Collection record data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRecord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:32\n                            \n                        \n\n                \n                    \n                        holds current record from the current selection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:26\n                            \n                        \n\n                \n                    \n                        default filter to be applied on all queries \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fourD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:37\n                            \n                        \n\n                \n                    \n                        injected FourDInterface service \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:18\n                            \n                        \n\n                \n                    \n                        the model this collection is based on \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:20\n                            \n                        \n\n                \n                    \n                        array of models in the collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orderBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:22\n                            \n                        \n\n                \n                    \n                        default order by string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FourDQuery\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:24\n                            \n                        \n\n                \n                    \n                        default query string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalRecordCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDCollection.ts:34\n                            \n                        \n\n                \n                    \n                        holds the total # of records found on the latest query \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/js44D/JSFourDCollection.ts:160\n                                \n                            \n                    \n                        \n                                returns the length of the Collection, or the # of records loaded in\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDModel } from './JSFourDModel';\n\n/**\n * This class represents a Collection of FourDModels and provides functionality to populate the Collection, fetching records from a 4D Database\n */\n@Injectable()\nexport class FourDCollection {\n\n    //\n    // FourDCollection properties\n    //\n    /** the model this collection is based on */\n    public model: any;\n    /** array of models in the collection */\n    public models: Array = [];\n    /** default order by string */\n    public orderBy: string;\n    /** default query string */\n    public queryString: FourDQuery = null;\n    /** default filter to be applied on all queries */\n    public filterOptions: string;\n\n    /** the default list of field/column names to be populated on each Collection record data */\n    public columns: Array = [];\n\n    /** holds current record from the current selection */\n    public currentRecord: FourDModel;\n    /** holds the total # of records found on the latest query */\n    public totalRecordCount = 0;\n\n    /** injected FourDInterface service */\n    private fourD: FourDInterface;\n\n    //\n    // constructor: initialize collection properties\n    //\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n    /**\n     * prepares the JSON field description to send to 4D, listing the columns to retrieve\n     * \n     *  @param columns a string Array with the list of field/column names to retrieve for each record; if null, the default list of columns defined in the Collection will be retrieved\n     * \n     *  @returns a JSON string listing the fields/columns to retrieve for each record\n     */\n    public getColumnListJSON(columns: Array): string {\n        if (!columns) { columns = this.columns; }\n        const colList: Array = [];\n        const modelDef = (this.model);\n        let theModel: FourDModel = (new modelDef());\n        let fld: any;\n        for (const col of columns) {\n            if (typeof (col) === 'string') {\n                if (col.indexOf('.') > 0) { // is this a longname field?\n                    colList.push({ name: col.substr(col.indexOf('.') + 1), field: col });\n                } else { // nope, so let's see if we have it in our datamodel\n                    fld = theModel.getFieldProperties(col);\n                    if (fld) { // field in our datamodel, use its properties\n                        if (fld.formula) {\n                            colList.push({ name: fld.name, formula: fld.formula });\n                        } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                    }\n                }\n            } else if (col.field) {\n                theModel = (new modelDef());\n                fld = theModel.getFieldProperties(col.field);\n                if (fld) {\n                    if (fld.formula) {\n                        colList.push({ name: fld.name, formula: fld.formula });\n                    } else if (fld.longname) { colList.push({ name: fld.name, field: fld.longname }); }\n                }\n            } else {\n                if (col.formula) {\n                    colList.push({ name: col.name, formula: col.formula });\n                } else if (fld.longname) { colList.push({ name: col.name, field: col.longname }); }\n            }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Retrieves a list of records using a query string \n     * \n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *  \n     * @returns returns a Promise for the database operation, whose result is an Array of FourDModel records returned by 4D\n     */\n    public getRecords(query: FourDQuery = null, columns: Array = null, startRec: number = 0, numOfRecords: number = -1, filter: string = null, orderby: string = null): Promise> {\n        if (!query) {\n            query = this.queryString;\n        }\n        if (columns) {\n            this.columns = columns;\n        }\n        if (!filter || filter === '') {\n            filter = this.filterOptions;\n        }\n        if (!orderby || orderby === '') {\n            orderby = this.orderBy;\n        }\n\n        const body: any = { Username: FourDInterface.currentUser };\n        const modelDef = (this.model);\n        let newModel: FourDModel = (new modelDef());\n        body.TableName = newModel.tableName;\n        body.StartRec = startRec;\n        body.NumRecs = numOfRecords;\n\n        body.QueryString = JSON.stringify(query);\n        body.Columns = Base64.encode(Utf8.utf8encode((columns) ? this.getColumnListJSON(columns) : this.getColumnListJSON(newModel.getColumnList())));\n\n        if (filter) { body.FilterOptions = filter; }\n        if (orderby) { body.OrderBy = orderby; }\n\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetRecords', body)\n                .subscribe(resultJSON => {\n                    this.totalRecordCount = 0;\n                    this.models = [];\n                    if (resultJSON && resultJSON['selected'] && resultJSON['records']) {\n                        this.totalRecordCount = resultJSON['selected'];\n                        const recList: Array = resultJSON['records'];\n                        recList.forEach(record => {\n                            newModel = (new modelDef());\n                            newModel.populateModelData(record);\n                            newModel.clearRecordDirtyFlag();\n                            this.models.push(newModel);\n                        });\n                    }\n\n                    resolve(this.models);\n                },\n                error => {\n                    console.log('error:' + error);\n                    reject(error);\n                });\n        });\n\n    }\n\n    /**\n     * returns the length of the Collection, or the # of records loaded in\n     */\n    public get length(): number {\n        return this.models.length;\n    }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FourDDateToString.html":{"url":"pipes/FourDDateToString.html","title":"pipe - FourDDateToString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FourDDateToString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/FourDDateToString.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fourDDateToString\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/FourDDateToString.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/*\n * Convert a 4D Date string into Locale Date String \n * Usage:\n *   value | fourDDateToLocaleString \n * \n*/\n@Pipe({name: 'fourDDateToString'})\nexport class FourDDateToString implements PipeTransform {\n    transform(value): string {\n        if (value) {\n            if (typeof (value) === 'string' && value !== '') {\n                const date = new Date(value.replace(/-/g, '\\/'));\n                return date.toLocaleDateString();\n            } else return value.toLocaleDateString();\n        } else return ''; // handle case where date field is null/undefined\n      }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDDropDown.html":{"url":"components/FourDDropDown.html","title":"component - FourDDropDown","body":"\n                   \n\n\n\n\n\n  Components\n  FourDDropDown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDDropDown.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-dropdown\n            \n\n\n            \n                styles\n                .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n            \n\n            \n                template\n                \n    {{item}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isItemSelected\n                            \n                            \n                                    Private\n                                loadListFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listName\n                            \n                            \n                                listOptions\n                            \n                            \n                                selectedValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listOptions\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDDropDown.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisItemSelected(item: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadListFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadListFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDDropDown.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-dropdown',\n    styles: [`.fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            `],\n    template: `\n        \n            {{item}}\n        \n       `\n})\n\n@Injectable()\nexport class FourDDropDown implements AfterViewInit {\n    @Input() public listName: string;\n    @Input() public selectedValue: string;\n    @Input() public listOptions: Array = [];\n\n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadListFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(user => {\n                this.loadListFrom4D();\n            })\n        }\n    }\n\n    isItemSelected(item: string): string {\n        return (item === this.selectedValue) ? 'selected' : '';\n    }\n\n    private loadListFrom4D() {\n        if (this.listName) {\n            this.fourD.get4DList(this.listName)\n                .then((values) => {\n                    this.listOptions = ['', ...values];\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n    \n            .fourDDropdown {\n                margin: inherit;\n                width: inherit;\n                padding: inherit;\n                font-size: inherit;\n                border: 1px solid #ccc;\n                height: inherit;\n                }\n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{item}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDDropDown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FourDModule.html":{"url":"modules/FourDModule.html","title":"module - FourDModule","body":"\n                   \n\n\n\n\n    Modules\n    FourDModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fourD.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FourDCollection\n                        \n                        \n                            FourDInterface\n                        \n                        \n                            FourDModel\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDInterface } from './js44D/JSFourDInterface';\nimport { FourDModel } from './js44D/JSFourDModel';\nimport { FourDCollection } from './js44D/JSFourDCollection';\n\n@NgModule({\n      imports: [HttpClientModule],\n      providers: [HttpClient, FourDInterface, FourDModel, FourDCollection],\n      exports: [HttpClientModule]\n})\nexport class FourDModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FourDQuery.html":{"url":"classes/FourDQuery.html","title":"class - FourDQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FourDQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                Describes the properties of a 4D Query String  - see RESTApi documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                custom\n                            \n                            \n                                    Optional\n                                intersection\n                            \n                            \n                                    Optional\n                                join\n                            \n                            \n                                    Optional\n                                joinFK\n                            \n                            \n                                    Optional\n                                joinPK\n                            \n                            \n                                    Optional\n                                joinTable\n                            \n                            \n                                    Optional\n                                query\n                            \n                            \n                                    Optional\n                                sql\n                            \n                            \n                                    Optional\n                                union\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:685\n                            \n                        \n\n                \n                    \n                        Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            intersection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:683\n                            \n                        \n\n                \n                    \n                        An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            join\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:687\n                            \n                        \n\n                \n                    \n                        Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinFK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:693\n                            \n                        \n\n                \n                    \n                        A join query property. The main table foreign key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinPK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:691\n                            \n                        \n\n                \n                    \n                        A join query property. The join table primary key used to establish the join \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            joinTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:689\n                            \n                        \n\n                \n                    \n                        A join query property. This is the join table, a table name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:677\n                            \n                        \n\n                \n                    \n                        Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sql\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:679\n                            \n                        \n\n                \n                    \n                        Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            union\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:681\n                            \n                        \n\n                \n                    \n                        An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FourDRegistryInput.html":{"url":"components/FourDRegistryInput.html","title":"component - FourDRegistryInput","body":"\n                   \n\n\n\n\n\n  Components\n  FourDRegistryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/fourDRegistryInput.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fourd-registry-input\n            \n\n\n\n            \n                template\n                \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanValue\n                            \n                            \n                                    Private\n                                originalValue\n                            \n                            \n                                    Public\n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadValueFrom4D\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                defaultValue\n                            \n                            \n                                inputType\n                            \n                            \n                                parameterValue\n                            \n                            \n                                selectorValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        className\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parameterValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectorValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadValueFrom4D\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadValueFrom4D()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/controls/fourDRegistryInput.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            originalValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            textValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/fourDRegistryInput.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Injectable, AfterViewInit } from '@angular/core';\n\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'fourd-registry-input',\n    template: `\n        \n            \n            \n        \n       `\n})\n\n@Injectable()\nexport class FourDRegistryInput implements AfterViewInit {\n\n    @Input() public className: string;\n    @Input() public parameterValue: string;\n    @Input() public selectorValue: string;\n    @Input() public defaultValue: string;\n    @Input() public inputType: string;\n    \n    public textValue: string = '';\n    public booleanValue: boolean = false;\n    private originalValue: string = '';\n    \n    constructor(private fourD: FourDInterface) { }\n\n    ngAfterViewInit() {\n        if (FourDInterface.authentication !== undefined && FourDInterface.authentication !== null) {\n            this.loadValueFrom4D();\n        } else {\n            FourDInterface.userHasSignedIn.subscribe(() => {\n                this.loadValueFrom4D();\n            })\n        }\n    }\n\n    public valueChanged() {\n        if (this.inputType === 'checkbox') {\n            this.textValue = (this.booleanValue)?'Y':'N';\n        }\n        if (this.originalValue != this.textValue) {\n            this.fourD.setRegistryValue(this.className, this.parameterValue, this.textValue, this.selectorValue)\n                .then (v => {this.originalValue = this.textValue;});\n        }\n    }\n\n    private loadValueFrom4D() {\n        if (this.className && this.className != '' && this.parameterValue && this.parameterValue != '') {\n            this.fourD.getRegistryValue(this.className, this.parameterValue, this.defaultValue, this.selectorValue)\n                .then((value) => {\n                    this.originalValue = this.textValue = value;\n                    this.booleanValue = (value.toUpperCase() == \"Y\");\n                })\n                .catch((reason) => { console.log('error', reason); });\n        }\n\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'FourDRegistryInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModal.html":{"url":"classes/ICustomModal.html","title":"class - ICustomModal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModal.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ICustomModal { }\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICustomModalComponent.html":{"url":"classes/ICustomModalComponent.html","title":"class - ICustomModalComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ICustomModalComponent.ts\n        \n\n            \n                Description\n            \n            \n                A Type used as a binding key for dialog window Components\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                beforeClose\n                            \n                            \n                                    Optional\n                                beforeDismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeClose\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeClose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:18\n                \n            \n\n\n            \n                \n                    Invoked before a modal is closed, return true to cancel closing.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            beforeDismiss\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ICustomModalComponent.ts:13\n                \n            \n\n\n            \n                \n                    Invoked before a modal is dismissed, return true to cancel dismissal.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * A Type used as a binding key for dialog window Components\n */\n\nexport class ICustomModalComponent {\n    dialog: ModalDialogInstance;\n\n    /**\n     * Invoked before a modal is dismissed, return true to cancel dismissal.\n     */\n    beforeDismiss?(): boolean;\n\n    /**\n     * Invoked before a modal is closed, return true to cancel closing.\n     */\n    beforeClose?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldDescription.html":{"url":"interfaces/IFieldDescription.html","title":"interface - IFieldDescription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFieldDescription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDModel.ts\n        \n\n            \n                Description\n            \n            \n                This is the description for each field in a Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        formula\n                                \n                                \n                                        indexed\n                                \n                                \n                                        isrelated\n                                \n                                \n                                        joinFK\n                                \n                                \n                                        joinPK\n                                \n                                \n                                        length\n                                \n                                \n                                        list\n                                \n                                \n                                        longname\n                                \n                                \n                                        name\n                                \n                                \n                                        readonly\n                                \n                                \n                                        relatesTo\n                                \n                                \n                                        required\n                                \n                                \n                                        subTable\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    not used \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formula\n                                    \n                                \n                                \n                                    \n                                        formula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a calculated value, this is a 4D expresstion that returns the field contents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexed\n                                    \n                                \n                                \n                                    \n                                        indexed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates that the field is indexed on 4D side \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isrelated\n                                    \n                                \n                                \n                                    \n                                        isrelated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field comes from a related table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinFK\n                                    \n                                \n                                \n                                    \n                                        joinFK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the foreign key field in the main table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        joinPK\n                                    \n                                \n                                \n                                    \n                                        joinPK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable, this is the primary key field in the related many table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if an alpha field, the field length as defined in the 4D Structure \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the choice list associated to the field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longname\n                                    \n                                \n                                \n                                    \n                                        longname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field dot long name, in the format 'table.field', applicable if a database field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field name, must be unique in the Data Model \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates field is read only, and can't me modified \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatesTo\n                                    \n                                \n                                \n                                    \n                                        relatesTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a foreign key that relates to a one table, this is the related one field name in dot long format \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is a required field, cannot be empty or null \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTable\n                                    \n                                \n                                \n                                    \n                                        subTable:         FourDModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FourDModel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if field is a subtable (related many table), this is the FourDModel that represents records in that table \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    field is unique \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\nimport { FourDInterface, FourDQuery } from './JSFourDInterface';\nimport { FourDCollection } from './JSFourDCollection';\n\n/**\n * This is the description for each field in a Data Model\n */\nexport interface IFieldDescription {\n    /** the field name, must be unique in the Data Model */\n    name: string;\n    /** the field dot long name, in the format 'table.field', applicable if a database field */\n    longname: string;\n    /** the field type, possible values are: string, number, Number, Date, time, boolean, blob, json, picture */\n    type: string;\n    /** if field is a calculated value, this is a 4D expresstion that returns the field contents */\n    formula: string;\n    /** if field is a subtable (related many table), this is the FourDModel that represents records in that table */\n    subTable: FourDModel;\n    /** not used */\n    className: string;\n    /** if field is a subtable, this is the foreign key field in the main table */\n    joinFK: string;\n    /** if field is a subtable, this is the primary key field in the related many table */\n    joinPK: string;\n    /** indicates field comes from a related table */\n    isrelated: boolean;\n    /** if field is a foreign key that relates to a one table, this is the related one field name in dot long format */\n    relatesTo: string;\n    /** indicates field is read only, and can't me modified */\n    readonly: boolean;\n    /** the choice list associated to the field */\n    list: string;\n    /** field is a required field, cannot be empty or null */\n    required: boolean;\n    /** indicates that the field is indexed on 4D side */\n    indexed: boolean;\n    /** field is unique */\n    unique: boolean;\n    /** if an alpha field, the field length as defined in the 4D Structure */\n    length: number;\n}\n\n/**\n * Individual 4D Datamodel that replicates a 4D Table's structure and provides a CRUD API to 4D data\n */\n@Injectable()\nexport class FourDModel {\n    /** 4D's Table name */\n    public tableName = '';\n    /** 4D's table number */\n    public tableNumber = 0;\n    /** Table's primary key field name */\n    public primaryKey_: string;\n\n    /** record number field/attribute name, usually '_recnum' */\n    public idAttribute = '_recnum';\n\n    /** Table definition, array describing all fields in the Data Model and how they map to the 4D Structure */\n    public fields: Array = [];\n\n    /** callback method to be executed on 4D side before a Save operation */\n    public fourdSaveCallbackMethod_: string;\n    /** callback method to be executed on 4D side before a Delete operation */\n    public fourdDeleteCallbackMethod_: string;\n\n    // injected FourDInterface service\n    public fourD: FourDInterface;\n\n    // -----------------------\n    // Private variables\n    // -----------------------\n    // current record number\n    private _recnum = -3;\n    // keeps all attributes for the current model\n    private _attributes: Object = {};\n    // keep a list of modified fields, to optimize Updates, only modified data is set to 4D\n    private _modified: Object = {};\n\n\n    /** \n     * constructor: initialize model properties\n    */\n    constructor() {\n        // inject FourDInterface\n        this.fourD = FourDInterface.interfaceInstance;\n    }\n\n\n    /**\n     * Get a field value\n     */\n    get(field: string): any {\n        return this._attributes[field];\n    }\n\n    /**\n     * Set a field value, updates field modified flag\n     */\n    set(field: string, value: any) {\n        if (this.getFieldProperties(field)) {\n            if (this.getFieldDescription(field).type === 'Date') {\n                if (typeof (value) === 'string' && value !== '') {\n                    value = new Date(value.replace(/-/g, '\\/'));\n                }\n            } else if (this.getFieldDescription(field).type === 'Time') {\n                if (typeof (value) === 'string' && value !== '') {\n                    const hh = +value.substr(0,2);\n                    const mm = +value.substr(3,2);\n                    const ss = +value.substr(6,2);\n                    value = new Date(0,0,0,hh,mm,ss);\n                }\n            }\n            if (this._attributes.hasOwnProperty(field)) {\n                // we are updating an attribute\n                if (this._attributes[field] !== value) {\n                    // make sure value is indeed changing...\n                    this._attributes[field] = value;\n                    this._modified[field] = true; // mark field as modified\n                }\n            } else {\n                // setting a new attribute\n                this._attributes[field] = value;\n                this._modified[field] = true; // mark field as modified\n            }\n        } else {\n            this._attributes[field] = value;\n        }\n    }\n\n    /**\n     * Returns the description for a given field\n     * \n     * @param fieldName the field name to get properties for\n     * \n     * @returns the field name properties, an IFieldDescription instance\n     * \n     */\n    getFieldProperties(fieldName): IFieldDescription {\n        let ret: IFieldDescription = null;\n        for (const col of this.fields) {\n            if (col.name === fieldName) { ret = col; }\n        };\n        return ret;\n    }\n\n\n    /**\n     * Clears up all record fields\n     */\n    clearRecord() {\n        for (const field of this.fields) {\n            switch (field.type) {\n                case 'date':\n                case 'Date':\n                    this[field.name] = null;\n                    break;\n\n                case 'time':\n                case 'Time':\n                    this[field.name] = null;\n                    break;\n\n                case 'boolean':\n                    this[field.name] = false;\n                    break;\n\n                case 'string':\n                case 'text':\n                    this[field.name] = '';\n                    break;\n\n                case 'number':\n                    this[field.name] = 0;\n                    break;\n\n                case 'json':\n                    this[field.name] = {};\n                    break;\n\n                case 'blob':\n                case 'picture':\n                    this[field.name] = null;\n                    break;\n\n                default:\n                    this[field.name] = '';\n                    break;\n            }\n        };\n\n    }\n\n    /**\n     * Serializes record data into its JSON representation as used in 4D\n     *\n     * @param mode can be 'insert' or 'update', if mode is 'update' the JSON string will contain only fields that have been modified\n     * @param noAudit 'no audit' flag to be sent to 4D, if 'true' record audit log will be disabled \n     * \n     * @returns record contents as JSON string\n     *\n     */\n    recordToJSON(mode: string, noAudit: boolean): string {\n        const recordData: Object = { table: this.tableName, recnum: this.recordNumber };\n        // set callback methods\n        if (this.fourdSaveCallbackMethod_) {\n            recordData['saveCallback'] = this.fourdSaveCallbackMethod_; // set save callback method if set\n        }\n\n        if (noAudit) { recordData['noAudit'] = true; }    // disable audit log for this record\n\n        if ((mode === 'update') && this.hasOwnProperty('TimeStamp')) {\n            recordData['timeStamp'] = this['TimeStamp'];\n        } // if updating, add current record's timestamp attribute\n\n        recordData['fields'] = {}; // initialize fields propriety\n        for (const field of this.fields) {\n            const fieldName: string = field.name;\n            if (!this.isCalculatedField(field) &&\n                !this.isSubtable(field) &&\n                !this.isRelatedField(field) &&\n                (!this.isReadOnly(field) || (mode === 'insert')) &&\t\t\t// May/15/09 send all non-read only fields, empty or not\n                (this.isModifiedField(fieldName) || (mode === 'insert'))) { \t// Nov 18/09 send ONLY fields that have indeed been modified\n                let value = '';\n                if (((this[fieldName] !== null) && (this[fieldName] !== undefined)) || (field.type === 'boolean')) {\n                    // send back only fields that do have some value and that belong to the table\n                    // ignore calculated or related fields\n                    switch (field.type) {\n                        case 'Date':\n                        case 'date':\n                            if (typeof(this[fieldName]) === 'string') {\n                                recordData['fields'][field.longname] = this[fieldName]; \n                            } else {\n                                const dateValue: Date = this[fieldName];\n                                value = dateValue.getFullYear().toString();\n                                if (dateValue.getMonth() '; // if blob, wrap data inside a cdata\n                             }\n                             */\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n\n                        default:\n                            recordData['fields'][field.longname] = this[fieldName];\n                            break;\n                    }\n                }\n\n\n            }\n        };\n\n        return JSON.stringify(recordData);\n\n    }\n\n\n    /**\n     * Retrieve a record from 4D and populates the Data Model.\n     *\n     * @param recordNumber the record # to retrieve (optional, it defaults to the currentRecordNumber property)\n     * @param recordID primary key value for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     *    if specified the record is retrieved by querying on its primary key field\n     * @param query query string for the record to retrieve (optional, it defaults to the currentRecordNumber property)\n     * \n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     *\n     */\n    public getRecord(recordNumber: number = null, recordID: string = null, query: FourDQuery = null): Promise {\n        if (query) {\n            // if we have a query, use it...\n        } else if (recordID && FourDInterface.fourdAPIVersion = 0 || this.recordNumber >= 0 || (recordID && FourDInterface.fourdAPIVersion >= '1.18.06.17a' && this.primaryKey_)) {\n            // if we have a record number, use it directly then\n            if (recordNumber >= 0) { this.recordNumber = recordNumber; }\n\n            // build request body with record number to retrieve\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            if (recordID) {\n                body.RecordID = recordID; // if querying record using record ID...             \n            } else {\n                body.RecordNum = this.recordNumber;\n            }\n            body.VariablesList = Base64.encode(Utf8.utf8encode(this.getColumnListJSON()));\n\n            return new Promise((resolve, reject) => {\n                // const me = this;\n                this.fourD.call4DRESTMethod('REST_LoadData', body)\n                    .subscribe(resultJSON => {\n                        this.clearRecord();\n                        this.populateModelData(resultJSON);\n                        this.clearRecordDirtyFlag();\n                        resolve(this);\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n        } else { \n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n\n        }\n\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        const me = this;\n\n        // first we send to query to 4D to get all records that match the query criteria\n        // then if at lest 1 record is returned by 4D, we use it's record number to refresh to complete record contents\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, [this.primaryKey_])\n                .then((reclist) => {\n                    if (records.models.length > 0) {\n                        me.recordNumber = records.models[0].recordNumber; // set the record number and refresh it\n                        me.refresh().then((rec) => { rec.clearRecordDirtyFlag(); resolve(me); }).catch((error) => { reject(error); });\n                    } else { reject('recordNotFound'); }\n                })\n                .catch((error) => { reject(error); });\n        });\n\n\n    }\n\n    /**\n     * Refresh current record, grab a fresh copy from 4D\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public refresh(): Promise {\n        if (this.recordNumber >= 0) {\n            return this.getRecord(this.recordNumber);\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n\n    }\n\n\n    /**\n     * Insert a new record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance. the primary key property is set after the record is inserted\n     *\n     */\n    public insertRecord(): Promise {\n        const body: any = { Username: FourDInterface.currentUser };\n        body.TableName = this.tableName;\n        body.RecordNum = this.recordNumber;\n        if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n        body.Action = 'add';\n        body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('add', false)));\n\n        return new Promise((resolve, reject) => {\n            const me = this;\n            this.fourD.call4DRESTMethod('REST_PostData', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.returnCode === 'OK') {\n                        // insert record went OK, retrieve calculated return code & record ID\n                        me.recordNumber = resultJSON['_recnum'];\n                        if (me.primaryKey_ && me.primaryKey_ !== '') { me[me.primaryKey_] = resultJSON['recordID']; }\n                        me.clearRecordDirtyFlag(); // clean up modified fields\n                        resolve(me);\n                    } else { reject(resultJSON.returnCode); }\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error.text());\n                    });\n        });\n\n\n    }\n\n    /**\n     * Update record in the database.\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public updateRecord(): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdSaveCallbackMethod_) { body.CallBackMethod = this.fourdSaveCallbackMethod_; }\n            body.Action = 'update';\n            body.RecordData = Base64.encode(Utf8.utf8encode(this.recordToJSON('update', false)));\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // update record went OK\n                            me.clearRecordDirtyFlag(); // clean up modified fields\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set!');\n            });\n        }\n    }\n\n    /**\n     * Delete record from the database\n     *\n     * @param cascade true|false indicates if 4D should perform a cascade delete (optional, default=false)\n     *\n     * @returns returns a Promise for the database operation, whose result is the FourDModel instance\n     *\n     */\n    public deleteRecord(cascade: boolean = false): Promise {\n        if (this.recordNumber >= 0) {\n            const body: any = { Username: FourDInterface.currentUser };\n            body.TableName = this.tableName;\n            body.RecordNum = this.recordNumber;\n            if (this.fourdDeleteCallbackMethod_) { body.CallBackMethod = this.fourdDeleteCallbackMethod_; }\n            body.Action = 'delete';\n            if (cascade) { body.cascadeDelete = cascade; }\n\n            return new Promise((resolve, reject) => {\n                const me = this;\n                this.fourD.call4DRESTMethod('REST_PostData', body)\n                    .subscribe(resultJSON => {\n                        if (resultJSON.returnCode === 'OK') {\n                            // delete record went OK\n                            resolve(me);\n                        } else { reject(resultJSON.returnCode); }\n                    },\n                        error => {\n                            console.log('error:' + JSON.stringify(error));\n                            reject(error);\n                        });\n            });\n\n\n\n        } else {\n            return new Promise((resolve, reject) => {\n                reject('No current record number set, and no query specified!');\n            });\n        }\n\n    }\n\n    /**\n     * Populates model with attributes/properties from a json Object\n     *\n     *  @param recordData json object whose properties will be used to populate the Data Model\n     */\n    public populateModelData(recordData: Object) {\n        if (recordData.hasOwnProperty('_recnum')) { this.recordNumber = recordData['_recnum']; }\n        for (const field in recordData) {\n            if (field !== '_recnum' && this.getFieldProperties(field)) {\n                switch (this.getFieldProperties(field).type ) {\n                    case 'json':\n                        this[field] = (recordData[field] && recordData[field] != '')?JSON.parse(recordData[field]):{}; \n                        break;\n                \n                    default:\n                        this[field] = recordData[field];\n                        break;\n                }\n            }\n        }\n\n    }\n\n    public extractModelData(): Object {\n        let data = { _recnum: this._recnum };\n        for (const field of this.fields) {\n            data[field.name] = this[field.name];\n        }\n\n        return data;\n    }\n\n    /**\n     * Retrieves a list of records using a query string\n     *\n     *  @param query the FourDQuery object that defines the query to be used for retrieving from 4D\n     * \t@param columns custom column list to retrieve, JSON array of the columns to retrieve. if informed, only the columns listed will be retrieved instead of the whole record\n     * \t@param startRec the starting record number to retrieve, used for paging.\n     * \t@param numOfRecords the number of records to retrieve, the default -1 will retrieve all records in the resulting query.\n     *  @param filter optional, FourDQuery to further filter records to he retrieved\n     *  @param orderby optional order By clause to retrieve records in a set order.  in the format:    &gt;table.field : to sort records by table.field in ascending order    &lt;table.field : to sort records by table.field in descending order\n     *\n     *\n     * @returns returns a Promise for the database operation, whose result is a FourDCollection with the query results\n     */\n    public getRecords(query: FourDQuery = null,\n        columns: Array = null,\n        startRec: number = 0, numOfRecords: number = -1,\n        filter: string = null,\n        orderby: string = null): Promise {\n        const theModel: any = this.constructor.valueOf();\n        const records: FourDCollection = new FourDCollection();\n        records.model = theModel;\n        return new Promise((resolve, reject) => {\n            records.getRecords(query, (columns) ? columns : this.getColumnList(), startRec, numOfRecords, filter, orderby)\n                .then((reclist) => { resolve(records); })\n                .catch((error) => { reject(error); });\n        });\n\n    }\n\n    /**\n     * Retrieves a set of variables or 4D execute formula values\n     * \n     * @param values an Array of objects with the following format: {formula: 'a 4d formula', value:'the resulting value returned by 4D'}\n     * @param method the name of a 4D method to be called before processing the formulas\n     *\n     * @returns returns a Promise for the database operation, whose result is the values Array populated by 4D\n     */\n    public getValuesFrom4D(values: Array, method: string = ''): Promise> {\n        const body: any = { VariablesList: Base64.encode(Utf8.utf8encode(JSON.stringify(values))) };\n        if (method && method != '') {\n            body.CallbackMethod = method;\n        }\n        return new Promise((resolve, reject) => {\n            // const me = this;\n            this.fourD.call4DRESTMethod('REST_GetValues', body)\n                .subscribe(result => {\n                    resolve(result);\n                },\n                    error => {\n                        console.log('error:' + JSON.stringify(error));\n                        reject(error);\n                    });\n        });\n\n    }\n    /**\n     * Get the current record's record number\n     * \n     *  @returns current record number (4D's record number, equivalent to ROWID)\n     *\n     */\n    public get recordNumber(): number {\n        return this._recnum;\n    }\n    public set recordNumber(v: number) { this._recnum = v; }\n\n    /**\n     * Checks to see if a record is currently loaded\n     *\n     * @returns true if a record is loaded into this FourDModel instance\n     *\n     */\n    public isRecordLoaded(): boolean {\n        return (this.recordNumber >= 0);\n    }\n\n\n    /**\n     * Clears record modified flag.\n     * \n     * This can be used when one changes a record programmatically, but does not want to set the record modified flag.\n     * For example on record initialization.\n     *\n     */\n    public clearRecordDirtyFlag() {\n        this._modified = {};\t\t\t\t\t// clear modified fields list\n    }\n\n\n    /**\n     * Check if current record has been modified.\n     *\n     * @returns true indicates that record contents have been modified.\n     *\n     */\n    public recordIsDirty(): boolean {\n        for (const field of this.fields) {\n            if (this._modified.hasOwnProperty(field.name)) { return true; }\n        }\n        return false;\n    }\n\n\n    /**\n     * Prepares the record's JSON field description to send to 4D\n     * \n     * @returns JSON string representing all fields in the Data Model\n     */\n    public getColumnListJSON(): string {\n        const colList: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (col.formula) {\n                colList.push({ name: col.name, formula: col.formula });\n            } else if (col.subTable) {\n                const subFields: Array = [];\n                for (const sub of col.subTable.fields) {\n                    if (sub.formula) { // add support for formulas in subfields\n                        subFields.push({ name: sub.name, formula: sub.formula });\n                    } else {\n                        subFields.push({ name: sub.name, field: sub.longname });\n                    }\n                };\n                colList.push({\n                    name: col.name,\n                    subTable: col.subTable.tableName,\n                    joinFK: col.joinFK,\n                    joinPK: col.joinPK,\n                    subFields: subFields\n                });\n\n            } else if (col.longname) { colList.push({ name: col.name, field: col.longname }); }\n        }\n\n        return JSON.stringify(colList);\n\n    }\n\n    /**\n     * Gets a list of fields in the Data Model\n     * \n     * @param includeSubTables if 'true', includes fields in subtables defined in the Data Model\n     * \n     * @returns an array with all fields defined for this data model\n     */\n    public getColumnList(includeSubTables: boolean = false): Array {\n        const cols: Array = [];\n        const fields: Array = this.fields;\n        for (const col of fields) {\n            if (!this.isSubtable(col) || includeSubTables) {\n                if (col.formula) {\n                    cols.push(col);\n                } else { cols.push(col.name); }\n            }\n        };\n        return cols;\n    }\n\n    /**\n     * Returns a field's longname, given its field name\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field dot longname, as 'table.field'\n     */\n    public getLongname(fieldName: string): string {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field.longname; }\n        }\n\n        // not found, assume table.field\n        return this.tableName + '.' + fieldName;\n    }\n\n    // -----------------------\n    // Private methods\n    // -----------------------\n\n    /**\n     * Returns a field's data model description\n     * \n     * @param fieldName the field name\n     * \n     * @returns the field's iFieldDescription\n     */\n    private getFieldDescription(fieldName: string): IFieldDescription {\n        for (const field of this.fields) {\n            if (field.name === fieldName) { return field; }\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks to see if a field is from a related table\n     *\n     * @param field field description for the Class definition\n     * @return true if field is on a related table\n     *\n     */\n    private isRelatedField(field: IFieldDescription): boolean {\n        return field.isrelated;\n    }\n\n    /**\n     * Checks to see if a field contents have been modified\n     *\n     * @param field field/property name\n     * @returns true if field has been modified\n     *\n     */\n    private isModifiedField(field: string): boolean {\n        return this._modified.hasOwnProperty(field);\n    }\n\n    /**\n     * Checks to see if a field is a calculated field\n     *\n     * @param field field description from the Data Model\n     * \n     * @returns true if field is formula, a calculated field\n     *\n     */\n    private isCalculatedField(field: IFieldDescription): boolean {\n        return (field.formula !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is a related many subtable\n     *\n     * @param field field description from the Data Model\n     * @returna true if field is a related many subtable\n     *\n     */\n    private isSubtable(field: IFieldDescription): boolean {\n        return (field.subTable !== undefined);\n    }\n\n    /**\n     * Checks to see if a field is read only\n     *\n     * @param field field description from the Data Model\n     * @returns true if field is read only\n     *\n     */\n    private isReadOnly(field: IFieldDescription): boolean {\n        return field.readonly;\n    }\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JS44DModule.html":{"url":"modules/JS44DModule.html","title":"module - JS44DModule","body":"\n                   \n\n\n\n\n    Modules\n    JS44DModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_imports\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_JS44DModule_providers\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nFourDModule\n\nFourDModule\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/js44D.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FourDInterface\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FourDModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdvancedQueryComponent\n                        \n                        \n                            Base64ImageRef\n                        \n                        \n                            CustomButtonBarDirective\n                        \n                        \n                            DataGrid\n                        \n                        \n                            FourDDateToString\n                        \n                        \n                            FourDDropDown\n                        \n                        \n                            FourDRegistryInput\n                        \n                        \n                            ListSelectorDialog\n                        \n                        \n                            LoginCmp\n                        \n                        \n                            QueryBand\n                        \n                        \n                            QueryBandDirective\n                        \n                        \n                            QuickFindInput\n                        \n                        \n                            RecordEditWindow\n                        \n                        \n                            RecordList\n                        \n                        \n                            Tab\n                        \n                        \n                            Tabs\n                        \n                        \n                            WebAppContainer\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { FourDModule } from './fourD.module';\nimport { FourDInterface } from './js44D/JSFourDInterface';\n\nimport { QueryBand, CustomButtonBarDirective, QueryBandDirective } from './containers/queryBand';\nimport { AdvancedQueryComponent } from './containers/advancedQuery';\nimport { RecordList } from './containers/recordList';\nimport { RecordEditWindow } from './containers/recordEditWindow';\nimport { Tabs, Tab } from './containers/tabs';\nimport { WebAppContainer } from './containers/webAppContainer';\nimport { FourDDropDown } from './controls/fourDDropDown';\nimport { QuickFindInput } from './controls/quickFindInput';\nimport { DataGrid } from './dataGrid/dataGrid';\nimport { LoginCmp } from './login/login';\nimport { ListSelectorDialog } from './dialogs/listSelectorDialog';\n\nimport { Base64ImageRef } from './pipes/Base64ImageRef.pipe';\nimport { FourDDateToString } from './pipes/FourDDateToString.pipe';\nimport { FourDRegistryInput } from './controls/fourDRegistryInput';\n\n\n@NgModule({\n      imports: [FormsModule, CommonModule, HttpClientModule, FourDModule],\n      declarations: [ \n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      providers: [HttpClient, FourDInterface],\n      exports: [\n            QueryBand, CustomButtonBarDirective, QueryBandDirective, AdvancedQueryComponent,\n            RecordEditWindow, RecordList, Tabs, Tab, WebAppContainer,\n            FourDDropDown, QuickFindInput, FourDRegistryInput,\n            DataGrid,\n            ListSelectorDialog,\n            Base64ImageRef,\n            FourDDateToString,\n            LoginCmp\n      ],\n      entryComponents: [LoginCmp, AdvancedQueryComponent, ListSelectorDialog]\n})\nexport class JS44DModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSelectorDialog.html":{"url":"components/ListSelectorDialog.html","title":"component - ListSelectorDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ListSelectorDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/listSelectorDialog.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                list-selector\n            \n\n\n\n            \n                template\n                \n    \n        {{item}}\n    \n    \n        {{message}}\n        {{buttonText}}\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                            \n                                    Private\n                                selectedIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelection\n                            \n                            \n                                ok\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                itemsList\n                            \n                            \n                                message\n                            \n                            \n                                tipsList\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                                \n                                    width\n                                \n                                \n                                    title\n                                \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, modal: Modal)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : 'Select'\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tipsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelection\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelection(ev)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(list: string[], tips?: string[], message?: string, buttonLabel?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/listSelectorDialog.ts:64\n                \n            \n\n\n            \n                \n                    Show Me - show the list selector dialog and return a Promise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tips\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    buttonLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/listSelectorDialog.ts:54\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n\n                \n                    \n                        setheight(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n\n                \n                    \n                        settitle(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/dialogs/listSelectorDialog.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, OnInit, Input } from '@angular/core';\n\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\n@Component({\n    selector: 'list-selector',\n    template: `\n        \n            \n                {{item}}\n            \n            \n                {{message}}\n                {{buttonText}}\n            \n        \n   `,\n    providers: [Modal]\n})\n\nexport class ListSelectorDialog implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: true,\n        isModal: true,\n        isBlocking: true,\n        title: 'Select...',\n        width: 400, height: 350\n    };\n\n    @Input() public itemsList: string[] = [];\n    @Input() public tipsList: string[] = [];\n    @Input() public buttonText = 'Select';\n    @Input() public message = '';\n\n    public set height(v) { this.config.height = v };\n    public set width(v) { this.config.width = v };\n    public set title(v) { this.config.title = v };\n\n\n    public set modelContentData(v) {\n        this.itemsList = v.list;\n        this.tipsList = v.tips;\n        if (v.buttonLabel) { this.buttonText = v.buttonLabel; }\n        if (v.message) { this.message = v.message; }\n    }\n\n    private config: ModalConfig;\n\n    private selectedIndex = -1;\n\n\n    constructor(public dialog: ModalDialogInstance, private modal: Modal) {\n        this.config = ListSelectorDialog.dialogConfig;\n    }\n\n    /**\n     * Show Me - show the list selector dialog and return a Promise\n     */\n    public show(list: string[], tips?: string[], message?: string, buttonLabel?: string): Promise {\n        if (!tips) { tips = list; }\n\n        return this.modal.open(ListSelectorDialog, { list: list, tips: tips, message: message, buttonLabel: buttonLabel }, this.config);\n    }\n\n    changeSelection(ev) {\n        this.selectedIndex = ev.target.selectedIndex;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(this.selectedIndex);\n    }\n\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item}}                {{message}}        {{buttonText}}    '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSelectorDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginCmp.html":{"url":"components/LoginCmp.html","title":"component - LoginCmp","body":"\n                   \n\n\n\n\n\n  Components\n  LoginCmp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/login/login.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                log-in\n            \n\n\n            \n                styles\n                \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n            \n\n            \n                template\n                    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Static\n                                dialogConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fourDVersion\n                            \n                            \n                                password\n                            \n                            \n                                showError\n                            \n                            \n                                username\n                            \n                            \n                                webAppVersion\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fourDVersion\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        webAppVersion\n                    \n                \n                \n                    \n                        Default value : '1.18.02.16a'\n                    \n                \n                        \n                            \n                                    Defined in src/login/login.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dialogConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/login/login.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/login/login.ts:62\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\n\nimport { FourDInterface, MD5 } from '../js44D/JSFourDInterface';\n\n\n@Component({\n    selector: 'log-in',\n    template: `\n    \n    \n        Welcome, Please Login\n        \n            User Name\n            \n        \n        \n            Password\n            \n        \n        Login\n    \n    Sorry, the username and/or password was incorrect\n\n    4D: {{fourDVersion}}, web: {{webAppVersion}}\n\n\n    `,\n    styles: [`\n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    `]\n})\nexport class LoginCmp implements ICustomModalComponent {\n    public static dialogConfig: ModalConfig = {\n        size: 'sm',\n        selfCentered: true,\n        isResizable: false,\n        isModal: true,\n        isBlocking: true,\n        title: 'Login',\n        width: 1063, height: 667\n    };\n\n    @Input() public username = '';\n    @Input() public password = '';\n    @Input() public showError = false;\n    @Input() public fourDVersion = '';\n    @Input() public webAppVersion = '1.18.02.16a';\n\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            if (parms.hasOwnProperty('version')) {\n                this.webAppVersion = parms['version'];\n            }\n        }\n    }\n\n    constructor(public dialog: ModalDialogInstance, private fourD: FourDInterface) {\n        this.fourD.call4DRESTMethod('REST_GetApplicationVersion', {}, { responseType: 'text' })\n            .subscribe((v) => {\n                this.fourDVersion = v;\n            });\n    }\n\n    login() {\n        // event.preventDefault();\n        const md5pwd: string = MD5.md5(this.password);\n        this.fourD.signIn(this.username, md5pwd.toUpperCase())\n            .then((authentication) => {\n                if (FourDInterface.authentication) {\n                    // console.log('authenticated');\n\n                    this.showError = false;\n                    if (this.dialog) { this.dialog.close('loggedin'); }\n                } else {\n                    console.log('oops');\n                    this.showError = true;\n                }\n            })\n            .catch((e) => {\n                console.log(e);\n                this.showError = true;\n            });\n    }\n}\n\n    \n\n\n    \n            \n    .login {\n        width: 1070px !important;\n        background: url(\"/assets/login_splash.png\");\n        background-repeat: no-repeat;\n        height: 670px !important;\n        padding-left: 200px;\n        padding-top: 200px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Welcome, Please Login                    User Name                                        Password                            Login        Sorry, the username and/or password was incorrect    4D: {{fourDVersion}}, web: {{webAppVersion}}'\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginCmp'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MD5.html":{"url":"classes/MD5.html","title":"class - MD5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MD5\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/JSFourDInterface.ts\n        \n\n            \n                Description\n            \n            \n                MD5 has calculation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hex_chr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add32\n                            \n                            \n                                    Static\n                                cmn\n                            \n                            \n                                    Static\n                                ff\n                            \n                            \n                                    Static\n                                gg\n                            \n                            \n                                    Static\n                                hex\n                            \n                            \n                                    Static\n                                hh\n                            \n                            \n                                    Static\n                                ii\n                            \n                            \n                                    Static\n                                md5\n                            \n                            \n                                    Static\n                                md51\n                            \n                            \n                                    Static\n                                md5blk\n                            \n                            \n                                    Static\n                                md5cycle\n                            \n                            \n                                    Static\n                                rhex\n                            \n                            \n                                    Static\n                                str2rstr_utf8\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hex_chr\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : '0123456789abcdef'.split('')\n                        \n                    \n                        \n                            \n                                    Defined in src/js44D/JSFourDInterface.ts:456\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            add32\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add32(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:627\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            cmn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cmn(q, a, b, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:536\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    q\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ff\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ff(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:541\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            gg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gg(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:545\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hex(x)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:612\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hh(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:549\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ii\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ii(a, b, c, d, x, s, t)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:553\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:617\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md51\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md51(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:557\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5blk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5blk(s)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:592\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            md5cycle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    md5cycle(x, k)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:458\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            rhex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rhex(n)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:603\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2rstr_utf8\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2rstr_utf8(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/JSFourDInterface.ts:636\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Base64 } from './base64';\nimport { Utf8 } from './utf8';\n\n\n//\n// Various Utility Functions useb by the code above\n//\n/**\n * convert object to encoded url string\n */\n\nexport let convertObjectToURL = function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n};\n\n/* tslint:disable: no-use-before-declare */\n/**\n * Calculates hash code from URL string or POST form data\n */\nexport let calculateHash = function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n};\n/* tslint */\n\n\n\n/**\n * Main 4D backend interface code\n */\n// @dynamic\n@Injectable()\nexport class FourDInterface {\n    //\n    // Global Properties\n    //\n    public static interfaceInstance:FourDInterface;\n\n    /**\n     * The Authentication object received from 4D after user sign's in.\n     * \n     * It holds the Session Key, user privileges and attributes.\n     */\n    public static authentication: any;\n\n    /** name of current user logged into 4D */\n    public static currentUser = '';\n    \n    /** ID of current user logged into 4D */\n    public static currentUserID = 0;\n\n    /** password of current user logged into 4D */\n    public static currentUserPassword = '';\n\n    /**\n      * 4D Web Server URL\n      */\n    private static _fourDUrl = 'http://localhost:8080'; // defaults to the initiator URL, can be modified by the main app during development\n    public static get fourDUrl():string {return FourDInterface._fourDUrl}\n    public static set fourDUrl (url) {\n        FourDInterface._fourDUrl = url;\n        if (FourDInterface.interfaceInstance) {\n            FourDInterface.interfaceInstance.call4DRESTMethod('REST_GetAPIVersion',{}, {responseType:'text'})\n            .subscribe((v) => {FourDInterface.fourdAPIVersion = v;});\n        }\n    }\n\n    /**\n     * current FourDREST API version\n     */\n    public static fourdAPIVersion = '';\n\n    /**\n     * current session key used in all http requests\n     */\n    public static sessionKey = '';\n\n    /**\n     * indicates if web app is running standalone or inside a workspace\n     */\n    public static runningInsideWorkspace = false;\n\n    /**\n     * Event emitted when user has successfully signed into 4D\n     */\n    public static userHasSignedIn: EventEmitter = new EventEmitter();\n\n    /** 4D lists entries are cached to optimize traffic to/from 4D */\n    private static _listCache: any = {};\n\n    /** Registry entries are cached to optimize traffic to/from 4D */\n    private static _registryCache: Array = [];\n\n     /**\n      * Inject HTTPClient service we'll use\n      */\n    constructor(@Inject(HttpClient) private httpClient:HttpClient) {\n        FourDInterface.interfaceInstance = this;\n    }\n\n\n    /**\n     * Generic function to call 4D backend using Angular5 HTTPClient. A Session Key and payload hash code with be added to each request as required by FourDRESTApi.\n     * \n     * \t@param fourdMethod 4D method name to call, one of the FourDRESTApi entry points\n     * \t@param body the request body to send to 4D, an object that will be converted to URLSearchParams\n     * \t@param options additional, optional, HTTPClient post options\n     * \n     * @returns returns an Observable for the database operation; caller can subscribe to it and act upon the request completion\n     */\n    public call4DRESTMethod(fourdMethod: string, body: any, options?: any, acceptHeader:string = null): Observable {\n        let contentHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' };\n        if (acceptHeader) {\n            contentHeaders['Accept'] = acceptHeader;\n        } else {\n            contentHeaders['Accept'] = 'text/json;text/html,application/xhtml+xml,application/xml,application/json;q=0.9,image/webp,*/*;q=0.8'; // need all this crap for 4D V15!!\n        }\n\n        if (options) {\n            options.headers = new HttpHeaders(contentHeaders);\n        } else options = { headers: new HttpHeaders(contentHeaders) };\n\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/' + fourdMethod, convertObjectToURL(body), options);\n\n    }\n\n    /**\n     * Call 4D backend REST_ProxyHTTPGet entry point to proxy a URL request thru 4D in order to avoid CORS issues \n     * \n     * \t@param url: the URL request to proxy thru 4D\n     * \n     * @returns returns an Observable for the database operation\n     */\n    public proxyURLThru4D(url: string): Observable {\n        const body: any = { url: Base64.encode(Utf8.utf8encode(url)) };\n        body.Sessionkey = FourDInterface.sessionKey;\n        body.hash = calculateHash(body);\n\n        return this.httpClient.post(FourDInterface.fourDUrl + '/4DAction/REST_ProxyHTTPGet',\n            convertObjectToURL(body), {});\n\n    }\n\n\n    /**\n     * Sign in to 4D backend \n     * \n     * \t@param user: user name\n     * \t@param pwd: MD5 password digest\n     * \n     * @returns returns a Promise that can be subscribed to to handle the request completion; the Promise result is the Authentication object returned by 4D\n     * \n     */\n    public signIn(user, pwd): Promise {\n        FourDInterface.currentUser = user;\n        FourDInterface.currentUserPassword = pwd;\n\n        // clean up previous authentication data\n        FourDInterface.authentication = null; \n        FourDInterface.currentUserID = 0;\n        FourDInterface.sessionKey = ''; \n\n        const body = { username: Base64.encode(Utf8.utf8encode(user)), password: Base64.encode(Utf8.utf8encode(pwd)) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Authenticate', body)\n                .subscribe(resultJSON => {\n                    if (resultJSON.valid) {\n                        FourDInterface.currentUser = user;\n                        FourDInterface.currentUserPassword = pwd;\n                        FourDInterface.authentication = resultJSON.session; // save authentication\n                        FourDInterface.currentUserID = resultJSON.session.options._userID;\n                        FourDInterface.sessionKey = resultJSON.session.key; // and the session ID we'll use from now on...\n\n                        FourDInterface.userHasSignedIn.emit(FourDInterface.currentUser);\n\n                        resolve(FourDInterface.authentication);\n\n                    } else {\n                        reject('Invalid username or password! ==> ' + resultJSON);\n                    }\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                }\n                );\n\n        });\n    }\n\n    /**\n     * Gets the values of a 4D Choice List. 4D lists entries are cached to optimize traffic to/from 4D\n     * \n     * \t@param listName the 4D Choice List name\n     * \n     * @returns returns a Promise for the database operation, whose result is a string Array with all the choice list values\n     * \n     **/\n    public get4DList(listName: string): Promise> {\n        if (FourDInterface._listCache[listName]) {\n            return new Promise((resolve, reject) => { resolve(FourDInterface._listCache[listName]); });\n        }\n\n        const body: any = { list: listName };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Get4DList', body)\n                .subscribe(resultJSON => {\n                    const listValues = resultJSON.values;\n                    FourDInterface._listCache[listName] = listValues;\n                    resolve(listValues);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Update values of a 4D Choice List\n     * \n     * @param listName 4D choice list name\n     * @param listValues array of list values to update on 4D side\n     */\n    public update4DList(listName: string, listItems: Array): Promise {\n        const body: any = { listName: listName, listValues: Base64.encode(Utf8.utf8encode(JSON.stringify({ items: listItems }))) };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_Update4DList', body, { responseType: 'text' })\n                .subscribe(\n                response => { resolve(); },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Retrieve a filtered 4D List from 4C-TV. Used to access a single level of a hierarchical 4D List.\n     * \n      * \n     * @param listName 4D list name\n     * @param selector the hierarchical selector, only items under that selector in the hierarchy will be returned\n     * @returns returns a Promise for the database operation\n     * \n     */\n    public getFiltered4DList(listName: string, selector: string): Promise> {\n\n        const body: any = { Listname: listName, Selector: selector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetFiltered4DList', body)\n                .subscribe(resultJSON => {\n                    resolve(resultJSON.values);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     *  Get current Registry entry value. Registry entries are cached to optimize traffic to/from 4D\n     * \n     * @param theClass the Registry Class to retrieve\n     * @param theParameter the Registry Parameter to retrieve (optional, if blank gets all values for the Registry Class)\n     * @param theDefaultValue a default value to return, in case the Registry entry is not defined in 4D\n     * @param theSelector the Registry Selector to retrieve (optional, if blank gets all values for the Registry Class/Parameter)\n     * \n     * @returns returns a Promise for the database operation\n     * \n     * Retrieved Registry entries are cached in to optimize traffic to/from 4D \n     * \n     */\n    public getRegistryValue(theClass: string,\n        theParameter: string,\n        theDefaultValue: string = '',\n        theSelector: string = ''): Promise {\n        let item: any = {};\n        for (item of FourDInterface._registryCache) {\n            if (item.class === theClass && item.parameter === theParameter && item.selector === theSelector) {\n                return new Promise((resolve, reject) => { resolve(item.registryValue); });\n            }\n        }\n\n        const body: any = { class: theClass, parameter: theParameter, defaultValue: theDefaultValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_GetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    body.registryValue = response;\n                    FourDInterface._registryCache.push(body);\n                    resolve(body.registryValue);\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n\n    /**\n     * Sets a Registry entry value\n     * \n     * @param theClass the Registry Class to set\n     * @param theParameter the Registry Parameter to set\n     * @param theValue a Registry value to set\n     * @param theSelector the Registry Selector to set (optional)\n     * \n    */\n    public setRegistryValue(theClass: string, theParameter: string, theValue: string, theSelector: string = ''): Promise {\n        const body: any = { class: theClass, parameter: theParameter, value: theValue, selector: theSelector };\n\n        return new Promise((resolve, reject) => {\n            this.call4DRESTMethod('REST_SetRegistryValue', body, { responseType: 'text' })\n                .subscribe(\n                response => {\n                    FourDInterface._registryCache = []; // need to reset cache when user changes any registry entry\n                    resolve();\n                },\n                error => {\n                    console.log('error:' + JSON.stringify(error));\n                    reject(error);\n                });\n\n        });\n\n    }\n\n    /**\n     * Converts a DOM date to 4D format (YYYYMMDD).\n     *  \n     * @param theDate a DOM date value\n     * @returns a 4D formatted date string (YYYYMMDD)\n     * \n     */\n    public dateTo4DFormat(theDate: Date): string {\n\n        return (theDate && !isNaN(theDate))?theDate.toJSON().substr(0, 10).replace(/-/g, ''):'00000000';\n    }\n\n    /**\n     * Converts a 4D YMD date to DOM format .\n     *  \n     * @param theDate a 4D date value, formatted as string (YYYYMMDD)\n     * @returns a DOM date \n     * \n     */\n    public dateToDOMFormat(theDate: string): Date {\n        if (theDate && theDate != '') {\n            const dateValue = theDate.substr(0,4)+'/'+theDate.substr(4,2)+'/'+theDate.substr(6,2);\n            return new Date(dateValue);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Converts a DOM Time to 4D format (hh:mm:ss).\n     *  \n     * @param theDate a DOM date-time value\n     * @returns a 4D formatted date string (hh:mm:ss)\n     * \n     */\n    public timeTo4DFormat(theDate: Date): string {\n        if (theDate && !isNaN(theDate)) {\n            let theTime:string = (theDate.getHours() >> (32 - s)), b);\n    }\n\n    static ff(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    static gg(a, b, c, d, x, s, t) {\n        return MD5.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    static hh(a, b, c, d, x, s, t) {\n        return MD5.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    static ii(a, b, c, d, x, s, t) {\n        return MD5.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    static md51(s) {\n        const n = s.length;\n        const state = [1732584193, -271733879, -1732584194, 271733878];\n        let i;\n        for (i = 64; i > 2] |= s.charCodeAt(i) > 2] |= 0x80  55) {\n            MD5.md5cycle(state, tail);\n            for (i = 0; i > 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) > (j * 8 + 4)) & 0x0F]\n                + MD5.hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    static hex(x) {\n        for (let i = 0; i >> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            } else if (x >> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            }\n        }\n        return output;\n    }\n\n}\n\n/**\n * Describes the properties of a 4D Query String  - [see RESTApi documentation](https://github.com/fourctv/FourDRESTApi/wiki/The-JS44D-Query-String)\n */\nexport class FourDQuery {\n    /** Value is a string Array that corresponds to a simple 4D query. The items in the query terms array are similar to 4D Query lines and have the following format: table.field; comparator ; argument; [and, or].  */\n    query?: Array;\n    /** Value is a SQL Where clause string, that is used on a QUERY BY SQL on 4D side */\n    sql?: string;\n    /** An union of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set union */\n    union?: Array;\n    /** An intersection of multiple queries, value is a FourDQuery instances Array. Results from each query are combined in a set intersection */\n    intersection?: Array;\n    /** Value is a string that corresponds to a 4D method name. Method is called to perform the query. Other properties in the FourDQuery instance are sent to the method to determine the query to perform */\n    custom?: string;\n    /** Sets a join between a related tabled; query terms are applied to the join table and joinPK and joinFK establishes the links between the two tables */\n    join?: Array;\n    /** A join query property. This is the join table, a table name */\n    joinTable?: string;\n    /** A join query property. The join table primary key used to establish the join */\n    joinPK?: string;\n    /** A join query property. The main table foreign key used to establish the join */\n    joinFK?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Modal.html":{"url":"injectables/Modal.html","title":"injectable - Modal","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Modal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/providers/Modal.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostViewRef\n                            \n                            \n                                    Static\n                                openDialogList\n                            \n                            \n                                    Public\n                                theDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openInside\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ViewContainerRef, defaultConfig: ModalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultConfig\n                                                  \n                                                        \n                                                                        ModalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog(event, theDialogInstance: ModalDialogInstance)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    theDialogInstance\n                                    \n                                                ModalDialogInstance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(componentType: any, parameters?: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:43\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDialog(component: any, parameters: any, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:143\n                \n            \n\n\n            \n                \n                    Opens a modal window blocking the whole screen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openInside\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openInside(componentType: Type, viewRef: ViewContainerRef, parameters: any, config?: ModalConfig, allowMultiple: boolean, dialogID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/providers/Modal.ts:63\n                \n            \n\n\n            \n                \n                    Opens a modal window inside an existing component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The angular Component to render as modal.\n\n                                    \n                                \n                                \n                                    viewRef\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to block using the modal.\n\n                                    \n                                \n                                \n                                    parameters\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        parameters to be passed to the dialog instance.\n\n                                    \n                                \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A Modal Configuration object.\n\n                                    \n                                \n                                \n                                    allowMultiple\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        indicates if multiple version of the same dialog are allowed.\n\n                                    \n                                \n                                \n                                    dialogID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        a dialog identification token to control multiple occurrences.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hostViewRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            openDialogList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/providers/Modal.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Type,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    Injectable,\n    Optional\n} from '@angular/core';\n\n\nimport { ModalConfig } from '../models/ModalConfig';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n\nlet _config: ModalConfig;\n\n// @dynamic\n@Injectable()\nexport class Modal {\n\n    public static hostViewRef: ViewContainerRef;\n    public static openDialogList = [];\n\n    public theDialog: any;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ViewContainerRef,\n        @Optional() defaultConfig: ModalConfig) {\n        // The Modal class should be an application wide service (i.e: singleton).\n        // This will run once in most applications...\n        // If the user provides a ModalConfig instance to the DI,\n        // the custom config will be the default one.\n        _config = (defaultConfig) ? ModalConfig.makeValid(defaultConfig) : new ModalConfig();\n    }\n\n    /**\n     * Opens a modal window blocking the whole screen.\n     * @param componentType The angular Component to render as modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public open(componentType: any, parameters?: any,\n        config?: ModalConfig, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n        // TODO: appRef.injector.get(APP_COMPONENT) Doesn't work.\n        // When it does replace with the hack below.\n        // let viewRef = this.appRef.element.nativeElement.location;\n        // let viewRef: viewRef = this.appRef['_rootComponents'][0].location;\n\n        return this.openInside(componentType, (Modal.hostViewRef) ? Modal.hostViewRef : this.appRef, parameters, config, allowMultiple, dialogID);\n    }\n\n    /**\n     * Opens a modal window inside an existing component.\n     * @param componentType The angular Component to render as modal.\n     * @param viewRef The element to block using the modal.\n     * @param parameters parameters to be passed to the dialog instance.\n     * @param config A Modal Configuration object.\n     * @param allowMultiple indicates if multiple version of the same dialog are allowed.\n     * @param dialogID a dialog identification token to control multiple occurrences.\n     * @returns Promise\n     */\n    public openInside(componentType: Type, viewRef: ViewContainerRef,\n        parameters: any,\n        config?: ModalConfig,\n        allowMultiple: boolean = false,\n        dialogID: string = ''): Promise {\n\n        if (!allowMultiple) {\n            for (let index = 0; index  { this.closeDialog(event, dialogInstance); }\n        }).data('kendoWindow');\n        if (config.selfCentered) {\n            this.theDialog.center().open();\n        } else { this.theDialog.open(); }\n\n        dialogInstance.contentRef = dialogComponentRef;\n        dialogInstance.kendoDialog = this.theDialog;\n\n        // trick to avoid angular2 error \"Expression has changed after it was checked\"\n        dialogComponentRef.changeDetectorRef.detectChanges(); // need this to avoid NG2 error/warning\n\n        // if multiples not allowed, save this instance\n        if (!allowMultiple) {\n            const id = (dialogID && dialogID !== '') ? dialogID : componentType['name'];\n            Modal.openDialogList.push({ component: id, dialog: dialogInstance });\n        }\n\n        return dialogInstance.result;\n\n    }\n\n    public closeDialog(event, theDialogInstance:ModalDialogInstance) {\n        // console.log(event, theDialog);\n        for (let index = 0; index \n     */\n    public openDialog(component: any, parameters: any, allowMultiple: boolean = false, dialogID: string = ''): Promise {\n\n        return this.open(component, parameters, component.dialogConfig, allowMultiple, dialogID);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalConfig.html":{"url":"injectables/ModalConfig.html","title":"injectable - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalConfig.ts\n        \n\n            \n                Description\n            \n            \n                A configuration definition object.\nInstruction for how to show a modal.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                customStyle\n                            \n                            \n                                height\n                            \n                            \n                                isBlocking\n                            \n                            \n                                isDraggable\n                            \n                            \n                                isModal\n                            \n                            \n                                isResizable\n                            \n                            \n                                keyboard\n                            \n                            \n                                minHeight\n                            \n                            \n                                minWidth\n                            \n                            \n                                position\n                            \n                            \n                                selfCentered\n                            \n                            \n                                size\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                makeValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalConfig.ts:86\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeValid(config: ModalConfig, defaultConfig?: ModalConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalConfig.ts:67\n                \n            \n\n\n            \n                \n                    Makes a ModalConfig instance valid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    defaultConfig\n                                    \n                                                ModalConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A Default config to use as master, optional.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModalConfig\n\n                    \n                    \n                        ModalConfig The same config instance sent.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Close']\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customStyle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:24\n                            \n                        \n\n                \n                    \n                        Width of the modal.\nused only if size is 'custom'.\nNOTE: No validation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:31\n                            \n                        \n\n                \n                    \n                        Describes if the modal is blocking modal.\nA Blocking modal is not closable by clicking outside of the modal window.\nDefaults to false.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDraggable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResizable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array | number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:39\n                            \n                        \n\n                \n                    \n                        Keyboard value/s that close the modal.\nAccepts either a single numeric value or an array of numeric values.\nA modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\nDefaults to 27, set null implicitly to disable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 100, left: 100 }\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selfCentered\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:17\n                            \n                        \n\n                \n                    \n                        Size of the modal.\n'lg', 'sm' or 'custom'.\nNOTE: No validation.\nDefault to 'lg'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalConfig.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nlet _defaultConfig: ModalConfig;\n\n\n/**\n * A configuration definition object.\n * Instruction for how to show a modal.\n */\n@Injectable()\nexport class ModalConfig {\n    /**\n     * Size of the modal.\n     * 'lg', 'sm' or 'custom'.\n     * NOTE: No validation.\n     * Default to 'lg'\n     */\n    size: string;\n\n    /**\n     * Width of the modal.\n     * used only if size is 'custom'.\n     * NOTE: No validation.\n     */\n    customStyle: string;\n\n    /**\n     * Describes if the modal is blocking modal.\n     * A Blocking modal is not closable by clicking outside of the modal window.\n     * Defaults to false.\n     */\n    isBlocking: boolean;\n\n    /**\n     * Keyboard value/s that close the modal.\n     * Accepts either a single numeric value or an array of numeric values.\n     * A modal closed by a keyboard stroke will result in a 'reject' notification from the promise.\n     * Defaults to 27, set `null` implicitly to disable.\n     */\n    keyboard: Array | number;\n\n    width: number = null;\n    minWidth = 50;\n\n    height: number = null;\n    minHeight = 50;\n\n    position = { top: 100, left: 100 };\n\n    selfCentered = true;\n\n    isModal = true;\n\n    isDraggable = true;\n\n    isResizable = true;\n\n    title = '';\n\n    actions: Array = ['Close'];\n\n    /**\n      * Makes a ModalConfig instance valid.\n      * @param config\n      * @param defaultConfig A Default config to use as master, optional.\n      * @returns ModalConfig The same config instance sent.\n      */\n    static makeValid(config: ModalConfig, defaultConfig?: ModalConfig) {\n        defaultConfig = (defaultConfig) ? defaultConfig : _defaultConfig;\n\n        if (!config.size) { config.size = defaultConfig.size; }\n\n        if (config.isBlocking !== false) { config.isBlocking = true; }\n\n        if (config.keyboard !== null) {\n            if (Array.isArray(>config.keyboard)) {\n                config.keyboard = (>config.keyboard).length === 0\n                    ? defaultConfig.keyboard : config.keyboard;\n            } else if (!isNaN(config.keyboard)) {\n                config.keyboard = [config.keyboard];\n            } else {\n                config.keyboard = defaultConfig.keyboard;\n            }\n        }\n\n        return config;\n    }\n\n    constructor() {\n        this.size = 'ls';\n        this.isBlocking = true;\n        this.keyboard = [27];\n    }\n\n\n}\n\n_defaultConfig = new ModalConfig();\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalDialogInstance.html":{"url":"injectables/ModalDialogInstance.html","title":"injectable - ModalDialogInstance","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalDialogInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/models/ModalDialogInstance.ts\n        \n\n            \n                Description\n            \n            \n                API to an open modal window.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _backdropRef\n                            \n                            \n                                    Private\n                                _bootstrapRef\n                            \n                            \n                                    Private\n                                _resultDefered\n                            \n                            \n                                contentRef\n                            \n                            \n                                    Public\n                                inElement\n                            \n                            \n                                kendoDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismiss\n                            \n                            \n                                    Private\n                                dispose\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    backdropRef\n                                \n                                \n                                    bootstrapRef\n                                \n                                \n                                    result\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(result: any)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:64\n                \n            \n\n\n            \n                \n                    Close the modal with a return value, i.e: result.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:82\n                \n            \n\n\n            \n                \n                    Close the modal without a return value, i.e: cancelled.\nThis call is automatically invoked when a user either:\n- Presses an exit keyboard key (if configured).\n- Clicks outside of the modal window (if configured).\nUsually, dismiss represent a Cancel button or a X button.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispose()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:56\n                \n            \n\n\n            \n                \n                    set the dialog title\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _backdropRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bootstrapRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resultDefered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:28\n                            \n                        \n\n                \n                    \n                        States if the modal is inside a specific element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kendoDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        backdropRef\n                    \n                \n\n\n                \n                    \n                        setbackdropRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bootstrapRef\n                    \n                \n\n\n                \n                    \n                        setbootstrapRef(value)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n\n                \n                    \n                        getresult()\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/models/ModalDialogInstance.ts:49\n                                \n                            \n                    \n                        \n                                A Promise that is resolved on a close event and rejected on a dismiss event.\n\n\n                                \n                                \n                                \n                                    Returns :     Promise\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentRef, Injectable } from '@angular/core';\n\n\nclass Deferred {\n\n    promise: Promise;\n    resolve: (value?: T | PromiseLike) => void;\n    reject: (reason?: any) => void;\n\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n/**\n * API to an open modal window.\n */\n@Injectable()\nexport class ModalDialogInstance {\n    contentRef: ComponentRef;\n\n    kendoDialog: any;\n    /**\n     * States if the modal is inside a specific element.\n     */\n    public inElement: boolean;\n\n    private _bootstrapRef: ComponentRef;\n    private _backdropRef: ComponentRef;\n    private _resultDefered: any;\n\n    constructor() {\n        this._resultDefered = new Deferred(); // PromiseWrapper.completer();\n    }\n\n    set backdropRef(value: ComponentRef) {\n        this._backdropRef = value;\n    }\n    set bootstrapRef(value: ComponentRef) {\n        this._bootstrapRef = value;\n    }\n\n    /**\n     * A Promise that is resolved on a close event and rejected on a dismiss event.\n     * @returns Promise|any|*|Promise\n     */\n    get result(): Promise {\n        return this._resultDefered.promise;\n    }\n\n    /**\n     * set the dialog title\n     */\n    setTitle(title: string) {\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.title(title);\n    }\n\n    /**\n     *  Close the modal with a return value, i.e: result.\n     */\n    close(result: any = null) {\n        if (this.contentRef && this.contentRef.instance) {\n            if (this.contentRef.instance.beforeClose &&\n                this.contentRef.instance.beforeClose() === true) { return; }\n            //        this.dispose();\n            const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.close();\n        }\n        this._resultDefered.resolve(result);\n    }\n\n    /**\n     *  Close the modal without a return value, i.e: cancelled.\n     *  This call is automatically invoked when a user either:\n     *  - Presses an exit keyboard key (if configured).\n     *  - Clicks outside of the modal window (if configured).\n     *  Usually, dismiss represent a Cancel button or a X button.\n     */\n    dismiss() {\n        if (this.contentRef.instance.beforeDismiss &&\n            this.contentRef.instance.beforeDismiss() === true) { return; }\n//        this.dispose();\n        const dialog = $(this.contentRef.location.nativeElement).data('kendoWindow');\n        dialog.close();\n        this._resultDefered.reject();\n    }\n\n    private dispose() {\n        if (this._bootstrapRef) { this._bootstrapRef.destroy(); }\n        if (this._backdropRef) { this._backdropRef.destroy(); }\n        if (this.contentRef) { this.contentRef.destroy(); }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Modal\n                        \n                        \n                            ModalDialogInstance\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OKOnlyModal\n                        \n                        \n                            YesNoModal\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // angular\nimport { NgModule } from '@angular/core';\n\nimport { ModalDialogInstance } from './angular2-modal/models/ModalDialogInstance';\nimport { Modal } from './angular2-modal/providers/Modal';\nimport { OKOnlyModal } from './angular2-modal/commonModals/okOnlyModal';\nimport { YesNoModal } from './angular2-modal/commonModals/yesNoModal';\nimport { ICustomModal } from './angular2-modal/models/ICustomModal';\n\n@NgModule({\n      declarations: [\n            OKOnlyModal, YesNoModal\n      ],\n      exports: [\n            OKOnlyModal, YesNoModal\n      ],\n      entryComponents: [OKOnlyModal, YesNoModal],\n      providers: [Modal, ModalDialogInstance, ICustomModal]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OKOnlyContent.html":{"url":"classes/OKOnlyContent.html","title":"class - OKOnlyContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OKOnlyContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/okOnlyModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                okText\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, okText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        okText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            okText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OKOnlyModal.html":{"url":"components/OKOnlyModal.html","title":"component - OKOnlyModal","body":"\n                   \n\n\n\n\n\n  Components\n  OKOnlyModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/okOnlyModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/okOnlyModal.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OKOnlyContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/okOnlyModal.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class OKOnlyContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public okText: string = 'OK'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.okText}}\n        `\n})\nexport class OKOnlyModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: OKOnlyContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n    constructor(dialog: ModalDialogInstance) {\n        this.dialog = dialog;\n    }\n\n    ok() {\n        this.dialog.close(true);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.okText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'OKOnlyModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryBand.html":{"url":"components/QueryBand.html","title":"component - QueryBand","body":"\n                   \n\n\n\n\n\n  Components\n  QueryBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/queryBand.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                query-band\n            \n\n\n            \n                styles\n                \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n            \n\n            \n                template\n                \n    \n        \n        \n        \n        \n            \n                Select Highlighted\n                \n                Reuse a Saved Search\n                Restore a Saved Record Set\n                Combine Searches -->\n                \n                Save Current Search\n                Save Record Set\n                \n                Manage Saved Searches\n                Manage Saved Sets\n            \n        \n         -->\n        \n        \n    \n\n    \n        \n        Add\n        Edit\n        Delete\n    \n\n\n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dropDownIsOpen\n                            \n                            \n                                    Public\n                                openStateIcon\n                            \n                            \n                                    Public\n                                queryBandIsOpen\n                            \n                            \n                                theQueryBand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doAddRecord\n                            \n                            \n                                    Public\n                                doClear\n                            \n                            \n                                    Public\n                                doDeleteRecord\n                            \n                            \n                                    Public\n                                doEditRecord\n                            \n                            \n                                    Public\n                                doExportGrid\n                            \n                            \n                                    Public\n                                doManageSets\n                            \n                            \n                                    Public\n                                doQBE\n                            \n                            \n                                    Public\n                                doQFF\n                            \n                            \n                                    Public\n                                doRefresh\n                            \n                            \n                                    Public\n                                doSort\n                            \n                            \n                                    Public\n                                doWehaveAQuery\n                            \n                            \n                                    Public\n                                enableButton\n                            \n                            \n                                    Public\n                                switchState\n                            \n                            \n                                    Public\n                                toggleDropDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cascadeDeleteRecord\n                            \n                            \n                                enableAddRecord\n                            \n                            \n                                enableButtonBar\n                            \n                            \n                                enableCombiSearch\n                            \n                            \n                                enableDeleteRecord\n                            \n                            \n                                enableEditRecord\n                            \n                            \n                                enableExportGrid\n                            \n                            \n                                enableQBE\n                            \n                            \n                                enableQFF\n                            \n                            \n                                enableSETS\n                            \n                            \n                                enableSort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryAddRecord\n                            \n                            \n                                queryDeleteRecord\n                            \n                            \n                                queryEditRecord\n                            \n                            \n                                queryExportGrid\n                            \n                            \n                                queryFromFile\n                            \n                            \n                                queryFromQBE\n                            \n                            \n                                queryManageSets\n                            \n                            \n                                queryRefresh\n                            \n                            \n                                querySortGrid\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cascadeDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:149\n                            \n                        \n                \n                    \n                        Cascade Delete record if Delete is enabled, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:134\n                            \n                        \n                \n                    \n                        Enable Add record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableButtonBar\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:129\n                            \n                        \n                \n                    \n                        Enable Record Edit Button bar, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableCombiSearch\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:114\n                            \n                        \n                \n                    \n                        enable Combine Searches buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDeleteRecord\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:144\n                            \n                        \n                \n                    \n                        Enable Delete record button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditRecord\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:139\n                            \n                        \n                \n                    \n                        Enable Edit record button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableExportGrid\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:124\n                            \n                        \n                \n                    \n                        enable Export To Excel button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQBE\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:99\n                            \n                        \n                \n                    \n                        enable QBE button, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQFF\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:104\n                            \n                        \n                \n                    \n                        enable QFF (query from file) button, default is false\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSETS\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:109\n                            \n                        \n                \n                    \n                        enable Save/Load Searches/Set buttons, default is true\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSort\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:119\n                            \n                        \n                \n                    \n                        enable Multicolumn Sort button, default is false\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        queryAddRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryDeleteRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:167\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryEditRecord\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryExportGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromFile\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:155\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryFromQBE\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryManageSets\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:160\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryRefresh\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:156\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        querySortGrid\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:157\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doAddRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doAddRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doClear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doClear()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doDeleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doDeleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doEditRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doEditRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doExportGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doExportGrid()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQBE\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQBE()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doQFF\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doQFF()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doRefresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doRefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doSort()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doWehaveAQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doWehaveAQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableButton\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableButton(btn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    btn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            switchState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    switchState()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleDropDown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDropDown()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/queryBand.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropDownIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:176\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openStateIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'glyphicon-triangle-right'\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryBandIsOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theQueryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBandDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:181\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand') theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n    \n            \n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Select Highlighted                                Reuse a Saved Search                Restore a Saved Record Set                Combine Searches -->                                Save Current Search                Save Record Set                                Manage Saved Searches                Manage Saved Sets                             -->                                        Add        Edit        Delete        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryBand'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBandDirective.html":{"url":"directives/QueryBandDirective.html","title":"directive - QueryBandDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBandDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/containers/queryBand.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        queryband\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                theCustomQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theCustomQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('customQueryBand')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/queryBand.ts:10\n                            \n                        \n\n                \n                    \n                        Get access to the embedded custom query band\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Component, EventEmitter, ElementRef, ContentChild, Input, Output } from '@angular/core';\n\n@Directive({\n    selector: 'queryband'\n})\nexport class QueryBandDirective {\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild('customQueryBand') theCustomQuery: any;\n\n}\n@Directive({\n    selector: 'custombuttonbar'\n})\nexport class CustomButtonBarDirective { }\n\n\n@Component({\n    selector: 'query-band',\n    template: `\n    \n        \n            \n            \n            \n            \n                \n                    Select Highlighted\n                    \n                    Reuse a Saved Search\n                    Restore a Saved Record Set\n                    Combine Searches -->\n                    \n                    Save Current Search\n                    Save Record Set\n                    \n                    Manage Saved Searches\n                    Manage Saved Sets\n                \n            \n             -->\n            \n            \n        \n\n        \n            \n            Add\n            Edit\n            Delete\n        \n    \n    \n        \n    \n\n    `,\n    styles: [`\n    .quickFinder-icon {\n        border-color: transparent;\n        width: 24px;\n        height: 24px;\n        display:inline-block;\n    }\n    \n    .hidden {\n        display:none;\n    }\n       \n    .query-band {\n        width:100%;\n        padding-top:5px;\n        height:40px;\n    }\n\n    .custom-query-band {\n        margin-bottom:10px;\n        margin-left:5px;\n        margin-top:5px;\n        padding: 5px;\n        border: 2px;\n        border-style: groove;\n        border-radius: 5px;\n    }\n\n    .custom-button-bar {\n        position:absolute;\n        right:20px;\n    }\n    `]\n})\n\nexport class QueryBand {\n\n    /**\n     * enable QBE button, default is true\n     **/\n    @Input() public enableQBE = true;\n\n    /**\n     * enable QFF (query from file) button, default is false\n     **/\n    @Input() public enableQFF = false;\n\n    /**\n     * enable Save/Load Searches/Set buttons, default is true\n     **/\n    @Input() public enableSETS = true;\n\n    /**\n     * enable Combine Searches buttons, default is true\n     **/\n    @Input() public enableCombiSearch = true;\n\n    /**\n     * enable Multicolumn Sort button, default is false\n     **/\n    @Input() public enableSort = false;\n\n    /**\n     * enable Export To Excel button, default is true\n     **/\n    @Input() public enableExportGrid = true;\n\n    /**\n     * Enable Record Edit Button bar, default is false\n     */\n    @Input() public enableButtonBar = false;\n\n    /**\n     * Enable Add record button, default is false\n     */\n    @Input() public enableAddRecord = false;\n\n    /**\n     * Enable Edit record button, default is true\n     */\n    @Input() public enableEditRecord = true;\n\n    /**\n     * Enable Delete record button, default is false\n     */\n    @Input() public enableDeleteRecord = false;\n\n    /**\n     * Cascade Delete record if Delete is enabled, default is false\n     */\n    @Input() public cascadeDeleteRecord = false;\n\n    //\n    // Events emitted by the QueryBand\n    //\n    @Output() queryFromQBE: EventEmitter = new EventEmitter();\n    @Output() queryFromFile: EventEmitter = new EventEmitter();\n    @Output() queryRefresh: EventEmitter = new EventEmitter();\n    @Output() querySortGrid: EventEmitter = new EventEmitter();\n    @Output() queryExportGrid: EventEmitter = new EventEmitter();\n\n    @Output() queryManageSets: EventEmitter = new EventEmitter();\n\n    //\n    // Events emitted by the QueryBand's Button Bar\n    //\n    @Output() queryAddRecord: EventEmitter = new EventEmitter();\n    @Output() queryEditRecord: EventEmitter = new EventEmitter();\n    @Output() queryDeleteRecord: EventEmitter = new EventEmitter();\n\n    //\n    // Internal variables\n    //\n    public openStateIcon = 'glyphicon-triangle-right';\n\n    public queryBandIsOpen = false;\n\n    public dropDownIsOpen = 'none';\n\n    /**\n     * Get access to the embedded custom query band\n     */\n    @ContentChild(QueryBandDirective) theQueryBand: any;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n\n    public switchState() {\n        this.queryBandIsOpen = !this.queryBandIsOpen;\n        this.openStateIcon = (this.queryBandIsOpen) ? 'glyphicon-triangle-bottom' : 'glyphicon-triangle-right';\n    }\n\n    public enableButton(btn: string): string {\n        switch (btn) {\n            case 'QBE':\n                return (this.enableQBE) ? '' : 'hidden';\n\n            case 'QFF':\n                return (this.enableQFF) ? '' : 'hidden';\n\n            case 'Sets':\n                return (this.enableSETS) ? '' : 'hidden';\n\n            case 'Sort':\n                return (this.enableSort) ? '' : 'hidden';\n\n            case 'Export':\n                return (this.enableExportGrid) ? '' : 'hidden';\n\n            case 'ADD':\n                return (this.enableButtonBar && this.enableAddRecord) ? '' : 'hidden';\n\n            case 'EDIT':\n                return (this.enableButtonBar && this.enableEditRecord) ? '' : 'hidden';\n\n            case 'DEL':\n                return (this.enableButtonBar && this.enableDeleteRecord) ? '' : 'hidden';\n        }\n\n        return '';\n    }\n\n    public doQBE() {\n        this.queryFromQBE.emit();\n    }\n\n    public doQFF() {\n        this.queryFromFile.emit(null);\n    }\n\n    public toggleDropDown() {\n        this.dropDownIsOpen = (this.dropDownIsOpen === 'none')?'block':'none';\n    }\n\n    public doManageSets(action) {\n        this.dropDownIsOpen = 'none';\n        this.queryManageSets.emit(action);\n    }\n\n    public doRefresh() {\n        if (this.theQueryBand.theCustomQuery) { this.queryRefresh.emit(this.theQueryBand.theCustomQuery.currentQuery); }\n    }\n\n    public doSort() {\n        this.querySortGrid.emit(null);\n    }\n\n    public doClear() {\n        if (this.theQueryBand.theCustomQuery.clearQueryForm) { // if a clearForm method exists in the custome query band\n            this.theQueryBand.theCustomQuery.clearQueryForm(); // call it to clear the query form\n        } else {\n            // if no clear form method exists, use DOM reset form function\n            const theForm: any = this.elementRef.nativeElement.getElementsByTagName('form');\n            if (theForm && theForm.length > 0) { theForm[0].reset(); }\n        }\n    }\n\n    public doExportGrid() {\n        this.queryExportGrid.emit(null);\n    }\n\n    public doAddRecord() {\n        this.queryAddRecord.emit(null);\n    }\n\n    public doEditRecord() {\n        this.queryEditRecord.emit(null);\n    }\n\n    public doDeleteRecord() {\n        this.queryDeleteRecord.emit(null);\n    }\n\n    public doWehaveAQuery(): boolean {\n        return (this.theQueryBand.theCustomQuery.currentQuery && this.theQueryBand.theCustomQuery.currentQuery !== '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickFindInput.html":{"url":"components/QuickFindInput.html","title":"component - QuickFindInput","body":"\n                   \n\n\n\n\n\n  Components\n  QuickFindInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/controls/quickFindInput.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                quickfind-input\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                runQuickFinder\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                quickFind\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        quickFind\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runQuickFinder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/controls/quickFindInput.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { Component, EventEmitter, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n\n\n\n@Component({\n    selector: 'quickfind-input',\n    template: ``\n})\n\nexport class QuickFindInput {\n\n    @Input() public quickFind = new FormControl();\n    @Input() public value = '';\n    public runQuickFinder: EventEmitter = new EventEmitter();\n\n    constructor() {\n        this.quickFind.valueChanges.pipe(distinctUntilChanged(),debounceTime(1500),).subscribe(query => {\n            this.runQuickFinder.emit(query);\n        });\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'QuickFindInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordEditWindow.html":{"url":"components/RecordEditWindow.html","title":"component - RecordEditWindow","body":"\n                   \n\n\n\n\n\n  Components\n  RecordEditWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordEditWindow.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-edit-window\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                saveRecord\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentRecord\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentRecord\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveRecord\n                        \n                        \n                    \n                \n            \n            \n                \nsaveRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordEditWindow.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordEditWindow.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(v)\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordEditWindow.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FourDModel } from '../js44D/JSFourDModel';\nimport { ICustomModal } from '../angular2-modal/models/ICustomModal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\n\n@Component({\n    selector: 'record-edit-window',\n    template: ''\n})\n\nexport class RecordEditWindow implements ICustomModalComponent {\n\n    @Input() public currentRecord: any; // the Record Edit Window FourDModel\n\n\n    public dialog: ModalDialogInstance;\n\n\n    public set modelContentData(v: ICustomModal) {\n        this.currentRecord = v;\n    }\n\n    saveRecord() {\n        if (this.currentRecord.isRecordLoaded()) {\n            this.currentRecord.updateRecord()\n                .then(() => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        } else {\n            this.currentRecord.insertRecord()\n                .then((recnum) => { this.dialog.close('recordSaved'); })\n                .catch((reason) => { alert(reason); });\n        };\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordEditWindow'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordList.html":{"url":"components/RecordList.html","title":"component - RecordList","body":"\n                   \n\n\n\n\n\n  Components\n  RecordList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/recordList.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                HttpClient\n                                FourDInterface\n                                ListSelectorDialog\n                                Modal\n                \n            \n\n\n            \n                selector\n                record-list\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editWindowConfig\n                            \n                            \n                                    Private\n                                _previousAdvancedQuery\n                            \n                            \n                                    Private\n                                _previousQuery\n                            \n                            \n                                queryBand\n                            \n                            \n                                theGrid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearQuery\n                            \n                            \n                                    Public\n                                deleteRecord\n                            \n                            \n                                    Private\n                                doManageSets\n                            \n                            \n                                    Private\n                                editWindowHandler\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                refreshGrid\n                            \n                            \n                                    Private\n                                restoreSet\n                            \n                            \n                                    Private\n                                showAdvancedQuery\n                            \n                            \n                                    Public\n                                showEditWindow\n                            \n                            \n                                    Public\n                                windowResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dialogInstance\n                            \n                            \n                                editWindow\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedRecords\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ElementRef, viewRef: ViewContainerRef, selectList: ListSelectorDialog)\n                    \n                \n                        \n                            \n                                Defined in src/containers/recordList.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectList\n                                                  \n                                                        \n                                                                        ListSelectorDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dialogInstance\n                    \n                \n                \n                    \n                        Type :         ModalDialogInstance\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:25\n                            \n                        \n                \n                    \n                        this is the associated record list dialog, if set we use it to handle window resize\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editWindow\n                    \n                \n                \n                    \n                        Type :         ICustomModalComponent\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/containers/recordList.ts:30\n                            \n                        \n                \n                    \n                        this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n\n                    \n                \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:134\n                \n            \n\n\n            \n                \n                    Handle browser window resize and resize grid\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:115\n                \n            \n\n\n            \n                \n                    Clear all previous queries\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteRecord\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRecord()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:179\n                \n            \n\n\n            \n                \n                    Delete Selected Record(s)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doManageSets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doManageSets(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:216\n                \n            \n\n\n            \n                \n                    Handle Manage Sets dropdown menu and act upon user selected action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editWindowHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editWindowHandler(result: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:192\n                \n            \n\n\n            \n                \n                    private method to deal with edit window close\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:71\n                \n            \n\n\n            \n                \n                    AFter our view gets initialized, subscribe to various events on the Query band and the Grid\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshGrid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshGrid(query?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:125\n                \n            \n\n\n            \n                \n                    Refresh teh Grid, run query on 4D side and get records to display\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : the query string to send to 4D to select records to display on the grid\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            restoreSet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSet(records: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    records\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showAdvancedQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showAdvancedQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:199\n                \n            \n\n\n            \n                \n                    deal with advanced Query dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showEditWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showEditWindow(mode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:149\n                \n            \n\n\n            \n                \n                    Show record edit window, to either edit or add a new record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            windowResized\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    windowResized(event)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/recordList.ts:142\n                \n            \n\n\n            \n                \n                    Intercept Dialog Window resize event and resize the Grid to fit the entire window\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editWindowConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:57\n                            \n                        \n\n                \n                    \n                        Save Edit Window Configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousAdvancedQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _previousQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryBand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryBand\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(QueryBand)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:35\n                            \n                        \n\n                \n                    \n                        get the associated Query band and Datagrid object instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theGrid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataGrid\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(DataGrid)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/containers/recordList.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedRecords\n                    \n                \n\n                \n                    \n                        getselectedRecords()\n                    \n                \n                            \n                                \n                                    Defined in src/containers/recordList.ts:41\n                                \n                            \n                    \n                        \n                                return the currently selected records from the grid\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, ViewContainerRef, AfterContentInit, Input, HostListener } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FourDInterface } from '../js44D/JSFourDInterface';\nimport { QueryBand } from './queryBand';\nimport { AdvancedQueryComponent } from './advancedQuery';\nimport { DataGrid } from '../dataGrid/dataGrid';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { ICustomModalComponent } from '../angular2-modal/models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../angular2-modal/models/ModalDialogInstance';\nimport { ModalConfig } from '../angular2-modal/models/ModalConfig';\nimport { ListSelectorDialog } from '../dialogs/listSelectorDialog';\n\n@Component({\n    selector: 'record-list',\n    template: '',\n    providers: [HttpClient, FourDInterface, ListSelectorDialog, Modal]\n})\n\nexport class RecordList implements AfterContentInit {\n\n    /**\n     * this is the associated record list dialog, if set we use it to handle window resize\n     */\n    @Input() public dialogInstance: ModalDialogInstance = null;\n\n    /**\n     * this is the associated record edit dialog, if set dbl-cliking a row or hitting the Add/Edit buttons will open it\n     */\n    @Input() public editWindow: ICustomModalComponent = null;\n\n    /**\n     * get the associated Query band and Datagrid object instances\n     */\n    @ContentChild(QueryBand) queryBand: QueryBand;\n    @ContentChild(DataGrid) theGrid: DataGrid;\n\n    /**\n     * return the currently selected records from the grid\n     */\n    public get selectedRecords():Array {\n        let selection = [];\n        if (this.theGrid && this.theGrid.getDataProvider()) {\n            const gridRows = this.theGrid.getDataProvider().models;\n            const selectedRows = this.theGrid.selectedRows();\n            for (let index = 0; index  { this.refreshGrid(query); });\n            // if user hits Advanced Query button, call advanced query method\n            if (this.queryBand.enableQBE) {\n                this.queryBand.queryFromQBE.subscribe((query: Object) => { this.showAdvancedQuery(); });\n            }\n            // if user hits Set Management button, call corresponding method method\n            if (this.queryBand.enableSETS) {\n                this.queryBand.queryManageSets.subscribe((action: string) => { this.doManageSets(action); });\n            }\n            // if user hits Export to Excel, call grid's excel export method\n            this.queryBand.queryExportGrid.subscribe(() => { if (this.theGrid) { this.theGrid.exportGridToExcel(); } });\n\n            if (this.editWindow) {\n                this.queryBand.queryAddRecord.subscribe(() => { this.showEditWindow('add'); });\n                this.queryBand.queryEditRecord.subscribe(() => { this.showEditWindow('edit'); });\n            }\n\n            this.queryBand.queryDeleteRecord.subscribe(() => { this.deleteRecord(); });\n\n        }\n\n        // if we have a grid and an associated edit record form, subscribe to the record select event\n        if (this.theGrid && this.editWindow) {\n            this.theGrid.recordSelected.subscribe((record: any) => { this.showEditWindow('edit'); });\n        }\n\n        if (this.editWindow && this.editWindow['dialogConfig']) {\n            this._editWindowConfig = this.editWindow['dialogConfig'];\n        }\n\n        if (this.dialogInstance) {\n            //            console.log(this.dialogInstance)\n            const dialog: any = $(this.dialogInstance.contentRef.location.nativeElement).data('kendoWindow');\n            dialog.resizing._draggable.userEvents.bind('release', (event) => { this.windowResized(event) });\n        }\n    }\n\n    /**\n     * Clear all previous queries\n     */\n    public clearQuery() {\n        this._previousAdvancedQuery = null;\n        this._previousQuery = null;\n    }\n\n\n    /**\n     * Refresh teh Grid, run query on 4D side and get records to display\n     * @param query: the query string to send to 4D to select records to display on the grid\n     */\n    public refreshGrid(query?: Object) {\n        if (!query) { query = this._previousQuery; } // if no query given, try previous\n        if (query && this.theGrid) { this.theGrid.loadData(query); }\n        this._previousQuery = query; // save last queryDeleteRecord\n    }\n\n    /**\n     * Handle browser window resize and resize grid\n     */\n    @HostListener('window:resize') onResize() {\n        this.windowResized(null);\n    }\n\n    /**\n     * Intercept Dialog Window resize event and resize the Grid to fit the entire window\n     * @param event \n     */\n    public windowResized(event) {\n        this.theGrid.resize(); // refresh datagrid to adjust it to the window size\n    }\n\n    /**\n     * Show record edit window, to either edit or add a new record\n     */\n    public showEditWindow(mode: string) {\n        // if editing a record, and we do have a record selected and an edit dialog does exist\n        if (this.theGrid && this.editWindow && mode === 'edit' && this.theGrid.currentRecord) {\n            if (this.theGrid.optimizeGridLoading) { // if we are optimizing the grid, then we need to refresh selected record\n                kendo.ui.progress($(this.elementRef.nativeElement), true); // show loading progress icon\n                this.theGrid.currentRecord.refresh().then(() => { // refresh current record\n                    kendo.ui.progress($(this.elementRef.nativeElement), false); // clear loading progress icon\n                    this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                        .then(result => { this.editWindowHandler(result); }); // open edit dialog\n                });\n            } else {\n                // if not optimizing the grid loading, then we have a complete record loaded already\n                this.modal.openInside(this.editWindow, this.viewRef, this.theGrid.currentRecord, this._editWindowConfig, true)\n                    .then(result => { this.editWindowHandler(result); }); // open edit dialog\n            }\n        }\n\n        if (this.theGrid && this.editWindow && mode === 'add') {\n            // if we are adding a new record\n            const modelDef = (this.theGrid.model);\n            const newModel = (new modelDef());\n            // show edit dialog to insert new record\n            this.modal.openInside(this.editWindow, this.viewRef, newModel, this._editWindowConfig, true)\n                .then(result => { this.editWindowHandler(result); }); // open edit dialog\n        }\n    }\n\n    /** \n     * Delete Selected Record(s)\n     */\n    public deleteRecord() {\n        if (this.theGrid && this.theGrid.currentRecord) {\n            if (confirm((this.queryBand.cascadeDeleteRecord) ? 'Really delete selected record and all its associated data records?' : 'Really delete selected record?')) {\n                this.theGrid.currentRecord.deleteRecord(this.queryBand.cascadeDeleteRecord)\n                    .then((message) => { alert('Record Deleted'); this.theGrid.refresh(); })\n                    .catch((reason) => { alert(reason); });\n            }\n        }\n    }\n\n    /**\n     * private method to deal with edit window close\n     */\n    private editWindowHandler(result: string) {\n        if (result === 'recordSaved') { this.theGrid.refresh(); }\n    }\n\n    /**\n     * deal with advanced Query dialog\n     */\n    private showAdvancedQuery() {\n        const advancedQuery = AdvancedQueryComponent;\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        this.modal.openInside(AdvancedQueryComponent, this.viewRef, { previousQuery: this._previousAdvancedQuery, model: (newModel.tableName !== '') ? newModel : (this.theGrid.model).prototype }, advancedQuery['dialogConfig'])\n            .then((result: any) => {\n                if (result.query.length > 0) {\n                    this._previousAdvancedQuery = result.queryFields;\n                    this.refreshGrid({ query: result.query }); // open edit dialog\n                }\n            });\n\n    }\n\n    /**\n     * Handle Manage Sets dropdown menu and act upon user selected action\n     */\n    private doManageSets(action: string) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pk = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        let gridRows = this.theGrid.getDataProvider().models;\n        let savedSearches: Array;\n        let savedSets: Array;\n        let selectedRecords = [];\n\n        switch (action) {\n            case 'selectHighlited':\n                if (pk && pk !== '') {\n                    const selectedRows = this.theGrid.selectedRows();\n                    selectedRecords = [];\n                    for (let index = 0; index  {\n                    if (searchName !== '') {\n                        savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                        savedSearches.push({ name: searchName, search: this._previousQuery });\n                        localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                    }\n                }, function () {\n                    // cancelled...\n                })\n                break;\n\n            case 'saveSet':\n                if (pk && pk !== '' && gridRows.length > 0) {\n                    kendo.prompt('Please, enter a name for this Record Set:', '').then((setName) => {\n                        if (setName !== '') {\n                            savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n\n                            gridRows = this.theGrid.getDataProvider().models;\n                            selectedRecords = [];\n                            for (let row = 0; row  {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Select Saved Search';\n                    this.selectList.show(searchList)\n                        .then(result => {\n                            const query = savedSearches[result].search;\n                            this.refreshGrid(query);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'restoreSet':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                let setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Select Saved Set';\n                    this.selectList.show(setList)\n                        .then(result => {\n                            const set = savedSets[result].set;\n                            this.restoreSet(set);\n                        }); // open list selector dialog\n                }\n                break;\n\n            case 'combineSearches':\n\n                break;\n\n            case 'manageSearches':\n                savedSearches = JSON.parse(localStorage.getItem(tableName + '_savedSearches')) || [];\n                searchList = [];\n                savedSearches.forEach(element => {\n                    searchList.push(element.name);\n                });\n                if (searchList.length > 0) {\n                    this.selectList.title = 'Delete Saved Search';\n                    this.selectList.show(searchList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSearches.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSearches', JSON.stringify(savedSearches));\n                        }); // open list selector dialog\n                }\n\n                break;\n\n            case 'manageSets':\n                savedSets = JSON.parse(localStorage.getItem(tableName + '_savedSets')) || [];\n                setList = [];\n                savedSets.forEach(element => {\n                    setList.push(element.name);\n                });\n                if (setList.length > 0) {\n                    this.selectList.title = 'Delete Saved Set';\n                    this.selectList.show(setList, null, 'items deleted immediately', 'Delete')\n                        .then(result => {\n                            savedSets.splice(result, 1);\n                            localStorage.setItem(tableName + '_savedSets', JSON.stringify(savedSets));\n                        }); // open list selector dialog\n                }\n                break;\n        }\n    }\n\n    private restoreSet(records: Array) {\n        const modelDef = (this.theGrid.model);\n        const newModel = (new modelDef());\n        const tableName = (newModel.tableName !== '') ? newModel.tableName : (this.theGrid.model).prototype.tableName;\n        const pkField = (newModel.tableName !== '') ? newModel.primaryKey_ : (this.theGrid.model).prototype.primaryKey_;\n        if (pkField && pkField !== '' && tableName && tableName !== '') {\n            const queryItems = [];\n            records.forEach(id => {\n                queryItems.push(tableName + '.' + pkField + ';=;' + id + ';OR');\n            });\n            this.refreshGrid({ query: queryItems });\n        }\n\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'RecordList'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab.html":{"url":"components/Tab.html","title":"component - Tab","body":"\n                   \n\n\n\n\n\n  Components\n  Tab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tab\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tabs: Tabs)\n                    \n                \n                        \n                            \n                                Defined in src/containers/tabs.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabs\n                                                  \n                                                        \n                                                                        Tabs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : this.active || false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/tabs.ts:51\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = this.active || false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tab'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tabs.html":{"url":"components/Tabs.html","title":"component - Tabs","body":"\n                   \n\n\n\n\n\n  Components\n  Tabs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/tabs.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabs\n            \n\n\n\n            \n                template\n                \n  \n    {{tab.title}}\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTab\n                            \n                            \n                                selectTab\n                            \n                            \n                                selectThisTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTab\n                        \n                        \n                    \n                \n            \n            \n                \naddTab(tab: Tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                Tab\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTab\n                        \n                        \n                    \n                \n            \n            \n                \nselectTab(event, tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectThisTab\n                        \n                        \n                    \n                \n            \n            \n                \nselectThisTab(tab)\n                \n            \n\n\n            \n                \n                    Defined in src/containers/tabs.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tab[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/tabs.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'tabs',\n  template: `\n    \n      \n        {{tab.title}}\n      \n    \n    \n  `\n})\n@Injectable()\nexport class Tabs {\n\n  tabs: Tab[] = [];\n\n  selectTab(event, tab) {\n    event.preventDefault();\n\n    this.selectThisTab(tab);\n\n  }\n\n  selectThisTab(tab) {\n    this.tabs.forEach((tabItem) => tabItem.active = false);\n    tab.active = true;\n  }\n\n\n  addTab(tab: Tab) {\n    if (this.tabs.length === 0) {\n      tab.active = true;\n    }\n    this.tabs.push(tab);\n  }\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    \n      \n    \n  `\n})\n@Injectable()\nexport class Tab {\n  @Input() title: string;\n  @Input() active: Boolean = this.active || false;\n\n  constructor(tabs: Tabs) {\n\n    tabs.addTab(this);\n\n  }\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{tab.title}}  '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'Tabs'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utf8.html":{"url":"classes/Utf8.html","title":"class - Utf8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utf8\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/js44D/utf8.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                byteArray\n                            \n                            \n                                    Private\n                                    Static\n                                byteCount\n                            \n                            \n                                    Private\n                                    Static\n                                byteIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                checkScalarValue\n                            \n                            \n                                    Private\n                                    Static\n                                createByte\n                            \n                            \n                                    Private\n                                    Static\n                                decodeSymbol\n                            \n                            \n                                    Private\n                                    Static\n                                encodeCodePoint\n                            \n                            \n                                    Private\n                                    Static\n                                readContinuationByte\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2decode\n                            \n                            \n                                    Private\n                                    Static\n                                ucs2encode\n                            \n                            \n                                    Static\n                                utf8decode\n                            \n                            \n                                    Static\n                                utf8encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteArray\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:181\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteCount\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            byteIndex\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/js44D/utf8.ts:183\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            checkScalarValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkScalarValue(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createByte(codePoint, shift)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shift\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            decodeSymbol\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeSymbol()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            encodeCodePoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeCodePoint(codePoint)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codePoint\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            readContinuationByte\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readContinuationByte()\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2decode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            ucs2encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ucs2encode(array)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8decode(byteString)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    byteString\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            utf8encode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    utf8encode(string)\n                \n            \n\n\n            \n                \n                    Defined in src/js44D/utf8.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utf8 {\n\n\n\t// Taken from https://mths.be/punycode\n\tprivate static ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter = 0xD800 && value  0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += String.fromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tprivate static checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint > shift) & 0x3F) | 0x80);\n\t}\n\n\tprivate static encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn String.fromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = String.fromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += Utf8.createByte(codePoint, 12);\n\t\t\tsymbol += Utf8.createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += String.fromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tpublic static utf8encode(string) {\n\t\tvar codePoints = Utf8.ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index = Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tprivate static decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (Utf8.byteIndex > Utf8.byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (Utf8.byteIndex == Utf8.byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = Utf8.byteArray[Utf8.byteIndex] & 0xFF;\n\t\tUtf8.byteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) = 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) = 0x0800) {\n\t\t\t\tUtf8.checkScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = Utf8.readContinuationByte();\n\t\t\tbyte3 = Utf8.readContinuationByte();\n\t\t\tbyte4 = Utf8.readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) = 0x010000 && codePoint \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebAppContainer.html":{"url":"components/WebAppContainer.html","title":"component - WebAppContainer","body":"\n                   \n\n\n\n\n\n  Components\n  WebAppContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/containers/webAppContainer.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                Modal\n                \n            \n\n\n            \n                selector\n                web-application\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                            \n                                    Private\n                                urlSearchParms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                showLoginDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userIsLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                userHasLoggedIn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: Modal, elementRef: ViewContainerRef, fourD: FourDInterface)\n                    \n                \n                        \n                            \n                                Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                        Modal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fourD\n                                                  \n                                                        \n                                                                        FourDInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userIsLoggedIn\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        userHasLoggedIn\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nshowLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/containers/webAppContainer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Modal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlSearchParms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/containers/webAppContainer.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation, ViewContainerRef, EventEmitter, AfterContentInit, Input, Output } from '@angular/core';\n\nimport { LoginCmp } from '../login/login';\nimport { Modal } from '../angular2-modal/providers/Modal';\nimport { FourDInterface } from '../js44D/JSFourDInterface';\n\n@Component({\n    selector: 'web-application',\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    providers: [Modal]\n})\n\n\nexport class WebAppContainer implements AfterContentInit {\n\n    @Input() public userIsLoggedIn = false;\n\n    @Output() public userHasLoggedIn: EventEmitter = new EventEmitter();\n\n    private urlSearchParms: Object = {};\n\n    constructor(public modal: Modal, private elementRef: ViewContainerRef, private fourD: FourDInterface/*, private win:WindowService*/) {\n        const win = window;\n        if (win && win.location && win.location.search) {\n            const url = win.location.search.substr(1); // get incoming url and parse search params\n            url.split('&').forEach(element => {\n                const item = element.split('=');\n                if (item.length === 2) {\n                    this.urlSearchParms[item[0]] = item[1];\n                } else {\n                    this.urlSearchParms[element] = true;\n                }\n            });\n        }\n    }\n\n    showLoginDialog() {\n        this.modal.openInside(LoginCmp, this.elementRef, null, LoginCmp.dialogConfig)\n            .then((result) => {\n                this.userIsLoggedIn = true;\n                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n            });\n\n\n    }\n\n    ngAfterContentInit() {\n        if (!FourDInterface.authentication) {\n            if (this.urlSearchParms.hasOwnProperty('key')) {\n                try {\n                    const key = JSON.parse(atob(this.urlSearchParms['key']));\n                    this.fourD.signIn(key.username, key.password)\n                        .then((authentication) => {\n                            if (FourDInterface.authentication) {\n                                this.userIsLoggedIn = true;\n                                this.userHasLoggedIn.emit(FourDInterface.currentUser);\n                            }\n                        })\n                        .catch(e => { this.showLoginDialog(); });\n                } catch (error) {\n                    this.showLoginDialog();\n                }\n            } else {\n                // no predefined user, login...\n                this.showLoginDialog();\n            }\n        } else {\n            this.userIsLoggedIn = true;\n            this.userHasLoggedIn.emit(FourDInterface.currentUser);\n        }\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'WebAppContainer'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/YesNoModal.html":{"url":"components/YesNoModal.html","title":"component - YesNoModal","body":"\n                   \n\n\n\n\n\n  Components\n  YesNoModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/angular2-modal/commonModals/yesNoModal.ts\n\n\n    \n        Description\n    \n    \n        A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    ICustomModalComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-content\n            \n\n\n\n            \n                template\n                        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                            \n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    modelContentData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: ModalDialogInstance)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        ModalDialogInstance\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok($event)\n                \n            \n\n\n            \n                \n                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         YesNoModalContent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalDialogInstance\n\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modelContentData\n                    \n                \n\n\n                \n                    \n                        setmodelContentData(parms)\n                    \n                \n                            \n                                \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            parms\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{context.title}}                {{context.body}}                    {{context.yesText}}            {{context.noText}}        '\n    var COMPONENTS = [{'name': 'AdvancedQueryComponent', 'selector': 'advanced-query'},{'name': 'DataGrid', 'selector': 'datagrid'},{'name': 'FourDDropDown', 'selector': 'fourd-dropdown'},{'name': 'FourDRegistryInput', 'selector': 'fourd-registry-input'},{'name': 'ListSelectorDialog', 'selector': 'list-selector'},{'name': 'LoginCmp', 'selector': 'log-in'},{'name': 'OKOnlyModal', 'selector': 'modal-content'},{'name': 'QueryBand', 'selector': 'query-band'},{'name': 'QuickFindInput', 'selector': 'quickfind-input'},{'name': 'RecordEditWindow', 'selector': 'record-edit-window'},{'name': 'RecordList', 'selector': 'record-list'},{'name': 'Tab', 'selector': 'tab'},{'name': 'Tabs', 'selector': 'tabs'},{'name': 'WebAppContainer', 'selector': 'web-application'},{'name': 'YesNoModal', 'selector': 'modal-content'}];\n    var DIRECTIVES = [{'name': 'CustomButtonBarDirective', 'selector': 'custombuttonbar'},{'name': 'QueryBandDirective', 'selector': 'queryband'}];\n    var ACTUAL_COMPONENT = {'name': 'YesNoModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/YesNoModalContent.html":{"url":"classes/YesNoModalContent.html","title":"class - YesNoModalContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  YesNoModalContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/angular2-modal/commonModals/yesNoModal.ts\n        \n\n            \n                Description\n            \n            \n                Data definition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                hideNo\n                            \n                            \n                                    Public\n                                noText\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                yesText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, body: string, hideNo: boolean, yesText: string, noText: string)\n                    \n                \n                        \n                            \n                                Defined in src/angular2-modal/commonModals/yesNoModal.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hideNo\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        yesText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noText\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Body!'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideNo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NO'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hello World Title'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            yesText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YES'\n                        \n                    \n                        \n                            \n                                    Defined in src/angular2-modal/commonModals/yesNoModal.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\n\n\nimport { ICustomModal } from '../models/ICustomModal';\nimport { ICustomModalComponent } from '../models/ICustomModalComponent';\nimport { ModalDialogInstance } from '../models/ModalDialogInstance';\n\n/**\n * Data definition\n */\nexport class YesNoModalContent {\n    constructor(\n        public title: string = 'Hello World Title',\n        public body: string = 'Hello World Body!',\n        public hideNo: boolean = false,\n        public yesText: string = 'YES',\n        public noText: string = 'NO'\n    ) { }\n}\n\n/**\n * A 2 state bootstrap modal window, representing 2 possible answer, true/false.\n */\n@Component({\n    selector: 'modal-content',\n    /* tslint:disable */ template:\n        `\n        {{context.title}}\n        \n        {{context.body}}\n        \n            {{context.yesText}}\n            {{context.noText}}\n        `\n})\nexport class YesNoModal implements ICustomModalComponent {\n    dialog: ModalDialogInstance;\n    context: YesNoModalContent;\n\n    public set modelContentData(parms: ICustomModal) {\n        if (parms) {\n            this.context = parms;\n        }\n    }\n\n    constructor(dialog: ModalDialogInstance, ) {\n        this.dialog = dialog;\n    }\n\n    ok($event) {\n        $event.stopPropagation();\n        this.dialog.close(true);\n    }\n\n    cancel() {\n        this.dialog.close(false);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            component\n            OKOnlyModal\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/okOnlyModal.ts\n            \n            class\n            OKOnlyContent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            component\n            YesNoModal\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/angular2-modal/commonModals/yesNoModal.ts\n            \n            class\n            YesNoModalContent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModal.ts\n            \n            class\n            ICustomModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ICustomModalComponent.ts\n            \n            class\n            ICustomModalComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            injectable\n            ModalConfig\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalConfig.ts\n            \n            variable\n            _defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            class\n            Deferred\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/angular2-modal/models/ModalDialogInstance.ts\n            \n            injectable\n            ModalDialogInstance\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            injectable\n            Modal\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/angular2-modal/providers/Modal.ts\n            \n            variable\n            _config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/advancedQuery.ts\n            \n            component\n            AdvancedQueryComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            component\n            QueryBand\n            \n                30 %\n                (12/40)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            CustomButtonBarDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/containers/queryBand.ts\n            \n            directive\n            QueryBandDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/containers/recordEditWindow.ts\n            \n            component\n            RecordEditWindow\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/recordList.ts\n            \n            component\n            RecordList\n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tab\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            component\n            Tabs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tab\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/containers/tabs.ts\n            \n            injectable\n            Tabs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/containers/webAppContainer.ts\n            \n            component\n            WebAppContainer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            component\n            FourDDropDown\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/fourDDropDown.ts\n            \n            injectable\n            FourDDropDown\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            component\n            FourDRegistryInput\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/controls/fourDRegistryInput.ts\n            \n            injectable\n            FourDRegistryInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controls/quickFindInput.ts\n            \n            component\n            QuickFindInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dataGrid/dataGrid.ts\n            \n            component\n            DataGrid\n            \n                52 %\n                (25/48)\n            \n        \n        \n            \n                \n                src/dialogs/listSelectorDialog.ts\n            \n            component\n            ListSelectorDialog\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDCollection.ts\n            \n            injectable\n            FourDCollection\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            FourDQuery\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            class\n            MD5\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            injectable\n            FourDInterface\n            \n                96 %\n                (26/27)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            calculateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDInterface.ts\n            \n            variable\n            convertObjectToURL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            injectable\n            FourDModel\n            \n                87 %\n                (34/39)\n            \n        \n        \n            \n                \n                src/js44D/JSFourDModel.ts\n            \n            interface\n            IFieldDescription\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/js44D/base64.ts\n            \n            class\n            Base64\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/js44D/utf8.ts\n            \n            class\n            Utf8\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/login/login.ts\n            \n            component\n            LoginCmp\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/pipes/Base64ImageRef.pipe.ts\n            \n            pipe\n            Base64ImageRef\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/FourDDateToString.pipe.ts\n            \n            pipe\n            FourDDateToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            __karma__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            jquery : >=3.2.1\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJS44D Library\nPascal's 4D RESTApi companion Angular Typescript library.\n\n\n\n\n\n\nThis library includes a series of Angular services, components and UI widgets, that interface to a 4D Database backend via 4D RESTApi component. The 4D RESTApi Component must be installed in the 4D Database, and Web Serving must be enabled.\nDetailed documentation for each service/component in this library can be found on the wiki here. Following is a quick run down of the library contents.\nThere is a step by step procedure to get started with the 4D RESTApi component and this library at this wiki page. That page will instruct you on how to get going on the 4D and Angular sides.\nInstallation\nInstall js44d library using npm, as:\nnpm install js44d --save\nUsage\nThe library can be divided into three sets of components: 4D Service classes, UI widgets and a Modal Dialog Service class. The 4D Service Classes provide the interface to a 4D backend. The UI widgets are not essential, but do provide some useful UI Components that use the Services Classes. The Modal Dialog provides funcionality to open multiple floating Dialog windows, similar to Windows MDI funcionality.\nEach of the three sets are declared in a separate NgModule: FourDModule, JS44DModule and ModalModule.\nYou reference the 4D Interface Service Classes as:\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';\nThey need to be included in your main NgModule declaration, by importing the FourDModule.\nAs for UI components/widgets and the Modal dialog service, you reference/import them as:\nimport { ..widget.. } from 'js44d';\nYou need to import the modules in your NgModule declaration, where you use them, as in:\n```\n...\nimport { FourDModule, JS44DModule, ModalModule } from 'js44d';\n...\n@NgModule({\n  imports: [\n    ...,\n    FourDModule, JS44DModule, ModalModule\n  ]\n  ],\n  exports: [FourDModule, JS44DModule, ModalModule],\n```\nIf you plan on using any of the UI widgets, then you need to grab a copy of the assets folder contents and drop all that in your own assets directory. You need to also add the following line to your styles.scss file:\n@import './assets/main';\nAnd you can edit src/assets/main.scss at will, to add you own styles or modify the existing styles that are used by JS44D UI Widgets.\nA quick note, the UI components/widgets are WEB ONLY, they do not work under Nativescript, so for {N} you can only use the 4D Service Classes. For NativeScript your module declaration should look something like this:\n```\n...\nimport { FourDInterface, FourDModel, FourDCollection } from 'js44d';\n...\n@NgModule({\n    ...\n    providers: [\n        ...,\n        FourDInterface, FourDModel, FourDCollection\n    ],\n...\n```\n4D Interface Service Classes\nThe library provides a set of service classes for accessing a 4D Database backend that has the 4D RESTApi Component installed.\nFourDInterface\nThis is the base service class that implements most of the calls to 4D RESTApi.\nThe two key functions made available by this class are:\n- call4DRESTMethod: a wrapper function to enable calling any 4D RESTApi entry point; it automatically adds a Session Key and a hash tokens to each HTTP POST request sent to 4D, which are required by the 4D RESTApi Component; this function is used by all other services and components to send requests to 4D.\n- signin: a function that will send a REST_Authenticate sign in request to 4D and process 4D's response.\nThis class also provides some static variables:\n- currentUser: the name of the currectly signed in user\n- authentication: the authentication response object, returned by the REST_Authenticate call (see)\n- sessionKey: the current session token, that must be present in all requests to 4D\n- etc..\nFourDModel\nThis is a service class that provides CRUD functionality, acting as a Data Model base class. It provides the ability to retrieve, create, update or delete records from any 4D table.\nThis class builds upon the Data Model functionality, as described in the Data Model wiki page. \nAll 4D table's Data Models extend the FourDModel class, describing each of the table's fields and providing getter/setter for each field.\nInstances of the FourDModel class, and its extensions, represent a record in the database. This service provides basic CRUD functions to access those records:\n- getRecord: retrieves a single record from the database\n- insertRecord: adds a new record to the database\n- updateRecord: updates a record in the database\n- deleteRecord: deletes a record from the database\nAdditional functions are described in the FourDModel wiki page.\nFourDCollection\nA service class that represents a collection of 4D records. It is basically an Array of FourDModel derived instances.\nThis class provides a function to retrieve a set of records from a 4D Database:\n- getRecords: will take a Query String and send a REST_GetRecords request to 4D to retrieve a collection of 4D records. Record data comes as an Array of Data Model (FourDModel) instances.\nUI Widgets\nThe following UI widgets and components, which also interact with a 4D backend, are available for use in Angular apps. Detailed documentation for each widget is found on the wiki pages.\nLogin Component\nA basic Login dialog that takes a user name and password. It calls FourDInterface signin function, that sends a REST_Authenticate request to 4D to authenticate the given user.\n\nDatagrid Component\nThis Component provides Data Grid functionality, to display and interact with a list of records from a 4D Database.\n\nThe component is based on a KendoUI Grid widget, and displays contents of FourDModel instances, from a FourDCollection. \nQuery Band Component\nA query widget that provides functionality for querying a 4D Database, built upon a FourDModel.\n\nIt allows for a user defined query form, advanced query functionality and the ability to save and reuse queries.\nRecord List Component\nThis widget builds upon the QueryBand and DataGrid components. It associates a QueryBand to a DataGrid, so the results of a query are displayed on the associated DataGrid.\n\nAdditionally the widget provides a button bar with functionality to add/edit/delete records. It also allows for user defined custom buttons added to the button bar.\nWeb App Container Component\nThis is a Web App wrapper component, that ensures that the application component runs authenticated. If upon app initialization, it is not yet authenticated to a 4D backend, this component will display a Login dialog to get user credentials and authenticate the user.\n4D List DropDown Control\nThis is an HTML select drop down whose items are obtained directly from a 4D Choice List. One of the parameters to this widget is the choice list name.\nExample:\n\nAdditional Widgets/Services\nSome additional widgets/services are also part of the library, but those do not interact with 4D backends and do not depend on the 4D RESTApi.\nMDI Dialog Service\nA set of service classes that provide functionality to show multiple floating dialog windows, which can be modal or not.\n\nList Selector Dialog\nA component that presents a dialog with a list of items for user selection.\n\nTab Component\nA simple horizontal tab component, that provides functionality to allow user to tab among multiple forms.\n\nContributors\n |\n:---: |\nJulio Carneiro |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Julio Carneiro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FourDModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JS44DModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FourDModule\n\n\n\ncluster_FourDModule_providers\n\n\n\ncluster_JS44DModule\n\n\n\ncluster_JS44DModule_declarations\n\n\n\ncluster_JS44DModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_providers\n\n\n\n\nFourDCollection\n\nFourDCollection\n\n\n\nFourDModule\n\nFourDModule\n\nFourDModule -->\n\nFourDCollection->FourDModule\n\n\n\n\n\nFourDInterface\n\nFourDInterface\n\nFourDModule -->\n\nFourDInterface->FourDModule\n\n\n\n\n\nJS44DModule\n\nJS44DModule\n\nJS44DModule -->\n\nFourDInterface->JS44DModule\n\n\n\n\n\nFourDModel\n\nFourDModel\n\nFourDModule -->\n\nFourDModel->FourDModule\n\n\n\nJS44DModule -->\n\nFourDModule->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent\n\nAdvancedQueryComponent\n\nJS44DModule -->\n\nAdvancedQueryComponent->JS44DModule\n\n\n\n\n\nBase64ImageRef\n\nBase64ImageRef\n\nJS44DModule -->\n\nBase64ImageRef->JS44DModule\n\n\n\n\n\nCustomButtonBarDirective\n\nCustomButtonBarDirective\n\nJS44DModule -->\n\nCustomButtonBarDirective->JS44DModule\n\n\n\n\n\nDataGrid\n\nDataGrid\n\nJS44DModule -->\n\nDataGrid->JS44DModule\n\n\n\n\n\nFourDDateToString\n\nFourDDateToString\n\nJS44DModule -->\n\nFourDDateToString->JS44DModule\n\n\n\n\n\nFourDDropDown\n\nFourDDropDown\n\nJS44DModule -->\n\nFourDDropDown->JS44DModule\n\n\n\n\n\nFourDRegistryInput\n\nFourDRegistryInput\n\nJS44DModule -->\n\nFourDRegistryInput->JS44DModule\n\n\n\n\n\nListSelectorDialog\n\nListSelectorDialog\n\nJS44DModule -->\n\nListSelectorDialog->JS44DModule\n\n\n\n\n\nLoginCmp\n\nLoginCmp\n\nJS44DModule -->\n\nLoginCmp->JS44DModule\n\n\n\n\n\nQueryBand\n\nQueryBand\n\nJS44DModule -->\n\nQueryBand->JS44DModule\n\n\n\n\n\nQueryBandDirective\n\nQueryBandDirective\n\nJS44DModule -->\n\nQueryBandDirective->JS44DModule\n\n\n\n\n\nQuickFindInput\n\nQuickFindInput\n\nJS44DModule -->\n\nQuickFindInput->JS44DModule\n\n\n\n\n\nRecordEditWindow\n\nRecordEditWindow\n\nJS44DModule -->\n\nRecordEditWindow->JS44DModule\n\n\n\n\n\nRecordList\n\nRecordList\n\nJS44DModule -->\n\nRecordList->JS44DModule\n\n\n\n\n\nTab\n\nTab\n\nJS44DModule -->\n\nTab->JS44DModule\n\n\n\n\n\nTabs\n\nTabs\n\nJS44DModule -->\n\nTabs->JS44DModule\n\n\n\n\n\nWebAppContainer\n\nWebAppContainer\n\nJS44DModule -->\n\nWebAppContainer->JS44DModule\n\n\n\n\n\nAdvancedQueryComponent \n\nAdvancedQueryComponent \n\nAdvancedQueryComponent  -->\n\nJS44DModule->AdvancedQueryComponent \n\n\n\n\n\nBase64ImageRef \n\nBase64ImageRef \n\nBase64ImageRef  -->\n\nJS44DModule->Base64ImageRef \n\n\n\n\n\nCustomButtonBarDirective \n\nCustomButtonBarDirective \n\nCustomButtonBarDirective  -->\n\nJS44DModule->CustomButtonBarDirective \n\n\n\n\n\nDataGrid \n\nDataGrid \n\nDataGrid  -->\n\nJS44DModule->DataGrid \n\n\n\n\n\nFourDDateToString \n\nFourDDateToString \n\nFourDDateToString  -->\n\nJS44DModule->FourDDateToString \n\n\n\n\n\nFourDDropDown \n\nFourDDropDown \n\nFourDDropDown  -->\n\nJS44DModule->FourDDropDown \n\n\n\n\n\nFourDRegistryInput \n\nFourDRegistryInput \n\nFourDRegistryInput  -->\n\nJS44DModule->FourDRegistryInput \n\n\n\n\n\nListSelectorDialog \n\nListSelectorDialog \n\nListSelectorDialog  -->\n\nJS44DModule->ListSelectorDialog \n\n\n\n\n\nLoginCmp \n\nLoginCmp \n\nLoginCmp  -->\n\nJS44DModule->LoginCmp \n\n\n\n\n\nQueryBand \n\nQueryBand \n\nQueryBand  -->\n\nJS44DModule->QueryBand \n\n\n\n\n\nQueryBandDirective \n\nQueryBandDirective \n\nQueryBandDirective  -->\n\nJS44DModule->QueryBandDirective \n\n\n\n\n\nQuickFindInput \n\nQuickFindInput \n\nQuickFindInput  -->\n\nJS44DModule->QuickFindInput \n\n\n\n\n\nRecordEditWindow \n\nRecordEditWindow \n\nRecordEditWindow  -->\n\nJS44DModule->RecordEditWindow \n\n\n\n\n\nRecordList \n\nRecordList \n\nRecordList  -->\n\nJS44DModule->RecordList \n\n\n\n\n\nTab \n\nTab \n\nTab  -->\n\nJS44DModule->Tab \n\n\n\n\n\nTabs \n\nTabs \n\nTabs  -->\n\nJS44DModule->Tabs \n\n\n\n\n\nWebAppContainer \n\nWebAppContainer \n\nWebAppContainer  -->\n\nJS44DModule->WebAppContainer \n\n\n\n\n\nOKOnlyModal\n\nOKOnlyModal\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nOKOnlyModal->ModalModule\n\n\n\n\n\nYesNoModal\n\nYesNoModal\n\nModalModule -->\n\nYesNoModal->ModalModule\n\n\n\n\n\nOKOnlyModal \n\nOKOnlyModal \n\nOKOnlyModal  -->\n\nModalModule->OKOnlyModal \n\n\n\n\n\nYesNoModal \n\nYesNoModal \n\nYesNoModal  -->\n\nModalModule->YesNoModal \n\n\n\n\n\nModal\n\nModal\n\nModalModule -->\n\nModal->ModalModule\n\n\n\n\n\nModalDialogInstance\n\nModalDialogInstance\n\nModalModule -->\n\nModalDialogInstance->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __karma__   (src/.../test.ts)\n                        \n                        \n                            _config   (src/.../Modal.ts)\n                        \n                        \n                            _defaultConfig   (src/.../ModalConfig.ts)\n                        \n                        \n                            calculateHash   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            convertObjectToURL   (src/.../JSFourDInterface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            __karma__\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/providers/Modal.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/angular2-modal/models/ModalConfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalConfig\n\n                        \n                    \n\n\n            \n        \n\n    src/js44D/JSFourDInterface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateHash\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (formData: Object) {\n    let value = '';\n    for (const key in formData) {\n        if (formData.hasOwnProperty(key)) {\n            if (value !== '') { value += ','; }\n            value += key + '=' + formData[key];\n        }\n    }\n\n    // console.log('hash:' + value);\n    return MD5.md5(value);\n}\n                        \n                    \n\n                \n                    \n                        Calculates hash code from URL string or POST form data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertObjectToURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (obj: any) {\n    const str: Array = [];\n    for (const p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n}\n                        \n                    \n\n                \n                    \n                        convert object to encoded url string\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
